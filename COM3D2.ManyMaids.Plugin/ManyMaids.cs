using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using ExIni;
using MaidStatus;
using MyRoomCustom;
using UnityEngine;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityInjector;
using UnityInjector.Attributes;

namespace CM3D2.ManyMaids.Plugin
{
	// Token: 0x0200000C RID: 12
	[PluginName("Many maids")]
	[PluginVersion("0.0")]
	[PluginFilter("CM3D2VRx64")]
	[PluginFilter("CM3D2OHx64")]
	[PluginFilter("CM3D2OHx86")]
	[PluginFilter("CM3D2OHVRx64")]
	[PluginFilter("CM3D2x86")]
	[PluginFilter("COM3D2x64")]
	[PluginFilter("COM3D2_Trialx64")]
	public class ManyMaids : PluginBase
	{
		// Token: 0x0600002A RID: 42 RVA: 0x0001A3DE File Offset: 0x000185DE
		public void Awake()
		{
			UnityEngine.Object.DontDestroyOnLoad(this);
			string dataPath = Application.dataPath;
			this.isVR = GameMain.Instance.VRMode;
			this.Preference();
		}

		// Token: 0x0600002B RID: 43 RVA: 0x0001A404 File Offset: 0x00018604
		public void Preference()
		{
			if (this.isPref)
			{
				return;
			}
			this.isPref = true;
			if (base.Preferences["config"]["hair_setting"].Value == "true")
			{
				this.isKamiyure = true;
				IniKey iniKey = base.Preferences["config"]["hair_radius"];
				IniKey iniKey2 = base.Preferences["config"]["hair_elasticity"];
				IniKey iniKey3 = base.Preferences["config"]["hair_damping"];
				this.kamiyure2 = float.Parse(iniKey3.Value);
				this.kamiyure3 = float.Parse(iniKey2.Value);
				this.kamiyure4 = float.Parse(iniKey.Value);
			}
			else
			{
				this.isKamiyure = false;
				this.kamiyure2 = 0.6f;
				this.kamiyure3 = 1f;
				this.kamiyure4 = 0.02f;
			}
			if (base.Preferences["config"]["skirt_setting"].Value == "true")
			{
				this.isSkirtyure = true;
				IniKey iniKey4 = base.Preferences["config"]["skirt_radius"];
				IniKey iniKey5 = base.Preferences["config"]["skirt_elasticity"];
				IniKey iniKey6 = base.Preferences["config"]["skirt_damping"];
				this.skirtyure2 = float.Parse(iniKey6.Value);
				this.skirtyure3 = float.Parse(iniKey5.Value);
				this.skirtyure4 = float.Parse(iniKey4.Value);
			}
			else
			{
				this.isSkirtyure = false;
				this.skirtyure2 = 0.1f;
				this.skirtyure3 = 0.05f;
				this.skirtyure4 = 0.1f;
			}
			if (base.Preferences["config"]["hair_details"].Value == "true")
			{
				this.isShosai = true;
			}
			IniKey iniKey7 = base.Preferences["config"]["vr_scroll"];
			if (iniKey7.Value == "false")
			{
				this.isVRScroll = false;
			}
			else if (iniKey7.Value != "true")
			{
				base.Preferences["config"]["vr_scroll"].Value = "true";
				base.SaveConfig();
			}
			if (base.Preferences["config"]["shift_f7"].Value == "true")
			{
				this.isF7S = true;
			}
			if (base.Preferences["config"]["shift_f8"].Value == "false")
			{
				this.isVR2 = false;
			}
			IniKey iniKey8 = base.Preferences["config"]["ik_all"];
			if (iniKey8.Value == "true")
			{
				this.isIKAll = true;
				for (int i = 0; i < this.maxMaidCnt; i++)
				{
					this.isIK[i] = true;
				}
			}
			else if (iniKey8.Value != "false")
			{
				base.Preferences["config"]["ik_all"].Value = "true";
				base.SaveConfig();
				this.isIKAll = true;
				for (int j = 0; j < this.maxMaidCnt; j++)
				{
					this.isIK[j] = true;
				}
			}
			if (!int.TryParse(base.Preferences["config"]["scene_max"].Value, out this.maxPage))
			{
				this.maxPage = 100;
				base.Preferences["config"]["scene_max"].Value = "100";
				base.SaveConfig();
			}
			if (!int.TryParse(base.Preferences["config"]["kankyo_max"].Value, out this.kankyoMax))
			{
				this.kankyoMax = 20;
				base.Preferences["config"]["kankyo_max"].Value = "20";
				base.SaveConfig();
			}
			for (int k = 0; k < this.kankyoMax; k++)
			{
				IniKey iniKey9 = base.Preferences["kankyo"]["kankyo" + (k + 1)];
				if (iniKey9.Value == null || iniKey9.Value == "")
				{
					base.Preferences["kankyo"]["kankyo" + (k + 1)].Value = "環境" + (k + 1);
					base.SaveConfig();
				}
			}
			this.maxPage /= 10;
		}

		// Token: 0x0600002C RID: 44 RVA: 0x0001A920 File Offset: 0x00018B20
		public void Start()
		{
			this.isVR = GameMain.Instance.VRMode;
			SceneManager.sceneLoaded += this.OnSceneLoaded;
			this.mainCameraTransform = GameMain.Instance.MainCamera.gameObject.transform;
		}

		// Token: 0x0600002D RID: 45 RVA: 0x0001A960 File Offset: 0x00018B60
		public void ResetProp(Maid maid, MPN idx)
		{
			MaidProp maidProp = ManyMaids.GetFieldValue<Maid, MaidProp[]>(maid, "m_aryMaidProp")[(int)(checked((IntPtr)(unchecked((long)idx))))];
			if (maidProp.nTempFileNameRID != 0 && maidProp.nFileNameRID != maidProp.nTempFileNameRID)
			{
				maidProp.boDut = true;
				maidProp.strTempFileName = string.Empty;
				maidProp.nTempFileNameRID = 0;
				maidProp.boTempDut = false;
			}
		}

		// Token: 0x0600002E RID: 46 RVA: 0x0001A9B4 File Offset: 0x00018BB4
		public void init2()
		{
			for (int i = 0; i < GameMain.Instance.CharacterMgr.GetStockMaidCount(); i++)
			{
				Maid maid = GameMain.Instance.CharacterMgr.GetStockMaidList()[i];
				if (this.goSlot[i] != null)
				{
					maid.body0.goSlot = new List<TBodySkin>(this.goSlot[i]);
					for (int j = 0; j < this.bodyHit[i].Count; j++)
					{
						maid.body0.goSlot[j].bonehair.bodyhit = this.bodyHit[i][j];
					}
					if (!GameMain.Instance.VRMode)
					{
						maid.body0.quaDefEyeL.eulerAngles = this.eyeL[i];
						maid.body0.quaDefEyeR.eulerAngles = this.eyeR[i];
					}
					this.shodaiFlg[i] = false;
				}
				if (this.SkirtListArray[i] != null)
				{
					for (int k = 0; k < maid.body0.goSlot.Count; k++)
					{
						ManyMaids.SetFieldValue8<BoneHair3, DynamicSkirtBone>(maid.body0.goSlot[k].bonehair3, "m_SkirtBone", this.SkirtListArray[i][k]);
					}
				}
			}
			for (int l = 0; l < this.maxMaidCnt; l++)
			{
				if (this.maidArray[l])
				{
					this.maidArray[l].StopKuchipakuPattern();
				}
				if (this.maidArray[l])
				{
					this.maidArray[l].body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
				}
				if (this.maidArray[l] && this.maidArray[l].Visible && this.maidArray[l].body0.isLoadedBody)
				{
					this.maidArray[l].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
					this.maidArray[l].SetAutoTwistAll(true);
					this.maidArray[l].body0.MuneYureL(1f);
					this.maidArray[l].body0.MuneYureR(1f);
					this.maidArray[l].body0.jbMuneL.enabled = true;
					this.maidArray[l].body0.jbMuneR.enabled = true;
				}
				if (this.maidArray[l])
				{
					this.maidArray[l].boMabataki = true;
					if (this.maidArray[l].body0.isLoadedBody)
					{
						Maid maid2 = this.maidArray[l];
						for (int m = 0; m < maid2.body0.goSlot.Count; m++)
						{
							List<THair1> fieldValue = ManyMaids.GetFieldValue<TBoneHair_, List<THair1>>(maid2.body0.goSlot[m].bonehair, "hair1list");
							for (int n = 0; n < fieldValue.Count; n++)
							{
								fieldValue[n].SoftG = new Vector3(0f, -0.003f, 0f);
							}
						}
					}
				}
			}
			this.goSlot = new List<TBodySkin>[400];
			this.bodyHit = new List<TBodyHit>[400];
			this.allowUpdate = true;
			this.okFlg = false;
			this.isDance = false;
			this.isDanceChu = false;
			this.isSavePose = false;
			this.bgIndex = 0;
			this.bgIndexB = 0;
			this.bg.localScale = new Vector3(1f, 1f, 1f);
			this.softG = new Vector3(0f, -0.003f, 0f);
			this.softG2 = new Vector3(0f, -0.005f, 0f);
			if (!GameMain.Instance.VRMode)
			{
				Bloom fieldValue2 = ManyMaids.GetFieldValue<CameraMain, Bloom>(this.mainCamera, "m_gcBloom");
				fieldValue2.enabled = true;
				fieldValue2.bloomIntensity = 2.85f;
				fieldValue2.hdr = 0;
				fieldValue2.bloomThreshholdColor = new Color(1f, 1f, 1f);
				fieldValue2.bloomBlurIterations = 3;
			}
			this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
			this.maidCnt = 1;
			this.editMaid = 0;
			this.wearIndex = 0;
			this.bGuiMessage = false;
			this.inName = "";
			this.inName2 = "";
			this.inName3 = "";
			this.inText = "";
			this.fontSize = 25;
			this.isMessage = false;
			GameObject gameObject = GameObject.Find("__GameMain__/SystemUI Root").transform.Find("MessageWindowPanel").gameObject;
			MessageWindowMgr messageWindowMgr = GameMain.Instance.ScriptMgr.adv_kag.MessageWindowMgr;
			new MessageClass(gameObject, messageWindowMgr).Clear();
			messageWindowMgr.CloseMessageWindowPanel();
			ManyMaids.SetFieldValue2<UILabel, int>(UTY.GetChildObject(gameObject, "MessageViewer/MsgParent/Message", false).GetComponent<UILabel>(), "mFontSize", this.fontSize);
			this.ikMaid = 0;
			this.ikBui = 0;
			this.faceFlg = false;
			this.faceFlg2 = false;
			this.sceneFlg = false;
			this.poseFlg = false;
			this.kankyoFlg = false;
			this.kankyo2Flg = false;
			this.unLockFlg = false;
			this.isNamida = false;
			this.isNamidaH = false;
			this.isSekimenH = false;
			this.isHohoH = false;
			this.isTear1 = false;
			this.isTear2 = false;
			this.isTear3 = false;
			this.isShock = false;
			this.isYodare = false;
			this.isHoho = false;
			this.isHoho2 = false;
			this.isHohos = false;
			this.isHohol = false;
			this.isToothoff = false;
			this.isNosefook = false;
			this.isFaceInit = false;
			this.isPoseInit = false;
			this.isWear = true;
			this.isSkirt = true;
			this.isMekure1 = false;
			this.isMekure2 = false;
			this.isZurasi = false;
			this.isBra = true;
			this.isPanz = true;
			this.isHeadset = true;
			this.isAccUde = true;
			this.isStkg = true;
			this.isShoes = true;
			this.isGlove = true;
			this.isMegane = true;
			this.isAccSenaka = true;
			this.isMaid = true;
			this.isF6 = false;
			this.isPanel = true;
			this.isBloom = false;
			this.isBloomA = false;
			this.isBlur = false;
			this.isBlur2 = false;
			this.bloom1 = 2.85f;
			this.bloom2 = 3f;
			this.bloom3 = 0f;
			this.bloom4 = 0f;
			this.bloom5 = 0f;
			this.blur1 = -3.98f;
			this.blur4 = -0.75f;
			this.blur2 = 0.9f;
			this.blur3 = 4.19f;
			this.bokashi = 0f;
			this.kamiyure = 0f;
			this.isDepth = false;
			this.isDepthA = false;
			this.depth1 = 3f;
			this.depth2 = 0.1f;
			this.depth3 = 15f;
			this.depth4 = 2.5f;
			this.isFog = false;
			this.fog1 = 4f;
			this.fog2 = 1f;
			this.fog3 = 1f;
			this.fog4 = 0f;
			this.fog5 = 1f;
			this.fog6 = 1f;
			this.fog7 = 1f;
			this.isSepia = false;
			this.isSepian = false;
			this.isBloomS = true;
			this.isDepthS = false;
			this.isBlurS = false;
			this.isFogS = false;
			this.isHairSetting = true;
			this.isSkirtSetting = false;
			if (this.depth_field_ != null)
			{
				this.depth_field_.enabled = false;
			}
			if (this.fog_ != null)
			{
				this.fog_.enabled = false;
			}
			if (this.sepia_tone_ != null)
			{
				this.sepia_tone_.enabled = false;
			}
			this.isCube = false;
			this.isCube2 = true;
			this.isCube3 = false;
			this.isCube4 = true;
			this.isCubeS = false;
			this.cubeSize = 0.12f;
			this.isPoseEdit = false;
			this.isFaceEdit = false;
			this.bgmIndex = 0;
			if (this.sceneLevel == 5)
			{
				this.bgmIndex = 2;
			}
			this.effectIndex = 0;
			this.selectMaidIndex = 0;
			this.copyIndex = 0;
			this.selectLightIndex = 0;
			this.doguBIndex = 0;
			this.parIndex = 0;
			this.isEditNo = 0;
			this.editSelectMaid = null;
			for (int num = 0; num < 10; num++)
			{
				this.date[num] = "";
				this.ninzu[num] = "";
			}
			this.isDanceStart1F = false;
			this.isDanceStart1K = false;
			this.isDanceStart2F = false;
			this.isDanceStart3F = false;
			this.isDanceStart3K = false;
			this.isDanceStart4F = false;
			this.isDanceStart4K = false;
			this.isDanceStart5F = false;
			this.isDanceStart5K = false;
			this.isDanceStart6F = false;
			this.isDanceStart6K = false;
			this.isDanceStart7F = false;
			this.isDanceStart7V = false;
			this.isDanceStart8F = false;
			this.isDanceStart8V = false;
			this.isDanceStart8P = false;
			this.isDanceStart9F = false;
			this.isDanceStart9K = false;
			this.isDanceStart10F = false;
			this.isDanceStart11F = false;
			this.isDanceStart11V = false;
			this.isDanceStart12F = false;
			this.isDanceStart13F = false;
			this.isDanceStart13K = false;
			this.isDanceStart14F = false;
			this.isDanceStart14V = false;
			this.isDanceStart15F = false;
			this.isDanceStart15V = false;
			for (int num2 = 0; num2 < this.maxMaidCnt; num2++)
			{
				this.danceFace[num2] = 0f;
				this.FaceName[num2] = "";
				this.FaceName2[num2] = "";
				this.FaceName3[num2] = "";
				this.isStop[num2] = false;
				this.isBone[num2] = false;
				this.isBoneN[num2] = false;
				this.poseIndex[num2] = 0;
				this.itemIndex[num2] = 0;
				this.itemIndex2[num2] = 0;
				this.faceIndex[num2] = 0;
				this.faceBlendIndex[num2] = 0;
				this.headEyeIndex[num2] = 0;
				this.isLock[num2] = false;
				this.isFace[num2] = true;
				this.mekure1[num2] = false;
				this.mekure2[num2] = false;
				this.zurasi[num2] = false;
				this.mekure1n[num2] = false;
				this.mekure2n[num2] = false;
				this.zurasin[num2] = false;
				this.isLook[num2] = false;
				this.isLookn[num2] = false;
				this.lookX[num2] = 0f;
				this.lookY[num2] = -0f;
				this.lookXn[num2] = 0f;
				this.lookYn[num2] = -0f;
				this.voice1[num2] = false;
				this.voice2[num2] = false;
				this.voice1n[num2] = false;
				this.voice2n[num2] = false;
				this.hanten[num2] = false;
				this.hantenn[num2] = false;
				this.kotei[num2] = false;
				this.xFlg[num2] = false;
				this.zFlg[num2] = false;
				this.ikMode[num2] = 0;
				UnityEngine.Object.Destroy(this.gMaid[num2]);
				UnityEngine.Object.Destroy(this.gMaidC[num2]);
				UnityEngine.Object.Destroy(this.gHandL[num2]);
				UnityEngine.Object.Destroy(this.gArmL[num2]);
				UnityEngine.Object.Destroy(this.gHandR[num2]);
				UnityEngine.Object.Destroy(this.gArmR[num2]);
				UnityEngine.Object.Destroy(this.gFootL[num2]);
				UnityEngine.Object.Destroy(this.gHizaL[num2]);
				UnityEngine.Object.Destroy(this.gFootR[num2]);
				UnityEngine.Object.Destroy(this.gHizaR[num2]);
				UnityEngine.Object.Destroy(this.gClavicleL[num2]);
				UnityEngine.Object.Destroy(this.gClavicleR[num2]);
				UnityEngine.Object.Destroy(this.gNeck[num2]);
				UnityEngine.Object.Destroy(this.gSpine[num2]);
				UnityEngine.Object.Destroy(this.gSpine0a[num2]);
				UnityEngine.Object.Destroy(this.gSpine1a[num2]);
				UnityEngine.Object.Destroy(this.gSpine1[num2]);
				UnityEngine.Object.Destroy(this.gPelvis[num2]);
				UnityEngine.Object.Destroy(this.gizmoHandL[num2]);
				UnityEngine.Object.Destroy(this.gizmoHandR[num2]);
				UnityEngine.Object.Destroy(this.gizmoFootL[num2]);
				UnityEngine.Object.Destroy(this.gizmoFootR[num2]);
				this.HandL1[num2] = null;
				for (int num3 = 0; num3 < 30; num3++)
				{
					UnityEngine.Object.Destroy(this.gFinger[num2, num3]);
				}
				for (int num4 = 0; num4 < 12; num4++)
				{
					UnityEngine.Object.Destroy(this.gFinger2[num2, num4]);
				}
				if (this.isIKAll)
				{
					this.isIK[num2] = true;
				}
				else
				{
					this.isIK[num2] = false;
				}
				this.pHandL[num2] = 0;
				this.pHandR[num2] = 0;
				this.muneIKL[num2] = false;
				this.muneIKR[num2] = false;
			}
			if (this.kami)
			{
				this.kami.SetActive(false);
			}
			this.danceCheckIndex = 0;
			for (int num5 = 0; num5 < this.danceCheck.Length; num5++)
			{
				this.danceCheck[this.danceCheckIndex] = 1f;
			}
			this.lightIndex = new List<int>();
			this.lightIndex.Add(0);
			this.lightColorR = new List<float>();
			this.lightColorR.Add(1f);
			this.lightColorG = new List<float>();
			this.lightColorG.Add(1f);
			this.lightColorB = new List<float>();
			this.lightColorB.Add(1f);
			this.lightX = new List<float>();
			this.lightX.Add(40f);
			this.lightY = new List<float>();
			this.lightY.Add(180f);
			this.lightAkarusa = new List<float>();
			this.lightAkarusa.Add(0.95f);
			this.lightKage = new List<float>();
			this.lightKage.Add(0.098f);
			this.lightRange = new List<float>();
			this.lightRange.Add(50f);
			this.isIdx1 = false;
			this.isIdx2 = false;
			this.isIdx3 = false;
			this.isIdx4 = false;
			this.bgObject.SetActive(true);
			GameMain.Instance.MainLight.Reset();
			GameMain.Instance.MainLight.SetIntensity(0.95f);
			GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 30f;
			GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
			GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
			GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
			for (int num6 = 0; num6 < this.doguBObject.Count; num6++)
			{
				UnityEngine.Object.Destroy(this.doguBObject[num6]);
			}
			this.doguBObject.Clear();
			this.doguBIndex = 0;
			this.parIndex = 0;
			this.doguCombo.selectedItemIndex = 0;
			this.parCombo.selectedItemIndex = 0;
			for (int num7 = 1; num7 < this.lightList.Count; num7++)
			{
				UnityEngine.Object.Destroy(this.lightList[num7]);
			}
			this.lightList = new List<GameObject>();
			this.lightList.Add(GameMain.Instance.MainLight.gameObject);
			this.lightComboList = new GUIContent[this.lightList.Count];
			this.lightComboList[0] = new GUIContent("メイン");
			this.lightCombo.selectedItemIndex = 0;
			this.selectLightIndex = 0;
			this.bgCombo.selectedItemIndex = 0;
			this.kankyoCombo.selectedItemIndex = 0;
			this.bgCombo2.selectedItemIndex = 0;
			this.itemCombo2.selectedItemIndex = 0;
			this.slotCombo.selectedItemIndex = 0;
			this.sortList.Clear();
			this.scrollPos = new Vector2(0f, 0f);
			Vignetting component = GameMain.Instance.MainCamera.gameObject.GetComponent<Vignetting>();
			component.mode = 0;
			component.intensity = -3.98f;
			component.chromaticAberration = -0.75f;
			component.axialAberration = 1.18f;
			component.blurSpread = 4.19f;
			component.luminanceDependency = 0.494f;
			component.blurDistance = 1.71f;
			component.enabled = false;
			this.doguIndex.Clear();
			this.doguSelectIndex = 0;
			for (int num8 = 0; num8 < this.doguObject.Count; num8++)
			{
				if (this.doguObject[num8] != null)
				{
					UnityEngine.Object.Destroy(this.doguObject[num8]);
					this.doguObject[num8] = null;
				}
			}
			this.doguObject.Clear();
		}

		// Token: 0x0600002F RID: 47 RVA: 0x0001BABC File Offset: 0x00019CBC
		public void init()
		{
			this.isInit = true;
			this.isVR = GameMain.Instance.VRMode;
			for (int i = 0; i < GameMain.Instance.CharacterMgr.GetStockMaidCount(); i++)
			{
				Maid maid = GameMain.Instance.CharacterMgr.GetStockMaidList()[i];
				if (this.goSlot[i] != null)
				{
					maid.body0.goSlot = new List<TBodySkin>(this.goSlot[i]);
					for (int j = 0; j < this.bodyHit[i].Count; j++)
					{
						maid.body0.goSlot[j].bonehair.bodyhit = this.bodyHit[i][j];
					}
					if (!GameMain.Instance.VRMode)
					{
						maid.body0.quaDefEyeL.eulerAngles = this.eyeL[i];
						maid.body0.quaDefEyeR.eulerAngles = this.eyeR[i];
					}
					this.shodaiFlg[i] = false;
				}
				if (this.SkirtListArray[i] != null)
				{
					for (int k = 0; k < maid.body0.goSlot.Count; k++)
					{
						ManyMaids.SetFieldValue8<BoneHair3, DynamicSkirtBone>(maid.body0.goSlot[k].bonehair3, "m_SkirtBone", this.SkirtListArray[i][k]);
					}
				}
			}
			for (int l = 0; l < this.maxMaidCnt; l++)
			{
				if (this.maidArray[l])
				{
					this.maidArray[l].StopKuchipakuPattern();
				}
				if (this.maidArray[l])
				{
					this.maidArray[l].body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
				}
				if (this.maidArray[l] && this.maidArray[l].Visible && this.maidArray[l].body0.isLoadedBody)
				{
					this.maidArray[l].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
					this.maidArray[l].SetAutoTwistAll(true);
					this.maidArray[l].body0.MuneYureL(1f);
					this.maidArray[l].body0.MuneYureR(1f);
					this.maidArray[l].body0.jbMuneL.enabled = true;
					this.maidArray[l].body0.jbMuneR.enabled = true;
				}
				if (this.maidArray[l])
				{
					this.maidArray[l].body0.SetMask(TBody.SlotID.wear, true);
					this.maidArray[l].body0.SetMask(TBody.SlotID.skirt, true);
					this.maidArray[l].body0.SetMask(TBody.SlotID.bra, true);
					this.maidArray[l].body0.SetMask(TBody.SlotID.panz, true);
					this.maidArray[l].body0.SetMask(TBody.SlotID.mizugi, true);
					this.maidArray[l].body0.SetMask(TBody.SlotID.onepiece, true);
					if (this.maidArray[l].body0.isLoadedBody)
					{
						Maid maid2 = this.maidArray[l];
						for (int m = 0; m < maid2.body0.goSlot.Count; m++)
						{
							List<THair1> fieldValue = ManyMaids.GetFieldValue<TBoneHair_, List<THair1>>(maid2.body0.goSlot[m].bonehair, "hair1list");
							for (int n = 0; n < fieldValue.Count; n++)
							{
								fieldValue[n].SoftG = new Vector3(0f, -0.003f, 0f);
							}
						}
					}
				}
				this.maidArray[l] = null;
			}
			this.goSlot = new List<TBodySkin>[400];
			this.bodyHit = new List<TBodyHit>[400];
			this.allowUpdate = true;
			if (this.okFlg)
			{
				GameMain.Instance.CharacterMgr.ResetCharaPosAll();
				for (int num = 0; num < GameMain.Instance.CharacterMgr.GetStockMaidCount(); num++)
				{
					if (this.sceneLevel != 5 || num != this.editMaid)
					{
						Maid maid3 = GameMain.Instance.CharacterMgr.GetStockMaidList()[num];
						maid3.transform.localScale = new Vector3(1f, 1f, 1f);
						TBody.MaskMode maskMode = (TBody.MaskMode)Enum.Parse(typeof(TBody.MaskMode), "None");
						maid3.body0.SetMaskMode(maskMode);
						maid3.boMabataki = true;
					}
				}
				GameMain.Instance.CharacterMgr.DeactivateCharaAll();
				for (int num2 = 11; num2 < GameMain.Instance.CharacterMgr.GetStockMaidCount(); num2++)
				{
					Maid maid4 = GameMain.Instance.CharacterMgr.GetStockMaidList()[num2];
					Vector3 zero = Vector3.zero;
					maid4.SetPos(zero);
					maid4.SetRot(zero);
					maid4.SetPosOffset(zero);
					if (maid4.body0 != null)
					{
						maid4.body0.SetBoneHitHeightY(0f);
					}
					maid4.Visible = false;
					maid4.ActiveSlotNo = -1;
					maid4.DelPrefabAll();
					if (maid4.body0.isLoadedBody)
					{
						maid4.CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						maid4.SetAutoTwistAll(true);
					}
					maid4.boMabataki = true;
				}
			}
			this.okFlg = false;
			this.isDance = false;
			this.isDanceChu = false;
			this.isSavePose = false;
			this.bgIndex = 0;
			this.bgIndexB = 0;
			this.bg.localScale = new Vector3(1f, 1f, 1f);
			this.softG = new Vector3(0f, -0.003f, 0f);
			this.softG2 = new Vector3(0f, -0.005f, 0f);
			if (!GameMain.Instance.VRMode)
			{
				Bloom fieldValue2 = ManyMaids.GetFieldValue<CameraMain, Bloom>(this.mainCamera, "m_gcBloom");
				fieldValue2.enabled = true;
				fieldValue2.bloomIntensity = 2.85f;
				fieldValue2.hdr = 0;
				fieldValue2.bloomThreshholdColor = new Color(1f, 1f, 1f);
				fieldValue2.bloomBlurIterations = 3;
			}
			this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
			this.maidCnt = 0;
			this.wearIndex = 0;
			this.isF6 = false;
			this.faceFlg = false;
			this.faceFlg2 = false;
			this.sceneFlg = false;
			this.poseFlg = false;
			this.kankyoFlg = false;
			this.kankyo2Flg = false;
			this.unLockFlg = false;
			this.inName = "";
			this.inName2 = "";
			this.inName3 = "";
			this.inText = "";
			this.fontSize = 25;
			this.bGuiMessage = false;
			this.isMessage = false;
			GameObject gameObject = GameObject.Find("__GameMain__/SystemUI Root").transform.Find("MessageWindowPanel").gameObject;
			MessageWindowMgr messageWindowMgr = GameMain.Instance.ScriptMgr.adv_kag.MessageWindowMgr;
			new MessageClass(gameObject, messageWindowMgr).Clear();
			messageWindowMgr.CloseMessageWindowPanel();
			ManyMaids.SetFieldValue2<UILabel, int>(UTY.GetChildObject(gameObject, "MessageViewer/MsgParent/Message", false).GetComponent<UILabel>(), "mFontSize", this.fontSize);
			this.ikMaid = 0;
			this.ikBui = 0;
			this.isNamida = false;
			this.isNamidaH = false;
			this.isSekimenH = false;
			this.isHohoH = false;
			this.isTear1 = false;
			this.isTear2 = false;
			this.isTear3 = false;
			this.isShock = false;
			this.isYodare = false;
			this.isHoho = false;
			this.isHoho2 = false;
			this.isHohos = false;
			this.isHohol = false;
			this.isToothoff = false;
			this.isNosefook = false;
			this.isFaceInit = false;
			this.isPoseInit = false;
			this.isWear = true;
			this.isSkirt = true;
			this.isMekure1 = false;
			this.isMekure2 = false;
			this.isZurasi = false;
			this.isBra = true;
			this.isPanz = true;
			this.isHeadset = true;
			this.isAccUde = true;
			this.isStkg = true;
			this.isShoes = true;
			this.isGlove = true;
			this.isMegane = true;
			this.isAccSenaka = true;
			this.isMaid = true;
			this.isPanel = true;
			this.isBloom = false;
			this.isBloomA = false;
			this.isBlur = false;
			this.isBlur2 = false;
			this.bloom1 = 2.85f;
			this.bloom2 = 3f;
			this.bloom3 = 0f;
			this.bloom4 = 0f;
			this.bloom5 = 0f;
			this.blur1 = -3.98f;
			this.blur4 = -0.75f;
			this.blur2 = 0.9f;
			this.blur3 = 4.19f;
			this.bokashi = 0f;
			this.kamiyure = 0f;
			this.isDepth = false;
			this.isDepthA = false;
			this.depth1 = 3f;
			this.depth2 = 0.1f;
			this.depth3 = 15f;
			this.depth4 = 2.5f;
			this.isFog = false;
			this.fog1 = 4f;
			this.fog2 = 1f;
			this.fog3 = 1f;
			this.fog4 = 0f;
			this.fog5 = 1f;
			this.fog6 = 1f;
			this.fog7 = 1f;
			this.isSepia = false;
			this.isSepian = false;
			this.isBloomS = true;
			this.isDepthS = false;
			this.isBlurS = false;
			this.isFogS = false;
			this.isHairSetting = true;
			this.isSkirtSetting = false;
			if (this.depth_field_ != null)
			{
				this.depth_field_.enabled = false;
			}
			if (this.fog_ != null)
			{
				this.fog_.enabled = false;
			}
			if (this.sepia_tone_ != null)
			{
				this.sepia_tone_.enabled = false;
			}
			this.isCube = false;
			this.isCube2 = true;
			this.isCube3 = false;
			this.isCube4 = true;
			this.isCubeS = false;
			this.cubeSize = 0.12f;
			this.isPoseEdit = false;
			this.isFaceEdit = false;
			this.bgmIndex = 0;
			if (this.sceneLevel == 5)
			{
				this.bgmIndex = 2;
			}
			this.effectIndex = 0;
			this.selectMaidIndex = 0;
			this.copyIndex = 0;
			this.selectLightIndex = 0;
			this.doguBIndex = 0;
			this.parIndex = 0;
			this.isEditNo = 0;
			this.editSelectMaid = null;
			for (int num3 = 0; num3 < 10; num3++)
			{
				this.date[num3] = "";
				this.ninzu[num3] = "";
			}
			this.isDanceStart1F = false;
			this.isDanceStart1K = false;
			this.isDanceStart2F = false;
			this.isDanceStart3F = false;
			this.isDanceStart3K = false;
			this.isDanceStart4F = false;
			this.isDanceStart4K = false;
			this.isDanceStart5F = false;
			this.isDanceStart5K = false;
			this.isDanceStart6F = false;
			this.isDanceStart6K = false;
			this.isDanceStart7F = false;
			this.isDanceStart7V = false;
			this.isDanceStart8F = false;
			this.isDanceStart8V = false;
			this.isDanceStart8P = false;
			this.isDanceStart9F = false;
			this.isDanceStart9K = false;
			this.isDanceStart10F = false;
			this.isDanceStart11F = false;
			this.isDanceStart11V = false;
			this.isDanceStart12F = false;
			this.isDanceStart13F = false;
			this.isDanceStart13K = false;
			this.isDanceStart14F = false;
			this.isDanceStart14V = false;
			this.isDanceStart15F = false;
			this.isDanceStart15V = false;
			for (int num4 = 0; num4 < this.maxMaidCnt; num4++)
			{
				this.danceFace[num4] = 0f;
				this.FaceName[num4] = "";
				this.FaceName2[num4] = "";
				this.FaceName3[num4] = "";
				this.isStop[num4] = false;
				this.isBone[num4] = false;
				this.isBoneN[num4] = false;
				this.poseIndex[num4] = 0;
				this.itemIndex[num4] = 0;
				this.itemIndex2[num4] = 0;
				this.faceIndex[num4] = 0;
				this.faceBlendIndex[num4] = 0;
				this.headEyeIndex[num4] = 0;
				this.isLock[num4] = false;
				this.isFace[num4] = true;
				this.mekure1[num4] = false;
				this.mekure2[num4] = false;
				this.zurasi[num4] = false;
				this.mekure1n[num4] = false;
				this.mekure2n[num4] = false;
				this.zurasin[num4] = false;
				this.isLook[num4] = false;
				this.isLookn[num4] = false;
				this.lookX[num4] = 0f;
				this.lookY[num4] = -0f;
				this.lookXn[num4] = 0f;
				this.lookYn[num4] = -0f;
				this.voice1[num4] = false;
				this.voice2[num4] = false;
				this.voice1n[num4] = false;
				this.voice2n[num4] = false;
				this.hanten[num4] = false;
				this.hantenn[num4] = false;
				this.kotei[num4] = false;
				this.xFlg[num4] = false;
				this.zFlg[num4] = false;
				this.ikMode[num4] = 0;
				UnityEngine.Object.Destroy(this.gMaid[num4]);
				UnityEngine.Object.Destroy(this.gMaidC[num4]);
				UnityEngine.Object.Destroy(this.gHandL[num4]);
				UnityEngine.Object.Destroy(this.gArmL[num4]);
				UnityEngine.Object.Destroy(this.gHandR[num4]);
				UnityEngine.Object.Destroy(this.gArmR[num4]);
				UnityEngine.Object.Destroy(this.gFootL[num4]);
				UnityEngine.Object.Destroy(this.gHizaL[num4]);
				UnityEngine.Object.Destroy(this.gFootR[num4]);
				UnityEngine.Object.Destroy(this.gHizaR[num4]);
				UnityEngine.Object.Destroy(this.gClavicleL[num4]);
				UnityEngine.Object.Destroy(this.gClavicleR[num4]);
				UnityEngine.Object.Destroy(this.gNeck[num4]);
				UnityEngine.Object.Destroy(this.gSpine[num4]);
				UnityEngine.Object.Destroy(this.gSpine0a[num4]);
				UnityEngine.Object.Destroy(this.gSpine1a[num4]);
				UnityEngine.Object.Destroy(this.gSpine1[num4]);
				UnityEngine.Object.Destroy(this.gPelvis[num4]);
				UnityEngine.Object.Destroy(this.gizmoHandL[num4]);
				UnityEngine.Object.Destroy(this.gizmoHandR[num4]);
				UnityEngine.Object.Destroy(this.gizmoFootL[num4]);
				UnityEngine.Object.Destroy(this.gizmoFootR[num4]);
				this.HandL1[num4] = null;
				for (int num5 = 0; num5 < 30; num5++)
				{
					UnityEngine.Object.Destroy(this.gFinger[num4, num5]);
				}
				for (int num6 = 0; num6 < 12; num6++)
				{
					UnityEngine.Object.Destroy(this.gFinger2[num4, num6]);
				}
				if (this.isIKAll)
				{
					this.isIK[num4] = true;
				}
				else
				{
					this.isIK[num4] = false;
				}
				this.pHandL[num4] = 0;
				this.pHandR[num4] = 0;
				this.muneIKL[num4] = false;
				this.muneIKR[num4] = false;
			}
			if (this.kami)
			{
				this.kami.SetActive(false);
			}
			this.danceCheckIndex = 0;
			for (int num7 = 0; num7 < this.danceCheck.Length; num7++)
			{
				this.danceCheck[this.danceCheckIndex] = 1f;
			}
			this.lightIndex = new List<int>();
			this.lightIndex.Add(0);
			this.lightColorR = new List<float>();
			this.lightColorR.Add(1f);
			this.lightColorG = new List<float>();
			this.lightColorG.Add(1f);
			this.lightColorB = new List<float>();
			this.lightColorB.Add(1f);
			this.lightX = new List<float>();
			this.lightX.Add(40f);
			this.lightY = new List<float>();
			this.lightY.Add(180f);
			this.lightAkarusa = new List<float>();
			this.lightAkarusa.Add(0.95f);
			this.lightKage = new List<float>();
			this.lightKage.Add(0.098f);
			this.lightRange = new List<float>();
			this.lightRange.Add(50f);
			this.isIdx1 = false;
			this.isIdx2 = false;
			this.isIdx3 = false;
			this.isIdx4 = false;
			UnityEngine.Object.Destroy(this.cameraObj);
			UnityEngine.Object.Destroy(this.subcamera);
			this.bgObject.SetActive(true);
			GameMain.Instance.MainLight.Reset();
			GameMain.Instance.MainLight.SetIntensity(0.95f);
			GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 30f;
			GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
			GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
			GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
			if (!GameMain.Instance.VRMode)
			{
				this.m_material = new Material(Shader.Find("Transparent/Diffuse"));
				this.m_material.color = new Color(0.4f, 0.4f, 1f, 0.8f);
				this.m_UOCamera = ManyMaids.GetFieldValue<CameraMain, UltimateOrbitCamera>(this.mainCamera, "m_UOCamera");
				if (this.sceneLevel == 3)
				{
					this.m_UOCamera.enabled = true;
				}
			}
			for (int num8 = 0; num8 < this.doguBObject.Count; num8++)
			{
				UnityEngine.Object.Destroy(this.doguBObject[num8]);
			}
			this.doguBObject.Clear();
			this.doguBIndex = 0;
			this.parIndex = 0;
			this.doguCombo.selectedItemIndex = 0;
			this.parCombo.selectedItemIndex = 0;
			for (int num9 = 1; num9 < this.lightList.Count; num9++)
			{
				UnityEngine.Object.Destroy(this.lightList[num9]);
			}
			this.lightList = new List<GameObject>();
			this.lightList.Add(GameMain.Instance.MainLight.gameObject);
			this.lightComboList = new GUIContent[this.lightList.Count];
			this.lightComboList[0] = new GUIContent("メイン");
			this.lightCombo.selectedItemIndex = 0;
			this.selectLightIndex = 0;
			this.bgCombo.selectedItemIndex = 0;
			this.kankyoCombo.selectedItemIndex = 0;
			this.bgCombo2.selectedItemIndex = 0;
			this.itemCombo2.selectedItemIndex = 0;
			this.slotCombo.selectedItemIndex = 0;
			this.sortList.Clear();
			this.scrollPos = new Vector2(0f, 0f);
			if (!GameMain.Instance.VRMode)
			{
				Vignetting component = GameMain.Instance.MainCamera.gameObject.GetComponent<Vignetting>();
				component.mode = 0;
				component.intensity = -3.98f;
				component.chromaticAberration = -0.75f;
				component.axialAberration = 1.18f;
				component.blurSpread = 4.19f;
				component.luminanceDependency = 0.494f;
				component.blurDistance = 1.71f;
				component.enabled = false;
			}
			this.doguIndex.Clear();
			this.doguSelectIndex = 0;
			for (int num10 = 0; num10 < this.doguObject.Count; num10++)
			{
				if (this.doguObject[num10] != null)
				{
					UnityEngine.Object.Destroy(this.doguObject[num10]);
					this.doguObject[num10] = null;
				}
			}
			this.doguObject.Clear();
			string text = Path.GetFullPath(".\\") + "Mod\\ManyMaidsPose";
			if (!File.Exists(text))
			{
				Directory.CreateDirectory(text);
			}
			int num11 = this.countS;
			Action<string, List<string>> action = delegate(string path, List<string> result_list)
			{
				string[] files = Directory.GetFiles(path);
				this.countS = 0;
				for (int num30 = 0; num30 < files.Length; num30++)
				{
					if (Path.GetExtension(files[num30]) == ".anm")
					{
						string text8 = files[num30].Split(new char[]
						{
							'\\'
						})[files[num30].Split(new char[]
						{
							'\\'
						}).Length - 1];
						text8 = text8.Split(new char[]
						{
							'.'
						})[0];
						this.strListS.Add(text8 + "\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000/" + files[num30]);
						this.countS++;
					}
				}
			};
			List<string> arg = new List<string>();
			action(text, arg);
			if (this.countS != num11)
			{
				this.poseArray = null;
			}
			if (this.poseArray != null)
			{
				return;
			}
			this.strList2 = new List<string>();
			this.strListE = new List<string>();
			this.strListE2 = new List<string>();
			this.strListS = new List<string>();
			this.strListD = new List<string>();
			this.strS = "";
			List<string> list = new List<string>();
			list.Add(string.Empty);
			list.AddRange(GameUty.PathList);
			List<string> bgList2 = new List<string>();
			Action<string> action2 = delegate(string strFileName)
			{
				if (GameUty.FileSystem.IsExistentFile(strFileName))
				{
					AFileBase afileBase12 = GameUty.FileSystem.FileOpen(strFileName);
					try
					{
						CsvParser csvParser3 = new CsvParser();
						try
						{
							csvParser3.Open(afileBase12);
							for (int num30 = 1; num30 < csvParser3.max_cell_y; num30++)
							{
								if (csvParser3.IsCellToExistData(0, num30))
								{
									bgList2.Add(csvParser3.GetCellAsString(1, num30));
								}
							}
						}
						finally
						{
							CsvParser csvParser4 = csvParser3;
							if (csvParser4 != null)
							{
								csvParser4.Dispose();
							}
						}
					}
					finally
					{
						AFileBase afileBase13 = afileBase12;
						if (afileBase13 != null)
						{
							afileBase13.Dispose();
						}
					}
				}
			};
			action2("edit_bg.nei");
			for (int num12 = 0; num12 < list.Count; num12++)
			{
				action2("edit_bg_" + list[num12] + ".nei");
			}
			List<string> list2 = new List<string>();
			for (int num13 = 0; num13 < bgList2.Count; num13++)
			{
				bool flag = false;
				for (int num14 = 0; num14 < Class1.bgArray21.Length; num14++)
				{
					if (bgList2[num13] == Class1.bgArray21[num14])
					{
						flag = true;
					}
				}
				if (!flag && bgList2[num13] != "HoneymoonRoom" && bgList2[num13] != "ClassRoom_Play" && bgList2[num13] != "BigSight" && bgList2[num13] != "PrivateRoom" && bgList2[num13] != "Sea_Night" && bgList2[num13] != "Yashiki")
				{
					list2.Add(bgList2[num13]);
				}
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("SMRoom2") != null)
			{
				this.isVP = true;
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("Train") != null)
			{
				this.isPP = true;
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("HoneymoonRoom") != null)
			{
				this.isPP2 = true;
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("BigSight") != null)
			{
				this.isPP3 = true;
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("rotenburo") != null)
			{
				this.isVA = true;
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("karaokeroom") != null)
			{
				this.isKA = true;
			}
			if (GameUty.IsEnabledCompatibilityMode)
			{
				this.isCM3D2 = true;
			}
			List<string> list3 = new List<string>(350 + Class1.poseArray2.Length);
			list3.AddRange(Class1.poseArray2);
			List<string> list4 = new List<string>();
			int num15 = 11;
			AFileBase afileBase;
			while (num15 < 200)
			{
				if (num15 < 100)
				{
					afileBase = GameUty.FileSystem.FileOpen("edit_pose_0" + num15 + "_f.anm");
					try
					{
						if (afileBase.IsValid())
						{
							list4.Add("edit_pose_0" + num15 + "_f");
						}
						goto IL_17D0;
					}
					finally
					{
						AFileBase afileBase2 = afileBase;
						if (afileBase2 != null)
						{
							afileBase2.Dispose();
						}
					}
					goto IL_1778;
				}
				goto IL_1778;
				IL_17D0:
				num15++;
				continue;
				IL_1778:
				afileBase = GameUty.FileSystem.FileOpen("edit_pose_" + num15 + "_f.anm");
				try
				{
					if (afileBase.IsValid())
					{
						list4.Add("edit_pose_" + num15 + "_f");
					}
				}
				finally
				{
					AFileBase afileBase3 = afileBase;
					if (afileBase3 != null)
					{
						afileBase3.Dispose();
					}
				}
				goto IL_17D0;
			}
			for (int num16 = 15; num16 < 25; num16++)
			{
				for (int num17 = 0; num17 < 2; num17++)
				{
					string text2 = "s";
					if (num17 == 1)
					{
						text2 = "w";
					}
					int num18 = 1;
					while (num18 < 20)
					{
						if (num18 < 10)
						{
							afileBase = GameUty.FileSystem.FileOpen(string.Concat(new object[]
							{
								"edit_pose_dg",
								num16,
								text2,
								"_00",
								num18,
								"_f.anm"
							}));
							try
							{
								if (afileBase.IsValid())
								{
									list4.Add(string.Concat(new object[]
									{
										"edit_pose_dg",
										num16,
										text2,
										"_00",
										num18,
										"_f"
									}));
								}
								goto IL_1962;
							}
							finally
							{
								AFileBase afileBase4 = afileBase;
								if (afileBase4 != null)
								{
									afileBase4.Dispose();
								}
							}
							goto IL_18BE;
						}
						goto IL_18BE;
						IL_1962:
						num18++;
						continue;
						IL_18BE:
						afileBase = GameUty.FileSystem.FileOpen(string.Concat(new object[]
						{
							"edit_pose_dg",
							num16,
							text2,
							"_0",
							num18,
							"_f.anm"
						}));
						try
						{
							if (afileBase.IsValid())
							{
								list4.Add(string.Concat(new object[]
								{
									"edit_pose_dg",
									num16,
									text2,
									"_0",
									num18,
									"_f"
								}));
							}
						}
						finally
						{
							AFileBase afileBase5 = afileBase;
							if (afileBase5 != null)
							{
								afileBase5.Dispose();
							}
						}
						goto IL_1962;
					}
				}
			}
			if (list4.Count > 0)
			{
				list3.AddRange(list4.ToArray());
			}
			afileBase = GameUty.FileSystem.FileOpen("dance_cm3d_003_sp2_f1.anm");
			try
			{
			}
			finally
			{
				AFileBase afileBase6 = afileBase;
				if (afileBase6 != null)
				{
					afileBase6.Dispose();
				}
			}
			afileBase = GameUty.FileSystem.FileOpen("dance_cm3d2_kara_003_ddfl_f1.anm");
			try
			{
			}
			finally
			{
				AFileBase afileBase7 = afileBase;
				if (afileBase7 != null)
				{
					afileBase7.Dispose();
				}
			}
			afileBase = GameUty.FileSystem.FileOpen("dance_cm3d2_kara02_001_smt_f1.anm");
			try
			{
			}
			finally
			{
				AFileBase afileBase8 = afileBase;
				if (afileBase8 != null)
				{
					afileBase8.Dispose();
				}
			}
			list3.AddRange(Class1.poseArrayVP2);
			list3.AddRange(Class1.poseArrayFB);
			list3.AddRange(Class1.poseArray4);
			list3.AddRange(Class1.poseArray5);
			list3.AddRange(Class1.poseArray6);
			this.poseArray = list3.ToArray();
			Action<string, List<string>> action3 = delegate(string path, List<string> result_list)
			{
				string[] files = Directory.GetFiles(path);
				this.countS = 0;
				for (int num30 = 0; num30 < files.Length; num30++)
				{
					if (Path.GetExtension(files[num30]) == ".anm")
					{
						string text8 = files[num30].Split(new char[]
						{
							'\\'
						})[files[num30].Split(new char[]
						{
							'\\'
						}).Length - 1];
						text8 = text8.Split(new char[]
						{
							'.'
						})[0];
						this.strListS.Add(text8 + "\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000/" + files[num30]);
						this.countS++;
					}
				}
			};
			List<string> arg2 = new List<string>();
			action3(Path.GetFullPath(".\\") + "Mod\\ManyMaidsPose", arg2);
			string[] list5 = GameUty.FileSystem.GetList("motion", 3);
			int num19 = 0;
			List<string> list6 = new List<string>();
			foreach (string path2 in list5)
			{
				string fileNameWithoutExtension = Path.GetFileNameWithoutExtension(path2);
				string directoryName = Path.GetDirectoryName(path2);
				if (!fileNameWithoutExtension.StartsWith("maid_motion_") && !fileNameWithoutExtension.StartsWith("work_00") && !fileNameWithoutExtension.EndsWith("_3_") && !fileNameWithoutExtension.EndsWith("_5_") && !fileNameWithoutExtension.StartsWith("ck_") && !fileNameWithoutExtension.StartsWith("vr_") && !fileNameWithoutExtension.StartsWith("dance_mc") && !fileNameWithoutExtension.Contains("a01_") && !fileNameWithoutExtension.StartsWith("j_") && !fileNameWithoutExtension.StartsWith("k_") && !fileNameWithoutExtension.StartsWith("t_") && !fileNameWithoutExtension.StartsWith("cbl_") && !fileNameWithoutExtension.Contains("b01_") && !fileNameWithoutExtension.Contains("b02_") && !fileNameWithoutExtension.Contains("_kubi_") && !fileNameWithoutExtension.EndsWith("_m2") && !fileNameWithoutExtension.EndsWith("_m3") && !fileNameWithoutExtension.Contains("_m2_once") && !fileNameWithoutExtension.Contains("_m3_once") && !fileNameWithoutExtension.StartsWith("h_") && !fileNameWithoutExtension.StartsWith("event_") && !fileNameWithoutExtension.StartsWith("man_") && !fileNameWithoutExtension.EndsWith("_m") && !fileNameWithoutExtension.Contains("_m_") && !fileNameWithoutExtension.Contains("_man") && !(fileNameWithoutExtension == "dance_cm3d2_001_zoukin") && !(fileNameWithoutExtension == "dance_cm3d2_001_mop") && !(fileNameWithoutExtension == "maid_motion") && !(fileNameWithoutExtension == "aruki_1_idougo_f") && !(fileNameWithoutExtension == "sleep2") && !(fileNameWithoutExtension == "stand_akire2") && !(fileNameWithoutExtension == "ero_scene_001") && !(fileNameWithoutExtension == "ero_scenefm_001") && !(fileNameWithoutExtension == "training_001") && !(fileNameWithoutExtension == "workff_001") && !(fileNameWithoutExtension == "workfm_001") && !(fileNameWithoutExtension == "dance_cm3d21_005_moe_mset") && !(fileNameWithoutExtension == "hinpyoukai_001"))
				{
					if (!directoryName.Contains("\\sex\\"))
					{
						if (!fileNameWithoutExtension.StartsWith("sex_"))
						{
							if (fileNameWithoutExtension.StartsWith("dance_test"))
							{
								this.strListD.Add(fileNameWithoutExtension);
							}
							else
							{
								bool flag2 = false;
								foreach (string text3 in this.strListS)
								{
									string b = text3.Split(new char[]
									{
										'/'
									})[0].Replace("\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000", "");
									if (fileNameWithoutExtension == b)
									{
										flag2 = true;
										break;
									}
								}
								if (!flag2)
								{
									list6.Add(fileNameWithoutExtension);
								}
							}
						}
					}
					else if (!fileNameWithoutExtension.StartsWith("pose_"))
					{
						this.strListE.Add(fileNameWithoutExtension);
					}
				}
			}
			foreach (string text4 in list6)
			{
				bool flag3 = false;
				for (int num21 = 0; num21 < this.poseArray.Length; num21++)
				{
					if (text4 == this.poseArray[num21])
					{
						flag3 = true;
					}
				}
				if (!flag3 && text4.StartsWith("edit_"))
				{
					this.strList2.Add(text4);
				}
			}
			foreach (string text5 in list6)
			{
				bool flag4 = false;
				for (int num22 = 0; num22 < this.poseArray.Length; num22++)
				{
					if (text5 == this.poseArray[num22])
					{
						flag4 = true;
					}
				}
				if (!flag4 && text5.StartsWith("pose_"))
				{
					this.strList2.Add(text5);
				}
			}
			foreach (string text6 in list6)
			{
				bool flag5 = false;
				for (int num23 = 0; num23 < this.poseArray.Length; num23++)
				{
					if (text6 == this.poseArray[num23])
					{
						flag5 = true;
					}
				}
				if (!flag5 && !text6.StartsWith("edit_") && !text6.StartsWith("pose_"))
				{
					this.strList2.Add(text6);
				}
			}
			foreach (string text7 in this.strListE)
			{
				bool flag6 = false;
				for (int num24 = 0; num24 < this.poseArray.Length; num24++)
				{
					if (text7 == this.poseArray[num24])
					{
						flag6 = true;
					}
				}
				if (!flag6)
				{
					this.strListE2.Add(text7);
					num19++;
				}
			}
			list3.AddRange(this.strList2.ToArray());
			list3.AddRange(this.strListE2.ToArray());
			this.existPose = false;
			this.poseIniStr = "";
			foreach (IniKey iniKey in base.Preferences["pose"].Keys)
			{
				IniKey iniKey2 = base.Preferences["pose"][iniKey.Key];
				if (iniKey2.Value != null && iniKey2.Value.ToString() != "" && iniKey2.Value.ToString() != "del")
				{
					list3.AddRange(new string[]
					{
						iniKey.Key
					});
					this.existPose = true;
					if (this.poseIniStr == "")
					{
						this.poseIniStr = iniKey.Key;
					}
				}
			}
			list3.AddRange(this.strListS.ToArray());
			this.poseArray = list3.ToArray();
			List<string> list7 = new List<string>(50 + Class1.poseGroupArray2.Length);
			list7.AddRange(Class1.poseGroupArray2);
			list7.AddRange(Class1.poseGroupArrayVP);
			list7.AddRange(Class1.poseGroupArrayFB);
			list7.AddRange(Class1.poseGroupArray3);
			list7.Add(Class1.poseArray5[0]);
			list7.Add(Class1.poseArray6[0]);
			list7.Add(this.strList2[0]);
			list7.Add(this.strListE2[0]);
			if (this.strListS.Count > 0 && this.poseIniStr == "")
			{
				list7.Add(this.strListS[0]);
				this.existPose = true;
			}
			if (this.poseIniStr != "")
			{
				list7.Add(this.poseIniStr);
			}
			this.poseGroupArray = list7.ToArray();
			this.groupList = new ArrayList();
			for (int num25 = 0; num25 < this.poseArray.Length; num25++)
			{
				for (int num26 = 0; num26 < this.poseGroupArray.Length; num26++)
				{
					if (this.poseGroupArray[num26] == this.poseArray[num25])
					{
						this.groupList.Add(num25);
						if (this.poseGroupArray[num26] == this.strList2[0])
						{
							this.sPoseCount = num25;
						}
					}
				}
			}
			string[] collection = new string[]
			{
				"Salon_Day"
			};
			string[] collection2 = new string[]
			{
				"SMRoom2",
				"LockerRoom"
			};
			string[] collection3 = new string[]
			{
				"Train",
				"Toilet",
				"Oheya",
				"MyBedRoom_NightOff"
			};
			string[] collection4 = new string[]
			{
				"ClassRoom",
				"ClassRoom_Play",
				"HoneymoonRoom",
				"OutletPark"
			};
			string[] collection5 = new string[]
			{
				"BigSight",
				"BigSight_Night",
				"PrivateRoom",
				"PrivateRoom_Night",
				"Sea",
				"Sea_Night",
				"Yashiki_Day",
				"Yashiki",
				"Yashiki_Pillow"
			};
			string[] collection6 = new string[]
			{
				"rotenburo",
				"rotenburo_night",
				"villa",
				"villa_night",
				"villa_bedroom",
				"villa_bedroom_night",
				"villa_farm",
				"villa_farm_night"
			};
			string[] collection7 = new string[]
			{
				"karaokeroom"
			};
			List<string> list8 = new List<string>(50 + Class1.poseArray2.Length);
			list8.AddRange(Class1.bgArray2);
			if (GameMain.Instance.BgMgr.CreateAssetBundle("opemcafe_rance10") != null)
			{
				this.isBG1 = true;
				list8.AddRange(new string[]
				{
					"opemcafe_rance10",
					"opemcafe_rance10_night"
				});
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("opemcafe_riddlejoker") != null)
			{
				list8.AddRange(new string[]
				{
					"opemcafe_riddlejoker",
					"opemcafe_riddlejoker_night"
				});
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("opemcafe_wanko") != null)
			{
				list8.AddRange(new string[]
				{
					"opemcafe_wanko",
					"opemcafe_wanko_night"
				});
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("opemcafe_raspberry") != null)
			{
				list8.AddRange(new string[]
				{
					"opemcafe_raspberry",
					"opemcafe_raspberry_night"
				});
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("seacafe") != null)
			{
				this.isBG2 = true;
				list8.AddRange(new string[]
				{
					"seacafe",
					"seacafe_night"
				});
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("com3d2pool") != null)
			{
				this.isBG3 = true;
				list8.AddRange(new string[]
				{
					"com3d2pool",
					"com3d2pool_night"
				});
			}
			if (GameMain.Instance.BgMgr.CreateAssetBundle("shrine") != null)
			{
				this.isBG4 = true;
				list8.AddRange(new string[]
				{
					"shrine",
					"shrine_night"
				});
			}
			List<string> list9 = new List<string>();
			Dictionary<string, string> saveDataDic = CreativeRoomManager.GetSaveDataDic();
			if (saveDataDic != null)
			{
				foreach (KeyValuePair<string, string> keyValuePair in saveDataDic)
				{
					list9.Add(keyValuePair.Key);
				}
			}
			list8.AddRange(list9.ToArray());
			if (this.isCM3D2)
			{
				list8.AddRange(Class1.bgArray21);
				if (this.isVP)
				{
					list8.AddRange(collection2);
				}
				if (this.isPP)
				{
					list8.AddRange(collection3);
				}
				if (this.isPP2)
				{
					list8.AddRange(collection4);
				}
				if (this.isPP3)
				{
					list8.AddRange(collection5);
				}
				if (this.isVA)
				{
					list8.AddRange(collection6);
				}
				if (this.isKA || this.isKA2)
				{
					list8.AddRange(collection7);
				}
				list8.AddRange(collection);
			}
			this.bgArray = list8.ToArray();
			string[] collection8 = new string[]
			{
				"dokidokifallinlove_short_inst",
				"dokidokifallinlove_short",
				"entrancetoyou_short"
			};
			string[] collection9 = new string[]
			{
				"scarlet leap_short"
			};
			string[] array2 = new string[]
			{
				"stellarmytears_short",
				"stellarmytears_short2",
				"stellarmytears_short3"
			};
			string[] collection10 = new string[]
			{
				"RhythmixToYou"
			};
			string[] array3 = new string[]
			{
				"happy_happy_scandal1",
				"happy_happy_scandal2",
				"happy_happy_scandal3"
			};
			(new string[1])[0] = "can_know_two_close";
			string[] array4 = new string[]
			{
				"sweetsweeteveryday_short1",
				"sweetsweeteveryday_short2",
				"sweetsweeteveryday_short3"
			};
			string[] collection11 = new string[]
			{
				"bloomingdreaming_short",
				"kiminiaijodelicious_short",
				"luminousmoment_short",
				"nightmagicfire_short",
				"melodyofempire_short"
			};
			List<string> list10 = new List<string>(50);
			list10.AddRange(Class1.bgmArray2);
			List<string> list11 = new List<string>();
			int num27 = 18;
			while (num27 < 210)
			{
				if (num27 < 100)
				{
					afileBase = GameUty.FileSystem.FileOpen("bgm0" + num27 + ".ogg");
					try
					{
						if (afileBase.IsValid())
						{
							list11.Add("bgm0" + num27);
						}
						goto IL_2843;
					}
					finally
					{
						AFileBase afileBase9 = afileBase;
						if (afileBase9 != null)
						{
							afileBase9.Dispose();
						}
					}
					goto IL_27F0;
				}
				goto IL_27F0;
				IL_2843:
				num27++;
				continue;
				IL_27F0:
				afileBase = GameUty.FileSystem.FileOpen("bgm" + num27 + ".ogg");
				try
				{
					if (afileBase.IsValid())
					{
						list11.Add("bgm" + num27);
					}
				}
				finally
				{
					AFileBase afileBase10 = afileBase;
					if (afileBase10 != null)
					{
						afileBase10.Dispose();
					}
				}
				goto IL_2843;
			}
			if (list11.Count > 0)
			{
				list10.AddRange(list11.ToArray());
			}
			list10.AddRange(collection8);
			list10.AddRange(collection9);
			list10.AddRange(collection10);
			list10.AddRange(collection11);
			this.bgmArray = list10.ToArray();
			string[] array5 = new string[]
			{
				"OutletPark:54",
				"HoneymoonRoom:102"
			};
			List<string> list12 = new List<string>(50 + Class1.parArray2.Length);
			list12.AddRange(Class1.parArray2);
			HashSet<int> enabled_id_list = new HashSet<int>();
			Action<string> action4 = delegate(string file_name)
			{
				file_name += ".nei";
				if (GameUty.FileSystem.IsExistentFile(file_name))
				{
					AFileBase afileBase12 = GameUty.FileSystem.FileOpen(file_name);
					try
					{
						CsvParser csvParser3 = new CsvParser();
						try
						{
							NDebug.Assert(csvParser3.Open(afileBase12), file_name + "\nopen failed.");
							for (int num30 = 1; num30 < csvParser3.max_cell_y; num30++)
							{
								if (csvParser3.IsCellToExistData(0, num30))
								{
									int cellAsInteger2 = csvParser3.GetCellAsInteger(0, num30);
									if (!enabled_id_list.Contains(cellAsInteger2))
									{
										enabled_id_list.Add(cellAsInteger2);
									}
								}
							}
						}
						finally
						{
							CsvParser csvParser4 = csvParser3;
							if (csvParser4 != null)
							{
								csvParser4.Dispose();
							}
						}
					}
					finally
					{
						AFileBase afileBase13 = afileBase12;
						if (afileBase13 != null)
						{
							afileBase13.Dispose();
						}
					}
				}
			};
			action4("desk_item_enabled_id");
			for (int num28 = 0; num28 < GameUty.PathList.Count; num28++)
			{
				action4("desk_item_enabled_id_" + GameUty.PathList[num28]);
			}
			afileBase = GameUty.FileSystem.FileOpen("desk_item_detail.nei");
			try
			{
				CsvParser csvParser = new CsvParser();
				try
				{
					NDebug.Assert(csvParser.Open(afileBase), "desk_item_detail.nei\nopen failed.");
					for (int num29 = 1; num29 < csvParser.max_cell_y; num29++)
					{
						if (csvParser.IsCellToExistData(0, num29))
						{
							int cellAsInteger = csvParser.GetCellAsInteger(0, num29);
							if (enabled_id_list.Contains(cellAsInteger))
							{
								ManyMaids.ItemData2 itemData = new ManyMaids.ItemData2(csvParser, num29);
								if (itemData.asset_name != "")
								{
									list12.AddRange(new string[]
									{
										itemData.name + "\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000#" + itemData.asset_name
									});
								}
							}
						}
					}
				}
				finally
				{
					CsvParser csvParser2 = csvParser;
					if (csvParser2 != null)
					{
						csvParser2.Dispose();
					}
				}
			}
			finally
			{
				AFileBase afileBase11 = afileBase;
				if (afileBase11 != null)
				{
					afileBase11.Dispose();
				}
			}
			list12.AddRange(Class1.parArray3);
			this.parArray = list12.ToArray();
			List<string> list13 = new List<string>(50 + Class1.doguBArray.Length);
			list13.AddRange(Class1.doguBArray);
			if (this.isCM3D2)
			{
				if (this.isVA)
				{
					list13.AddRange(Class1.doguB2Array);
				}
				if (this.isKA)
				{
					list13.AddRange(Class1.doguB3Array);
				}
				if (this.isKA2)
				{
					list13.AddRange(Class1.doguB4Array);
				}
			}
			list13.AddRange(new string[]
			{
				"BGNeiMaid"
			});
			if (this.isBG1)
			{
				list13.AddRange(new string[]
				{
					"BGOdogu_alicesoft_redhoney",
					"BGOdogu_alicesoft_bluehoney",
					"BGOdogu_alicesoft_brownhoney",
					"BGOdogu_alicesoft_greenhoney"
				});
			}
			if (this.isBG2)
			{
				list13.AddRange(new string[]
				{
					"BGOdogu_sp001_beercan",
					"BGOdogu_sp001_beerjug",
					"BGOdogu_sp001_cake",
					"BGOdogu_sp001_food",
					"BGOdogu_sp001_yakisoba"
				});
			}
			if (this.isBG3)
			{
				list13.AddRange(new string[]
				{
					"BGOdogu_denkigai2018s_beachball_red",
					"BGOdogu_denkigai2018s_beachball_blue",
					"BGOdogu_denkigai2018s_beachball_green",
					"BGOdogu_denkigai2018s_beachball_yellow",
					"BGOdogu_denkigai2018s_coneice_chocomint",
					"BGOdogu_denkigai2018s_coneice_strawberry",
					"BGOdogu_denkigai2018s_coneice_vanilla",
					"BGOdogu_denkigai2018s_melondish",
					"BGOdogu_denkigai2018s_syatifloot",
					"BGOdogu_denkigai2018s_toropicalicetea"
				});
			}
			if (this.isBG4)
			{
				list13.AddRange(new string[]
				{
					"BGOdogu_sp002_oharaibou",
					"BGOdogu_sp002_omamori",
					"BGOdogu_sp002_susuki",
					"BGOdogu_sp002_takebouki",
					"BGOdogu_sp002_tukimidango",
					"BGOdogu_sp002_waraningyou",
					"BGOdogu_sp002_waraningyou_gosunkugi"
				});
			}
			Class1.doguBArray = list13.ToArray();
			List<string> list14 = new List<string>(100 + Class1.itemBArray.Length);
			list14.AddRange(Class1.itemBArray);
			if (this.isCM3D2)
			{
				if (this.isVA)
				{
					list14.AddRange(Class1.itemB2Array);
				}
				if (this.isKA)
				{
					list14.AddRange(Class1.itemB3Array);
				}
				if (this.isKA2)
				{
					list14.AddRange(Class1.itemB4Array);
				}
			}
			Class1.itemBArray = list14.ToArray();
		}

		// Token: 0x06000030 RID: 48 RVA: 0x0001E7CC File Offset: 0x0001C9CC
		private void OnSceneLoaded(Scene scene, LoadSceneMode sceneMode)
		{
			this.sceneLevel = scene.buildIndex;
			this.maidArray[0] = GameMain.Instance.CharacterMgr.GetMaid(0);
			if (!this.bgObject)
			{
				this.bgObject = GameObject.Find("__GameMain__/BG");
				this.bg = this.bgObject.transform;
			}
			this.mainCamera = GameMain.Instance.MainCamera;
			this.selectList = new ArrayList();
			this.selectList.Add(0);
			this.bGui = false;
			this.isF7 = false;
			this.isF7SInit = false;
			this.isF6 = false;
			if (this.sceneLevel == 3 || this.sceneLevel == 5)
			{
				this.Preference();
				this.init();
				this.isScript = false;
				if (this.sceneLevel == 5)
				{
					this.isF7SInit = true;
					return;
				}
			}
			else
			{
				if (this.sceneLevel == 15)
				{
					this.init();
					this.isScript = true;
					return;
				}
				this.allowUpdate = false;
				if (this.okFlg)
				{
					this.init();
				}
			}
		}

		// Token: 0x06000031 RID: 49 RVA: 0x0001E8D8 File Offset: 0x0001CAD8
		private bool getModKeyPressing(ManyMaids.modKey key)
		{
			switch (key)
			{
			case ManyMaids.modKey.Shift:
				return Input.GetKey(KeyCode.LeftShift) || Input.GetKey(KeyCode.RightShift);
			case ManyMaids.modKey.Alt:
				return Input.GetKey(KeyCode.LeftAlt) || Input.GetKey(KeyCode.RightAlt);
			case ManyMaids.modKey.Ctrl:
				return Input.GetKey(KeyCode.LeftControl) || Input.GetKey(KeyCode.RightControl);
			default:
				return false;
			}
		}

		// Token: 0x06000032 RID: 50 RVA: 0x0001E945 File Offset: 0x0001CB45
		private Vector3 getHanten(Vector3 vec)
		{
			return new Vector3(360f - vec.x, 360f - (vec.y + 90f) - 90f, vec.z);
		}

		// Token: 0x06000033 RID: 51 RVA: 0x0001E976 File Offset: 0x0001CB76
		private Vector3 getHanten2(Vector3 vec)
		{
			return new Vector3(360f - vec.x, 360f - vec.y, vec.z);
		}

		// Token: 0x06000034 RID: 52 RVA: 0x0001E99C File Offset: 0x0001CB9C
		private void FoceKuchipakuUpdate2(float f_fNowTime, Maid maid, int i)
		{
			if (this.isFadeOut || this.m_baKuchipakuPattern[i] == null)
			{
				return;
			}
			int num = (int)(f_fNowTime * 30f);
			int num2 = this.m_baKuchipakuPattern[i].Length / 3;
			if (0 < num && num < num2)
			{
				maid.body0.Face.morph.boLipSync = true;
				maid.body0.Face.morph.LipSync1 = maid.body0.Face.morph.LipSync1 * 0.15f + (float)this.m_baKuchipakuPattern[i][num * 3] / 255f * 0.85f * 3f;
				maid.body0.Face.morph.LipSync2 = maid.body0.Face.morph.LipSync2 * 0.15f + (float)this.m_baKuchipakuPattern[i][num * 3 + 1] / 255f * 0.85f * 3f;
				maid.body0.Face.morph.LipSync3 = maid.body0.Face.morph.LipSync3 * 0.15f + (float)this.m_baKuchipakuPattern[i][num * 3 + 2] / 255f * 0.85f * 3f;
				if (this.sceneLevel == 5)
				{
					if (maid.boMabataki && this.isFace[i])
					{
						maid.boMabataki = false;
						TMorph morph = maid.body0.Face.morph;
						ManyMaids.GetFieldValue<TMorph, float[]>(morph, "BlendValues");
						float[] fieldValue = ManyMaids.GetFieldValue<TMorph, float[]>(morph, "BlendValuesBackup");
						morph.EyeMabataki = 0f;
						fieldValue[(int)morph.hash["eyeclose"]] = 0f;
					}
					maid.body0.Face.morph.FixBlendValues_Face();
					return;
				}
			}
			else
			{
				maid.body0.Face.morph.boLipSync = false;
			}
		}

		// Token: 0x06000035 RID: 53 RVA: 0x000020AD File Offset: 0x000002AD
		private int GetPix(int i)
		{
			return (int)((1f + ((float)Screen.width / 1280f - 1f) * 0.6f) * (float)i);
		}

		// Token: 0x06000036 RID: 54 RVA: 0x0001EB8C File Offset: 0x0001CD8C
		public void OnGUI()
		{
			for (int i = 0; i < this.maidCnt; i++)
			{
				if (this.isPoseIti[i])
				{
					Maid maid = this.maidArray[i];
					this.isPoseIti[i] = false;
					maid.transform.position = this.poseIti[i];
					Vector3 eulerAngles = maid.transform.eulerAngles;
					for (int j = 0; j < 10; j++)
					{
						Transform transform = maid.transform;
						Vector3 position = maid.transform.position;
						Vector3 right = Vector3.right;
						transform.RotateAround(position, right, 0f - maid.transform.rotation.eulerAngles.x);
						Transform transform2 = maid.transform;
						Vector3 position2 = maid.transform.position;
						Vector3 forward = Vector3.forward;
						transform2.RotateAround(position2, forward, 0f - maid.transform.rotation.eulerAngles.z);
					}
					Transform transform3 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01", true);
					transform3.position = new Vector3(this.poseIti[i].x, transform3.position.y, this.poseIti[i].z);
					maid.transform.eulerAngles = eulerAngles;
				}
			}
			GUIStyle guistyle = "box";
			guistyle.fontSize = this.GetPix(11);
			guistyle.alignment = TextAnchor.UpperRight;
			if (this.bGui)
			{
				if (this.isGuiInit || this.screenSize != new Vector2((float)Screen.width, (float)Screen.height))
				{
					this.isGuiInit = false;
					this.screenSize = new Vector2((float)Screen.width, (float)Screen.height);
				}
				if (this.sceneLevel != 5 && this.sceneLevel != 14)
				{
					if (this.kankyoFlg || this.kankyo2Flg)
					{
						this.rectWin.Set(0f, 0f, (float)this.GetPix(210), (float)Screen.height * 0.9f);
					}
					else
					{
						this.rectWin.Set(0f, 0f, (float)this.GetPix(170), (float)Screen.height * 0.9f);
					}
				}
				else if (this.kankyoFlg || this.kankyo2Flg)
				{
					this.rectWin.Set(0f, 0f, (float)this.GetPix(210), (float)Screen.height * 0.9f * 0.85f);
				}
				else
				{
					this.rectWin.Set(0f, 0f, (float)this.GetPix(170), (float)Screen.height * 0.9f * 0.85f);
				}
				this.rectWin.x = this.screenSize.x - this.rectWin.width;
				this.rectWin.y = (float)this.GetPix(65);
				if (this.sceneLevel == 14)
				{
					this.rectWin.x = this.screenSize.x - this.rectWin.width - (float)this.GetPix(23);
				}
				this.comboBoxControl.height = this.rectWin.height;
				this.faceCombo.height = this.rectWin.height;
				this.poseCombo.height = this.rectWin.height;
				this.poseGroupCombo.height = this.rectWin.height;
				this.itemCombo.height = this.rectWin.height;
				this.bgmCombo.height = this.rectWin.height;
				this.itemCombo2.height = this.rectWin.height;
				this.bgCombo2.height = this.rectWin.height;
				this.kankyoCombo.height = this.rectWin.height;
				this.bgCombo.height = this.rectWin.height;
				this.slotCombo.height = this.rectWin.height;
				this.doguCombo.height = this.rectWin.height;
				this.parCombo.height = this.rectWin.height;
				this.lightCombo.height = this.rectWin.height;
				GameMain.Instance.MainCamera.SetControl(true);
				if (!this.sceneFlg && !this.faceFlg && !this.poseFlg && !this.kankyoFlg && !this.kankyo2Flg && !this.isF6 && this.okFlg)
				{
					if (Input.GetAxis("Mouse ScrollWheel") != 0f)
					{
						GameMain.Instance.MainCamera.SetControl(!this.rectWin.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)));
					}
					this.rectWin = GUI.Window(129, this.rectWin, new GUI.WindowFunction(this.GuiFunc), "", guistyle);
				}
				else if (this.sceneFlg)
				{
					this.rectWin = GUI.Window(129, this.rectWin, new GUI.WindowFunction(this.GuiFunc5), "", guistyle);
					Rect rect = default(Rect);
					rect = new Rect(0f, 0f, 0f, 0f);
					this.dispNo = 0;
					for (int k = 0; k < 10; k++)
					{
						rect = new Rect(0f, 0f, (float)this.GetPix(170), (float)this.GetPix(36));
						rect.x = this.screenSize.x - rect.width;
						rect.y = this.rectWin.y + (float)this.GetPix(64 + 50 * k);
						if (rect.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)))
						{
							this.dispNo = k + 1;
							break;
						}
					}
					if (this.saveScene2 > 0)
					{
						this.dispNo = 0;
					}
					if (this.dispNo == 0)
					{
						this.texture2D = null;
						this.dispNoOld = 0;
					}
					else if (this.dispNo != this.dispNoOld)
					{
						this.dispNoOld = this.dispNo;
						this.texture2D = null;
						try
						{
							IniKey iniKey = base.Preferences["scene"]["ss" + (this.page * 10 + this.dispNo)];
							if (iniKey.Value != null && iniKey.Value != "")
							{
								byte[] data = Convert.FromBase64String(iniKey.Value);
								this.texture2D = new Texture2D(1, 1, TextureFormat.ARGB32, false);
								this.texture2D.LoadImage(data);
							}
						}
						catch
						{
						}
					}
					if (this.texture2D != null)
					{
						if (this.waku == null)
						{
							this.waku = this.MakeTex(2, 2, new Color(1f, 1f, 1f, 1f));
							this.waku2 = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.4f));
						}
						Rect position3 = default(Rect);
						position3 = new Rect(rect.x - (float)this.texture2D.width - (float)this.GetPix(18), rect.y - (float)(this.texture2D.height / 2) + (float)this.GetPix(12), (float)(this.texture2D.width + this.GetPix(12)), (float)(this.texture2D.height + this.GetPix(12)));
						Rect position4 = default(Rect);
						position4 = new Rect(rect.x - (float)this.texture2D.width - (float)this.GetPix(12), rect.y - (float)(this.texture2D.height / 2) + (float)this.GetPix(18), (float)this.texture2D.width, (float)this.texture2D.height);
						Rect position5 = default(Rect);
						position5 = new Rect(rect.x - (float)this.texture2D.width - (float)this.GetPix(16), rect.y - (float)(this.texture2D.height / 2) + (float)this.GetPix(14), (float)(this.texture2D.width + this.GetPix(12)), (float)(this.texture2D.height + this.GetPix(12)));
						if (position3.y + position3.height > (float)Screen.height)
						{
							float num = position5.y + position5.height - (float)Screen.height;
							position3.y -= num;
							position4.y -= num;
							position5.y -= num;
						}
						GUI.DrawTexture(position5, this.waku2);
						GUI.DrawTexture(position3, this.waku);
						GUI.DrawTexture(position4, this.texture2D);
					}
				}
				else if (this.kankyoFlg)
				{
					if (this.bgmCombo.isClickedComboButton || this.bgCombo.isClickedComboButton || this.doguCombo.isClickedComboButton || this.parCombo.isClickedComboButton)
					{
						if (Input.GetAxis("Mouse ScrollWheel") != 0f)
						{
							GameMain.Instance.MainCamera.SetControl(!this.rectWin.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)));
						}
					}
					else if (!this.yotogiFlg && this.sceneLevel != 3 && this.sceneLevel != 5 && this.rectWin.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)) && Input.GetMouseButtonDown(0))
					{
						Input.ResetInputAxes();
					}
					this.rectWin = GUI.Window(129, this.rectWin, new GUI.WindowFunction(this.GuiFunc6), "", guistyle);
				}
				else if (this.kankyo2Flg)
				{
					if (Input.GetAxis("Mouse ScrollWheel") != 0f)
					{
						GameMain.Instance.MainCamera.SetControl(!this.rectWin.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)));
					}
					if (!this.yotogiFlg && this.sceneLevel != 3 && this.sceneLevel != 5 && this.rectWin.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)) && Input.GetMouseButtonDown(0))
					{
						Input.ResetInputAxes();
					}
					this.rectWin = GUI.Window(129, this.rectWin, new GUI.WindowFunction(this.GuiFunc7), "", guistyle);
				}
				else if (this.poseFlg)
				{
					if (this.poseGroupCombo.isClickedComboButton || this.poseCombo.isClickedComboButton || this.itemCombo.isClickedComboButton)
					{
						if (Input.GetAxis("Mouse ScrollWheel") != 0f)
						{
							GameMain.Instance.MainCamera.SetControl(!this.rectWin.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)));
						}
					}
					else if (!this.yotogiFlg && this.sceneLevel != 3 && this.sceneLevel != 5 && this.rectWin.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)) && Input.GetMouseButtonDown(0))
					{
						Input.ResetInputAxes();
					}
					this.rectWin = GUI.Window(129, this.rectWin, new GUI.WindowFunction(this.GuiFunc4), "", guistyle);
				}
				else
				{
					if (this.faceCombo.isClickedComboButton)
					{
						if (Input.GetAxis("Mouse ScrollWheel") != 0f)
						{
							GameMain.Instance.MainCamera.SetControl(!this.rectWin.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)));
						}
					}
					else if (!this.yotogiFlg && this.sceneLevel != 3 && this.sceneLevel != 5 && this.rectWin.Contains(new Vector2(Input.mousePosition.x, (float)Screen.height - Input.mousePosition.y)) && Input.GetMouseButtonDown(0))
					{
						Input.ResetInputAxes();
					}
					this.rectWin = GUI.Window(129, this.rectWin, new GUI.WindowFunction(this.GuiFunc2), "", guistyle);
				}
				if (this.helpView && !this.bGuiMessage)
				{
					this.screenSize = new Vector2((float)Screen.width, (float)Screen.height);
					this.rectWin3.Set(0f, 0f, (float)Screen.width * 0.4f, (float)Screen.height * 0.15f);
					this.rectWin3.x = this.screenSize.x / 2f - this.rectWin3.width / 2f;
					this.rectWin3.y = this.screenSize.y - this.rectWin3.height;
					this.rectWin3 = GUI.Window(129000, this.rectWin3, new GUI.WindowFunction(this.GuiFuncHelp), "", guistyle);
				}
			}
			if (this.bGuiMessage)
			{
				this.screenSize = new Vector2((float)Screen.width, (float)Screen.height);
				this.rectWin2.Set(0f, 0f, (float)Screen.width * 0.4f, (float)Screen.height * 0.15f);
				this.rectWin2.x = this.screenSize.x / 2f - this.rectWin2.width / 2f;
				if (this.sceneLevel == 5)
				{
					this.rectWin2.y = this.screenSize.y * 0.94f - this.rectWin2.height;
				}
				else
				{
					this.rectWin2.y = this.screenSize.y - this.rectWin2.height;
				}
				this.rectWin2 = GUI.Window(129, this.rectWin2, new GUI.WindowFunction(this.GuiFunc3), "", guistyle);
			}
		}

		// Token: 0x06000037 RID: 55 RVA: 0x0001FAB0 File Offset: 0x0001DCB0
		private void GuiFuncHelp(int winID)
		{
			GUIStyle guistyle = "label";
			guistyle.fontSize = this.GetPix(12);
			guistyle.alignment = TextAnchor.UpperLeft;
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(4), (float)this.GetPix(800), (float)this.GetPix(25)), "G:このヘルプの表示切替", guistyle);
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(24), (float)this.GetPix(800), (float)this.GetPix(25)), "Z:前後左右移動\u3000Z+ctrl:上下移動\u3000Z+shift:横回転\u3000X:x,z軸回転\u3000X+shift:y軸回転", guistyle);
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(44), (float)this.GetPix(800), (float)this.GetPix(25)), "C:拡大縮小\u3000A:操作/表情パネル\u3000D:大道具の削除\u3000\u3000tab or esc:操作パネルの表示切替", guistyle);
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(64), (float)this.GetPix(800), (float)this.GetPix(25)), "A+[I,K,J,L,O,P]:重力移動\u3000A+shift+[I,K,J,L,O,P]:スカート重力の移動\u3000Q+[U,O]:カメラの傾き", guistyle);
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(84), (float)this.GetPix(800), (float)this.GetPix(25)), "A+@:重力リセット\u3000A+shift+@:スカート重力リセット\u3000Q+@:カメラの傾きリセット", guistyle);
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(104), (float)this.GetPix(800), (float)this.GetPix(25)), "M:メッセージ入力画面\u3000S:スクリーンショット", guistyle);
		}

		// Token: 0x06000038 RID: 56 RVA: 0x0001FC20 File Offset: 0x0001DE20
		private void GuiFunc3(int winID)
		{
			GUIStyle guistyle = "label";
			guistyle.fontSize = this.GetPix(12);
			guistyle.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle2 = "button";
			guistyle2.fontSize = this.GetPix(16);
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(4), (float)this.GetPix(80), (float)this.GetPix(25)), "名前", guistyle);
			this.inName = GUI.TextField(new Rect((float)this.GetPix(35), (float)this.GetPix(4), (float)this.GetPix(120), (float)this.GetPix(20)), this.inName);
			GUI.Label(new Rect((float)this.GetPix(180), (float)this.GetPix(4), (float)this.GetPix(100), (float)this.GetPix(25)), "サイズ", guistyle);
			this.fontSize = (int)GUI.HorizontalSlider(new Rect((float)this.GetPix(220), (float)this.GetPix(9), (float)this.GetPix(100), (float)this.GetPix(20)), (float)this.fontSize, 25f, 60f);
			if (this.fontSize != this.mFontSize)
			{
				this.mFontSize = this.fontSize;
				GameObject gameObject = GameObject.Find("__GameMain__/SystemUI Root").transform.Find("MessageWindowPanel").gameObject;
				MessageWindowMgr messageWindowMgr = GameMain.Instance.ScriptMgr.adv_kag.MessageWindowMgr;
				new MessageClass(gameObject, messageWindowMgr);
				ManyMaids.SetFieldValue2<UILabel, int>(UTY.GetChildObject(gameObject, "MessageViewer/MsgParent/Message", false).GetComponent<UILabel>(), "mFontSize", this.fontSize);
			}
			GUI.Label(new Rect((float)this.GetPix(325), (float)this.GetPix(4), (float)this.GetPix(100), (float)this.GetPix(25)), this.fontSize + "pt", guistyle);
			Rect position = default(Rect);
			position = new Rect((float)this.GetPix(8), (float)this.GetPix(26), this.rectWin2.width - (float)this.GetPix(15), (float)this.GetPix(52));
			this.inText = GUI.TextArea(position, this.inText, 93);
			if (GUI.Button(new Rect((float)this.GetPix(8), (float)this.GetPix(82), (float)this.GetPix(60), (float)this.GetPix(20)), "決定", guistyle2))
			{
				this.isMessage = true;
				this.bGuiMessage = false;
				GameObject gameObject2 = GameObject.Find("__GameMain__/SystemUI Root").transform.Find("MessageWindowPanel").gameObject;
				MessageWindowMgr messageWindowMgr2 = GameMain.Instance.ScriptMgr.adv_kag.MessageWindowMgr;
				messageWindowMgr2.OpenMessageWindowPanel();
				MessageClass messageClass = new MessageClass(gameObject2, messageWindowMgr2);
				UILabel component = UTY.GetChildObject(gameObject2, "MessageViewer/MsgParent/Message", false).GetComponent<UILabel>();
				component.ProcessText();
				ManyMaids.SetFieldValue2<UILabel, int>(component, "mFontSize", this.fontSize);
				ManyMaids.SetFieldValue5<MessageClass, UILabel>(messageClass, "message_label_", component);
				messageClass.SetText(this.inName, this.inText, "", 0);
				messageClass.FinishChAnime();
			}
		}

		// Token: 0x06000039 RID: 57 RVA: 0x0001FF44 File Offset: 0x0001E144
		private Texture2D MakeTex(int width, int height, Color col)
		{
			Color[] array = new Color[width * height];
			for (int i = 0; i < array.Length; i++)
			{
				array[i] = col;
			}
			Texture2D texture2D = new Texture2D(width, height);
			texture2D.SetPixels(array);
			texture2D.Apply();
			return texture2D;
		}

		// Token: 0x0600003A RID: 58 RVA: 0x0001FF84 File Offset: 0x0001E184
		private void GuiFunc5(int winID)
		{
			GUIStyle guistyle = "label";
			guistyle.fontSize = this.GetPix(12);
			guistyle.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle2 = "button";
			guistyle2.fontSize = this.GetPix(12);
			guistyle2.alignment = TextAnchor.MiddleCenter;
			GUI.Label(new Rect((float)this.GetPix(50), (float)this.GetPix(6), (float)this.GetPix(100), (float)this.GetPix(25)), "シーン管理", guistyle);
			if (GUI.Button(new Rect((float)this.GetPix(135), (float)this.GetPix(3), (float)this.GetPix(23), (float)this.GetPix(23)), "→", guistyle2))
			{
				this.faceFlg = false;
				this.poseFlg = false;
				this.sceneFlg = false;
				this.kankyoFlg = true;
				this.kankyo2Flg = false;
				this.bGui = true;
				this.isGuiInit = true;
				this.copyIndex = 0;
			}
			int num = 50;
			if (GUI.Button(new Rect((float)this.GetPix(25), (float)this.GetPix(31), (float)this.GetPix(23), (float)this.GetPix(23)), "＜", guistyle2))
			{
				this.page--;
				if (this.page < 0)
				{
					this.page = this.maxPage - 1;
				}
				for (int i = 0; i < 10; i++)
				{
					this.date[i] = "未保存";
					this.ninzu[i] = "";
					IniKey iniKey = base.Preferences["scene"]["s" + (this.page * 10 + i + 1)];
					if (iniKey.Value != null && iniKey.Value.ToString() != "")
					{
						string[] array = iniKey.Value.Split(new char[]
						{
							'_'
						});
						if (array.Length >= 2)
						{
							string[] array2 = array[0].Split(new char[]
							{
								','
							});
							this.date[i] = array2[0];
							this.ninzu[i] = array2[1] + "人";
						}
					}
				}
			}
			if (GUI.Button(new Rect((float)this.GetPix(115), (float)this.GetPix(31), (float)this.GetPix(23), (float)this.GetPix(23)), "＞", guistyle2))
			{
				this.page++;
				if (this.page >= this.maxPage)
				{
					this.page = 0;
				}
				for (int j = 0; j < 10; j++)
				{
					this.date[j] = "未保存";
					this.ninzu[j] = "";
					IniKey iniKey2 = base.Preferences["scene"]["s" + (this.page * 10 + j + 1)];
					if (iniKey2.Value != null && iniKey2.Value.ToString() != "")
					{
						string[] array3 = iniKey2.Value.Split(new char[]
						{
							'_'
						});
						if (array3.Length >= 2)
						{
							string[] array4 = array3[0].Split(new char[]
							{
								','
							});
							this.date[j] = array4[0];
							this.ninzu[j] = array4[1] + "人";
						}
					}
				}
			}
			GUI.Label(new Rect((float)this.GetPix(60), (float)this.GetPix(32), (float)this.GetPix(100), (float)this.GetPix(25)), this.page * 10 + 1 + " ～ " + (this.page * 10 + 10), guistyle);
			if (this.saveScene2 > 0 && string.IsNullOrEmpty(this.thum_byte_to_base64_) && File.Exists(this.thum_file_path_))
			{
				try
				{
					Texture2D texture2D = new Texture2D(1, 1, TextureFormat.ARGB32, false);
					texture2D.LoadImage(File.ReadAllBytes(this.thum_file_path_));
					float num2 = (float)texture2D.width / (float)texture2D.height;
					Vector2 vector = default(Vector2);
					vector = new Vector2(480f, 270f);
					int num3 = texture2D.width;
					int num4 = texture2D.height;
					if (vector.x < (float)texture2D.width && vector.y < (float)texture2D.height)
					{
						num3 = (int)vector.x;
						num4 = Mathf.RoundToInt((float)num3 / num2);
						if (vector.y < (float)num4)
						{
							num4 = (int)vector.y;
							num3 = Mathf.RoundToInt((float)num4 * num2);
						}
					}
					else if (vector.x < (float)texture2D.width)
					{
						num3 = (int)vector.x;
						num4 = Mathf.RoundToInt((float)num3 / num2);
					}
					else if (vector.y < (float)texture2D.height)
					{
						num4 = (int)vector.y;
						num3 = Mathf.RoundToInt((float)num4 * num2);
					}
					TextureScale.Bilinear(texture2D, num3, num4);
					this.thum_byte_to_base64_ = Convert.ToBase64String(texture2D.EncodeToPNG());
					UnityEngine.Object.DestroyImmediate(texture2D);
					base.Preferences["scene"]["ss" + this.saveScene2].Value = this.thum_byte_to_base64_;
					base.SaveConfig();
					this.thum_file_path_ = "";
					this.saveScene2 = 0;
				}
				catch
				{
				}
			}
			for (int k = 0; k < 10; k++)
			{
				GUI.Label(new Rect((float)this.GetPix(5), (float)this.GetPix(60 + num * k), (float)this.GetPix(25), (float)this.GetPix(25)), string.Concat(this.page * 10 + k + 1), guistyle);
				if (GUI.Button(new Rect((float)this.GetPix(20), (float)this.GetPix(78 + num * k), (float)this.GetPix(50), (float)this.GetPix(20)), "保存", guistyle2))
				{
					this.saveScene = this.page * 10 + k + 1;
					this.saveScene2 = this.saveScene;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
					this.isScreen2 = true;
					if (!this.isMessage)
					{
						this.ui_cam_hide_list_.Clear();
						foreach (UICamera uicamera in NGUITools.FindActive<UICamera>())
						{
							if (uicamera.GetComponent<Camera>().enabled)
							{
								uicamera.GetComponent<Camera>().enabled = false;
								this.ui_cam_hide_list_.Add(uicamera);
							}
						}
					}
					else
					{
						this.editUI = GameObject.Find("/UI Root/Camera");
						if (this.editUI != null)
						{
							this.editUI.SetActive(false);
						}
						if (GameMain.Instance.CMSystem.ViewFps)
						{
							UTY.GetChildObject(GameMain.Instance.gameObject, "SystemUI Root/FpsCounter", false).SetActive(false);
						}
						GameObject childObject = UTY.GetChildObject(GameMain.Instance.gameObject, "SystemUI Root/SystemDialog", false);
						GameObject childObject2 = UTY.GetChildObject(GameMain.Instance.gameObject, "SystemUI Root/SystemShortcut", false);
						childObject.SetActive(false);
						childObject2.SetActive(false);
					}
					this.isGui = this.bGui;
					this.bGui = false;
					try
					{
						this.thum_byte_to_base64_ = string.Empty;
						this.thum_file_path_ = Path.Combine(Path.GetTempPath(), "cm3d2_" + Guid.NewGuid().ToString() + ".png");
						GameMain.Instance.MainCamera.ScreenShot(this.thum_file_path_, 1, true);
					}
					catch
					{
					}
				}
				GUI.Label(new Rect((float)this.GetPix(25), (float)this.GetPix(60 + num * k), (float)this.GetPix(100), (float)this.GetPix(25)), this.date[k], guistyle);
				GUI.Label(new Rect((float)this.GetPix(130), (float)this.GetPix(60 + num * k), (float)this.GetPix(100), (float)this.GetPix(25)), this.ninzu[k], guistyle);
				if (this.date[k] != "未保存" && GUI.Button(new Rect((float)this.GetPix(100), (float)this.GetPix(78 + num * k), (float)this.GetPix(50), (float)this.GetPix(20)), "読込", guistyle2))
				{
					this.loadScene = this.page * 10 + k + 1;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
			}
		}

		// Token: 0x0600003B RID: 59 RVA: 0x00020858 File Offset: 0x0001EA58
		private void GuiFunc7(int winID)
		{
			GUIStyle guistyle = "label";
			guistyle.fontSize = this.GetPix(12);
			guistyle.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle2 = "label";
			guistyle2.fontSize = this.GetPix(11);
			guistyle2.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle3 = "button";
			guistyle3.fontSize = this.GetPix(20);
			GUIStyle guistyle4 = "button";
			guistyle4.fontSize = this.GetPix(14);
			guistyle4.alignment = TextAnchor.MiddleLeft;
			GUIStyle guistyle5 = "button";
			guistyle5.fontSize = this.GetPix(12);
			guistyle5.alignment = TextAnchor.MiddleLeft;
			GUIStyle guistyle6 = new GUIStyle("toggle");
			guistyle6.fontSize = this.GetPix(13);
			CharacterMgr characterMgr = GameMain.Instance.CharacterMgr;
			Maid maid = this.maidArray[this.selectMaidIndex];
			if (!this.kankyo2InitFlg)
			{
				this.listStyle2.normal.textColor = Color.white;
				this.listStyle2.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
				GUIStyleState onHover = this.listStyle2.onHover;
				GUIStyleState hover = this.listStyle2.hover;
				Texture2D texture2D = new Texture2D(2, 2);
				Texture2D background = texture2D;
				hover.background = texture2D;
				onHover.background = background;
				RectOffset padding = this.listStyle2.padding;
				RectOffset padding2 = this.listStyle2.padding;
				RectOffset padding3 = this.listStyle2.padding;
				int num = this.listStyle2.padding.bottom = this.GetPix(0);
				padding3.top = num;
				padding2.right = num;
				padding.left = num;
				this.listStyle2.fontSize = this.GetPix(11);
				this.listStyle3.normal.textColor = Color.white;
				this.listStyle3.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
				GUIStyleState onHover2 = this.listStyle3.onHover;
				GUIStyleState hover2 = this.listStyle3.hover;
				Texture2D texture2D2 = new Texture2D(2, 2);
				background = texture2D2;
				hover2.background = texture2D2;
				onHover2.background = background;
				RectOffset padding4 = this.listStyle3.padding;
				RectOffset padding5 = this.listStyle3.padding;
				num = (this.listStyle3.padding.top = this.GetPix(0));
				padding5.right = num;
				padding4.left = num;
				this.listStyle3.padding.bottom = this.GetPix(0);
				this.listStyle3.fontSize = this.GetPix(14);
				this.bgCombo2.selectedItemIndex = this.bgIndexB;
				this.bgCombo2List = new GUIContent[this.bgArray.Length];
				int i = 0;
				while (i < this.bgArray.Length)
				{
					string text = this.bgArray[i];
					uint num2 = <PrivateImplementationDetails>.ComputeStringHash(text);
					if (num2 <= 1947831619u)
					{
						if (num2 <= 1070438741u)
						{
							if (num2 <= 533377175u)
							{
								if (num2 <= 238123806u)
								{
									if (num2 <= 46466192u)
									{
										if (num2 != 1596052u)
										{
											if (num2 != 17732777u)
											{
												if (num2 != 46466192u)
												{
													goto IL_210B;
												}
												if (!(text == "Syosai_Night"))
												{
													goto IL_210B;
												}
												this.bgCombo2List[i] = new GUIContent("書斎(夜)");
											}
											else
											{
												if (!(text == "seacafe"))
												{
													goto IL_210B;
												}
												this.bgCombo2List[i] = new GUIContent("シーカフェ");
											}
										}
										else
										{
											if (!(text == "seacafe_night"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("シーカフェ");
										}
									}
									else if (num2 <= 85302226u)
									{
										if (num2 != 47568606u)
										{
											if (num2 != 85302226u)
											{
												goto IL_210B;
											}
											if (!(text == "PlayRoom2"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("プレイルーム2");
										}
										else
										{
											if (!(text == "PrivateRoom_Night"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("プライベートルーム(夜)");
										}
									}
									else if (num2 != 162748417u)
									{
										if (num2 != 238123806u)
										{
											goto IL_210B;
										}
										if (!(text == "Shukuhakubeya_Living_Night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("宿泊-リビング(夜)");
									}
									else
									{
										if (!(text == "MyBedRoom_NightOff"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("自室(消灯)");
									}
								}
								else if (num2 <= 382834298u)
								{
									if (num2 <= 296207621u)
									{
										if (num2 != 259046295u)
										{
											if (num2 != 296207621u)
											{
												goto IL_210B;
											}
											if (!(text == "CasinoMini"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("カジノミニ");
										}
										else
										{
											if (!(text == "Shukuhakubeya_WashRoom_Night"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("宿泊-洗面所(夜)");
										}
									}
									else if (num2 != 297385674u)
									{
										if (num2 != 382834298u)
										{
											goto IL_210B;
										}
										if (!(text == "rotenburo_night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("露天風呂(夜)");
									}
									else
									{
										if (!(text == "Salon"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("サロン");
									}
								}
								else if (num2 <= 470030417u)
								{
									if (num2 != 464620076u)
									{
										if (num2 != 470030417u)
										{
											goto IL_210B;
										}
										if (!(text == "MyBedRoom"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("自室");
									}
									else
									{
										if (!(text == "Sea"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("海");
									}
								}
								else if (num2 != 504525065u)
								{
									if (num2 != 533377175u)
									{
										goto IL_210B;
									}
									if (!(text == "HeroineRoom_C1"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("凜デレ部屋");
								}
								else
								{
									if (!(text == "Train"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("電車");
								}
							}
							else if (num2 <= 823878402u)
							{
								if (num2 <= 710539702u)
								{
									if (num2 != 600634746u)
									{
										if (num2 != 667717034u)
										{
											if (num2 != 710539702u)
											{
												goto IL_210B;
											}
											if (!(text == "HeroineRoom_B_Night"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("クーデレ部屋(夜)");
										}
										else
										{
											if (!(text == "BigSight"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("ビッグサイト");
										}
									}
									else
									{
										if (!(text == "HeroineRoom_B1"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("真面目部屋");
									}
								}
								else if (num2 <= 802395514u)
								{
									if (num2 != 727840877u)
									{
										if (num2 != 802395514u)
										{
											goto IL_210B;
										}
										if (!(text == "ShoppingMall_Night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("ショッピングモール(夜)");
									}
									else
									{
										if (!(text == "OiranRoom"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("花魁ルーム");
									}
								}
								else if (num2 != 804005397u)
								{
									if (num2 != 823878402u)
									{
										goto IL_210B;
									}
									if (!(text == "Yashiki_Day"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("屋敷");
								}
								else
								{
									if (!(text == "SMClub"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("SMクラブ");
								}
							}
							else if (num2 <= 936836686u)
							{
								if (num2 <= 911923954u)
								{
									if (num2 != 853810864u)
									{
										if (num2 != 911923954u)
										{
											goto IL_210B;
										}
										if (!(text == "Salon_Garden"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("サロン(中庭)");
									}
									else
									{
										if (!(text == "SMRoom2"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("地下室");
									}
								}
								else if (num2 != 928095207u)
								{
									if (num2 != 936836686u)
									{
										goto IL_210B;
									}
									if (!(text == "com3d2pool_night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("プール");
								}
								else
								{
									if (!(text == "com3d2pool"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("プール");
								}
							}
							else if (num2 <= 1004420702u)
							{
								if (num2 != 985498402u)
								{
									if (num2 != 1004420702u)
									{
										goto IL_210B;
									}
									if (!(text == "HeroineRoom_C1_Night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("凜デレ部屋(夜)");
								}
								else
								{
									if (!(text == "Theater"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("劇場");
								}
							}
							else if (num2 != 1064378388u)
							{
								if (num2 != 1070438741u)
								{
									goto IL_210B;
								}
								if (!(text == "Spa"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("スパ");
							}
							else
							{
								if (!(text == "PlayRoom"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("プレイルーム");
							}
						}
						else if (num2 <= 1505842997u)
						{
							if (num2 <= 1241610611u)
							{
								if (num2 <= 1175078349u)
								{
									if (num2 != 1090713831u)
									{
										if (num2 != 1109630796u)
										{
											if (num2 != 1175078349u)
											{
												goto IL_210B;
											}
											if (!(text == "OpemCafe"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("カフェ");
										}
										else
										{
											if (!(text == "EmpireClub_Entrance"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("エントランス");
										}
									}
									else
									{
										if (!(text == "shrine_night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("神社");
									}
								}
								else if (num2 <= 1196448883u)
								{
									if (num2 != 1191089225u)
									{
										if (num2 != 1196448883u)
										{
											goto IL_210B;
										}
										if (!(text == "Shukuhakubeya_Other_BedRoom"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("宿泊-他ベッドルーム(夜)");
									}
									else
									{
										if (!(text == "Shitsumu"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("執務室");
									}
								}
								else if (num2 != 1198641495u)
								{
									if (num2 != 1241610611u)
									{
										goto IL_210B;
									}
									if (!(text == "Restaurant_Night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("レストラン(夜)");
								}
								else
								{
									if (!(text == "Shukuhakubeya_Living"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("宿泊-リビング");
								}
							}
							else if (num2 <= 1380388052u)
							{
								if (num2 <= 1307138940u)
								{
									if (num2 != 1253544472u)
									{
										if (num2 != 1307138940u)
										{
											goto IL_210B;
										}
										if (!(text == "MyBedRoom_Night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("自室(夜)");
									}
									else
									{
										if (!(text == "OpemCafe_Night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("カフェ(夜)");
									}
								}
								else if (num2 != 1319621243u)
								{
									if (num2 != 1380388052u)
									{
										goto IL_210B;
									}
									if (!(text == "Shitsumu_Night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("執務室(夜)");
								}
								else
								{
									if (!(text == "GameShop"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("ゲームショップ");
								}
							}
							else if (num2 <= 1470198011u)
							{
								if (num2 != 1410327562u)
								{
									if (num2 != 1470198011u)
									{
										goto IL_210B;
									}
									if (!(text == "villa"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("ヴィラ1F");
								}
								else
								{
									if (!(text == "Shukuhakubeya_WashRoom"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("宿泊-洗面所");
								}
							}
							else if (num2 != 1473797021u)
							{
								if (num2 != 1505842997u)
								{
									goto IL_210B;
								}
								if (!(text == "Sea_Night"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("海(夜)");
							}
							else
							{
								if (!(text == "MaidRoom"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("メイド部屋");
							}
						}
						else if (num2 <= 1795911174u)
						{
							if (num2 <= 1664558834u)
							{
								if (num2 != 1536618427u)
								{
									if (num2 != 1657598233u)
									{
										if (num2 != 1664558834u)
										{
											goto IL_210B;
										}
										if (!(text == "Shukuhakubeya_BedRoom"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("宿泊-ベッドルーム");
									}
									else
									{
										if (!(text == "MainKitchen_Night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("キッチン(夜)");
									}
								}
								else
								{
									if (!(text == "LiveStage"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("ステージ");
								}
							}
							else if (num2 <= 1710876867u)
							{
								if (num2 != 1689910924u)
								{
									if (num2 != 1710876867u)
									{
										goto IL_210B;
									}
									if (!(text == "ClassRoom_Play"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("教室(夜伽)");
								}
								else
								{
									if (!(text == "BackStage"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("ステージ裏");
								}
							}
							else if (num2 != 1734132920u)
							{
								if (num2 != 1795911174u)
								{
									goto IL_210B;
								}
								if (!(text == "Theater_LightOff"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("劇場(夜)");
							}
							else
							{
								if (!(text == "BarLounge"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("バー");
							}
						}
						else if (num2 <= 1884283856u)
						{
							if (num2 <= 1844737812u)
							{
								if (num2 != 1810706806u)
								{
									if (num2 != 1844737812u)
									{
										goto IL_210B;
									}
									if (!(text == "opemcafe_raspberry"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("ラズベリー");
								}
								else
								{
									if (!(text == "Shukuhakubeya_Toilet_Night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("宿泊-トイレ(夜)");
								}
							}
							else if (num2 != 1854067542u)
							{
								if (num2 != 1884283856u)
								{
									goto IL_210B;
								}
								if (!(text == "ShinShitsumu_Night"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("執務室(夜)");
							}
							else
							{
								if (!(text == "Soap"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("ソープ");
							}
						}
						else if (num2 <= 1913262708u)
						{
							if (num2 != 1884809730u)
							{
								if (num2 != 1913262708u)
								{
									goto IL_210B;
								}
								if (!(text == "MainKitchen_LightOff"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("キッチン(オフ)");
							}
							else
							{
								if (!(text == "opemcafe_riddlejoker_night"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("リドル");
							}
						}
						else if (num2 != 1921571017u)
						{
							if (num2 != 1947831619u)
							{
								goto IL_210B;
							}
							if (!(text == "ShoppingMall"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("ショッピングモール");
						}
						else
						{
							if (!(text == "villa_farm_night"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("畑(夜)");
						}
					}
					else if (num2 <= 3075337826u)
					{
						if (num2 <= 2384660447u)
						{
							if (num2 <= 2177226838u)
							{
								if (num2 <= 1991947685u)
								{
									if (num2 != 1950837104u)
									{
										if (num2 != 1952591127u)
										{
											if (num2 != 1991947685u)
											{
												goto IL_210B;
											}
											if (!(text == "ShinShitsumu"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("執務室");
										}
										else
										{
											if (!(text == "PrivateRoom"))
											{
												goto IL_210B;
											}
											this.bgCombo2List[i] = new GUIContent("プライベートルーム");
										}
									}
									else
									{
										if (!(text == "DressRoom_NoMirror"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("ドレスルーム");
									}
								}
								else if (num2 <= 2016752278u)
								{
									if (num2 != 2003610157u)
									{
										if (num2 != 2016752278u)
										{
											goto IL_210B;
										}
										if (!(text == "Kitchen_Night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("キッチン(夜)");
									}
									else
									{
										if (!(text == "MyRoom_Night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("主人公部屋(夜)");
									}
								}
								else if (num2 != 2024009415u)
								{
									if (num2 != 2177226838u)
									{
										goto IL_210B;
									}
									if (!(text == "Restaurant"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("レストラン");
								}
								else
								{
									if (!(text == "HeroineRoom_B1_Night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("真面目部屋(夜)");
								}
							}
							else if (num2 <= 2271306160u)
							{
								if (num2 <= 2218183103u)
								{
									if (num2 != 2190696616u)
									{
										if (num2 != 2218183103u)
										{
											goto IL_210B;
										}
										if (!(text == "LiveStage_use_dance"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("ステージ(オフ)");
									}
									else
									{
										if (!(text == "MusicShop"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("ミュージックショップ");
									}
								}
								else if (num2 != 2253196261u)
								{
									if (num2 != 2271306160u)
									{
										goto IL_210B;
									}
									if (!(text == "MainKitchen"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("キッチン");
								}
								else
								{
									if (!(text == "villa_bedroom_night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("ヴィラ2F(夜)");
								}
							}
							else if (num2 <= 2345654217u)
							{
								if (num2 != 2340770978u)
								{
									if (num2 != 2345654217u)
									{
										goto IL_210B;
									}
									if (!(text == "HeroineRoom_A1"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("無垢部屋");
								}
								else
								{
									if (!(text == "SMRoom"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("SMルーム");
								}
							}
							else if (num2 != 2370725538u)
							{
								if (num2 != 2384660447u)
								{
									goto IL_210B;
								}
								if (!(text == "Shukuhakubeya_BedRoom_Night"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("宿泊-ベッドルーム(夜)");
							}
							else
							{
								if (!(text == "opemcafe_wanko"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("わんこ");
							}
						}
						else if (num2 <= 2678068907u)
						{
							if (num2 <= 2547975599u)
							{
								if (num2 != 2473735252u)
								{
									if (num2 != 2546932397u)
									{
										if (num2 != 2547975599u)
										{
											goto IL_210B;
										}
										if (!(text == "opemcafe_wanko_night"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("わんこ");
									}
									else
									{
										if (!(text == "Salon_Entrance"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("エントランス");
									}
								}
								else
								{
									if (!(text == "HeroineRoom_A1_Night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("無垢部屋(夜)");
								}
							}
							else if (num2 <= 2623466090u)
							{
								if (num2 != 2618448584u)
								{
									if (num2 != 2623466090u)
									{
										goto IL_210B;
									}
									if (!(text == "HoneymoonRoom"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("ハネムーンルーム");
								}
								else
								{
									if (!(text == "OutletPark"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("アウトレットパーク");
								}
							}
							else if (num2 != 2644297290u)
							{
								if (num2 != 2678068907u)
								{
									goto IL_210B;
								}
								if (!(text == "opemcafe_riddlejoker"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("リドル");
							}
							else
							{
								if (!(text == "LockerRoom"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("ロッカールーム");
							}
						}
						else if (num2 <= 2964587427u)
						{
							if (num2 <= 2852348855u)
							{
								if (num2 != 2753721225u)
								{
									if (num2 != 2852348855u)
									{
										goto IL_210B;
									}
									if (!(text == "BigSight_Night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("ビッグサイト(夜)");
								}
								else
								{
									if (!(text == "Yashiki_Pillow"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("屋敷(夜・枕)");
								}
							}
							else if (num2 != 2940748855u)
							{
								if (num2 != 2964587427u)
								{
									goto IL_210B;
								}
								if (!(text == "opemcafe_rance10_night"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("ランス10");
							}
							else
							{
								if (!(text == "Yashiki"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("屋敷(夜)");
							}
						}
						else if (num2 <= 3007314567u)
						{
							if (num2 != 2998440495u)
							{
								if (num2 != 3007314567u)
								{
									goto IL_210B;
								}
								if (!(text == "DanceRoom"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("トレーニングルーム");
							}
							else
							{
								if (!(text == "HeroineRoom_A_Night"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("ツンデレ部屋(夜)");
							}
						}
						else if (num2 != 3014964069u)
						{
							if (num2 != 3075337826u)
							{
								goto IL_210B;
							}
							if (!(text == "karaokeroom"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("カラオケルーム");
						}
						else
						{
							if (!(text == "Town"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("街");
						}
					}
					else if (num2 <= 3827950781u)
					{
						if (num2 <= 3384449274u)
						{
							if (num2 <= 3253953446u)
							{
								if (num2 != 3129420751u)
								{
									if (num2 != 3184430799u)
									{
										if (num2 != 3253953446u)
										{
											goto IL_210B;
										}
										if (!(text == "opemcafe_rance10"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("ランス10");
									}
									else
									{
										if (!(text == "Oheya"))
										{
											goto IL_210B;
										}
										this.bgCombo2List[i] = new GUIContent("四畳半部屋");
									}
								}
								else
								{
									if (!(text == "Kitchen"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("キッチン");
								}
							}
							else if (num2 <= 3324495488u)
							{
								if (num2 != 3305949605u)
								{
									if (num2 != 3324495488u)
									{
										goto IL_210B;
									}
									if (!(text == "Spa_Night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("スパ(夜)");
								}
								else
								{
									if (!(text == "HeroineRoom_C_Night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("純真部屋(夜)");
								}
							}
							else if (num2 != 3341445411u)
							{
								if (num2 != 3384449274u)
								{
									goto IL_210B;
								}
								if (!(text == "shrine"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("神社");
							}
							else
							{
								if (!(text == "rotenburo"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("露天風呂");
							}
						}
						else if (num2 <= 3510756099u)
						{
							if (num2 <= 3470526930u)
							{
								if (num2 != 3424643412u)
								{
									if (num2 != 3470526930u)
									{
										goto IL_210B;
									}
									if (!(text == "LargeBathRoom"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("大浴場");
								}
								else
								{
									if (!(text == "ShinShitsumu_ChairRot"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("執務室(椅子)");
								}
							}
							else if (num2 != 3479932504u)
							{
								if (num2 != 3510756099u)
								{
									goto IL_210B;
								}
								if (!(text == "Bathroom"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("風呂");
							}
							else
							{
								if (!(text == "ClassRoom"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("教室");
							}
						}
						else if (num2 <= 3686563258u)
						{
							if (num2 != 3541316711u)
							{
								if (num2 != 3686563258u)
								{
									goto IL_210B;
								}
								if (!(text == "Bar"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("バー");
							}
							else
							{
								if (!(text == "LiveStage_Side"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("ステージ(ライト)");
							}
						}
						else if (num2 != 3792314543u)
						{
							if (num2 != 3827950781u)
							{
								goto IL_210B;
							}
							if (!(text == "opemcafe_raspberry_night"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("ラズベリー");
						}
						else
						{
							if (!(text == "Shukuhakubeya_Toilet"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("宿泊-トイレ");
						}
					}
					else if (num2 <= 3979969596u)
					{
						if (num2 <= 3895018002u)
						{
							if (num2 != 3852636224u)
							{
								if (num2 != 3872753675u)
								{
									if (num2 != 3895018002u)
									{
										goto IL_210B;
									}
									if (!(text == "villa_night"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("ヴィラ1F(夜)");
								}
								else
								{
									if (!(text == "Salon_Day"))
									{
										goto IL_210B;
									}
									this.bgCombo2List[i] = new GUIContent("サロン(昼)");
								}
							}
							else
							{
								if (!(text == "villa_farm"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("畑");
							}
						}
						else if (num2 <= 3973961768u)
						{
							if (num2 != 3919212816u)
							{
								if (num2 != 3973961768u)
								{
									goto IL_210B;
								}
								if (!(text == "Toilet"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("トイレ");
							}
							else
							{
								if (!(text == "Penthouse"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("ペントハウス");
							}
						}
						else if (num2 != 3979878370u)
						{
							if (num2 != 3979969596u)
							{
								goto IL_210B;
							}
							if (!(text == "villa_bedroom"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("ヴィラ2F");
						}
						else
						{
							if (!(text == "EmpireClub_Rotary_Night"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("ロータリー(夜)");
						}
					}
					else if (num2 <= 4121233244u)
					{
						if (num2 <= 4089350586u)
						{
							if (num2 != 4031463403u)
							{
								if (num2 != 4089350586u)
								{
									goto IL_210B;
								}
								if (!(text == "Casino"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("カジノ");
							}
							else
							{
								if (!(text == "EmpireClub_Rotary"))
								{
									goto IL_210B;
								}
								this.bgCombo2List[i] = new GUIContent("ロータリー");
							}
						}
						else if (num2 != 4099308004u)
						{
							if (num2 != 4121233244u)
							{
								goto IL_210B;
							}
							if (!(text == "HeroineRoom_C"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("純真部屋");
						}
						else
						{
							if (!(text == "MyRoom"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("主人公部屋");
						}
					}
					else if (num2 <= 4154788482u)
					{
						if (num2 != 4138010863u)
						{
							if (num2 != 4154788482u)
							{
								goto IL_210B;
							}
							if (!(text == "HeroineRoom_A"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("ツンデレ部屋");
						}
						else
						{
							if (!(text == "HeroineRoom_B"))
							{
								goto IL_210B;
							}
							this.bgCombo2List[i] = new GUIContent("クーデレ部屋");
						}
					}
					else if (num2 != 4173140131u)
					{
						if (num2 != 4283731301u)
						{
							goto IL_210B;
						}
						if (!(text == "Syosai"))
						{
							goto IL_210B;
						}
						this.bgCombo2List[i] = new GUIContent("書斎");
					}
					else
					{
						if (!(text == "Pool"))
						{
							goto IL_210B;
						}
						this.bgCombo2List[i] = new GUIContent("プール");
					}
					IL_2122:
					Dictionary<string, string> saveDataDic = CreativeRoomManager.GetSaveDataDic();
					if (saveDataDic != null)
					{
						foreach (KeyValuePair<string, string> keyValuePair in saveDataDic)
						{
							if (this.bgArray[i] == keyValuePair.Key)
							{
								this.bgCombo2List[i] = new GUIContent(keyValuePair.Value);
							}
						}
					}
					i++;
					continue;
					IL_210B:
					this.bgCombo2List[i] = new GUIContent(this.bgArray[i]);
					goto IL_2122;
				}
				this.slotCombo.selectedItemIndex = 0;
				this.slotComboList = new GUIContent[Class1.slotArray.Length];
				int j = 0;
				while (j < Class1.slotArray.Length)
				{
					string text = Class1.slotArray[j];
					uint num2 = <PrivateImplementationDetails>.ComputeStringHash(text);
					if (num2 <= 2196015885u)
					{
						if (num2 <= 1125645786u)
						{
							if (num2 <= 764832329u)
							{
								if (num2 != 334665295u)
								{
									if (num2 != 697854859u)
									{
										if (num2 != 764832329u)
										{
											goto IL_2829;
										}
										if (!(text == "accashi"))
										{
											goto IL_2829;
										}
										this.slotComboList[j] = new GUIContent("足首");
									}
									else
									{
										if (!(text == "acckubi"))
										{
											goto IL_2829;
										}
										this.slotComboList[j] = new GUIContent("ネックレス");
									}
								}
								else
								{
									if (!(text == "acckubiwa"))
									{
										goto IL_2829;
									}
									this.slotComboList[j] = new GUIContent("チョーカー");
								}
							}
							else if (num2 != 803196225u)
							{
								if (num2 != 866112224u)
								{
									if (num2 != 1125645786u)
									{
										goto IL_2829;
									}
									if (!(text == "acckamisub"))
									{
										goto IL_2829;
									}
									this.slotComboList[j] = new GUIContent("リボン");
								}
								else
								{
									if (!(text == "acchana"))
									{
										goto IL_2829;
									}
									this.slotComboList[j] = new GUIContent("鼻");
								}
							}
							else
							{
								if (!(text == "headset"))
								{
									goto IL_2829;
								}
								this.slotComboList[j] = new GUIContent("ヘッドドレス");
							}
						}
						else if (num2 <= 1876795277u)
						{
							if (num2 != 1490119654u)
							{
								if (num2 != 1506100314u)
								{
									if (num2 != 1876795277u)
									{
										goto IL_2829;
									}
									if (!(text == "accnip"))
									{
										goto IL_2829;
									}
									this.slotComboList[j] = new GUIContent("乳首");
								}
								else
								{
									if (!(text == "accude"))
									{
										goto IL_2829;
									}
									this.slotComboList[j] = new GUIContent("腕");
								}
							}
							else
							{
								if (!(text == "megane"))
								{
									goto IL_2829;
								}
								this.slotComboList[j] = new GUIContent("メガネ");
							}
						}
						else if (num2 <= 2051446306u)
						{
							if (num2 != 1978063292u)
							{
								if (num2 != 2051446306u)
								{
									goto IL_2829;
								}
								if (!(text == "panz"))
								{
									goto IL_2829;
								}
								this.slotComboList[j] = new GUIContent("パンツ");
							}
							else
							{
								if (!(text == "bra"))
								{
									goto IL_2829;
								}
								this.slotComboList[j] = new GUIContent("ブラジャー");
							}
						}
						else if (num2 != 2085094611u)
						{
							if (num2 != 2196015885u)
							{
								goto IL_2829;
							}
							if (!(text == "accshippo"))
							{
								goto IL_2829;
							}
							this.slotComboList[j] = new GUIContent("しっぽ");
						}
						else
						{
							if (!(text == "acchat"))
							{
								goto IL_2829;
							}
							this.slotComboList[j] = new GUIContent("帽子");
						}
					}
					else if (num2 <= 3190773048u)
					{
						if (num2 <= 2981579188u)
						{
							if (num2 != 2363661331u)
							{
								if (num2 != 2659804058u)
								{
									if (num2 != 2981579188u)
									{
										goto IL_2829;
									}
									if (!(text == "acchead"))
									{
										goto IL_2829;
									}
									this.slotComboList[j] = new GUIContent("アイマスク");
								}
								else
								{
									if (!(text == "mizugi"))
									{
										goto IL_2829;
									}
									this.slotComboList[j] = new GUIContent("水着");
								}
							}
							else
							{
								if (!(text == "accheso"))
								{
									goto IL_2829;
								}
								this.slotComboList[j] = new GUIContent("へそ");
							}
						}
						else if (num2 != 3003550291u)
						{
							if (num2 != 3031746630u)
							{
								if (num2 != 3190773048u)
								{
									goto IL_2829;
								}
								if (!(text == "skirt"))
								{
									goto IL_2829;
								}
								this.slotComboList[j] = new GUIContent("ボトムス");
							}
							else
							{
								if (!(text == "accxxx"))
								{
									goto IL_2829;
								}
								this.slotComboList[j] = new GUIContent("前穴");
							}
						}
						else
						{
							if (!(text == "shoes"))
							{
								goto IL_2829;
							}
							this.slotComboList[j] = new GUIContent("靴");
						}
					}
					else if (num2 <= 3360839990u)
					{
						if (num2 != 3293193604u)
						{
							if (num2 != 3349448936u)
							{
								if (num2 != 3360839990u)
								{
									goto IL_2829;
								}
								if (!(text == "accmimi"))
								{
									goto IL_2829;
								}
								this.slotComboList[j] = new GUIContent("耳");
							}
							else
							{
								if (!(text == "acckami"))
								{
									goto IL_2829;
								}
								this.slotComboList[j] = new GUIContent("前髪");
							}
						}
						else
						{
							if (!(text == "stkg"))
							{
								goto IL_2829;
							}
							this.slotComboList[j] = new GUIContent("靴下");
						}
					}
					else if (num2 <= 3644748047u)
					{
						if (num2 != 3484687175u)
						{
							if (num2 != 3644748047u)
							{
								goto IL_2829;
							}
							if (!(text == "accsenaka"))
							{
								goto IL_2829;
							}
							this.slotComboList[j] = new GUIContent("背中");
						}
						else
						{
							if (!(text == "onepiece"))
							{
								goto IL_2829;
							}
							this.slotComboList[j] = new GUIContent("ワンピース");
						}
					}
					else if (num2 != 3837534366u)
					{
						if (num2 != 4083731742u)
						{
							goto IL_2829;
						}
						if (!(text == "glove"))
						{
							goto IL_2829;
						}
						this.slotComboList[j] = new GUIContent("手袋");
					}
					else
					{
						if (!(text == "wear"))
						{
							goto IL_2829;
						}
						this.slotComboList[j] = new GUIContent("トップス");
					}
					IL_283F:
					j++;
					continue;
					IL_2829:
					this.slotComboList[j] = new GUIContent(Class1.slotArray[j]);
					goto IL_283F;
				}
				this.itemCombo2.selectedItemIndex = 0;
				this.itemCombo2List = new GUIContent[Class1.itemBArray.Length];
				int k = 0;
				while (k < Class1.itemBArray.Length)
				{
					string text = Class1.itemBArray[k];
					uint num2 = <PrivateImplementationDetails>.ComputeStringHash(text);
					if (num2 <= 2374783790u)
					{
						if (num2 <= 861594871u)
						{
							if (num2 <= 522156778u)
							{
								if (num2 <= 349597564u)
								{
									if (num2 <= 132882286u)
									{
										if (num2 != 66004736u)
										{
											if (num2 != 103280414u)
											{
												if (num2 != 132882286u)
												{
													goto IL_4366;
												}
												if (!(text == "handitem,HandItemR_Spoon_Omurice_I_.menu"))
												{
													goto IL_4366;
												}
												this.itemCombo2List[k] = new GUIContent("スプーン(オムライス)");
											}
											else
											{
												if (!(text == "handitem,HandItemR_Houki_I_.menu"))
												{
													goto IL_4366;
												}
												this.itemCombo2List[k] = new GUIContent("ほうき");
											}
										}
										else
										{
											if (!(text == "handitem,HandItemR_Natumikan_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("夏みかん");
										}
									}
									else if (num2 != 189214206u)
									{
										if (num2 != 307103577u)
										{
											if (num2 != 349597564u)
											{
												goto IL_4366;
											}
											if (!(text == "handitem,HandItemL_Dance_Zoukin_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("ダンス雑巾");
										}
										else
										{
											if (!(text == "handitem,HandItemR_SmartPhone_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("スマートフォン");
										}
									}
									else
									{
										if (!(text == "handitem,HandItemR_Spoon_Pafe_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("パフェスプーン");
									}
								}
								else if (num2 <= 425560241u)
								{
									if (num2 != 362931255u)
									{
										if (num2 != 365076182u)
										{
											if (num2 != 425560241u)
											{
												goto IL_4366;
											}
											if (!(text == "handitem,HandItemR_Houchou_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("包丁");
										}
										else
										{
											if (!(text == "handitem,HandItemR_Otama_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("おたま");
										}
									}
									else
									{
										if (!(text == "handitem,HandItemL_Katuramuki_Daikon_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("桂むき大根");
									}
								}
								else if (num2 <= 515867803u)
								{
									if (num2 != 457482925u)
									{
										if (num2 != 515867803u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemR_DVD1_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("DVD1");
									}
									else
									{
										if (!(text == "handitem,HandItemR_DVD3_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("DVD3");
									}
								}
								else if (num2 != 520052040u)
								{
									if (num2 != 522156778u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemR_TropicalGlass_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("トロピカルグラス");
								}
								else
								{
									if (!(text == "handitem,HandItemR_Shell_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("貝殻");
								}
							}
							else if (num2 <= 716834680u)
							{
								if (num2 <= 604451964u)
								{
									if (num2 != 596147124u)
									{
										if (num2 != 597885637u)
										{
											if (num2 != 604451964u)
											{
												goto IL_4366;
											}
											if (!(text == "handitem,HandItemL_Dance_Hataki_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("ダンスハタキ");
										}
										else
										{
											if (!(text == "handitem,HandItemR_Pasta_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("パスタ");
										}
									}
									else
									{
										if (!(text == "accvag,accVag_Vibe_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("前：バイブ");
									}
								}
								else if (num2 <= 654662316u)
								{
									if (num2 != 638744555u)
									{
										if (num2 != 654662316u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemR_Ketchup_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("ケチャップ");
									}
									else
									{
										if (!(text == "handitem,HandItemR_Ochoko_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("お猪口");
									}
								}
								else if (num2 != 666291412u)
								{
									if (num2 != 716834680u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemR_Usuba_Houchou_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("薄刃包丁");
								}
								else
								{
									if (!(text == "handitem,HandItemR_pretzel_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("ポッキー");
								}
							}
							else if (num2 <= 773832390u)
							{
								if (num2 != 720654456u)
								{
									if (num2 != 746041756u)
									{
										if (num2 != 773832390u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemR_Omurice2_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("オムライス2");
									}
									else
									{
										if (!(text == "handitem,HandItemR_BeerGlass_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("ビールグラス");
									}
								}
								else
								{
									if (!(text == "handitem,HandItemR_VibeBig_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("太バイブ");
								}
							}
							else if (num2 <= 787929487u)
							{
								if (num2 != 776029193u)
								{
									if (num2 != 787929487u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemR_DVD5_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("DVD5");
								}
								else
								{
									if (!(text == "handitem,HandItemR_Ukiwa_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("浮き輪");
								}
							}
							else if (num2 != 816370749u)
							{
								if (num2 != 861594871u)
								{
									goto IL_4366;
								}
								if (!(text == "handitem,HandItemH_SoutouVibe_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("双頭バイブ");
							}
							else
							{
								if (!(text == "handitem,HandItemR_Suika_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("スイカ2");
							}
						}
						else if (num2 <= 1816208699u)
						{
							if (num2 <= 1221191479u)
							{
								if (num2 <= 1047220412u)
								{
									if (num2 != 863101802u)
									{
										if (num2 != 965267420u)
										{
											if (num2 != 1047220412u)
											{
												goto IL_4366;
											}
											if (!(text == "accanl,accAnl_AnalVibe_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("後：アナルバイブ");
										}
										else
										{
											if (!(text == "handitem,HandItemR_Ninjin_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("ニンジン");
										}
									}
									else
									{
										if (!(text == "handitem,HandItemR_Hataki_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("ハタキ");
									}
								}
								else if (num2 != 1087565233u)
								{
									if (num2 != 1102406016u)
									{
										if (num2 != 1221191479u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemR_Chusyaki_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("注射器");
									}
									else
									{
										if (!(text == "handitem,HandItemR_Jyouro_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("じょうろ");
									}
								}
								else
								{
									if (!(text == "handitem,HandItemR_cocktail_yellow_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("カクテル・黄");
								}
							}
							else if (num2 <= 1498507279u)
							{
								if (num2 != 1391781759u)
								{
									if (num2 != 1473154842u)
									{
										if (num2 != 1498507279u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemR_karaoke_maracas_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("マラカス");
									}
									else
									{
										if (!(text == "handitem,HandItemR_Vibe_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("バイブ");
									}
								}
								else
								{
									if (!(text == "handitem,HandItemR_Omurice1_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("オムライス1");
								}
							}
							else if (num2 <= 1534972376u)
							{
								if (num2 != 1513086965u)
								{
									if (num2 != 1534972376u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemR_Nei_Heartful_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("ハートフルねい人形");
								}
								else
								{
									if (!(text == "kousoku_upper,KousokuU_TekaseTwo_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("手枷2");
								}
							}
							else if (num2 != 1556224312u)
							{
								if (num2 != 1816208699u)
								{
									goto IL_4366;
								}
								if (!(text == "handitem,HandItemR_Book_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("本");
							}
							else
							{
								if (!(text == "handitem,HandItemR_Sponge_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("スポンジ");
							}
						}
						else if (num2 <= 2111437926u)
						{
							if (num2 <= 1890707132u)
							{
								if (num2 != 1829407920u)
								{
									if (num2 != 1866377900u)
									{
										if (num2 != 1890707132u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemR_AnalVibe_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("アナルバイブ");
									}
									else
									{
										if (!(text == "kousoku_upper,KousokuU_SMRoom2_Haritsuke_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("磔台2");
									}
								}
								else
								{
									if (!(text == "accvag,accVag_VibePink_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("前：ピンクバイブ");
								}
							}
							else if (num2 <= 1996450966u)
							{
								if (num2 != 1911912656u)
								{
									if (num2 != 1996450966u)
									{
										goto IL_4366;
									}
									if (!(text == "kousoku_lower,KousokuL_BathTowel_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("バストレイ");
								}
								else
								{
									if (!(text == "handitem,HandItemR_Teacup_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("ティーカップ");
								}
							}
							else if (num2 != 2095549465u)
							{
								if (num2 != 2111437926u)
								{
									goto IL_4366;
								}
								if (!(text == "handitem,HandItemL_Kozara_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("小皿");
							}
							else
							{
								if (!(text == "handitem,HandItemR_Uchiwa_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("うちわ");
							}
						}
						else if (num2 <= 2167365697u)
						{
							if (num2 != 2134474702u)
							{
								if (num2 != 2145619555u)
								{
									if (num2 != 2167365697u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemR_Pen_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("ペン");
								}
								else
								{
									if (!(text == "handitem,HandItemR_Mugcup_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("マグカップ");
								}
							}
							else
							{
								if (!(text == "handitem,HandItemR_Mop_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("モップ");
							}
						}
						else if (num2 <= 2273241048u)
						{
							if (num2 != 2233276519u)
							{
								if (num2 != 2273241048u)
								{
									goto IL_4366;
								}
								if (!(text == "handitem,HandItemL_Etoile_Saucer_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("ティーソーサー");
							}
							else
							{
								if (!(text == "accanl,accAnl_Photo_VibeBig_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("後：太バイブ");
							}
						}
						else if (num2 != 2320398109u)
						{
							if (num2 != 2374783790u)
							{
								goto IL_4366;
							}
							if (!(text == "handitem,HandItemR_MilkBottle(cap_off)_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("牛乳(開)");
						}
						else
						{
							if (!(text == "handitem,HandItemR_Wholecake_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("ホールケーキ");
						}
					}
					else if (num2 <= 3166032195u)
					{
						if (num2 <= 2687833541u)
						{
							if (num2 <= 2545085777u)
							{
								if (num2 <= 2457697643u)
								{
									if (num2 != 2381408385u)
									{
										if (num2 != 2423937501u)
										{
											if (num2 != 2457697643u)
											{
												goto IL_4366;
											}
											if (!(text == "accanl,accAnl_Photo_VibePink_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("後：ピンクバイブ");
										}
										else
										{
											if (!(text == "handitem,HandItemR_WineGlass_I_.menu"))
											{
												goto IL_4366;
											}
											this.itemCombo2List[k] = new GUIContent("ワイングラス");
										}
									}
									else
									{
										if (!(text == "handitem,HandItemR_Hanabi_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("手持ち花火");
									}
								}
								else if (num2 != 2518056893u)
								{
									if (num2 != 2530544988u)
									{
										if (num2 != 2545085777u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemR_Curry_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("カレー");
									}
									else
									{
										if (!(text == "handitem,HandItemR_DVD4_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("DVD4");
									}
								}
								else
								{
									if (!(text == "handitem,HandItemR_Kobin_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("小瓶");
								}
							}
							else if (num2 <= 2637853649u)
							{
								if (num2 != 2577158570u)
								{
									if (num2 != 2593066565u)
									{
										if (num2 != 2637853649u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemL_Cracker_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("クラッカー");
									}
									else
									{
										if (!(text == "handitem,HandItemR_karaoke_sensu_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("扇子");
									}
								}
								else
								{
									if (!(text == "handitem,HandItemR_smoothie_red_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("スムージー・赤");
								}
							}
							else if (num2 <= 2663136197u)
							{
								if (num2 != 2656531620u)
								{
									if (num2 != 2663136197u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemR_Crops_Suika_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("スイカ");
								}
								else
								{
									if (!(text == "handitem,HandItemR_Folk_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("フォーク");
								}
							}
							else if (num2 != 2673271679u)
							{
								if (num2 != 2687833541u)
								{
									goto IL_4366;
								}
								if (!(text == "handitem,HandItemL_Sara_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("皿");
							}
							else
							{
								if (!(text == "handitem,HandItemR_Shihen_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("紙片");
							}
						}
						else if (num2 <= 2958502557u)
						{
							if (num2 <= 2759153101u)
							{
								if (num2 != 2742635353u)
								{
									if (num2 != 2758856534u)
									{
										if (num2 != 2759153101u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemR_Rip_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("リップ");
									}
									else
									{
										if (!(text == "accvag,accVag_VibeBig_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("前：太バイブ");
									}
								}
								else
								{
									if (!(text == "handitem,HandItemR_BeerBottle(cap_off)_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("ビールボトル(開)");
								}
							}
							else if (num2 <= 2815329218u)
							{
								if (num2 != 2760097761u)
								{
									if (num2 != 2815329218u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemR_Mimikaki_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("耳かき");
								}
								else
								{
									if (!(text == "handitem,HandItemR_Omurice3_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("オムライス3");
								}
							}
							else if (num2 != 2873981560u)
							{
								if (num2 != 2958502557u)
								{
									goto IL_4366;
								}
								if (!(text == "handitem,HandItemR_Puff_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("パフ");
							}
							else
							{
								if (!(text == "handitem,HandItemR_Tomorokoshi_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("トウモロコシ");
							}
						}
						else if (num2 <= 3022292388u)
						{
							if (num2 != 2978769753u)
							{
								if (num2 != 3017544382u)
								{
									if (num2 != 3022292388u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemR_Hari_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("針");
								}
								else
								{
									if (!(text == "handitem,HandItemR_Satumaimo_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("さつまいも");
								}
							}
							else
							{
								if (!(text == "handitem,HandItemL_Karaoke_Mike_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("カラオケマイク");
							}
						}
						else if (num2 <= 3152951418u)
						{
							if (num2 != 3089966924u)
							{
								if (num2 != 3152951418u)
								{
									goto IL_4366;
								}
								if (!(text == "handitem,HandItemR_Shaker_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("シェイカー");
							}
							else
							{
								if (!(text == "handitem,HandItemL_Dance_Mop_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("ダンスモップ");
							}
						}
						else if (num2 != 3164081544u)
						{
							if (num2 != 3166032195u)
							{
								goto IL_4366;
							}
							if (!(text == "handitem,HandItemR_WineBottle_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("ワインボトル");
						}
						else
						{
							if (!(text == "handitem,HandItemR_MelonSoda_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("メロンソーダ");
						}
					}
					else if (num2 <= 3671156146u)
					{
						if (num2 <= 3396706858u)
						{
							if (num2 <= 3289363411u)
							{
								if (num2 != 3239999949u)
								{
									if (num2 != 3253763724u)
									{
										if (num2 != 3289363411u)
										{
											goto IL_4366;
										}
										if (!(text == "handitem,HandItemR_BeerBottle(cap_on)_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("ビールボトル");
									}
									else
									{
										if (!(text == "handitem,HandItemL_Shisyuu_I_.menu"))
										{
											goto IL_4366;
										}
										this.itemCombo2List[k] = new GUIContent("刺繍");
									}
								}
								else
								{
									if (!(text == "handitem,HandItemL_Teasaucer_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("ティーソーサー");
								}
							}
							else if (num2 != 3309045702u)
							{
								if (num2 != 3329858018u)
								{
									if (num2 != 3396706858u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemR_smoothie_green_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("スムージー・緑");
								}
								else
								{
									if (!(text == "handitem,HandItemR_MilkBottle(cap_on)_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("牛乳");
								}
							}
							else
							{
								if (!(text == "handitem,HandItemR_Kushiyaki_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("串焼き");
							}
						}
						else if (num2 <= 3534555109u)
						{
							if (num2 != 3476135143u)
							{
								if (num2 != 3510953792u)
								{
									if (num2 != 3534555109u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,HandItemL_Karte_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("カルテ");
								}
								else
								{
									if (!(text == "handitem,HandItemR_Tomato_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("トマト");
								}
							}
							else
							{
								if (!(text == "handitem,HandItemR_Furaidopoteto_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("フライドポテト1本");
							}
						}
						else if (num2 <= 3586052734u)
						{
							if (num2 != 3543177387u)
							{
								if (num2 != 3586052734u)
								{
									goto IL_4366;
								}
								if (!(text == "accanl,accAnl_Photo_NomalVibe_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("後：バイブ");
							}
							else
							{
								if (!(text == "handitem,HandItemR_Tomorokoshi_yaki_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("焼きトウモロコシ");
							}
						}
						else if (num2 != 3637898085u)
						{
							if (num2 != 3671156146u)
							{
								goto IL_4366;
							}
							if (!(text == "handitem,HandItemR_Senkouhanabi_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("線香花火");
						}
						else
						{
							if (!(text == "handitem,HandItemR_Chu-B_Lip_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("Chu-B Lip");
						}
					}
					else if (num2 <= 4049887674u)
					{
						if (num2 <= 3869056976u)
						{
							if (num2 != 3749364258u)
							{
								if (num2 != 3835887092u)
								{
									if (num2 != 3869056976u)
									{
										goto IL_4366;
									}
									if (!(text == "handitem,handitemr_racket_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("ラケット");
								}
								else
								{
									if (!(text == "handitem,HandItemR_cocktail_red_I_.menu"))
									{
										goto IL_4366;
									}
									this.itemCombo2List[k] = new GUIContent("カクテル・赤");
								}
							}
							else
							{
								if (!(text == "handitem,HandItemR_DVD2_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("DVD2");
							}
						}
						else if (num2 <= 4047249073u)
						{
							if (num2 != 3900296259u)
							{
								if (num2 != 4047249073u)
								{
									goto IL_4366;
								}
								if (!(text == "handitem,HandItemR_cocktail_blue_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("カクテル・青");
							}
							else
							{
								if (!(text == "handitem,HandItemR_Etoile_Teacup_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("ティーカップ");
							}
						}
						else if (num2 != 4047481891u)
						{
							if (num2 != 4049887674u)
							{
								goto IL_4366;
							}
							if (!(text == "handitem,HandItemR_Scoop_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("スコップ");
						}
						else
						{
							if (!(text == "kousoku_upper,KousokuU_TekaseOne_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("手枷1");
						}
					}
					else if (num2 <= 4177874677u)
					{
						if (num2 != 4077711383u)
						{
							if (num2 != 4171855561u)
							{
								if (num2 != 4177874677u)
								{
									goto IL_4366;
								}
								if (!(text == "handitem,HandItemR_Menu_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("メニュー表");
							}
							else
							{
								if (!(text == "kousoku_upper,KousokuU_Ushirode_I_.menu"))
								{
									goto IL_4366;
								}
								this.itemCombo2List[k] = new GUIContent("後ろ手拘束具");
							}
						}
						else
						{
							if (!(text == "handitem,HandItemR_Spoon_Curry_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("スプーン(カレー)");
						}
					}
					else if (num2 <= 4274803196u)
					{
						if (num2 != 4244158060u)
						{
							if (num2 != 4274803196u)
							{
								goto IL_4366;
							}
							if (!(text == "kousoku_upper,KousokuU_SMRoom_Haritsuke_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("磔台");
						}
						else
						{
							if (!(text == "handitem,HandItemR_Zoukin2_I_.menu"))
							{
								goto IL_4366;
							}
							this.itemCombo2List[k] = new GUIContent("雑巾");
						}
					}
					else if (num2 != 4278588233u)
					{
						if (num2 != 4288016398u)
						{
							goto IL_4366;
						}
						if (!(text == "handitem,HandItemR_VibePink_I_.menu"))
						{
							goto IL_4366;
						}
						this.itemCombo2List[k] = new GUIContent("ピンクバイブ");
					}
					else
					{
						if (!(text == "handitem,HandItemR_Diary_I_.menu"))
						{
							goto IL_4366;
						}
						this.itemCombo2List[k] = new GUIContent("日記");
					}
					IL_437C:
					k++;
					continue;
					IL_4366:
					this.itemCombo2List[k] = new GUIContent(Class1.itemBArray[k]);
					goto IL_437C;
				}
				this.kankyoCombo.selectedItemIndex = 0;
				this.kankyoComboList = new GUIContent[this.kankyoMax];
				for (int l = 0; l < this.kankyoMax; l++)
				{
					IniKey iniKey = base.Preferences["kankyo"]["kankyo" + (l + 1)];
					this.kankyoComboList[l] = new GUIContent(iniKey.Value);
				}
				this.kankyo2InitFlg = true;
			}
			this.listStyle3.padding.top = this.GetPix(1);
			this.listStyle3.padding.bottom = this.GetPix(0);
			this.listStyle3.fontSize = this.GetPix(13);
			if (this.poseCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			if (this.poseGroupCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			if (this.sceneLevel == 3 || this.sceneLevel == 5 || this.isF6)
			{
				if (!this.isF6)
				{
					bool value = true;
					if (this.faceFlg || this.poseFlg || this.sceneFlg || this.kankyoFlg || this.kankyo2Flg)
					{
						value = false;
					}
					if (GUI.Toggle(new Rect((float)this.GetPix(2), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), value, "配置", guistyle6))
					{
						this.faceFlg = false;
						this.poseFlg = false;
						this.sceneFlg = false;
						this.kankyoFlg = false;
						this.kankyo2Flg = false;
						this.bGui = true;
						this.isGuiInit = true;
					}
				}
				if (!this.yotogiFlg && GUI.Toggle(new Rect((float)this.GetPix(42), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.poseFlg, "操作", guistyle6))
				{
					this.poseFlg = true;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(82), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.faceFlg, "表情", guistyle6))
				{
					this.faceFlg = true;
					this.poseFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
					if (!this.faceFlg2)
					{
						this.isFaceInit = true;
						this.faceFlg2 = true;
						this.maidArray[this.selectMaidIndex].boMabataki = false;
						this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
					}
					this.isFaceInit = true;
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(122), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.kankyoFlg, "環境", guistyle6))
				{
					this.poseFlg = false;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = true;
					this.kankyo2Flg = false;
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(162), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.kankyo2Flg, "環2", guistyle6))
				{
					this.poseFlg = false;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = true;
				}
				if (!this.line1)
				{
					this.line1 = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.3f));
					this.line2 = this.MakeTex(2, 2, new Color(0.7f, 0.7f, 0.7f, 0.6f));
				}
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(200), 2f), this.line1);
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(200), 1f), this.line2);
			}
			if (this.isDanceStop)
			{
				this.isStop[this.selectMaidIndex] = true;
				this.isDanceStop = false;
			}
			if (this.kankyoCombo.isClickedComboButton || this.slotCombo.isClickedComboButton || this.itemCombo2.isClickedComboButton || this.bgCombo2.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			characterMgr.GetStockMaidCount();
			float num3 = (float)this.GetPix(45);
			Rect position = default(Rect);
			Rect viewRect = default(Rect);
			if (this.sceneLevel != 5)
			{
				position = new Rect((float)this.GetPix(7), (float)this.GetPix(138), (float)(this.GetPix(44) * 4 + this.GetPix(20)), this.rectWin.height * 0.785f);
				viewRect = new Rect(0f, 0f, position.width * 0.845f, num3 * (float)Math.Ceiling((double)this.sortList.Count / 4.0) + (float)this.GetPix(5));
			}
			else
			{
				position = new Rect((float)this.GetPix(7), (float)this.GetPix(138), (float)(this.GetPix(44) * 4 + this.GetPix(20)), this.rectWin.height * 0.785f * 0.96f);
				viewRect = new Rect(0f, 0f, position.width * 0.845f, num3 * (float)Math.Ceiling((double)this.sortList.Count / 4.0) + (float)this.GetPix(5) * 0.92f);
			}
			this.scrollPos = GUI.BeginScrollView(position, this.scrollPos, viewRect);
			for (int m = 0; m < this.sortList.Count; m++)
			{
				Rect position2 = default(Rect);
				position2 = new Rect((float)this.GetPix(m % 4 * 45), (float)this.GetPix(m / 4 * 45), (float)this.GetPix(44), (float)this.GetPix(44));
				if (GUI.Button(position2, this.sortList[m].tex))
				{
					string menu = this.sortList[m].menu;
					byte[] array = null;
					AFileBase afileBase = GameUty.FileOpen(menu, null);
					try
					{
						NDebug.Assert(afileBase.IsValid(), "メニューファイルが存在しません。 :" + menu);
						if (array == null)
						{
							array = new byte[afileBase.GetSize()];
						}
						else if (array.Length < afileBase.GetSize())
						{
							array = new byte[afileBase.GetSize()];
						}
						afileBase.Read(ref array, afileBase.GetSize());
					}
					finally
					{
						AFileBase afileBase2 = afileBase;
						if (afileBase2 != null)
						{
							afileBase2.Dispose();
						}
					}
					string[] array2 = ManyMaids.ProcScriptBin(this.maidArray[0], array, menu, false);
					GameObject gameObject = ImportCM2.LoadSkinMesh_R(array2[0], array2, "", this.maidArray[0].body0.goSlot[8], 1);
					this.doguBObject.Add(gameObject);
					gameObject.name = menu;
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					zero.z = 0.4f;
					gameObject.transform.localPosition = zero;
					gameObject.transform.localRotation = Quaternion.Euler(zero2);
					this.doguCnt = this.doguBObject.Count - 1;
					this.gDogu[this.doguCnt] = GameObject.CreatePrimitive(PrimitiveType.Cube);
					this.gDogu[this.doguCnt].GetComponent<Renderer>().material = this.m_material;
					this.gDogu[this.doguCnt].layer = 8;
					this.gDogu[this.doguCnt].GetComponent<Renderer>().enabled = false;
					this.gDogu[this.doguCnt].SetActive(false);
					this.gDogu[this.doguCnt].transform.position = gameObject.transform.position;
					this.mDogu[this.doguCnt] = this.gDogu[this.doguCnt].AddComponent<MouseDrag6>();
					this.mDogu[this.doguCnt].isScale = false;
					this.mDogu[this.doguCnt].obj = this.gDogu[this.doguCnt];
					this.mDogu[this.doguCnt].maid = gameObject;
					this.mDogu[this.doguCnt].angles = gameObject.transform.eulerAngles;
					this.gDogu[this.doguCnt].transform.localScale = new Vector3(this.cubeSize, this.cubeSize, this.cubeSize);
					this.mDogu[this.doguCnt].ido = 1;
				}
				GUI.DrawTexture(position2, this.sortList[m].tex);
			}
			GUI.EndScrollView();
			GUI.enabled = true;
			GUI.Label(new Rect((float)this.GetPix(3), (float)this.GetPix(108), (float)this.GetPix(100), (float)this.GetPix(25)), "服装", guistyle2);
			guistyle2.fontSize = this.GetPix(9);
			GUI.Label(new Rect((float)this.GetPix(3), (float)this.GetPix(119), (float)this.GetPix(100), (float)this.GetPix(25)), "アクセサリ", guistyle2);
			guistyle2.fontSize = this.GetPix(11);
			GUI.Label(new Rect((float)this.GetPix(3), (float)this.GetPix(58), (float)this.GetPix(100), (float)this.GetPix(25)), "アイテム", guistyle2);
			GUI.Label(new Rect((float)this.GetPix(3), (float)this.GetPix(86), (float)this.GetPix(100), (float)this.GetPix(24)), "背景(小)", guistyle2);
			if (this.kankyoCombo.isClickedComboButton || this.itemCombo2.isClickedComboButton || this.bgCombo2.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			int num4 = this.slotCombo.List(new Rect((float)this.GetPix(51), (float)this.GetPix(111), (float)this.GetPix(100), (float)this.GetPix(23)), this.slotComboList[this.slotIndex].text, this.slotComboList, guistyle4, "box", this.listStyle3);
			GUI.enabled = true;
			if (this.kankyoCombo.isClickedComboButton || this.itemCombo2.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			this.bgIndexB = this.bgCombo2.List(new Rect((float)this.GetPix(51), (float)this.GetPix(83), (float)this.GetPix(100), (float)this.GetPix(23)), this.bgCombo2List[this.bgIndexB].text, this.bgCombo2List, guistyle4, "box", this.listStyle3);
			if (GUI.Button(new Rect((float)this.GetPix(156), (float)this.GetPix(83), (float)this.GetPix(38), (float)this.GetPix(23)), "追加", guistyle3))
			{
				UnityEngine.Object @object = GameMain.Instance.BgMgr.CreateAssetBundle(this.bgArray[this.bgIndexB]);
				if (@object == null)
				{
					@object = Resources.Load("BG/" + this.bgArray[this.bgIndexB]);
				}
				GameObject gameObject2 = UnityEngine.Object.Instantiate(@object) as GameObject;
				this.doguBObject.Add(gameObject2);
				gameObject2.name = "BG_" + this.bgArray[this.bgIndexB];
				Vector3 zero = Vector3.zero;
				Vector3 zero2 = Vector3.zero;
				zero.z = 0.4f;
				gameObject2.transform.localScale = new Vector3(0.1f, 0.1f, 0.1f);
				gameObject2.transform.localPosition = zero;
				gameObject2.transform.localRotation = Quaternion.Euler(zero2);
				this.doguCnt = this.doguBObject.Count - 1;
				this.gDogu[this.doguCnt] = GameObject.CreatePrimitive(PrimitiveType.Cube);
				this.gDogu[this.doguCnt].GetComponent<Renderer>().material = this.m_material;
				this.gDogu[this.doguCnt].layer = 8;
				this.gDogu[this.doguCnt].GetComponent<Renderer>().enabled = false;
				this.gDogu[this.doguCnt].SetActive(false);
				this.gDogu[this.doguCnt].transform.position = gameObject2.transform.position;
				this.mDogu[this.doguCnt] = this.gDogu[this.doguCnt].AddComponent<MouseDrag6>();
				this.mDogu[this.doguCnt].isScale = false;
				this.mDogu[this.doguCnt].obj = this.gDogu[this.doguCnt];
				this.mDogu[this.doguCnt].maid = gameObject2;
				this.mDogu[this.doguCnt].angles = gameObject2.transform.eulerAngles;
				this.gDogu[this.doguCnt].transform.localScale = new Vector3(this.cubeSize, this.cubeSize, this.cubeSize);
				this.mDogu[this.doguCnt].ido = 1;
			}
			GUI.enabled = true;
			if (this.kankyoCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			this.itemIndexB = this.itemCombo2.List(new Rect((float)this.GetPix(51), (float)this.GetPix(55), (float)this.GetPix(100), (float)this.GetPix(23)), this.itemCombo2List[this.itemIndexB].text, this.itemCombo2List, guistyle4, "box", this.listStyle3);
			if (GUI.Button(new Rect((float)this.GetPix(156), (float)this.GetPix(55), (float)this.GetPix(38), (float)this.GetPix(23)), "追加", guistyle3))
			{
				string text2 = Class1.itemBArray[this.itemIndexB].Split(new char[]
				{
					','
				})[1];
				byte[] array3 = null;
				AFileBase afileBase3 = GameUty.FileOpen(text2, null);
				try
				{
					NDebug.Assert(afileBase3.IsValid(), "メニューファイルが存在しません。 :" + text2);
					if (array3 == null)
					{
						array3 = new byte[afileBase3.GetSize()];
					}
					else if (array3.Length < afileBase3.GetSize())
					{
						array3 = new byte[afileBase3.GetSize()];
					}
					afileBase3.Read(ref array3, afileBase3.GetSize());
				}
				finally
				{
					AFileBase afileBase4 = afileBase3;
					if (afileBase4 != null)
					{
						afileBase4.Dispose();
					}
				}
				string[] array4 = ManyMaids.ProcScriptBin(this.maidArray[0], array3, text2, false);
				GameObject gameObject3 = ImportCM2.LoadSkinMesh_R(array4[0], array4, "", this.maidArray[0].body0.goSlot[8], 1);
				this.doguBObject.Add(gameObject3);
				gameObject3.name = text2;
				Vector3 zero = Vector3.zero;
				Vector3 zero2 = Vector3.zero;
				zero.z = 0.4f;
				int n = this.itemIndexB;
				switch (n)
				{
				case 0:
					zero2.z = 90f;
					zero.y = 0.04f;
					goto IL_5387;
				case 1:
					zero2.z = 90f;
					goto IL_5387;
				case 2:
				case 3:
					break;
				case 4:
					zero2.x = 90f;
					goto IL_5387;
				default:
					switch (n)
					{
					case 19:
					case 20:
					case 21:
					case 22:
					case 23:
						goto IL_5387;
					case 25:
						zero2.z = 90f;
						goto IL_5387;
					case 26:
						zero2.z = 90f;
						goto IL_5387;
					case 27:
						zero2.z = 90f;
						goto IL_5387;
					}
					break;
				}
				zero2.x = -90f;
				IL_5387:
				string text = gameObject3.name;
				uint num2 = <PrivateImplementationDetails>.ComputeStringHash(text);
				if (num2 <= 1949026789u)
				{
					if (num2 <= 1086073289u)
					{
						if (num2 <= 408858099u)
						{
							if (num2 <= 222227294u)
							{
								if (num2 != 136865984u)
								{
									if (num2 != 172221991u)
									{
										if (num2 != 222227294u)
										{
											goto IL_5B95;
										}
										if (!(text == "HandItemR_TropicalGlass_I_.menu"))
										{
											goto IL_5B95;
										}
										goto IL_5B7D;
									}
									else
									{
										if (!(text == "HandItemR_Etoile_Teacup_I_.menu"))
										{
											goto IL_5B95;
										}
										goto IL_5B7D;
									}
								}
								else
								{
									if (!(text == "HandItemR_Ketchup_I_.menu"))
									{
										goto IL_5B95;
									}
									goto IL_5B7D;
								}
							}
							else if (num2 != 285476184u)
							{
								if (num2 != 318491980u)
								{
									if (num2 != 408858099u)
									{
										goto IL_5B95;
									}
									if (!(text == "HandItemR_DVD5_I_.menu"))
									{
										goto IL_5B95;
									}
								}
								else
								{
									if (!(text == "HandItemR_MelonSoda_I_.menu"))
									{
										goto IL_5B95;
									}
									goto IL_5B7D;
								}
							}
							else
							{
								if (!(text == "HandItemR_cocktail_red_I_.menu"))
								{
									goto IL_5B95;
								}
								goto IL_5B7D;
							}
						}
						else if (num2 <= 647820252u)
						{
							if (num2 != 545308023u)
							{
								if (num2 != 646608353u)
								{
									if (num2 != 647820252u)
									{
										goto IL_5B95;
									}
									if (!(text == "HandItemR_Nei_Heartful_I_.menu"))
									{
										goto IL_5B95;
									}
									goto IL_5B7D;
								}
								else
								{
									if (!(text == "HandItemR_Suika_I_.menu"))
									{
										goto IL_5B95;
									}
									goto IL_5B7D;
								}
							}
							else
							{
								if (!(text == "HandItemR_Mugcup_I_.menu"))
								{
									goto IL_5B95;
								}
								goto IL_5B7D;
							}
						}
						else if (num2 <= 988940142u)
						{
							if (num2 != 749466532u)
							{
								if (num2 != 988940142u)
								{
									goto IL_5B95;
								}
								if (!(text == "HandItemR_smoothie_red_I_.menu"))
								{
									goto IL_5B95;
								}
								goto IL_5B7D;
							}
							else if (!(text == "HandItemR_Tomorokoshi_I_.menu"))
							{
								goto IL_5B95;
							}
						}
						else if (num2 != 1056786919u)
						{
							if (num2 != 1086073289u)
							{
								goto IL_5B95;
							}
							if (!(text == "HandItemL_Karte_I_.menu"))
							{
								goto IL_5B95;
							}
							goto IL_5B7D;
						}
						else
						{
							if (!(text == "HandItemR_Ochoko_I_.menu"))
							{
								goto IL_5B95;
							}
							goto IL_5B7D;
						}
					}
					else if (num2 <= 1371448080u)
					{
						if (num2 <= 1138623650u)
						{
							if (num2 != 1091191578u)
							{
								if (num2 != 1102011110u)
								{
									if (num2 != 1138623650u)
									{
										goto IL_5B95;
									}
									if (!(text == "HandItemR_Satumaimo_I_.menu"))
									{
										goto IL_5B95;
									}
								}
								else
								{
									if (!(text == "HandItemR_Shaker_I_.menu"))
									{
										goto IL_5B95;
									}
									goto IL_5B7D;
								}
							}
							else if (!(text == "HandItemR_Spoon_Omurice_I_.menu"))
							{
								goto IL_5B95;
							}
						}
						else if (num2 != 1226776829u)
						{
							if (num2 != 1295988406u)
							{
								if (num2 != 1371448080u)
								{
									goto IL_5B95;
								}
								if (!(text == "HandItemR_DVD4_I_.menu"))
								{
									goto IL_5B95;
								}
							}
							else if (!(text == "HandItemR_Scoop_I_.menu"))
							{
								goto IL_5B95;
							}
						}
						else if (!(text == "HandItemL_Karaoke_Mike_I_.menu"))
						{
							goto IL_5B95;
						}
					}
					else if (num2 <= 1518982506u)
					{
						if (num2 != 1412796487u)
						{
							if (num2 != 1438258586u)
							{
								if (num2 != 1518982506u)
								{
									goto IL_5B95;
								}
								if (!(text == "HandItemR_Omurice2_I_.menu"))
								{
									goto IL_5B95;
								}
							}
							else if (!(text == "HandItemR_Kushiyaki_I_.menu"))
							{
								goto IL_5B95;
							}
						}
						else if (!(text == "HandItemR_DVD1_I_.menu"))
						{
							goto IL_5B95;
						}
					}
					else if (num2 <= 1624269961u)
					{
						if (num2 != 1561969741u)
						{
							if (num2 != 1624269961u)
							{
								goto IL_5B95;
							}
							if (!(text == "HandItemR_DVD3_I_.menu"))
							{
								goto IL_5B95;
							}
						}
						else if (!(text == "HandItemR_Uchiwa_I_.menu"))
						{
							goto IL_5B95;
						}
					}
					else if (num2 != 1826597005u)
					{
						if (num2 != 1949026789u)
						{
							goto IL_5B95;
						}
						if (!(text == "HandItemR_SmartPhone_I_.menu"))
						{
							goto IL_5B95;
						}
						goto IL_5B7D;
					}
					else if (!(text == "HandItemR_Hanabi_I_.menu"))
					{
						goto IL_5B95;
					}
				}
				else if (num2 <= 3069853285u)
				{
					if (num2 <= 2225019790u)
					{
						if (num2 <= 2139632044u)
						{
							if (num2 != 2045785323u)
							{
								if (num2 != 2091000041u)
								{
									if (num2 != 2139632044u)
									{
										goto IL_5B95;
									}
									if (!(text == "HandItemR_Jyouro_I_.menu"))
									{
										goto IL_5B95;
									}
									goto IL_5B7D;
								}
								else if (!(text == "HandItemR_Crops_Suika_I_.menu"))
								{
									goto IL_5B95;
								}
							}
							else
							{
								if (!(text == "HandItemL_Katuramuki_Daikon_I_.menu"))
								{
									goto IL_5B95;
								}
								goto IL_5B7D;
							}
						}
						else if (num2 != 2144239502u)
						{
							if (num2 != 2198832998u)
							{
								if (num2 != 2225019790u)
								{
									goto IL_5B95;
								}
								if (!(text == "HandItemR_DVD2_I_.menu"))
								{
									goto IL_5B95;
								}
							}
							else
							{
								if (!(text == "HandItemR_MilkBottle(cap_on)_I_.menu"))
								{
									goto IL_5B95;
								}
								goto IL_5B7D;
							}
						}
						else
						{
							if (!(text == "HandItemR_smoothie_green_I_.menu"))
							{
								goto IL_5B95;
							}
							goto IL_5B7D;
						}
					}
					else if (num2 <= 2411473495u)
					{
						if (num2 != 2313119171u)
						{
							if (num2 != 2408524509u)
							{
								if (num2 != 2411473495u)
								{
									goto IL_5B95;
								}
								if (!(text == "HandItemR_BeerBottle(cap_on)_I_.menu"))
								{
									goto IL_5B95;
								}
								goto IL_5B7D;
							}
							else
							{
								if (!(text == "HandItemR_BeerBottle(cap_off)_I_.menu"))
								{
									goto IL_5B95;
								}
								goto IL_5B7D;
							}
						}
						else if (!(text == "HandItemR_Omurice1_I_.menu"))
						{
							goto IL_5B95;
						}
					}
					else if (num2 <= 3014511698u)
					{
						if (num2 != 2554261320u)
						{
							if (num2 != 3014511698u)
							{
								goto IL_5B95;
							}
							if (!(text == "HandItemR_MilkBottle(cap_off)_I_.menu"))
							{
								goto IL_5B95;
							}
							goto IL_5B7D;
						}
						else
						{
							if (!(text == "HandItemR_BeerGlass_I_.menu"))
							{
								goto IL_5B95;
							}
							goto IL_5B7D;
						}
					}
					else if (num2 != 3038281892u)
					{
						if (num2 != 3069853285u)
						{
							goto IL_5B95;
						}
						if (!(text == "HandItemR_Curry_I_.menu"))
						{
							goto IL_5B95;
						}
					}
					else
					{
						if (!(text == "HandItemR_Natumikan_I_.menu"))
						{
							goto IL_5B95;
						}
						goto IL_5B7D;
					}
				}
				else if (num2 <= 3572076533u)
				{
					if (num2 <= 3210290665u)
					{
						if (num2 != 3094935052u)
						{
							if (num2 != 3143678613u)
							{
								if (num2 != 3210290665u)
								{
									goto IL_5B95;
								}
								if (!(text == "HandItemR_Kobin_I_.menu"))
								{
									goto IL_5B95;
								}
								goto IL_5B7D;
							}
							else
							{
								if (!(text == "HandItemR_cocktail_yellow_I_.menu"))
								{
									goto IL_5B95;
								}
								goto IL_5B7D;
							}
						}
						else
						{
							if (!(text == "HandItemL_Etoile_Saucer_I_.menu"))
							{
								goto IL_5B95;
							}
							goto IL_5B7D;
						}
					}
					else if (num2 != 3238962990u)
					{
						if (num2 != 3479393148u)
						{
							if (num2 != 3572076533u)
							{
								goto IL_5B95;
							}
							if (!(text == "HandItemR_cocktail_blue_I_.menu"))
							{
								goto IL_5B95;
							}
							goto IL_5B7D;
						}
						else
						{
							if (!(text == "HandItemR_Tomato_I_.menu"))
							{
								goto IL_5B95;
							}
							goto IL_5B7D;
						}
					}
					else if (!(text == "HandItemR_Senkouhanabi_I_.menu"))
					{
						goto IL_5B95;
					}
				}
				else if (num2 <= 4010378773u)
				{
					if (num2 != 3602271568u)
					{
						if (num2 != 3738407608u)
						{
							if (num2 != 4010378773u)
							{
								goto IL_5B95;
							}
							if (!(text == "HandItemR_Omurice3_I_.menu"))
							{
								goto IL_5B95;
							}
						}
						else if (!(text == "HandItemR_Ninjin_I_.menu"))
						{
							goto IL_5B95;
						}
					}
					else if (!(text == "HandItemR_Folk_I_.menu"))
					{
						goto IL_5B95;
					}
				}
				else if (num2 <= 4119295831u)
				{
					if (num2 != 4060997116u)
					{
						if (num2 != 4119295831u)
						{
							goto IL_5B95;
						}
						if (!(text == "HandItemR_Tomorokoshi_yaki_I_.menu"))
						{
							goto IL_5B95;
						}
					}
					else if (!(text == "HandItemR_Shell_I_.menu"))
					{
						goto IL_5B95;
					}
				}
				else if (num2 != 4157555339u)
				{
					if (num2 != 4236280953u)
					{
						goto IL_5B95;
					}
					if (!(text == "HandItemR_Pasta_I_.menu"))
					{
						goto IL_5B95;
					}
				}
				else if (!(text == "HandItemR_Spoon_Curry_I_.menu"))
				{
					goto IL_5B95;
				}
				zero2.z = 90f;
				goto IL_5B95;
				IL_5B7D:
				zero2.x = 0f;
				zero2.z = 90f;
				IL_5B95:
				gameObject3.transform.localPosition = zero;
				gameObject3.transform.localRotation = Quaternion.Euler(zero2);
				this.doguCnt = this.doguBObject.Count - 1;
				this.gDogu[this.doguCnt] = GameObject.CreatePrimitive(PrimitiveType.Cube);
				this.gDogu[this.doguCnt].GetComponent<Renderer>().material = this.m_material;
				this.gDogu[this.doguCnt].layer = 8;
				this.gDogu[this.doguCnt].GetComponent<Renderer>().enabled = false;
				this.gDogu[this.doguCnt].SetActive(false);
				this.gDogu[this.doguCnt].transform.position = gameObject3.transform.position;
				this.mDogu[this.doguCnt] = this.gDogu[this.doguCnt].AddComponent<MouseDrag6>();
				this.mDogu[this.doguCnt].isScale = false;
				this.mDogu[this.doguCnt].obj = this.gDogu[this.doguCnt];
				this.mDogu[this.doguCnt].maid = gameObject3;
				this.mDogu[this.doguCnt].angles = gameObject3.transform.eulerAngles;
				this.gDogu[this.doguCnt].transform.localScale = new Vector3(this.cubeSize, this.cubeSize, this.cubeSize);
				this.mDogu[this.doguCnt].ido = 1;
			}
			GUI.enabled = true;
			if (this.nameFlg)
			{
				this.inName2 = GUI.TextField(new Rect((float)this.GetPix(5), (float)this.GetPix(27), (float)this.GetPix(100), (float)this.GetPix(20)), this.inName2);
				if (GUI.Button(new Rect((float)this.GetPix(110), (float)this.GetPix(27), (float)this.GetPix(35), (float)this.GetPix(20)), "更新", guistyle3))
				{
					this.nameFlg = false;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
					base.Preferences["kankyo"]["kankyo" + (this.kankyoCombo.selectedItemIndex + 1)].Value = this.inName2;
					base.SaveConfig();
					this.kankyoComboList = new GUIContent[this.kankyoMax];
					for (int num5 = 0; num5 < this.kankyoMax; num5++)
					{
						IniKey iniKey2 = base.Preferences["kankyo"]["kankyo" + (num5 + 1)];
						this.kankyoComboList[num5] = new GUIContent(iniKey2.Value);
					}
				}
			}
			else
			{
				if (GUI.Button(new Rect((float)this.GetPix(180), (float)this.GetPix(27), (float)this.GetPix(24), (float)this.GetPix(20)), "名", guistyle3))
				{
					this.nameFlg = true;
					this.inName2 = this.kankyoComboList[this.kankyoIndex].text;
				}
				this.kankyoIndex = this.kankyoCombo.List(new Rect((float)this.GetPix(4), (float)this.GetPix(27), (float)this.GetPix(91), (float)this.GetPix(23)), this.kankyoComboList[this.kankyoIndex].text, this.kankyoComboList, guistyle4, "box", this.listStyle3);
				if (GUI.Button(new Rect((float)this.GetPix(100), (float)this.GetPix(27), (float)this.GetPix(35), (float)this.GetPix(20)), "保存", guistyle3))
				{
					this.saveScene = 10000 + this.kankyoIndex;
					this.saveScene2 = this.saveScene;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
					try
					{
						this.thum_byte_to_base64_ = string.Empty;
						this.thum_file_path_ = Path.Combine(Path.GetTempPath(), "cm3d2_" + Guid.NewGuid().ToString() + ".png");
						GameMain.Instance.MainCamera.ScreenShot(this.thum_file_path_, 1, false);
					}
					catch
					{
					}
				}
				GUI.enabled = false;
				IniKey iniKey3 = base.Preferences["scene"]["s" + (10000 + this.kankyoIndex)];
				if (iniKey3.Value != null && iniKey3.Value.ToString() != "")
				{
					GUI.enabled = true;
				}
				if (GUI.Button(new Rect((float)this.GetPix(140), (float)this.GetPix(27), (float)this.GetPix(35), (float)this.GetPix(20)), "読込", guistyle3))
				{
					this.loadScene = 10000 + this.kankyoIndex;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
			}
			GUI.enabled = true;
			if (num4 == this.slotIndex)
			{
				return;
			}
			this.slotIndex = num4;
			this.sortList.Clear();
			this.scrollPos = new Vector2(0f, 0f);
			if (this.itemDataList.Count == 0)
			{
				string[] menuFiles = GameUty.MenuFiles;
				for (int n = 0; n < menuFiles.Length; n++)
				{
					string text3 = Path.GetFileNameWithoutExtension(menuFiles[n]) + ".menu";
					byte[] array5 = null;
					AFileBase afileBase5 = GameUty.FileOpen(text3, null);
					try
					{
						NDebug.Assert(afileBase5.IsValid(), "メニューファイルが存在しません。 :" + text3);
						array5 = new byte[afileBase5.GetSize()];
						afileBase5.Read(ref array5, afileBase5.GetSize());
					}
					finally
					{
						AFileBase afileBase6 = afileBase5;
						if (afileBase6 != null)
						{
							afileBase6.Dispose();
						}
					}
					BinaryReader binaryReader = new BinaryReader(new MemoryStream(array5), Encoding.UTF8);
					if (binaryReader.ReadString() != "CM3D2_MENU")
					{
						binaryReader.Close();
					}
					else
					{
						binaryReader.ReadInt32();
						binaryReader.ReadString();
						binaryReader.ReadString();
						string info = binaryReader.ReadString();
						string s = "";
						binaryReader.ReadString();
						binaryReader.ReadInt32();
						string text4 = "";
						try
						{
							for (;;)
							{
								int num6 = (int)binaryReader.ReadByte();
								if (num6 != 0)
								{
									for (int num7 = 0; num7 < num6; num7++)
									{
										string a = binaryReader.ReadString();
										if (a == "icons")
										{
											text4 = binaryReader.ReadString();
											break;
										}
										if (a == "priority")
										{
											s = binaryReader.ReadString();
											break;
										}
									}
									if (text4 != "")
									{
										break;
									}
								}
							}
							int order = 0;
							int.TryParse(s, out order);
							ManyMaids.ItemData itemData = new ManyMaids.ItemData();
							itemData.info = info;
							itemData.name = text4;
							itemData.menu = text3;
							itemData.order = order;
							itemData.cd = array5;
							this.itemDataList.Add(itemData);
						}
						catch
						{
						}
						binaryReader.Close();
					}
				}
			}
			foreach (ManyMaids.ItemData itemData2 in this.itemDataList)
			{
				if (this.slotIndex != 0 && !(itemData2.info != Class1.slotArray[this.slotIndex]) && itemData2.order > 0)
				{
					ManyMaids.SortItem sortItem = new ManyMaids.SortItem();
					sortItem.order = itemData2.order;
					sortItem.name = itemData2.name;
					sortItem.menu = itemData2.menu;
					sortItem.tex = itemData2.tex;
					this.sortList.Add(sortItem);
				}
			}
			IEnumerable<ManyMaids.SortItem> enumerable = from p in this.sortList
			orderby p.order, p.name
			select p;
			List<ManyMaids.SortItem> list = new List<ManyMaids.SortItem>();
			string b = "";
			foreach (ManyMaids.SortItem sortItem2 in enumerable)
			{
				try
				{
					if (!(sortItem2.menu == b))
					{
						if (sortItem2.tex == null)
						{
							byte[] data = ImportCM.LoadTexture(GameUty.FileSystem, sortItem2.name, false).data;
							Texture2D texture2D3 = new Texture2D(50, 50, TextureFormat.RGB565, false);
							texture2D3.LoadImage(data);
							sortItem2.tex = texture2D3;
						}
						b = sortItem2.menu;
						list.Add(sortItem2);
					}
				}
				catch
				{
				}
			}
			this.sortList = list;
		}

		// Token: 0x0600003C RID: 60 RVA: 0x00026D38 File Offset: 0x00024F38
		private void GuiFunc6(int winID)
		{
			GUIStyle guistyle = "label";
			guistyle.fontSize = this.GetPix(12);
			guistyle.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle2 = "label";
			guistyle2.fontSize = this.GetPix(11);
			guistyle2.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle3 = "button";
			guistyle3.fontSize = this.GetPix(20);
			GUIStyle guistyle4 = "button";
			guistyle4.fontSize = this.GetPix(14);
			guistyle4.alignment = TextAnchor.MiddleLeft;
			GUIStyle guistyle5 = "button";
			guistyle5.fontSize = this.GetPix(12);
			guistyle5.alignment = TextAnchor.MiddleLeft;
			GUIStyle guistyle6 = new GUIStyle("toggle");
			guistyle6.fontSize = this.GetPix(13);
			CharacterMgr characterMgr = GameMain.Instance.CharacterMgr;
			Maid maid = this.maidArray[this.selectMaidIndex];
			if (!this.kankyoInitFlg)
			{
				this.listStyle2.normal.textColor = Color.white;
				this.listStyle2.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
				GUIStyleState onHover = this.listStyle2.onHover;
				GUIStyleState hover = this.listStyle2.hover;
				Texture2D texture2D = new Texture2D(2, 2);
				Texture2D background = texture2D;
				hover.background = texture2D;
				onHover.background = background;
				RectOffset padding = this.listStyle2.padding;
				RectOffset padding2 = this.listStyle2.padding;
				RectOffset padding3 = this.listStyle2.padding;
				int num = this.listStyle2.padding.bottom = this.GetPix(0);
				padding3.top = num;
				padding2.right = num;
				padding.left = num;
				this.listStyle2.fontSize = this.GetPix(11);
				this.listStyle3.normal.textColor = Color.white;
				this.listStyle3.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
				GUIStyleState onHover2 = this.listStyle3.onHover;
				GUIStyleState hover2 = this.listStyle3.hover;
				Texture2D texture2D2 = new Texture2D(2, 2);
				background = texture2D2;
				hover2.background = texture2D2;
				onHover2.background = background;
				RectOffset padding4 = this.listStyle3.padding;
				RectOffset padding5 = this.listStyle3.padding;
				num = (this.listStyle3.padding.top = this.GetPix(0));
				padding5.right = num;
				padding4.left = num;
				this.listStyle3.padding.bottom = this.GetPix(0);
				this.listStyle3.fontSize = this.GetPix(12);
				this.bgmCombo.selectedItemIndex = this.bgmIndex;
				if (this.sceneLevel == 5)
				{
					this.bgmCombo.selectedItemIndex = 2;
				}
				this.bgmComboList = new GUIContent[this.bgmArray.Length];
				int i = 0;
				while (i < this.bgmArray.Length)
				{
					string text = this.bgmArray[i];
					uint num2 = <PrivateImplementationDetails>.ComputeStringHash(text);
					if (num2 <= 1247195741u)
					{
						if (num2 <= 820109500u)
						{
							if (num2 != 799361240u)
							{
								if (num2 != 820109500u)
								{
									goto IL_57A;
								}
								if (!(text == "entrancetoyou_short"))
								{
									goto IL_57A;
								}
								this.bgmComboList[i] = new GUIContent("entrance to you");
							}
							else
							{
								if (!(text == "RhythmixToYou"))
								{
									goto IL_57A;
								}
								this.bgmComboList[i] = new GUIContent("rhythmix to you");
							}
						}
						else if (num2 != 1196862884u)
						{
							if (num2 != 1230418122u)
							{
								if (num2 != 1247195741u)
								{
									goto IL_57A;
								}
								if (!(text == "happy_happy_scandal2"))
								{
									goto IL_57A;
								}
								this.bgmComboList[i] = new GUIContent("happy!happy!スキャンダル!! 2");
							}
							else
							{
								if (!(text == "happy_happy_scandal3"))
								{
									goto IL_57A;
								}
								this.bgmComboList[i] = new GUIContent("happy!happy!スキャンダル!! 3");
							}
						}
						else
						{
							if (!(text == "happy_happy_scandal1"))
							{
								goto IL_57A;
							}
							this.bgmComboList[i] = new GUIContent("happy!happy!スキャンダル!! 1");
						}
					}
					else if (num2 <= 1645546354u)
					{
						if (num2 != 1334634298u)
						{
							if (num2 != 1351411917u)
							{
								if (num2 != 1645546354u)
								{
									goto IL_57A;
								}
								if (!(text == "dokidokifallinlove_short"))
								{
									goto IL_57A;
								}
								this.bgmComboList[i] = new GUIContent("ドキドキ☆Fallin' Love");
							}
							else
							{
								if (!(text == "stellarmytears_short3"))
								{
									goto IL_57A;
								}
								this.bgmComboList[i] = new GUIContent("stellar my tears3");
							}
						}
						else
						{
							if (!(text == "stellarmytears_short2"))
							{
								goto IL_57A;
							}
							this.bgmComboList[i] = new GUIContent("stellar my tears2");
						}
					}
					else if (num2 != 1662052876u)
					{
						if (num2 != 2028464251u)
						{
							if (num2 != 2165532716u)
							{
								goto IL_57A;
							}
							if (!(text == "stellarmytears_short"))
							{
								goto IL_57A;
							}
							this.bgmComboList[i] = new GUIContent("stellar my tears1");
						}
						else
						{
							if (!(text == "can_know_two_close"))
							{
								goto IL_57A;
							}
							this.bgmComboList[i] = new GUIContent("Can Know Two Close");
						}
					}
					else
					{
						if (!(text == "scarlet leap_short"))
						{
							goto IL_57A;
						}
						this.bgmComboList[i] = new GUIContent("scarlet leap");
					}
					IL_591:
					i++;
					continue;
					IL_57A:
					this.bgmComboList[i] = new GUIContent(this.bgmArray[i]);
					goto IL_591;
				}
				this.bgCombo.selectedItemIndex = this.bgIndex;
				this.bgComboList = new GUIContent[this.bgArray.Length];
				int j = 0;
				while (j < this.bgArray.Length)
				{
					string text = this.bgArray[j];
					uint num2 = <PrivateImplementationDetails>.ComputeStringHash(text);
					if (num2 <= 1947831619u)
					{
						if (num2 <= 1070438741u)
						{
							if (num2 <= 533377175u)
							{
								if (num2 <= 238123806u)
								{
									if (num2 <= 46466192u)
									{
										if (num2 != 1596052u)
										{
											if (num2 != 17732777u)
											{
												if (num2 != 46466192u)
												{
													goto IL_2420;
												}
												if (!(text == "Syosai_Night"))
												{
													goto IL_2420;
												}
												this.bgComboList[j] = new GUIContent("書斎(夜)");
											}
											else
											{
												if (!(text == "seacafe"))
												{
													goto IL_2420;
												}
												this.bgComboList[j] = new GUIContent("シーカフェ");
											}
										}
										else
										{
											if (!(text == "seacafe_night"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("シーカフェ(夜)");
										}
									}
									else if (num2 <= 85302226u)
									{
										if (num2 != 47568606u)
										{
											if (num2 != 85302226u)
											{
												goto IL_2420;
											}
											if (!(text == "PlayRoom2"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("プレイルーム2");
										}
										else
										{
											if (!(text == "PrivateRoom_Night"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("プライベートルーム(夜)");
										}
									}
									else if (num2 != 162748417u)
									{
										if (num2 != 238123806u)
										{
											goto IL_2420;
										}
										if (!(text == "Shukuhakubeya_Living_Night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("宿泊-リビング(夜)");
									}
									else
									{
										if (!(text == "MyBedRoom_NightOff"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("自室(消灯)");
									}
								}
								else if (num2 <= 382834298u)
								{
									if (num2 <= 296207621u)
									{
										if (num2 != 259046295u)
										{
											if (num2 != 296207621u)
											{
												goto IL_2420;
											}
											if (!(text == "CasinoMini"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("カジノミニ");
										}
										else
										{
											if (!(text == "Shukuhakubeya_WashRoom_Night"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("宿泊-洗面所(夜)");
										}
									}
									else if (num2 != 297385674u)
									{
										if (num2 != 382834298u)
										{
											goto IL_2420;
										}
										if (!(text == "rotenburo_night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("露天風呂(夜)");
									}
									else
									{
										if (!(text == "Salon"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("サロン");
									}
								}
								else if (num2 <= 470030417u)
								{
									if (num2 != 464620076u)
									{
										if (num2 != 470030417u)
										{
											goto IL_2420;
										}
										if (!(text == "MyBedRoom"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("自室");
									}
									else
									{
										if (!(text == "Sea"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("海");
									}
								}
								else if (num2 != 504525065u)
								{
									if (num2 != 533377175u)
									{
										goto IL_2420;
									}
									if (!(text == "HeroineRoom_C1"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("凜デレ部屋");
								}
								else
								{
									if (!(text == "Train"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("電車");
								}
							}
							else if (num2 <= 823878402u)
							{
								if (num2 <= 710539702u)
								{
									if (num2 != 600634746u)
									{
										if (num2 != 667717034u)
										{
											if (num2 != 710539702u)
											{
												goto IL_2420;
											}
											if (!(text == "HeroineRoom_B_Night"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("クーデレ部屋(夜)");
										}
										else
										{
											if (!(text == "BigSight"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("ビッグサイト");
										}
									}
									else
									{
										if (!(text == "HeroineRoom_B1"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("真面目部屋");
									}
								}
								else if (num2 <= 802395514u)
								{
									if (num2 != 727840877u)
									{
										if (num2 != 802395514u)
										{
											goto IL_2420;
										}
										if (!(text == "ShoppingMall_Night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("ショッピングモール(夜)");
									}
									else
									{
										if (!(text == "OiranRoom"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("花魁ルーム");
									}
								}
								else if (num2 != 804005397u)
								{
									if (num2 != 823878402u)
									{
										goto IL_2420;
									}
									if (!(text == "Yashiki_Day"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("屋敷");
								}
								else
								{
									if (!(text == "SMClub"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("SMクラブ");
								}
							}
							else if (num2 <= 936836686u)
							{
								if (num2 <= 911923954u)
								{
									if (num2 != 853810864u)
									{
										if (num2 != 911923954u)
										{
											goto IL_2420;
										}
										if (!(text == "Salon_Garden"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("サロン(中庭)");
									}
									else
									{
										if (!(text == "SMRoom2"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("地下室");
									}
								}
								else if (num2 != 928095207u)
								{
									if (num2 != 936836686u)
									{
										goto IL_2420;
									}
									if (!(text == "com3d2pool_night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("プール(夜)");
								}
								else
								{
									if (!(text == "com3d2pool"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("プール");
								}
							}
							else if (num2 <= 1004420702u)
							{
								if (num2 != 985498402u)
								{
									if (num2 != 1004420702u)
									{
										goto IL_2420;
									}
									if (!(text == "HeroineRoom_C1_Night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("凜デレ部屋(夜)");
								}
								else
								{
									if (!(text == "Theater"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("劇場");
								}
							}
							else if (num2 != 1064378388u)
							{
								if (num2 != 1070438741u)
								{
									goto IL_2420;
								}
								if (!(text == "Spa"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("スパ");
							}
							else
							{
								if (!(text == "PlayRoom"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("プレイルーム");
							}
						}
						else if (num2 <= 1505842997u)
						{
							if (num2 <= 1241610611u)
							{
								if (num2 <= 1175078349u)
								{
									if (num2 != 1090713831u)
									{
										if (num2 != 1109630796u)
										{
											if (num2 != 1175078349u)
											{
												goto IL_2420;
											}
											if (!(text == "OpemCafe"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("カフェ");
										}
										else
										{
											if (!(text == "EmpireClub_Entrance"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("エントランス");
										}
									}
									else
									{
										if (!(text == "shrine_night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("神社(夜)");
									}
								}
								else if (num2 <= 1196448883u)
								{
									if (num2 != 1191089225u)
									{
										if (num2 != 1196448883u)
										{
											goto IL_2420;
										}
										if (!(text == "Shukuhakubeya_Other_BedRoom"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("宿泊-他ベッドルーム(夜)");
									}
									else
									{
										if (!(text == "Shitsumu"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("執務室");
									}
								}
								else if (num2 != 1198641495u)
								{
									if (num2 != 1241610611u)
									{
										goto IL_2420;
									}
									if (!(text == "Restaurant_Night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("レストラン(夜)");
								}
								else
								{
									if (!(text == "Shukuhakubeya_Living"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("宿泊-リビング");
								}
							}
							else if (num2 <= 1380388052u)
							{
								if (num2 <= 1307138940u)
								{
									if (num2 != 1253544472u)
									{
										if (num2 != 1307138940u)
										{
											goto IL_2420;
										}
										if (!(text == "MyBedRoom_Night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("自室(夜)");
									}
									else
									{
										if (!(text == "OpemCafe_Night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("カフェ(夜)");
									}
								}
								else if (num2 != 1319621243u)
								{
									if (num2 != 1380388052u)
									{
										goto IL_2420;
									}
									if (!(text == "Shitsumu_Night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("執務室(夜)");
								}
								else
								{
									if (!(text == "GameShop"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("ゲームショップ");
								}
							}
							else if (num2 <= 1470198011u)
							{
								if (num2 != 1410327562u)
								{
									if (num2 != 1470198011u)
									{
										goto IL_2420;
									}
									if (!(text == "villa"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("ヴィラ1F");
								}
								else
								{
									if (!(text == "Shukuhakubeya_WashRoom"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("宿泊-洗面所");
								}
							}
							else if (num2 != 1473797021u)
							{
								if (num2 != 1505842997u)
								{
									goto IL_2420;
								}
								if (!(text == "Sea_Night"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("海(夜)");
							}
							else
							{
								if (!(text == "MaidRoom"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("メイド部屋");
							}
						}
						else if (num2 <= 1795911174u)
						{
							if (num2 <= 1664558834u)
							{
								if (num2 != 1536618427u)
								{
									if (num2 != 1657598233u)
									{
										if (num2 != 1664558834u)
										{
											goto IL_2420;
										}
										if (!(text == "Shukuhakubeya_BedRoom"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("宿泊-ベッドルーム");
									}
									else
									{
										if (!(text == "MainKitchen_Night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("キッチン(夜)");
									}
								}
								else
								{
									if (!(text == "LiveStage"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("ステージ");
								}
							}
							else if (num2 <= 1710876867u)
							{
								if (num2 != 1689910924u)
								{
									if (num2 != 1710876867u)
									{
										goto IL_2420;
									}
									if (!(text == "ClassRoom_Play"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("教室(夜伽)");
								}
								else
								{
									if (!(text == "BackStage"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("ステージ裏");
								}
							}
							else if (num2 != 1734132920u)
							{
								if (num2 != 1795911174u)
								{
									goto IL_2420;
								}
								if (!(text == "Theater_LightOff"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("劇場(夜)");
							}
							else
							{
								if (!(text == "BarLounge"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("バー");
							}
						}
						else if (num2 <= 1884283856u)
						{
							if (num2 <= 1844737812u)
							{
								if (num2 != 1810706806u)
								{
									if (num2 != 1844737812u)
									{
										goto IL_2420;
									}
									if (!(text == "opemcafe_raspberry"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("ラズベリー");
								}
								else
								{
									if (!(text == "Shukuhakubeya_Toilet_Night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("宿泊-トイレ(夜)");
								}
							}
							else if (num2 != 1854067542u)
							{
								if (num2 != 1884283856u)
								{
									goto IL_2420;
								}
								if (!(text == "ShinShitsumu_Night"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("執務室(夜)");
							}
							else
							{
								if (!(text == "Soap"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("ソープ");
							}
						}
						else if (num2 <= 1913262708u)
						{
							if (num2 != 1884809730u)
							{
								if (num2 != 1913262708u)
								{
									goto IL_2420;
								}
								if (!(text == "MainKitchen_LightOff"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("キッチン(オフ)");
							}
							else
							{
								if (!(text == "opemcafe_riddlejoker_night"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("リドルジョーカー(夜)");
							}
						}
						else if (num2 != 1921571017u)
						{
							if (num2 != 1947831619u)
							{
								goto IL_2420;
							}
							if (!(text == "ShoppingMall"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("ショッピングモール");
						}
						else
						{
							if (!(text == "villa_farm_night"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("畑(夜)");
						}
					}
					else if (num2 <= 3075337826u)
					{
						if (num2 <= 2384660447u)
						{
							if (num2 <= 2177226838u)
							{
								if (num2 <= 1991947685u)
								{
									if (num2 != 1950837104u)
									{
										if (num2 != 1952591127u)
										{
											if (num2 != 1991947685u)
											{
												goto IL_2420;
											}
											if (!(text == "ShinShitsumu"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("執務室");
										}
										else
										{
											if (!(text == "PrivateRoom"))
											{
												goto IL_2420;
											}
											this.bgComboList[j] = new GUIContent("プライベートルーム");
										}
									}
									else
									{
										if (!(text == "DressRoom_NoMirror"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("ドレスルーム");
									}
								}
								else if (num2 <= 2016752278u)
								{
									if (num2 != 2003610157u)
									{
										if (num2 != 2016752278u)
										{
											goto IL_2420;
										}
										if (!(text == "Kitchen_Night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("キッチン(夜)");
									}
									else
									{
										if (!(text == "MyRoom_Night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("主人公部屋(夜)");
									}
								}
								else if (num2 != 2024009415u)
								{
									if (num2 != 2177226838u)
									{
										goto IL_2420;
									}
									if (!(text == "Restaurant"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("レストラン");
								}
								else
								{
									if (!(text == "HeroineRoom_B1_Night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("真面目部屋(夜)");
								}
							}
							else if (num2 <= 2271306160u)
							{
								if (num2 <= 2218183103u)
								{
									if (num2 != 2190696616u)
									{
										if (num2 != 2218183103u)
										{
											goto IL_2420;
										}
										if (!(text == "LiveStage_use_dance"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("ステージ(オフ)");
									}
									else
									{
										if (!(text == "MusicShop"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("ミュージックショップ");
									}
								}
								else if (num2 != 2253196261u)
								{
									if (num2 != 2271306160u)
									{
										goto IL_2420;
									}
									if (!(text == "MainKitchen"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("キッチン");
								}
								else
								{
									if (!(text == "villa_bedroom_night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("ヴィラ2F(夜)");
								}
							}
							else if (num2 <= 2345654217u)
							{
								if (num2 != 2340770978u)
								{
									if (num2 != 2345654217u)
									{
										goto IL_2420;
									}
									if (!(text == "HeroineRoom_A1"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("無垢部屋");
								}
								else
								{
									if (!(text == "SMRoom"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("SMルーム");
								}
							}
							else if (num2 != 2370725538u)
							{
								if (num2 != 2384660447u)
								{
									goto IL_2420;
								}
								if (!(text == "Shukuhakubeya_BedRoom_Night"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("宿泊-ベッドルーム(夜)");
							}
							else
							{
								if (!(text == "opemcafe_wanko"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("わんこ");
							}
						}
						else if (num2 <= 2678068907u)
						{
							if (num2 <= 2547975599u)
							{
								if (num2 != 2473735252u)
								{
									if (num2 != 2546932397u)
									{
										if (num2 != 2547975599u)
										{
											goto IL_2420;
										}
										if (!(text == "opemcafe_wanko_night"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("わんこ(夜)");
									}
									else
									{
										if (!(text == "Salon_Entrance"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("エントランス");
									}
								}
								else
								{
									if (!(text == "HeroineRoom_A1_Night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("無垢部屋(夜)");
								}
							}
							else if (num2 <= 2623466090u)
							{
								if (num2 != 2618448584u)
								{
									if (num2 != 2623466090u)
									{
										goto IL_2420;
									}
									if (!(text == "HoneymoonRoom"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("ハネムーンルーム");
								}
								else
								{
									if (!(text == "OutletPark"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("アウトレットパーク");
								}
							}
							else if (num2 != 2644297290u)
							{
								if (num2 != 2678068907u)
								{
									goto IL_2420;
								}
								if (!(text == "opemcafe_riddlejoker"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("リドルジョーカー");
							}
							else
							{
								if (!(text == "LockerRoom"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("ロッカールーム");
							}
						}
						else if (num2 <= 2964587427u)
						{
							if (num2 <= 2852348855u)
							{
								if (num2 != 2753721225u)
								{
									if (num2 != 2852348855u)
									{
										goto IL_2420;
									}
									if (!(text == "BigSight_Night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("ビッグサイト(夜)");
								}
								else
								{
									if (!(text == "Yashiki_Pillow"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("屋敷(夜・枕)");
								}
							}
							else if (num2 != 2940748855u)
							{
								if (num2 != 2964587427u)
								{
									goto IL_2420;
								}
								if (!(text == "opemcafe_rance10_night"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("ランス10(夜)");
							}
							else
							{
								if (!(text == "Yashiki"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("屋敷(夜)");
							}
						}
						else if (num2 <= 3007314567u)
						{
							if (num2 != 2998440495u)
							{
								if (num2 != 3007314567u)
								{
									goto IL_2420;
								}
								if (!(text == "DanceRoom"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("トレーニングルーム");
							}
							else
							{
								if (!(text == "HeroineRoom_A_Night"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("ツンデレ部屋(夜)");
							}
						}
						else if (num2 != 3014964069u)
						{
							if (num2 != 3075337826u)
							{
								goto IL_2420;
							}
							if (!(text == "karaokeroom"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("カラオケルーム");
						}
						else
						{
							if (!(text == "Town"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("街");
						}
					}
					else if (num2 <= 3827950781u)
					{
						if (num2 <= 3384449274u)
						{
							if (num2 <= 3253953446u)
							{
								if (num2 != 3129420751u)
								{
									if (num2 != 3184430799u)
									{
										if (num2 != 3253953446u)
										{
											goto IL_2420;
										}
										if (!(text == "opemcafe_rance10"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("ランス10");
									}
									else
									{
										if (!(text == "Oheya"))
										{
											goto IL_2420;
										}
										this.bgComboList[j] = new GUIContent("四畳半部屋");
									}
								}
								else
								{
									if (!(text == "Kitchen"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("キッチン");
								}
							}
							else if (num2 <= 3324495488u)
							{
								if (num2 != 3305949605u)
								{
									if (num2 != 3324495488u)
									{
										goto IL_2420;
									}
									if (!(text == "Spa_Night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("スパ(夜)");
								}
								else
								{
									if (!(text == "HeroineRoom_C_Night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("純真部屋(夜)");
								}
							}
							else if (num2 != 3341445411u)
							{
								if (num2 != 3384449274u)
								{
									goto IL_2420;
								}
								if (!(text == "shrine"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("神社");
							}
							else
							{
								if (!(text == "rotenburo"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("露天風呂");
							}
						}
						else if (num2 <= 3510756099u)
						{
							if (num2 <= 3470526930u)
							{
								if (num2 != 3424643412u)
								{
									if (num2 != 3470526930u)
									{
										goto IL_2420;
									}
									if (!(text == "LargeBathRoom"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("大浴場");
								}
								else
								{
									if (!(text == "ShinShitsumu_ChairRot"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("執務室(椅子)");
								}
							}
							else if (num2 != 3479932504u)
							{
								if (num2 != 3510756099u)
								{
									goto IL_2420;
								}
								if (!(text == "Bathroom"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("風呂");
							}
							else
							{
								if (!(text == "ClassRoom"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("教室");
							}
						}
						else if (num2 <= 3686563258u)
						{
							if (num2 != 3541316711u)
							{
								if (num2 != 3686563258u)
								{
									goto IL_2420;
								}
								if (!(text == "Bar"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("バー");
							}
							else
							{
								if (!(text == "LiveStage_Side"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("ステージ(ライト)");
							}
						}
						else if (num2 != 3792314543u)
						{
							if (num2 != 3827950781u)
							{
								goto IL_2420;
							}
							if (!(text == "opemcafe_raspberry_night"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("ラズベリー(夜)");
						}
						else
						{
							if (!(text == "Shukuhakubeya_Toilet"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("宿泊-トイレ");
						}
					}
					else if (num2 <= 3979969596u)
					{
						if (num2 <= 3895018002u)
						{
							if (num2 != 3852636224u)
							{
								if (num2 != 3872753675u)
								{
									if (num2 != 3895018002u)
									{
										goto IL_2420;
									}
									if (!(text == "villa_night"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("ヴィラ1F(夜)");
								}
								else
								{
									if (!(text == "Salon_Day"))
									{
										goto IL_2420;
									}
									this.bgComboList[j] = new GUIContent("サロン(昼)");
								}
							}
							else
							{
								if (!(text == "villa_farm"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("畑");
							}
						}
						else if (num2 <= 3973961768u)
						{
							if (num2 != 3919212816u)
							{
								if (num2 != 3973961768u)
								{
									goto IL_2420;
								}
								if (!(text == "Toilet"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("トイレ");
							}
							else
							{
								if (!(text == "Penthouse"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("ペントハウス");
							}
						}
						else if (num2 != 3979878370u)
						{
							if (num2 != 3979969596u)
							{
								goto IL_2420;
							}
							if (!(text == "villa_bedroom"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("ヴィラ2F");
						}
						else
						{
							if (!(text == "EmpireClub_Rotary_Night"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("ロータリー(夜)");
						}
					}
					else if (num2 <= 4121233244u)
					{
						if (num2 <= 4089350586u)
						{
							if (num2 != 4031463403u)
							{
								if (num2 != 4089350586u)
								{
									goto IL_2420;
								}
								if (!(text == "Casino"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("カジノ");
							}
							else
							{
								if (!(text == "EmpireClub_Rotary"))
								{
									goto IL_2420;
								}
								this.bgComboList[j] = new GUIContent("ロータリー");
							}
						}
						else if (num2 != 4099308004u)
						{
							if (num2 != 4121233244u)
							{
								goto IL_2420;
							}
							if (!(text == "HeroineRoom_C"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("純真部屋");
						}
						else
						{
							if (!(text == "MyRoom"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("主人公部屋");
						}
					}
					else if (num2 <= 4154788482u)
					{
						if (num2 != 4138010863u)
						{
							if (num2 != 4154788482u)
							{
								goto IL_2420;
							}
							if (!(text == "HeroineRoom_A"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("ツンデレ部屋");
						}
						else
						{
							if (!(text == "HeroineRoom_B"))
							{
								goto IL_2420;
							}
							this.bgComboList[j] = new GUIContent("クーデレ部屋");
						}
					}
					else if (num2 != 4173140131u)
					{
						if (num2 != 4283731301u)
						{
							goto IL_2420;
						}
						if (!(text == "Syosai"))
						{
							goto IL_2420;
						}
						this.bgComboList[j] = new GUIContent("書斎");
					}
					else
					{
						if (!(text == "Pool"))
						{
							goto IL_2420;
						}
						this.bgComboList[j] = new GUIContent("プール");
					}
					IL_2437:
					Dictionary<string, string> saveDataDic = CreativeRoomManager.GetSaveDataDic();
					if (saveDataDic != null)
					{
						foreach (KeyValuePair<string, string> keyValuePair in saveDataDic)
						{
							if (this.bgArray[j] == keyValuePair.Key)
							{
								this.bgComboList[j] = new GUIContent(keyValuePair.Value);
							}
						}
					}
					j++;
					continue;
					IL_2420:
					this.bgComboList[j] = new GUIContent(this.bgArray[j]);
					goto IL_2437;
				}
				this.doguCombo.selectedItemIndex = 0;
				this.doguComboList = new GUIContent[Class1.doguBArray.Length];
				int k = 0;
				while (k < Class1.doguBArray.Length)
				{
					string text = Class1.doguBArray[k];
					uint num2 = <PrivateImplementationDetails>.ComputeStringHash(text);
					if (num2 <= 2251189040u)
					{
						if (num2 <= 1254311137u)
						{
							if (num2 <= 732944934u)
							{
								if (num2 <= 366937924u)
								{
									if (num2 <= 88320392u)
									{
										if (num2 <= 61310515u)
										{
											if (num2 <= 49483317u)
											{
												if (num2 != 1879131u)
												{
													if (num2 != 49483317u)
													{
														goto IL_6AB3;
													}
													if (!(text == "Odogu_OmuriceOppai"))
													{
														goto IL_6AB3;
													}
													this.doguComboList[k] = new GUIContent("オムライスおっぱい");
												}
												else
												{
													if (!(text == "BGodogu_villabr_sideboard"))
													{
														goto IL_6AB3;
													}
													this.doguComboList[k] = new GUIContent("サイドボード");
												}
											}
											else if (num2 != 59362242u)
											{
												if (num2 != 61310515u)
												{
													goto IL_6AB3;
												}
												if (!(text == "Odogu_ChuukaSet_tea_photo_ver"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("お茶");
											}
											else
											{
												if (!(text == "neirobo_photo_ver"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("ロボねい人形");
											}
										}
										else if (num2 <= 83048649u)
										{
											if (num2 != 80713500u)
											{
												if (num2 != 83048649u)
												{
													goto IL_6AB3;
												}
												if (!(text == "BGOdogu_sp002_oharaibou"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("お祓い棒");
											}
											else
											{
												if (!(text == "BGOdogu_denkigai2018s_syatifloot"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("シャチ");
											}
										}
										else if (num2 != 87403504u)
										{
											if (num2 != 88320392u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_DresserChair_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("ドレッサー椅子");
										}
										else
										{
											if (!(text == "Odogu_MaidRoomBook002_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("参考書B");
										}
									}
									else if (num2 <= 171367087u)
									{
										if (num2 <= 111272023u)
										{
											if (num2 != 106875671u)
											{
												if (num2 != 111272023u)
												{
													goto IL_6AB3;
												}
												if (!(text == "Odogu_Cocktail_Yellow"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("カクテル・黄");
											}
											else
											{
												if (!(text == "BGOdogu_sp002_susuki"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("ススキ");
											}
										}
										else if (num2 != 164513182u)
										{
											if (num2 != 171367087u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_StickNori_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("スティック糊");
										}
										else
										{
											if (!(text == "BGodogu_villa_reizouko"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("冷蔵庫");
										}
									}
									else if (num2 <= 270580409u)
									{
										if (num2 != 241697273u)
										{
											if (num2 != 270580409u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_Planter_Lightblue"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("プランター(青)");
										}
										else
										{
											if (!(text == "Odogu_Styluspen_red"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("スタイラスペン(赤)");
										}
									}
									else if (num2 != 334281919u)
									{
										if (num2 != 336867368u)
										{
											if (num2 != 366937924u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_YousyokuSet_Coffee_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("コーヒー");
										}
										else
										{
											if (!(text == "BGanimal_suzume"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("スズメ");
										}
									}
									else
									{
										if (!(text == "Odogu_HeroineChair_rindere"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("凛デレ椅子");
									}
								}
								else if (num2 <= 548340977u)
								{
									if (num2 <= 433951271u)
									{
										if (num2 <= 424015558u)
										{
											if (num2 != 391339456u)
											{
												if (num2 != 424015558u)
												{
													goto IL_6AB3;
												}
												if (!(text == "BGodogu_vf_crops_zakuro"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("作物(ザクロ)");
											}
											else
											{
												if (!(text == "Odogu_ChuukaSet_chahan_photo_ver"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("チャーハン");
											}
										}
										else if (num2 != 427423312u)
										{
											if (num2 != 433951271u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_Omurice3"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("オムライス3");
										}
										else
										{
											if (!(text == "Odogu_Seikaku_Tsundere"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("ツンデレ");
										}
									}
									else if (num2 <= 467506509u)
									{
										if (num2 != 451391264u)
										{
											if (num2 != 467506509u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_Omurice1"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("オムライス1");
										}
										else
										{
											if (!(text == "Odogu_Smoothie_Green"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("スムージー・緑");
										}
									}
									else if (num2 != 521049791u)
									{
										if (num2 != 548340977u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Sankousyo_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("参考書");
									}
									else
									{
										if (!(text == "Odogu_SalonSofa_small_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ソファー(小)");
									}
								}
								else if (num2 <= 695211335u)
								{
									if (num2 <= 575630666u)
									{
										if (num2 != 573965529u)
										{
											if (num2 != 575630666u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_Styluspen_yellow"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("スタイラスペン(黄)");
										}
										else
										{
											if (!(text == "BGOdogu_alicesoft_brownhoney"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("ハニー(茶)");
										}
									}
									else if (num2 != 586727624u)
									{
										if (num2 != 695211335u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_OmuriceKao2"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("オムライス顔2");
									}
									else
									{
										if (!(text == "BGOdogu_denkigai2018s_toropicalicetea"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("トロピカルアイスティー");
									}
								}
								else if (num2 <= 711988954u)
								{
									if (num2 != 698453061u)
									{
										if (num2 != 711988954u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_OmuriceKao1"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("オムライス顔1");
									}
									else
									{
										if (!(text == "BGodogu_bucket"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("バケツ");
									}
								}
								else if (num2 != 715433616u)
								{
									if (num2 != 721799532u)
									{
										if (num2 != 732944934u)
										{
											goto IL_6AB3;
										}
										if (!(text == "BGanimal_niwatori"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ニワトリ");
									}
									else
									{
										if (!(text == "Odogu_YousyokuSet_ChickenRice_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("チキンライス");
									}
								}
								else
								{
									if (!(text == "BGodogu_game_dartsboard"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ダーツボード");
								}
							}
							else if (num2 <= 976271599u)
							{
								if (num2 <= 869264255u)
								{
									if (num2 <= 832325157u)
									{
										if (num2 <= 803455776u)
										{
											if (num2 != 774250701u)
											{
												if (num2 != 803455776u)
												{
													goto IL_6AB3;
												}
												if (!(text == "BGodogu_rb_obon"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("おぼん");
											}
											else
											{
												if (!(text == "Odogu_YousyokuSet_CornSoup_photo_ver"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("コーンスープ");
											}
										}
										else if (num2 != 831607857u)
										{
											if (num2 != 832325157u)
											{
												goto IL_6AB3;
											}
											if (!(text == "BGodogu_karaoketable"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("カラオケテーブル");
										}
										else
										{
											if (!(text == "BGodogu_sunanoyama"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("砂山");
										}
									}
									else if (num2 <= 858809698u)
									{
										if (num2 != 852486636u)
										{
											if (num2 != 858809698u)
											{
												goto IL_6AB3;
											}
											if (!(text == "BGodogu_vf_kanban_ok"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("");
										}
										else
										{
											if (!(text == "Odogu_Card_h10"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("カード・ハート10");
										}
									}
									else if (num2 != 862772154u)
									{
										if (num2 != 869264255u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_h11"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・ハートJ");
									}
									else
									{
										if (!(text == "BGodogu_villa_table"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("テーブル");
									}
								}
								else if (num2 <= 906817785u)
								{
									if (num2 <= 890065565u)
									{
										if (num2 != 886041874u)
										{
											if (num2 != 890065565u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_Enpitsu_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("鉛筆(緑)");
										}
										else
										{
											if (!(text == "Odogu_Card_h12"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("カード・ハートQ");
										}
									}
									else if (num2 != 902819493u)
									{
										if (num2 != 906817785u)
										{
											goto IL_6AB3;
										}
										if (!(text == "BGanimal_cat"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("猫");
									}
									else
									{
										if (!(text == "Odogu_Card_h13"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・ハートK");
									}
								}
								else if (num2 <= 957100474u)
								{
									if (num2 != 928158752u)
									{
										if (num2 != 957100474u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Pen_Green_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ペン(緑)");
									}
									else
									{
										if (!(text == "Odogu_Smoothie_Red"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("スムージー・赤");
									}
								}
								else if (num2 != 959462305u)
								{
									if (num2 != 975585938u)
									{
										if (num2 != 976271599u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_HeroineChair_cooldere"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("クーデレ椅子");
									}
									else
									{
										if (!(text == "PlayAreaOut"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("プレイエリア外");
									}
								}
								else
								{
									if (!(text == "BGodogu_rb_duck"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("アヒル");
								}
							}
							else if (num2 <= 1088441161u)
							{
								if (num2 <= 1013814085u)
								{
									if (num2 <= 1005144947u)
									{
										if (num2 != 986657037u)
										{
											if (num2 != 1005144947u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_ClassRoomDesk_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("教室机");
										}
										else
										{
											if (!(text == "BGOdogu_alicesoft_bluehoney"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("ハニー(青)");
										}
									}
									else if (num2 != 1012451190u)
									{
										if (num2 != 1013814085u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_DildoBox"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ディルドボックス");
									}
									else
									{
										if (!(text == "BGodogu_villa_coffeemaker"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("コーヒーメーカー");
									}
								}
								else if (num2 <= 1059278601u)
								{
									if (num2 != 1029550579u)
									{
										if (num2 != 1059278601u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_ClassRoomChair_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("教室椅子");
									}
									else
									{
										if (!(text == "Odogu_LoveSofa"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ラブソファー");
									}
								}
								else if (num2 != 1084661973u)
								{
									if (num2 != 1085838226u)
									{
										if (num2 != 1088441161u)
										{
											goto IL_6AB3;
										}
										if (!(text == "BGodogu_vf_crops_natsumikan"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("作物(夏みかん)");
									}
									else
									{
										if (!(text == "Odogu_Shortcake"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ショートケーキ");
									}
								}
								else
								{
									if (!(text == "Odogu_Styluspen_black"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("スタイラスペン(黒)");
								}
							}
							else if (num2 <= 1146499651u)
							{
								if (num2 <= 1111892614u)
								{
									if (num2 != 1095256078u)
									{
										if (num2 != 1111892614u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_SMRoom2_SankakuMokuba_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("三角木馬2");
									}
									else
									{
										if (!(text == "BGodogu_vf_kanban_taiki"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("");
									}
								}
								else if (num2 != 1139668471u)
								{
									if (num2 != 1146499651u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_KousokuKijyouiChair_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("拘束椅子");
								}
								else
								{
									if (!(text == "Odogu_Styluspen_white"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("スタイラスペン(白)");
								}
							}
							else if (num2 <= 1176757686u)
							{
								if (num2 != 1153641918u)
								{
									if (num2 != 1176757686u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGodogu_vf_crops_gekkabijinflower"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("作物(月下美人・咲)");
								}
								else
								{
									if (!(text == "Odogu_SankakuMokuba_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("三角木馬");
								}
							}
							else if (num2 != 1218902867u)
							{
								if (num2 != 1229595303u)
								{
									if (num2 != 1254311137u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGNeiMaid"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("メイドねい人形");
								}
								else
								{
									if (!(text == "BGodogu_vf_crops_suika"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("作物(スイカ)");
								}
							}
							else
							{
								if (!(text == "Megane001_z2_Scenario_Model"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("メガネ");
							}
						}
						else if (num2 <= 1686741061u)
						{
							if (num2 <= 1591035599u)
							{
								if (num2 <= 1368424712u)
								{
									if (num2 <= 1318781766u)
									{
										if (num2 <= 1279488099u)
										{
											if (num2 != 1274011334u)
											{
												if (num2 != 1279488099u)
												{
													goto IL_6AB3;
												}
												if (!(text == "BGodogu_natumikan"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("夏みかん");
											}
											else
											{
												if (!(text == "BGOdogu_denkigai2018s_coneice_strawberry"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("アイス(ストロベリー)");
											}
										}
										else if (num2 != 1288099375u)
										{
											if (num2 != 1318781766u)
											{
												goto IL_6AB3;
											}
											if (!(text == "BGOdogu_denkigai2018s_beachball_green"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("ビーチボール(緑)");
										}
										else
										{
											if (!(text == "DesktopScreen"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("デスクトップスクリーン");
										}
									}
									else if (num2 <= 1356290492u)
									{
										if (num2 != 1352521040u)
										{
											if (num2 != 1356290492u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_LongDaiza_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("エッチする時の台");
										}
										else
										{
											if (!(text == "BGOdogu_alicesoft_redhoney"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("ハニー(赤)");
										}
									}
									else if (num2 != 1361795348u)
									{
										if (num2 != 1368424712u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_ChuukaSet_mabo_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("麻婆豆腐");
									}
									else
									{
										if (!(text == "Odogu_Condom_Open_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("コンドーム(開)");
									}
								}
								else if (num2 <= 1515762992u)
								{
									if (num2 <= 1475755338u)
									{
										if (num2 != 1440168550u)
										{
											if (num2 != 1475755338u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_CardShooter"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("カードシューター");
										}
										else
										{
											if (!(text == "BGOdogu_denkigai2018s_beachball_red"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("ビーチボール(赤)");
										}
									}
									else if (num2 != 1482067521u)
									{
										if (num2 != 1515762992u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Seikaku_Cool_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("クール");
									}
									else
									{
										if (!(text == "Odogu_CasinoChip_100"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カジノチップ100");
									}
								}
								else if (num2 <= 1569873743u)
								{
									if (num2 != 1553096124u)
									{
										if (num2 != 1569873743u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_s9"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・スペード9");
									}
									else
									{
										if (!(text == "Odogu_Card_s8"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・スペード8");
									}
								}
								else if (num2 != 1574257980u)
								{
									if (num2 != 1590957637u)
									{
										if (num2 != 1591035599u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_h8"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・ハート8");
									}
									else
									{
										if (!(text == "Odogu_Kitchen_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("キッチン");
									}
								}
								else
								{
									if (!(text == "Odogu_Card_h9"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ハート9");
								}
							}
							else if (num2 <= 1653761838u)
							{
								if (num2 <= 1620206600u)
								{
									if (num2 <= 1616051281u)
									{
										if (num2 != 1602346372u)
										{
											if (num2 != 1616051281u)
											{
												goto IL_6AB3;
											}
											if (!(text == "BGodogu_pafe"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("パフェ");
										}
										else
										{
											if (!(text == "BGOdogu_alicesoft_greenhoney"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("ハニー(緑)");
										}
									}
									else if (num2 != 1616791204u)
									{
										if (num2 != 1620206600u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_s4"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・スペード4");
									}
									else
									{
										if (!(text == "BGodogu_kakigori"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("かき氷");
									}
								}
								else if (num2 <= 1636984219u)
								{
									if (num2 != 1636161886u)
									{
										if (num2 != 1636984219u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_s5"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・スペード5");
									}
									else
									{
										if (!(text == "Odogu_StandMike"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("スタンドマイク");
									}
								}
								else if (num2 != 1641368456u)
								{
									if (num2 != 1653761838u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Card_s6"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・スペード6");
								}
								else
								{
									if (!(text == "Odogu_Card_h5"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ハート5");
								}
							}
							else if (num2 <= 1662926844u)
							{
								if (num2 <= 1658146075u)
								{
									if (num2 != 1654887797u)
									{
										if (num2 != 1658146075u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_h4"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・ハート4");
									}
									else
									{
										if (!(text == "Odogu_MaidRoomBook005_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("参考書E");
									}
								}
								else if (num2 != 1658717458u)
								{
									if (num2 != 1662926844u)
									{
										goto IL_6AB3;
									}
									if (!(text == "photo_ver/Odogu_Umeko_Mike_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("コアラマイク");
								}
								else
								{
									if (!(text == "Odogu_OmuriceH"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("オムライスH");
								}
							}
							else if (num2 <= 1674450585u)
							{
								if (num2 != 1670539457u)
								{
									if (num2 != 1674450585u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_PC_Monitor_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("モニター");
								}
								else
								{
									if (!(text == "Odogu_Card_s7"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・スペード7");
								}
							}
							else if (num2 != 1674923694u)
							{
								if (num2 != 1675268793u)
								{
									if (num2 != 1686741061u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Pen_Brown_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ペン(茶)");
								}
								else
								{
									if (!(text == "BGodogu_omuriceh"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("オムライスH");
								}
							}
							else
							{
								if (!(text == "Odogu_Card_h7"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・ハート7");
							}
						}
						else if (num2 <= 1825101708u)
						{
							if (num2 <= 1734822112u)
							{
								if (num2 <= 1704094695u)
								{
									if (num2 <= 1699484795u)
									{
										if (num2 != 1691701313u)
										{
											if (num2 != 1699484795u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_PR_Table_Yousyoku_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("洋食テーブル");
										}
										else
										{
											if (!(text == "Odogu_Card_h6"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("カード・ハート6");
										}
									}
									else if (num2 != 1703720341u)
									{
										if (num2 != 1704094695u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_s1"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・スペードA");
									}
									else
									{
										if (!(text == "Odogu_Dresser_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ドレッサー");
									}
								}
								else if (num2 <= 1716110946u)
								{
									if (num2 != 1708478932u)
									{
										if (num2 != 1716110946u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_WasyokuSet_misoshiru_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("味噌汁");
									}
									else
									{
										if (!(text == "Odogu_Card_h1"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・ハートA");
									}
								}
								else if (num2 != 1720872314u)
								{
									if (num2 != 1734822112u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_SalonSofa_long_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ソファー");
								}
								else
								{
									if (!(text == "Odogu_Card_s2"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・スペード2");
								}
							}
							else if (num2 <= 1758811789u)
							{
								if (num2 <= 1742034170u)
								{
									if (num2 != 1737649933u)
									{
										if (num2 != 1742034170u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_h3"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・ハート3");
									}
									else
									{
										if (!(text == "Odogu_Card_s3"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・スペード3");
									}
								}
								else if (num2 != 1744616822u)
								{
									if (num2 != 1758811789u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Card_h2"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ハート2");
								}
								else
								{
									if (!(text == "Odogu_YousyokuSet_Hamburg_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ハンバーグ");
								}
							}
							else if (num2 <= 1784928596u)
							{
								if (num2 != 1770479309u)
								{
									if (num2 != 1784928596u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_ChuukaSet_gyouza_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("餃子");
								}
								else
								{
									if (!(text == "Odogu_VVLight_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("Wライト");
								}
							}
							else if (num2 != 1809336545u)
							{
								if (num2 != 1823102603u)
								{
									if (num2 != 1825101708u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGodogu_villa_winecellar"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ワインセラー");
								}
								else
								{
									if (!(text == "Odogu_WasyokuSet_nimono_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("煮物");
								}
							}
							else
							{
								if (!(text == "Odogu_Enpitsu_Black_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("鉛筆(黒)");
							}
						}
						else if (num2 <= 2016933682u)
						{
							if (num2 <= 1909509623u)
							{
								if (num2 <= 1845350244u)
								{
									if (num2 != 1836840438u)
									{
										if (num2 != 1845350244u)
										{
											goto IL_6AB3;
										}
										if (!(text == "BGOdogu_sp001_food"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("フードプレート");
									}
									else
									{
										if (!(text == "BGOdogu_Game_Wa"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("輪");
									}
								}
								else if (num2 != 1860203953u)
								{
									if (num2 != 1909509623u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Cocktail_Blue"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カクテル・青");
								}
								else
								{
									if (!(text == "Odogu_MaidRoomBook001_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("参考書A");
								}
							}
							else if (num2 <= 1962924469u)
							{
								if (num2 != 1924001326u)
								{
									if (num2 != 1962924469u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Sandwich"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("サンドイッチ");
								}
								else
								{
									if (!(text == "Odogu_WasyokuSet_hashi_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("箸");
								}
							}
							else if (num2 != 1967824364u)
							{
								if (num2 != 1990947846u)
								{
									if (num2 != 2016933682u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_ClassRoomDesk"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("教室机");
								}
								else
								{
									if (!(text == "Odogu_Jyouro"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("如雨露");
								}
							}
							else
							{
								if (!(text == "BGodogu_nabe_huta"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("鍋");
							}
						}
						else if (num2 <= 2072296816u)
						{
							if (num2 <= 2049079671u)
							{
								if (num2 != 2017278844u)
								{
									if (num2 != 2049079671u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGOdogu_sp002_omamori"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("お守り");
								}
								else
								{
									if (!(text == "Odogu_SalonScreen_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("スクリーン");
								}
							}
							else if (num2 != 2055264807u)
							{
								if (num2 != 2072296816u)
								{
									goto IL_6AB3;
								}
								if (!(text == "BGodogu_vf_crops_himawari"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("作物(向日葵)");
							}
							else
							{
								if (!(text == "Odogu_Sentakumono_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("洗濯物");
							}
						}
						else if (num2 <= 2131964186u)
						{
							if (num2 != 2101181530u)
							{
								if (num2 != 2131964186u)
								{
									goto IL_6AB3;
								}
								if (!(text == "BGodogu_omuriceoppai"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("オムライスおっぱい");
							}
							else
							{
								if (!(text == "BGodogu_coolerbox"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("クーラーボックス");
							}
						}
						else if (num2 != 2168601571u)
						{
							if (num2 != 2218695225u)
							{
								if (num2 != 2251189040u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_YousyokuSet_SakiwareSpoon_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("先割れスプーン");
							}
							else
							{
								if (!(text == "Odogu_HeroineChair_tsumdere"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("ツンデレ椅子");
							}
						}
						else
						{
							if (!(text == "Odogu_CasinoChip_1000"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("カジノチップ1000");
						}
					}
					else if (num2 <= 3294553651u)
					{
						if (num2 <= 2730247737u)
						{
							if (num2 <= 2435199394u)
							{
								if (num2 <= 2335864741u)
								{
									if (num2 <= 2302309503u)
									{
										if (num2 <= 2285531884u)
										{
											if (num2 != 2280646706u)
											{
												if (num2 != 2285531884u)
												{
													goto IL_6AB3;
												}
												if (!(text == "Odogu_Card_c13"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("カード・クラブK");
											}
											else
											{
												if (!(text == "BGodogu_ukiwa"))
												{
													goto IL_6AB3;
												}
												this.doguComboList[k] = new GUIContent("浮き輪");
											}
										}
										else if (num2 != 2289414659u)
										{
											if (num2 != 2302309503u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_Card_c12"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("カード・クラブQ");
										}
										else
										{
											if (!(text == "Odogu_KadomatsuMini_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("門松");
										}
									}
									else if (num2 <= 2319087122u)
									{
										if (num2 != 2311380370u)
										{
											if (num2 != 2319087122u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_Card_c11"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("カード・クラブJ");
										}
										else
										{
											if (!(text == "Odogu_PR_Table_Chuuka_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("中華テーブル");
										}
									}
									else if (num2 != 2328417498u)
									{
										if (num2 != 2335864741u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_c10"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・クラブ10");
									}
									else
									{
										if (!(text == "Odogu_WineGlass_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ワイングラス");
									}
								}
								else if (num2 <= 2401175018u)
								{
									if (num2 <= 2360267261u)
									{
										if (num2 != 2344157946u)
										{
											if (num2 != 2360267261u)
											{
												goto IL_6AB3;
											}
											if (!(text == "BGodogu_karaoke_box"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("箱");
										}
										else
										{
											if (!(text == "Odogu_PC_Keyboard_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("キーボード");
										}
									}
									else if (num2 != 2388917430u)
									{
										if (num2 != 2401175018u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Seikaku_Jyunshin"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("純真");
									}
									else
									{
										if (!(text == "Odogu_Condom_Close_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("コンドーム(閉)");
									}
								}
								else if (num2 <= 2412134646u)
								{
									if (num2 != 2406272749u)
									{
										if (num2 != 2412134646u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_VirginRoad_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("バージンロード");
									}
									else
									{
										if (!(text == "BGodogu_vf_kanban_saibai"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("");
									}
								}
								else if (num2 != 2413425204u)
								{
									if (num2 != 2424605882u)
									{
										if (num2 != 2435199394u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_SimpleTable"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("テーブル");
									}
									else
									{
										if (!(text == "Odogu_Styluspen_blue"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("スタイラスペン(青)");
									}
								}
								else
								{
									if (!(text == "BGodogu_furaidopoteto"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("フライドポテト");
								}
							}
							else if (num2 <= 2631893576u)
							{
								if (num2 <= 2473046585u)
								{
									if (num2 <= 2438157919u)
									{
										if (num2 != 2435285402u)
										{
											if (num2 != 2438157919u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_Mat_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("マット");
										}
										else
										{
											if (!(text == "Odogu_Pafe"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("パフェ");
										}
									}
									else if (num2 != 2471389777u)
									{
										if (num2 != 2473046585u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Nabe_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("鍋");
									}
									else
									{
										if (!(text == "Odogu_TrumpTowerSmall_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("トランプタワー(小)");
									}
								}
								else if (num2 <= 2518856562u)
								{
									if (num2 != 2486457890u)
									{
										if (num2 != 2518856562u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_WineBottle(cap_off)"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ワインボトル");
									}
									else
									{
										if (!(text == "BGOdogu"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ハニー");
									}
								}
								else if (num2 != 2523431457u)
								{
									if (num2 != 2631893576u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_PublicToiletBenki_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ベンキ");
								}
								else
								{
									if (!(text == "Odogu_BirthdayCake"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("バースデーケーキ");
								}
							}
							else if (num2 <= 2694703688u)
							{
								if (num2 <= 2676620466u)
								{
									if (num2 != 2664260971u)
									{
										if (num2 != 2676620466u)
										{
											goto IL_6AB3;
										}
										if (!(text == "BGodogu_sunanoshiro"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("砂の城");
									}
									else
									{
										if (!(text == "Odogu_CasinoChip_10"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カジノチップ10");
									}
								}
								else if (num2 != 2694684628u)
								{
									if (num2 != 2694703688u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Card_d10"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ダイヤ10");
								}
								else
								{
									if (!(text == "Odogu_Keshigomu_Purple_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("消しゴム(紫)");
								}
							}
							else if (num2 <= 2711481307u)
							{
								if (num2 != 2707752433u)
								{
									if (num2 != 2711481307u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Card_d11"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ダイヤJ");
								}
								else
								{
									if (!(text == "Odogu_Seikaku_Cool"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("クール");
								}
							}
							else if (num2 != 2714538534u)
							{
								if (num2 != 2728258926u)
								{
									if (num2 != 2730247737u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGodogu_pretzel_sara"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("スナックプレート");
								}
								else
								{
									if (!(text == "Odogu_Card_d12"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ダイヤQ");
								}
							}
							else
							{
								if (!(text == "Odogu_CardsDeck"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カードデッキ");
							}
						}
						else if (num2 <= 3024796573u)
						{
							if (num2 <= 2906117075u)
							{
								if (num2 <= 2745036545u)
								{
									if (num2 <= 2733407864u)
									{
										if (num2 != 2731341107u)
										{
											if (num2 != 2733407864u)
											{
												goto IL_6AB3;
											}
											if (!(text == "Odogu_Sentaku_Towel_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("重ねたタオル");
										}
										else
										{
											if (!(text == "BGOdogu_Game_Wanage"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("輪投げ");
										}
									}
									else if (num2 != 2735817241u)
									{
										if (num2 != 2745036545u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_d13"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・ダイヤK");
									}
									else
									{
										if (!(text == "Odogu_Sukebeisu_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("スケベ椅子");
									}
								}
								else if (num2 <= 2805952490u)
								{
									if (num2 != 2767638742u)
									{
										if (num2 != 2805952490u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Kousokudai_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("拘束台");
									}
									else
									{
										if (!(text == "nei_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ねい人形");
									}
								}
								else if (num2 != 2857636704u)
								{
									if (num2 != 2906117075u)
									{
										goto IL_6AB3;
									}
									if (!(text == "neirobo"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ロボねい人形");
								}
								else
								{
									if (!(text == "Odogu_WasyokuSet_ocha_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("緑茶");
								}
							}
							else if (num2 <= 2930141390u)
							{
								if (num2 <= 2921759677u)
								{
									if (num2 != 2920583404u)
									{
										if (num2 != 2921759677u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Styluspen_green"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("スタイラスペン(緑)");
									}
									else
									{
										if (!(text == "Odogu_PC_Mouse_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("マウス");
									}
								}
								else if (num2 != 2925280352u)
								{
									if (num2 != 2930141390u)
									{
										goto IL_6AB3;
									}
									if (!(text == "photo_ver/Odogu_Etoile_Chair_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ふかふかチェア");
								}
								else
								{
									if (!(text == "Odogu_MaidRoomChair_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("メイド部屋椅子");
								}
							}
							else if (num2 <= 2959365732u)
							{
								if (num2 != 2930732803u)
								{
									if (num2 != 2959365732u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGOdogu_sp001_cake"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ケーキ");
								}
								else
								{
									if (!(text == "BGodogu_vf_radio"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ラジオ");
								}
							}
							else if (num2 != 3013621816u)
							{
								if (num2 != 3014576419u)
								{
									if (num2 != 3024796573u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_AcquaPazza"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("アクアパッザ");
								}
								else
								{
									if (!(text == "Odogu_Keshigomu_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("消しゴム(青)");
								}
							}
							else
							{
								if (!(text == "Odogu_Coffiecup"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("コーヒーカップ");
							}
						}
						else if (num2 <= 3112156860u)
						{
							if (num2 <= 3073894054u)
							{
								if (num2 <= 3057866874u)
								{
									if (num2 != 3049025047u)
									{
										if (num2 != 3057866874u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Girochin_A_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ギロチン");
									}
									else
									{
										if (!(text == "BGodogu_rb_tokkuri"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("とっくり");
									}
								}
								else if (num2 != 3065687487u)
								{
									if (num2 != 3073894054u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_WineBottle(cap_on)"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ワインボトル(蓋)");
								}
								else
								{
									if (!(text == "BGanimal_dog"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("犬");
								}
							}
							else if (num2 <= 3100571376u)
							{
								if (num2 != 3082428348u)
								{
									if (num2 != 3100571376u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGodogu_game_darts"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ダーツ");
								}
								else
								{
									if (!(text == "Odogu_Manaita_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("まな板");
								}
							}
							else if (num2 != 3102812460u)
							{
								if (num2 != 3109014154u)
								{
									if (num2 != 3112156860u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Card_s13"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・スペードK");
								}
								else
								{
									if (!(text == "BGodogu_bbqgrill"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("バーベキューグリル");
								}
							}
							else
							{
								if (!(text == "Odogu_TrumpTowerBig_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("トランプタワー");
							}
						}
						else if (num2 <= 3162489717u)
						{
							if (num2 <= 3128934479u)
							{
								if (num2 != 3115215646u)
								{
									if (num2 != 3128934479u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Card_s12"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・スペードQ");
								}
								else
								{
									if (!(text == "Odogu_Pen_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ペン(桃)");
								}
							}
							else if (num2 != 3145712098u)
							{
								if (num2 != 3162489717u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_Card_s10"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・スペード10");
							}
							else
							{
								if (!(text == "Odogu_Card_s11"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・スペードJ");
							}
						}
						else if (num2 <= 3256958719u)
						{
							if (num2 != 3228528464u)
							{
								if (num2 != 3256958719u)
								{
									goto IL_6AB3;
								}
								if (!(text == "BGodogu_omuricekao1"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("オムライス顔1");
							}
							else
							{
								if (!(text == "BGOdogu_sp001_beerjug"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("ジョッキビール");
							}
						}
						else if (num2 != 3273736338u)
						{
							if (num2 != 3275216701u)
							{
								if (num2 != 3294553651u)
								{
									goto IL_6AB3;
								}
								if (!(text == "BGodogu_villa_tvrimocon"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("テレビリモコン");
							}
							else
							{
								if (!(text == "Odogu_Sentaku_Kago_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("洗濯かご");
							}
						}
						else
						{
							if (!(text == "BGodogu_omuricekao2"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("オムライス顔2");
						}
					}
					else if (num2 <= 3770301688u)
					{
						if (num2 <= 3585919522u)
						{
							if (num2 <= 3443607053u)
							{
								if (num2 <= 3391272421u)
								{
									if (num2 <= 3342033269u)
									{
										if (num2 != 3306961301u)
										{
											if (num2 != 3342033269u)
											{
												goto IL_6AB3;
											}
											if (!(text == "BGodogu_vf_crops_gekkabijin"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("作物(月下美人)");
										}
										else
										{
											if (!(text == "Odogu_OXCamera_photo_ver"))
											{
												goto IL_6AB3;
											}
											this.doguComboList[k] = new GUIContent("OXカメラ");
										}
									}
									else if (num2 != 3386921615u)
									{
										if (num2 != 3391272421u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_XmasTreeMini_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("クリスマスツリー");
									}
									else
									{
										if (!(text == "BGOdogu_Game_Nei_USB"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ねい人形USB");
									}
								}
								else if (num2 <= 3440190063u)
								{
									if (num2 != 3408306308u)
									{
										if (num2 != 3440190063u)
										{
											goto IL_6AB3;
										}
										if (!(text == "BGOdogu_sp002_tukimidango"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("月見団子");
									}
									else
									{
										if (!(text == "BGOdogu_sp002_waraningyou_gosunkugi"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("藁人形(釘)");
									}
								}
								else if (num2 != 3443011656u)
								{
									if (num2 != 3443607053u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_MariGold"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("マリーゴールド");
								}
								else
								{
									if (!(text == "BGOdogu_sp001_beercan"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("缶ビール");
								}
							}
							else if (num2 <= 3539855339u)
							{
								if (num2 <= 3461251991u)
								{
									if (num2 != 3458712040u)
									{
										if (num2 != 3461251991u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_MaidRoomBook003_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("参考書C");
									}
									else
									{
										if (!(text == "Odogu_WasyokuSet_gohan_photo_ver"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("ご飯");
									}
								}
								else if (num2 != 3487062331u)
								{
									if (num2 != 3539855339u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGOdogu_denkigai2018s_coneice_chocomint"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("アイス(チョコミント)");
								}
								else
								{
									if (!(text == "Odogu_Seikaku_Jyunshin_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("純真");
								}
							}
							else if (num2 <= 3575144398u)
							{
								if (num2 != 3544135236u)
								{
									if (num2 != 3575144398u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGOdogu_denkigai2018s_coneice_vanilla"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("アイス(バニラ)");
								}
								else
								{
									if (!(text == "BGodogu_saratomato"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("トマト皿");
								}
							}
							else if (num2 != 3575555389u)
							{
								if (num2 != 3585600784u)
								{
									if (num2 != 3585919522u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Cocktail_Red"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カクテル・赤");
								}
								else
								{
									if (!(text == "Odogu_Card_d9"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ダイヤ9");
								}
							}
							else
							{
								if (!(text == "Odogu_Condom_Pack_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("コンドーム(袋)");
							}
						}
						else if (num2 <= 3702962612u)
						{
							if (num2 <= 3610616026u)
							{
								if (num2 <= 3602378403u)
								{
									if (num2 != 3600313344u)
									{
										if (num2 != 3602378403u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_d8"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・ダイヤ8");
									}
									else
									{
										if (!(text == "BGodogu_tsutsuhanabi"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("筒花火");
									}
								}
								else if (num2 != 3605574358u)
								{
									if (num2 != 3610616026u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_SalonSofa_4P_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ソファー(大)");
								}
								else
								{
									if (!(text == "Odogu_Planter_Red"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("プランター(赤)");
								}
							}
							else if (num2 <= 3689410930u)
							{
								if (num2 != 3629902084u)
								{
									if (num2 != 3689410930u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGodogu_vf_crops_corn"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("作物(コーン)");
								}
								else
								{
									if (!(text == "Odogu_NoteBook_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ノート");
								}
							}
							else if (num2 != 3690630051u)
							{
								if (num2 != 3702962612u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_KadouChair_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("華道椅子");
							}
							else
							{
								if (!(text == "Odogu_StandMikeBase"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("スタンドマイクベース");
							}
						}
						else if (num2 <= 3739035417u)
						{
							if (num2 <= 3719821736u)
							{
								if (num2 != 3703191212u)
								{
									if (num2 != 3719821736u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Card_d1"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ダイヤA");
								}
								else
								{
									if (!(text == "Odogu_Card_c8"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・クラブ8");
								}
							}
							else if (num2 != 3719968831u)
							{
								if (num2 != 3739035417u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_Kadou_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("華道");
							}
							else
							{
								if (!(text == "Odogu_Card_c9"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・クラブ9");
							}
						}
						else if (num2 <= 3753376974u)
						{
							if (num2 != 3748475509u)
							{
								if (num2 != 3753376974u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_Card_d3"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・ダイヤ3");
							}
							else
							{
								if (!(text == "Odogu_TabletPC"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("タブレットPC");
							}
						}
						else if (num2 != 3758490318u)
						{
							if (num2 != 3770154593u)
							{
								if (num2 != 3770301688u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_Card_c4"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・クラブ4");
							}
							else
							{
								if (!(text == "Odogu_Card_d2"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・ダイヤ2");
							}
						}
						else
						{
							if (!(text == "Odogu_MaidRoomBook004_photo_ver"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("参考書D");
						}
					}
					else if (num2 <= 3885263705u)
					{
						if (num2 <= 3806891619u)
						{
							if (num2 <= 3793148475u)
							{
								if (num2 <= 3787079307u)
								{
									if (num2 != 3786932212u)
									{
										if (num2 != 3787079307u)
										{
											goto IL_6AB3;
										}
										if (!(text == "Odogu_Card_c5"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・クラブ5");
									}
									else
									{
										if (!(text == "Odogu_Card_d5"))
										{
											goto IL_6AB3;
										}
										this.doguComboList[k] = new GUIContent("カード・ダイヤ5");
									}
								}
								else if (num2 != 3792961544u)
								{
									if (num2 != 3793148475u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGOdogu_sp002_waraningyou"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("藁人形");
								}
								else
								{
									if (!(text == "Odogu_PR_Table_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("テーブル");
								}
							}
							else if (num2 <= 3803709831u)
							{
								if (num2 != 3794364054u)
								{
									if (num2 != 3803709831u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Card_d4"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ダイヤ4");
								}
								else
								{
									if (!(text == "Odogu_TableFlower_photo_ver"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("花とテーブル");
								}
							}
							else if (num2 != 3803856926u)
							{
								if (num2 != 3806891619u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_HandCameraVV_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("レトロカメラ");
							}
							else
							{
								if (!(text == "Odogu_Card_c6"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・クラブ6");
							}
						}
						else if (num2 <= 3833308618u)
						{
							if (num2 <= 3820634545u)
							{
								if (num2 != 3820487450u)
								{
									if (num2 != 3820634545u)
									{
										goto IL_6AB3;
									}
									if (!(text == "Odogu_Card_c7"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・クラブ7");
								}
								else
								{
									if (!(text == "Odogu_Card_d7"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・ダイヤ7");
								}
							}
							else if (num2 != 3830396838u)
							{
								if (num2 != 3833308618u)
								{
									goto IL_6AB3;
								}
								if (!(text == "BGOdogu_sp002_takebouki"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("竹帚");
							}
							else
							{
								if (!(text == "Odogu_PR_Table_Wasyoku_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("和食テーブル");
							}
						}
						else if (num2 <= 3854189783u)
						{
							if (num2 != 3837265069u)
							{
								if (num2 != 3854189783u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_Card_c1"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・クラブA");
							}
							else
							{
								if (!(text == "Odogu_Card_d6"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("カード・ダイヤ6");
							}
						}
						else if (num2 != 3870967402u)
						{
							if (num2 != 3883823873u)
							{
								if (num2 != 3885263705u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_Seikaku_Tsundere_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("ツンデレ");
							}
							else
							{
								if (!(text == "Odogu_HeroineChair_mazime"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("真面目椅子");
							}
						}
						else
						{
							if (!(text == "Odogu_Card_c2"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("カード・クラブ2");
						}
					}
					else if (num2 <= 4075381898u)
					{
						if (num2 <= 3921842955u)
						{
							if (num2 <= 3889530859u)
							{
								if (num2 != 3887745021u)
								{
									if (num2 != 3889530859u)
									{
										goto IL_6AB3;
									}
									if (!(text == "BGOdogu_denkigai2018s_beachball_yellow"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("ビーチボール(黄)");
								}
								else
								{
									if (!(text == "Odogu_Card_c3"))
									{
										goto IL_6AB3;
									}
									this.doguComboList[k] = new GUIContent("カード・クラブ3");
								}
							}
							else if (num2 != 3902501524u)
							{
								if (num2 != 3921842955u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_vichyssoise"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("スープ");
							}
							else
							{
								if (!(text == "Odogu_MontBlanc"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("モンブラン");
							}
						}
						else if (num2 <= 4035939777u)
						{
							if (num2 != 3991494149u)
							{
								if (num2 != 4035939777u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_Enpitsu_Red_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("鉛筆(赤)");
							}
							else
							{
								if (!(text == "Odogu_HeroineChair_junshin"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("純真椅子");
							}
						}
						else if (num2 != 4038541241u)
						{
							if (num2 != 4061776986u)
							{
								if (num2 != 4075381898u)
								{
									goto IL_6AB3;
								}
								if (!(text == "Odogu_Pen_Black_photo_ver"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("ペン(黒)");
							}
							else
							{
								if (!(text == "Odogu_HeroineChair_muku"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("無垢椅子");
							}
						}
						else
						{
							if (!(text == "BGOdogu_sp001_yakisoba"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("焼きそば");
						}
					}
					else if (num2 <= 4174356387u)
					{
						if (num2 <= 4148627356u)
						{
							if (num2 != 4112326331u)
							{
								if (num2 != 4148627356u)
								{
									goto IL_6AB3;
								}
								if (!(text == "BGodogu_saracorn"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("コーン皿");
							}
							else
							{
								if (!(text == "BGOdogu_denkigai2018s_beachball_blue"))
								{
									goto IL_6AB3;
								}
								this.doguComboList[k] = new GUIContent("ビーチボール(青)");
							}
						}
						else if (num2 != 4166874514u)
						{
							if (num2 != 4174356387u)
							{
								goto IL_6AB3;
							}
							if (!(text == "BGodogu_nabe_water"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("鍋");
						}
						else
						{
							if (!(text == "Odogu_Keshigomu_Yellow_photo_ver"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("消しゴム(黄)");
						}
					}
					else if (num2 <= 4236804898u)
					{
						if (num2 != 4216236839u)
						{
							if (num2 != 4236804898u)
							{
								goto IL_6AB3;
							}
							if (!(text == "Odogu_Card_joker"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("カード・ジョーカー");
						}
						else
						{
							if (!(text == "BGOdogu_denkigai2018s_melondish"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("メロン");
						}
					}
					else if (num2 != 4239604969u)
					{
						if (num2 != 4262720540u)
						{
							if (num2 != 4282773125u)
							{
								goto IL_6AB3;
							}
							if (!(text == "BGodogu_rb_chair"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("風呂椅子");
						}
						else
						{
							if (!(text == "Odogu_PC_photo_ver"))
							{
								goto IL_6AB3;
							}
							this.doguComboList[k] = new GUIContent("PC");
						}
					}
					else
					{
						if (!(text == "BGodogu_saraimo"))
						{
							goto IL_6AB3;
						}
						this.doguComboList[k] = new GUIContent("イモ皿");
					}
					IL_6AC9:
					k++;
					continue;
					IL_6AB3:
					this.doguComboList[k] = new GUIContent(Class1.doguBArray[k]);
					goto IL_6AC9;
				}
				this.parCombo.selectedItemIndex = 0;
				this.parComboList = new GUIContent[this.parArray.Length];
				int l = 0;
				while (l < this.parArray.Length)
				{
					string text = this.parArray[l];
					uint num2 = <PrivateImplementationDetails>.ComputeStringHash(text);
					if (num2 <= 1079598724u)
					{
						if (num2 <= 444674986u)
						{
							if (num2 <= 255294181u)
							{
								if (num2 <= 149366928u)
								{
									if (num2 != 5040799u)
									{
										if (num2 != 149366928u)
										{
											goto IL_7655;
										}
										if (!(text == "Mob_Girl_Stand003"))
										{
											goto IL_7655;
										}
										this.parComboList[l] = new GUIContent("モブ女3");
									}
									else
									{
										if (!(text == "p_yuge_large_photo_ver"))
										{
											goto IL_7655;
										}
										this.parComboList[l] = new GUIContent("湯気2");
									}
								}
								else if (num2 != 166144547u)
								{
									if (num2 != 182922166u)
									{
										if (num2 != 255294181u)
										{
											goto IL_7655;
										}
										if (!(text == "p_steam_black_photo_ver"))
										{
											goto IL_7655;
										}
										this.parComboList[l] = new GUIContent("スチーム(黒)");
									}
									else
									{
										if (!(text == "Mob_Girl_Stand001"))
										{
											goto IL_7655;
										}
										this.parComboList[l] = new GUIContent("モブ女1");
									}
								}
								else
								{
									if (!(text == "Mob_Girl_Stand002"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("モブ女2");
								}
							}
							else if (num2 <= 411119748u)
							{
								if (num2 != 281238771u)
								{
									if (num2 != 381904485u)
									{
										if (num2 != 411119748u)
										{
											goto IL_7655;
										}
										if (!(text == "Mob_Girl_Sit003"))
										{
											goto IL_7655;
										}
										this.parComboList[l] = new GUIContent("モブ女3 座り");
									}
									else
									{
										if (!(text == "Salon:65"))
										{
											goto IL_7655;
										}
										this.parComboList[l] = new GUIContent("ステージライト(黄)");
									}
								}
								else
								{
									if (!(text == "Salon:63"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("ステージライト(赤)");
								}
							}
							else if (num2 != 411323335u)
							{
								if (num2 != 427897367u)
								{
									if (num2 != 444674986u)
									{
										goto IL_7655;
									}
									if (!(text == "Mob_Girl_Sit001"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("モブ女1 座り");
								}
								else
								{
									if (!(text == "Mob_Girl_Sit002"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("モブ女2 座り");
								}
							}
							else
							{
								if (!(text == "p_steam002_photo_ver"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("スチーム");
							}
						}
						else if (num2 <= 750965800u)
						{
							if (num2 <= 568668855u)
							{
								if (num2 != 449014961u)
								{
									if (num2 != 490917674u)
									{
										if (num2 != 568668855u)
										{
											goto IL_7655;
										}
										if (!(text == "OutletPark:54"))
										{
											goto IL_7655;
										}
										this.parComboList[l] = new GUIContent("青空");
									}
									else
									{
										if (!(text == "p_soap_photo_ver"))
										{
											goto IL_7655;
										}
										this.parComboList[l] = new GUIContent("手元の泡");
									}
								}
								else
								{
									if (!(text == "Salon:69"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("ステージライト(青)");
								}
							}
							else if (num2 != 701680848u)
							{
								if (num2 != 718458467u)
								{
									if (num2 != 750965800u)
									{
										goto IL_7655;
									}
									if (!(text == "Mob_Man_Sit001"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("モブ男1 座り");
								}
								else
								{
									if (!(text == "mirror3"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("鏡(メイド部屋用)");
								}
							}
							else
							{
								if (!(text == "mirror2"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("鏡(縦長)");
							}
						}
						else if (num2 <= 801298657u)
						{
							if (num2 != 752013705u)
							{
								if (num2 != 784521038u)
								{
									if (num2 != 801298657u)
									{
										goto IL_7655;
									}
									if (!(text == "Mob_Man_Sit002"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("モブ男2 座り");
								}
								else
								{
									if (!(text == "Mob_Man_Sit003"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("モブ男3 座り");
								}
							}
							else
							{
								if (!(text == "mirror1"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("鏡");
							}
						}
						else if (num2 != 882907016u)
						{
							if (num2 != 925476321u)
							{
								if (num2 != 1079598724u)
								{
									goto IL_7655;
								}
								if (!(text == "p_powder_snow_photo_ver"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("粉雪");
							}
							else
							{
								if (!(text == "p_dance_star_photo_ver"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("星");
							}
						}
						else
						{
							if (!(text == "Particle/pLineP02"))
							{
								goto IL_7655;
							}
							this.parComboList[l] = new GUIContent("ライン：ハート");
						}
					}
					else if (num2 <= 1883284664u)
					{
						if (num2 <= 1686165852u)
						{
							if (num2 <= 1167619070u)
							{
								if (num2 != 1098275053u)
								{
									if (num2 != 1167619070u)
									{
										goto IL_7655;
									}
									if (!(text == "Particle/pstarY_act2"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("流れ星");
								}
								else
								{
									if (!(text == "p_soap_bukubuku_photo_ver"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("泡");
								}
							}
							else if (num2 != 1335351367u)
							{
								if (num2 != 1640729619u)
								{
									if (num2 != 1686165852u)
									{
										goto IL_7655;
									}
									if (!(text == "p_smoke_dance_photo_ver"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("煙");
								}
								else
								{
									if (!(text == "Salon_Entrance:4"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("ドア(右)");
								}
							}
							else
							{
								if (!(text == "Pool:26"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("水面");
							}
						}
						else if (num2 <= 1707840095u)
						{
							if (num2 != 1691062476u)
							{
								if (num2 != 1697626006u)
								{
									if (num2 != 1707840095u)
									{
										goto IL_7655;
									}
									if (!(text == "Salon_Entrance:0"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("エントランス(扉無し)");
								}
								else
								{
									if (!(text == "Shitsumu:23"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("執務室(外・昼)");
								}
							}
							else
							{
								if (!(text == "Salon_Entrance:1"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("ホールドア(左)");
							}
						}
						else if (num2 != 1724617714u)
						{
							if (num2 != 1741395333u)
							{
								if (num2 != 1883284664u)
								{
									goto IL_7655;
								}
								if (!(text == "Mob_Man_Stand001"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("モブ男1");
							}
							else
							{
								if (!(text == "Salon_Entrance:2"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("ホールドア(右)");
							}
						}
						else
						{
							if (!(text == "Salon_Entrance:3"))
							{
								goto IL_7655;
							}
							this.parComboList[l] = new GUIContent("ドア(左)");
						}
					}
					else if (num2 <= 2441275553u)
					{
						if (num2 <= 1933617521u)
						{
							if (num2 != 1906645853u)
							{
								if (num2 != 1916839902u)
								{
									if (num2 != 1933617521u)
									{
										goto IL_7655;
									}
									if (!(text == "Mob_Man_Stand002"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("モブ男2");
								}
								else
								{
									if (!(text == "Mob_Man_Stand003"))
									{
										goto IL_7655;
									}
									this.parComboList[l] = new GUIContent("モブ男3");
								}
							}
							else
							{
								if (!(text == "Particle/pLine_act2"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("星2");
							}
						}
						else if (num2 != 2175670628u)
						{
							if (num2 != 2194181939u)
							{
								if (num2 != 2441275553u)
								{
									goto IL_7655;
								}
								if (!(text == "Shitsumu_Night:23"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("執務室(外・夜)");
							}
							else
							{
								if (!(text == "p_mizu001_photo_ver"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("水");
							}
						}
						else
						{
							if (!(text == "p_powder_snow2_photo_ver"))
							{
								goto IL_7655;
							}
							this.parComboList[l] = new GUIContent("粉雪2");
						}
					}
					else if (num2 <= 3215188505u)
					{
						if (num2 != 2532817903u)
						{
							if (num2 != 2650217996u)
							{
								if (num2 != 3215188505u)
								{
									goto IL_7655;
								}
								if (!(text == "Particle/pLineY"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("ライン：星");
							}
							else
							{
								if (!(text == "p_soap_bubble01_photo_ver"))
								{
									goto IL_7655;
								}
								this.parComboList[l] = new GUIContent("泡(空間)");
							}
						}
						else
						{
							if (!(text == "Particle/pHeart01"))
							{
								goto IL_7655;
							}
							this.parComboList[l] = new GUIContent("ハート");
						}
					}
					else if (num2 != 3294395994u)
					{
						if (num2 != 3647690917u)
						{
							if (num2 != 3917748081u)
							{
								goto IL_7655;
							}
							if (!(text == "HoneymoonRoom:102"))
							{
								goto IL_7655;
							}
							this.parComboList[l] = new GUIContent("夜景");
						}
						else
						{
							if (!(text == "p_kamihubuki_photo_ver"))
							{
								goto IL_7655;
							}
							this.parComboList[l] = new GUIContent("紙吹雪");
						}
					}
					else
					{
						if (!(text == "p_steam001_photo_ver"))
						{
							goto IL_7655;
						}
						this.parComboList[l] = new GUIContent("湯気1");
					}
					IL_766C:
					l++;
					continue;
					IL_7655:
					this.parComboList[l] = new GUIContent(this.parArray[l]);
					goto IL_766C;
				}
				this.lightCombo.selectedItemIndex = 0;
				this.lightList = new List<GameObject>();
				this.lightList.Add(GameMain.Instance.MainLight.gameObject);
				this.lightComboList = new GUIContent[this.lightList.Count];
				for (int m = 0; m < this.lightList.Count; m++)
				{
					if (m == 0)
					{
						this.lightComboList[m] = new GUIContent("メイン");
					}
					else
					{
						this.lightComboList[m] = new GUIContent("追加" + m);
					}
				}
				this.kankyoInitFlg = true;
			}
			this.listStyle3.padding.top = this.GetPix(1);
			this.listStyle3.padding.bottom = this.GetPix(0);
			this.listStyle3.fontSize = this.GetPix(12);
			if (this.poseCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			if (this.poseGroupCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			if (this.sceneLevel == 3 || this.sceneLevel == 5 || this.isF6)
			{
				if (!this.isF6)
				{
					bool value = true;
					if (this.faceFlg || this.poseFlg || this.sceneFlg || this.kankyoFlg || this.kankyo2Flg)
					{
						value = false;
					}
					if (GUI.Toggle(new Rect((float)this.GetPix(2), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), value, "配置", guistyle6))
					{
						this.faceFlg = false;
						this.poseFlg = false;
						this.sceneFlg = false;
						this.kankyoFlg = false;
						this.kankyo2Flg = false;
						this.bGui = true;
						this.isGuiInit = true;
					}
				}
				if (!this.yotogiFlg && GUI.Toggle(new Rect((float)this.GetPix(42), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.poseFlg, "操作", guistyle6))
				{
					this.poseFlg = true;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(82), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.faceFlg, "表情", guistyle6))
				{
					this.faceFlg = true;
					this.poseFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
					if (!this.faceFlg2)
					{
						this.isFaceInit = true;
						this.faceFlg2 = true;
						this.maidArray[this.selectMaidIndex].boMabataki = false;
						this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
					}
					this.isFaceInit = true;
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(122), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.kankyoFlg, "環境", guistyle6))
				{
					this.poseFlg = false;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = true;
					this.kankyo2Flg = false;
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(162), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.kankyo2Flg, "環2", guistyle6))
				{
					this.poseFlg = false;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = true;
				}
				if (!this.line1)
				{
					this.line1 = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.3f));
					this.line2 = this.MakeTex(2, 2, new Color(0.7f, 0.7f, 0.7f, 0.6f));
				}
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(200), 2f), this.line1);
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(200), 1f), this.line2);
			}
			if (this.isDanceStop)
			{
				this.isStop[this.selectMaidIndex] = true;
				this.isDanceStop = false;
			}
			this.yotogiFlg = false;
			if (this.sceneLevel == 14 && GameObject.Find("/UI Root/YotogiPlayPanel/CommandViewer/SkillViewer/MaskGroup/SkillGroup/CommandParent/CommandUnit"))
			{
				this.yotogiFlg = true;
			}
			if (!this.isF6 && GUI.Button(new Rect((float)this.GetPix(157), (float)this.GetPix(32), (float)this.GetPix(46), (float)this.GetPix(35)), "シーン\n 管 理", guistyle3))
			{
				this.sceneFlg = true;
				this.faceFlg = false;
				this.poseFlg = false;
				this.kankyoFlg = false;
				this.kankyo2Flg = false;
				this.bGui = true;
				for (int n = 0; n < 10; n++)
				{
					this.date[n] = "未保存";
					this.ninzu[n] = "";
					IniKey iniKey = base.Preferences["scene"]["s" + (this.page * 10 + n + 1)];
					if (iniKey.Value != null && iniKey.Value.ToString() != "")
					{
						string[] array = iniKey.Value.Split(new char[]
						{
							'_'
						});
						if (array.Length >= 2)
						{
							string[] array2 = array[0].Split(new char[]
							{
								','
							});
							this.date[n] = array2[0];
							this.ninzu[n] = array2[1] + "人";
						}
					}
				}
			}
			if (this.doguCombo.isClickedComboButton || this.parCombo.isClickedComboButton || this.bgCombo.isClickedComboButton || this.bgmCombo.isClickedComboButton || this.lightCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			int num3 = -1;
			if (this.lightIndex[this.selectLightIndex] == 0)
			{
				this.isIdx1 = true;
			}
			if (this.lightIndex[this.selectLightIndex] == 1)
			{
				this.isIdx2 = true;
			}
			if (this.lightIndex[this.selectLightIndex] == 2)
			{
				this.isIdx3 = true;
			}
			if (this.lightIndex[this.selectLightIndex] == 3)
			{
				this.isIdx4 = true;
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(215), (float)this.GetPix(45), (float)this.GetPix(20)), this.isIdx1, "通常", guistyle6) && this.lightIndex[this.selectLightIndex] != 0)
			{
				this.isIdx1 = true;
				this.isIdx2 = false;
				this.isIdx3 = false;
				this.isIdx4 = false;
				num3 = 0;
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(50), (float)this.GetPix(215), (float)this.GetPix(45), (float)this.GetPix(20)), this.isIdx2, "Spot", guistyle6) && this.lightIndex[this.selectLightIndex] != 1)
			{
				this.isIdx1 = false;
				this.isIdx2 = true;
				this.isIdx3 = false;
				this.isIdx4 = false;
				num3 = 1;
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(99), (float)this.GetPix(215), (float)this.GetPix(45), (float)this.GetPix(20)), this.isIdx3, "Point", guistyle6) && this.lightIndex[this.selectLightIndex] != 2)
			{
				this.isIdx1 = false;
				this.isIdx2 = false;
				this.isIdx3 = true;
				this.isIdx4 = false;
				num3 = 2;
			}
			if (this.selectLightIndex == 0)
			{
				if (GUI.Toggle(new Rect((float)this.GetPix(150), (float)this.GetPix(215), (float)this.GetPix(45), (float)this.GetPix(20)), this.isIdx4, "単色", guistyle6) && this.lightIndex[this.selectLightIndex] != 3)
				{
					this.isIdx1 = false;
					this.isIdx2 = false;
					this.isIdx3 = false;
					this.isIdx4 = true;
					num3 = 3;
				}
			}
			else if (GUI.Toggle(new Rect((float)this.GetPix(150), (float)this.GetPix(215), (float)this.GetPix(45), (float)this.GetPix(20)), this.isIdx4, "無効", guistyle6) && this.lightIndex[this.selectLightIndex] != 3)
			{
				this.isIdx1 = false;
				this.isIdx2 = false;
				this.isIdx3 = false;
				this.isIdx4 = true;
				num3 = 3;
			}
			if (num3 >= 0)
			{
				this.lightIndex[this.selectLightIndex] = num3;
				if (this.selectLightIndex == 0)
				{
					GameMain.Instance.MainLight.Reset();
					GameMain.Instance.MainLight.SetIntensity(0.95f);
					GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 50f;
					GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
					GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
					if (this.lightIndex[this.selectLightIndex] == 0)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
						this.bgObject.SetActive(true);
						this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
					}
					else if (this.lightIndex[this.selectLightIndex] == 1)
					{
						GameMain.Instance.MainLight.transform.eulerAngles += Vector3.right * 40f;
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Spot;
						this.bgObject.SetActive(true);
						this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
					}
					else if (this.lightIndex[this.selectLightIndex] == 2)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Point;
						this.bgObject.SetActive(true);
						this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
					}
					else if (this.lightIndex[this.selectLightIndex] == 3)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
						this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						this.bgObject.SetActive(false);
					}
				}
				else
				{
					this.lightList[this.selectLightIndex].SetActive(true);
					if (this.lightIndex[this.selectLightIndex] == 0)
					{
						this.lightList[this.selectLightIndex].GetComponent<Light>().type = LightType.Directional;
					}
					else if (this.lightIndex[this.selectLightIndex] == 1)
					{
						this.lightList[this.selectLightIndex].transform.eulerAngles += Vector3.right * 40f;
						this.lightList[this.selectLightIndex].GetComponent<Light>().type = LightType.Spot;
					}
					else if (this.lightIndex[this.selectLightIndex] == 2)
					{
						this.lightList[this.selectLightIndex].GetComponent<Light>().type = LightType.Point;
					}
					else if (this.lightIndex[this.selectLightIndex] == 3)
					{
						this.lightList[this.selectLightIndex].GetComponent<Light>().type = LightType.Directional;
						this.lightList[this.selectLightIndex].SetActive(false);
					}
				}
				this.lightColorR[this.selectLightIndex] = 1f;
				this.lightColorG[this.selectLightIndex] = 1f;
				this.lightColorB[this.selectLightIndex] = 1f;
				this.lightX[this.selectLightIndex] = 40f;
				this.lightY[this.selectLightIndex] = 180f;
				this.lightAkarusa[this.selectLightIndex] = 0.95f;
				this.lightKage[this.selectLightIndex] = 0.098f;
				this.lightRange[this.selectLightIndex] = 50f;
				if (this.lightIndex[this.selectLightIndex] == 1)
				{
					this.lightX[this.selectLightIndex] = 90f;
				}
			}
			GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(138), (float)this.GetPix(100), (float)this.GetPix(25)), "キューブ表示", guistyle2);
			guistyle6.fontSize = this.GetPix(12);
			this.isCube2 = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(153), (float)this.GetPix(55), (float)this.GetPix(20)), this.isCube2, "大道具(", guistyle6);
			if (!this.isF6)
			{
				this.isCube = GUI.Toggle(new Rect((float)this.GetPix(102), (float)this.GetPix(153), (float)this.GetPix(54), (float)this.GetPix(20)), this.isCube, "メイド", guistyle6);
			}
			bool flag = GUI.Toggle(new Rect((float)this.GetPix(160), (float)this.GetPix(153), (float)this.GetPix(44), (float)this.GetPix(20)), this.isCube3, "背景", guistyle6);
			guistyle6.fontSize = this.GetPix(13);
			bool flag2 = GUI.Toggle(new Rect((float)this.GetPix(61), (float)this.GetPix(153), (float)this.GetPix(38), (float)this.GetPix(20)), this.isCubeS, "小)", guistyle6);
			if (this.isCubeS != flag2)
			{
				this.isCubeS = flag2;
				if (this.isCubeS)
				{
					this.cubeSize = 0.05f;
				}
				else
				{
					this.cubeSize = 0.12f;
				}
				for (int num4 = 0; num4 < this.doguBObject.Count; num4++)
				{
					this.gDogu[num4].transform.localScale = new Vector3(this.cubeSize, this.cubeSize, this.cubeSize);
				}
			}
			if (this.isCube3 != flag)
			{
				this.isCube3 = flag;
				if (this.gBg == null)
				{
					this.gBg = GameObject.CreatePrimitive(PrimitiveType.Cube);
					this.gBg.GetComponent<Renderer>().material = this.m_material;
					this.gBg.layer = 8;
					this.gBg.GetComponent<Renderer>().enabled = false;
					this.gBg.SetActive(false);
					this.gBg.transform.position = this.bgObject.transform.position;
					this.mBg = this.gBg.AddComponent<MouseDrag6>();
					this.mBg.obj = this.gBg;
					this.mBg.maid = this.bgObject;
					this.mBg.angles = this.bg.eulerAngles;
					this.gBg.transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
					this.mBg.ido = 1;
					this.mBg.isScale = false;
				}
				if (this.isCube3)
				{
					this.gBg.SetActive(true);
				}
				else
				{
					this.gBg.SetActive(false);
				}
			}
			int num5 = 0;
			if (this.lightIndex[this.selectLightIndex] == 0 || this.lightIndex[this.selectLightIndex] == 1 || (this.selectLightIndex == 0 && this.lightIndex[this.selectLightIndex] == 3))
			{
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(237), (float)this.GetPix(100), (float)this.GetPix(25)), "向きX", guistyle2);
				this.lightX[this.selectLightIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(251), (float)this.GetPix(192), (float)this.GetPix(20)), this.lightX[this.selectLightIndex], 220f, -140f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(261), (float)this.GetPix(100), (float)this.GetPix(25)), "向きY", guistyle2);
				this.lightY[this.selectLightIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(275), (float)this.GetPix(192), (float)this.GetPix(20)), this.lightY[this.selectLightIndex], 0f, 360f);
			}
			else
			{
				num5 = 50;
			}
			if (this.lightIndex[this.selectLightIndex] != 3 || this.selectLightIndex <= 0)
			{
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(285 - num5), (float)this.GetPix(100), (float)this.GetPix(25)), "明るさ", guistyle2);
				this.lightAkarusa[this.selectLightIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(299 - num5), (float)this.GetPix(192), (float)this.GetPix(20)), this.lightAkarusa[this.selectLightIndex], 0f, 1.9f);
				if (this.lightIndex[this.selectLightIndex] == 0 || this.lightIndex[this.selectLightIndex] == 3)
				{
					if (this.selectLightIndex == 0)
					{
						GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(309 - num5), (float)this.GetPix(100), (float)this.GetPix(25)), "影", guistyle2);
						this.lightKage[this.selectLightIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(323 - num5), (float)this.GetPix(192), (float)this.GetPix(20)), this.lightKage[this.selectLightIndex], 0f, 1f);
					}
					else
					{
						num5 = 25;
					}
				}
				else if (this.lightIndex[this.selectLightIndex] == 1 || this.lightIndex[this.selectLightIndex] == 2)
				{
					GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(311 - num5), (float)this.GetPix(100), (float)this.GetPix(25)), "範囲", guistyle2);
					this.lightRange[this.selectLightIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(325 - num5), (float)this.GetPix(192), (float)this.GetPix(20)), this.lightRange[this.selectLightIndex], 0f, 150f);
				}
				else
				{
					num5 = 75;
				}
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(333 - num5), (float)this.GetPix(100), (float)this.GetPix(25)), "赤", guistyle2);
				this.lightColorR[this.selectLightIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(347 - num5), (float)this.GetPix(92), (float)this.GetPix(20)), this.lightColorR[this.selectLightIndex], 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(108), (float)this.GetPix(333 - num5), (float)this.GetPix(100), (float)this.GetPix(25)), "緑", guistyle2);
				this.lightColorG[this.selectLightIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(347 - num5), (float)this.GetPix(92), (float)this.GetPix(20)), this.lightColorG[this.selectLightIndex], 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(357 - num5), (float)this.GetPix(100), (float)this.GetPix(25)), "青", guistyle2);
				this.lightColorB[this.selectLightIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(371 - num5), (float)this.GetPix(92), (float)this.GetPix(20)), this.lightColorB[this.selectLightIndex], 0f, 1f);
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(391), (float)this.GetPix(67), (float)this.GetPix(20)), this.isBloomS, "ブルーム", guistyle6))
			{
				this.isBloomS = true;
				this.isDepthS = false;
				this.isBlurS = false;
				this.isFogS = false;
			}
			if (this.isBloomS)
			{
				this.isBloom = GUI.Toggle(new Rect((float)this.GetPix(8), (float)this.GetPix(412), (float)this.GetPix(40), (float)this.GetPix(20)), this.isBloom, "有効", guistyle6);
				if (!this.isBloom)
				{
					GUI.enabled = false;
				}
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(430), (float)this.GetPix(100), (float)this.GetPix(25)), "強さ", guistyle2);
				this.bloom1 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(445), (float)this.GetPix(92), (float)this.GetPix(20)), this.bloom1, 0f, 5.7f);
				GUI.Label(new Rect((float)this.GetPix(110), (float)this.GetPix(430), (float)this.GetPix(100), (float)this.GetPix(25)), "広さ", guistyle2);
				this.bloom2 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(445), (float)this.GetPix(92), (float)this.GetPix(20)), this.bloom2, 0f, 15f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(455), (float)this.GetPix(100), (float)this.GetPix(25)), "赤", guistyle2);
				this.bloom3 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(470), (float)this.GetPix(92), (float)this.GetPix(20)), this.bloom3, 0f, 0.5f);
				GUI.Label(new Rect((float)this.GetPix(110), (float)this.GetPix(455), (float)this.GetPix(100), (float)this.GetPix(25)), "緑", guistyle2);
				this.bloom4 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(470), (float)this.GetPix(92), (float)this.GetPix(20)), this.bloom4, 0f, 0.5f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(480), (float)this.GetPix(100), (float)this.GetPix(25)), "青", guistyle2);
				this.bloom5 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(495), (float)this.GetPix(92), (float)this.GetPix(20)), this.bloom5, 0f, 0.5f);
				this.isBloomA = GUI.Toggle(new Rect((float)this.GetPix(110), (float)this.GetPix(491), (float)this.GetPix(50), (float)this.GetPix(20)), this.isBloomA, "HDR", guistyle6);
				if (!this.doguCombo.isClickedComboButton && !this.parCombo.isClickedComboButton && !this.bgCombo.isClickedComboButton && !this.bgmCombo.isClickedComboButton)
				{
					GUI.enabled = true;
				}
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(73), (float)this.GetPix(391), (float)this.GetPix(40), (float)this.GetPix(20)), this.isDepthS, "深度", guistyle6))
			{
				this.isBloomS = false;
				this.isDepthS = true;
				this.isBlurS = false;
				this.isFogS = false;
			}
			if (this.isDepthS)
			{
				this.isDepth = GUI.Toggle(new Rect((float)this.GetPix(8), (float)this.GetPix(412), (float)this.GetPix(40), (float)this.GetPix(20)), this.isDepth, "有効", guistyle6);
				if (!this.isDepth)
				{
					GUI.enabled = false;
				}
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(430), (float)this.GetPix(100), (float)this.GetPix(25)), "焦点距離", guistyle2);
				this.depth1 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(445), (float)this.GetPix(192), (float)this.GetPix(20)), this.depth1, 0f, 10f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(455), (float)this.GetPix(100), (float)this.GetPix(25)), "焦点領域サイズ", guistyle2);
				this.depth2 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(470), (float)this.GetPix(92), (float)this.GetPix(20)), this.depth2, 0f, 2f);
				GUI.Label(new Rect((float)this.GetPix(110), (float)this.GetPix(455), (float)this.GetPix(100), (float)this.GetPix(25)), "カメラ絞り", guistyle2);
				this.depth3 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(470), (float)this.GetPix(92), (float)this.GetPix(20)), this.depth3, 0f, 60f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(480), (float)this.GetPix(100), (float)this.GetPix(25)), "ブレ", guistyle2);
				this.depth4 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(495), (float)this.GetPix(92), (float)this.GetPix(20)), this.depth4, 0f, 10f);
				this.isDepthA = GUI.Toggle(new Rect((float)this.GetPix(110), (float)this.GetPix(491), (float)this.GetPix(100), (float)this.GetPix(20)), this.isDepthA, "深度表示", guistyle6);
				if (!this.doguCombo.isClickedComboButton && !this.parCombo.isClickedComboButton && !this.bgCombo.isClickedComboButton && !this.bgmCombo.isClickedComboButton)
				{
					GUI.enabled = true;
				}
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(114), (float)this.GetPix(391), (float)this.GetPix(40), (float)this.GetPix(20)), this.isBlurS, "光学", guistyle6))
			{
				this.isBloomS = false;
				this.isDepthS = false;
				this.isBlurS = true;
				this.isFogS = false;
			}
			if (this.isBlurS)
			{
				this.isBlur = GUI.Toggle(new Rect((float)this.GetPix(8), (float)this.GetPix(412), (float)this.GetPix(40), (float)this.GetPix(20)), this.isBlur, "有効", guistyle6);
				if (!this.isBlur)
				{
					GUI.enabled = false;
				}
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(430), (float)this.GetPix(100), (float)this.GetPix(25)), "強さ", guistyle2);
				this.blur1 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(445), (float)this.GetPix(92), (float)this.GetPix(20)), this.blur1, -40f, 70f);
				GUI.Label(new Rect((float)this.GetPix(108), (float)this.GetPix(430), (float)this.GetPix(100), (float)this.GetPix(25)), "ブラー", guistyle2);
				this.blur2 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(445), (float)this.GetPix(92), (float)this.GetPix(20)), this.blur2, 0f, 5f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(455), (float)this.GetPix(100), (float)this.GetPix(25)), "ブレ", guistyle2);
				this.blur3 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(470), (float)this.GetPix(92), (float)this.GetPix(20)), this.blur3, 0f, 40f);
				GUI.Label(new Rect((float)this.GetPix(108), (float)this.GetPix(455), (float)this.GetPix(100), (float)this.GetPix(25)), "色収差", guistyle2);
				this.blur4 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(470), (float)this.GetPix(92), (float)this.GetPix(20)), this.blur4, -30f, 30f);
				if (!this.doguCombo.isClickedComboButton && !this.parCombo.isClickedComboButton && !this.bgCombo.isClickedComboButton && !this.bgmCombo.isClickedComboButton)
				{
					GUI.enabled = true;
				}
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(155), (float)this.GetPix(391), (float)this.GetPix(60), (float)this.GetPix(20)), this.isFogS, "フォグ", guistyle6))
			{
				this.isBloomS = false;
				this.isDepthS = false;
				this.isBlurS = false;
				this.isFogS = true;
			}
			if (this.isFogS)
			{
				this.isFog = GUI.Toggle(new Rect((float)this.GetPix(8), (float)this.GetPix(412), (float)this.GetPix(40), (float)this.GetPix(20)), this.isFog, "有効", guistyle6);
				if (!this.isFog)
				{
					GUI.enabled = false;
				}
				GUI.Label(new Rect((float)this.GetPix(110), (float)this.GetPix(406), (float)this.GetPix(100), (float)this.GetPix(24)), "発生距離", guistyle2);
				this.fog1 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(420), (float)this.GetPix(92), (float)this.GetPix(20)), this.fog1, 0f, 30f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(430), (float)this.GetPix(100), (float)this.GetPix(25)), "密度", guistyle2);
				this.fog2 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(445), (float)this.GetPix(92), (float)this.GetPix(20)), this.fog2, 0f, 10f);
				GUI.Label(new Rect((float)this.GetPix(110), (float)this.GetPix(430), (float)this.GetPix(100), (float)this.GetPix(25)), "強度", guistyle2);
				this.fog3 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(445), (float)this.GetPix(92), (float)this.GetPix(20)), this.fog3, -5f, 20f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(455), (float)this.GetPix(100), (float)this.GetPix(25)), "高さ", guistyle2);
				this.fog4 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(470), (float)this.GetPix(92), (float)this.GetPix(20)), this.fog4, -10f, 10f);
				GUI.Label(new Rect((float)this.GetPix(110), (float)this.GetPix(455), (float)this.GetPix(100), (float)this.GetPix(25)), "赤", guistyle2);
				this.fog5 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(470), (float)this.GetPix(92), (float)this.GetPix(20)), this.fog5, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(480), (float)this.GetPix(100), (float)this.GetPix(25)), "緑", guistyle2);
				this.fog6 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(495), (float)this.GetPix(92), (float)this.GetPix(20)), this.fog6, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(110), (float)this.GetPix(480), (float)this.GetPix(100), (float)this.GetPix(25)), "青", guistyle2);
				this.fog7 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(495), (float)this.GetPix(92), (float)this.GetPix(20)), this.fog7, 0f, 1f);
				if (!this.doguCombo.isClickedComboButton && !this.parCombo.isClickedComboButton && !this.bgCombo.isClickedComboButton && !this.bgmCombo.isClickedComboButton)
				{
					GUI.enabled = true;
				}
			}
			this.isSepian = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(515), (float)this.GetPix(80), (float)this.GetPix(20)), this.isSepian, "セピア", guistyle6);
			GUI.Label(new Rect((float)this.GetPix(108), (float)this.GetPix(512), (float)this.GetPix(100), (float)this.GetPix(25)), "ぼかし", guistyle2);
			this.bokashi = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(527), (float)this.GetPix(92), (float)this.GetPix(20)), this.bokashi, 0f, 18f);
			if (GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(545), (float)this.GetPix(80), (float)this.GetPix(20)), this.isHairSetting, "髪の設定", guistyle6))
			{
				this.isHairSetting = true;
				this.isSkirtSetting = false;
			}
			if (this.isHairSetting)
			{
				bool flag3 = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(566), (float)this.GetPix(40), (float)this.GetPix(20)), this.isKamiyure, "有効", guistyle6);
				if (this.isKamiyure != flag3)
				{
					this.isKamiyure = flag3;
					if (this.isKamiyure)
					{
						base.Preferences["config"]["hair_setting"].Value = "true";
						base.Preferences["config"]["hair_radius"].Value = this.kamiyure4.ToString();
						base.Preferences["config"]["hair_elasticity"].Value = this.kamiyure3.ToString();
						base.Preferences["config"]["hair_damping"].Value = this.kamiyure2.ToString();
						base.SaveConfig();
					}
					else
					{
						base.Preferences["config"]["hair_setting"].Value = "false";
						base.SaveConfig();
						for (int num6 = 0; num6 < this.maidCnt; num6++)
						{
							for (int num7 = 0; num7 < this.maidArray[num6].body0.goSlot.Count; num7++)
							{
								if (num7 >= 3 && num7 <= 6 && this.maidArray[num6].body0.goSlot[num7].obj != null)
								{
									DynamicBone component = this.maidArray[num6].body0.goSlot[num7].obj.GetComponent<DynamicBone>();
									if (component != null)
									{
										component.m_Damping = 0.6f;
										component.m_Elasticity = 1f;
										if (num7 == 5)
										{
											component.m_Elasticity = 0.05f;
										}
										component.m_Radius = 0.02f;
										component.UpdateParameters();
									}
								}
							}
						}
					}
				}
				if (!this.isKamiyure)
				{
					GUI.enabled = false;
				}
				GUI.Label(new Rect((float)this.GetPix(108), (float)this.GetPix(565), (float)this.GetPix(100), (float)this.GetPix(25)), "当たり判定半径", guistyle2);
				float num8 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(579), (float)this.GetPix(92), (float)this.GetPix(20)), this.kamiyure4, 0f, 0.04f);
				if (this.kamiyure4 != num8)
				{
					this.kamiyure4 = num8;
					base.Preferences["config"]["hair_radius"].Value = this.kamiyure4.ToString();
					base.SaveConfig();
				}
				GUI.Label(new Rect((float)this.GetPix(108), (float)this.GetPix(590), (float)this.GetPix(100), (float)this.GetPix(25)), "減衰率", guistyle2);
				float num9 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(604), (float)this.GetPix(92), (float)this.GetPix(20)), this.kamiyure2, 0.2f, 1f);
				if (this.kamiyure2 != num9)
				{
					this.kamiyure2 = num9;
					base.Preferences["config"]["hair_damping"].Value = this.kamiyure2.ToString();
					base.SaveConfig();
				}
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(590), (float)this.GetPix(100), (float)this.GetPix(25)), "復元率", guistyle2);
				float num10 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(604), (float)this.GetPix(92), (float)this.GetPix(20)), this.kamiyure3, 0f, 2f);
				if (this.kamiyure3 != num10)
				{
					this.kamiyure3 = num10;
					base.Preferences["config"]["hair_elasticity"].Value = this.kamiyure3.ToString();
					base.SaveConfig();
				}
				GUI.enabled = true;
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(105), (float)this.GetPix(545), (float)this.GetPix(100), (float)this.GetPix(20)), this.isSkirtSetting, "スカート設定", guistyle6))
			{
				this.isHairSetting = false;
				this.isSkirtSetting = true;
			}
			if (this.isSkirtSetting)
			{
				bool flag4 = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(566), (float)this.GetPix(40), (float)this.GetPix(20)), this.isSkirtyure, "有効", guistyle6);
				if (this.isSkirtyure != flag4)
				{
					this.isSkirtyure = flag4;
					if (this.isSkirtyure)
					{
						base.Preferences["config"]["skirt_setting"].Value = "true";
						base.Preferences["config"]["skirt_radius"].Value = this.skirtyure4.ToString();
						base.Preferences["config"]["skirt_elasticity"].Value = this.skirtyure3.ToString();
						base.Preferences["config"]["skirt_damping"].Value = this.skirtyure2.ToString();
						base.SaveConfig();
					}
					else
					{
						base.Preferences["config"]["skirt_setting"].Value = "false";
						base.SaveConfig();
						for (int num11 = 0; num11 < this.maidCnt; num11++)
						{
							for (int num12 = 0; num12 < this.maidArray[num11].body0.goSlot.Count; num12++)
							{
								if (this.maidArray[num11].body0.goSlot[num12].obj != null)
								{
									DynamicSkirtBone fieldValue = ManyMaids.GetFieldValue<BoneHair3, DynamicSkirtBone>(this.maidArray[num11].body0.goSlot[num12].bonehair3, "m_SkirtBone");
									if (fieldValue != null)
									{
										fieldValue.m_fPanierForce = 0.05f;
										fieldValue.m_fPanierForceDistanceThreshold = 0.1f;
										fieldValue.m_fRegDefaultRadius = 0.1f;
									}
								}
							}
						}
					}
				}
				if (!this.isSkirtyure)
				{
					GUI.enabled = false;
				}
				GUI.Label(new Rect((float)this.GetPix(108), (float)this.GetPix(565), (float)this.GetPix(100), (float)this.GetPix(25)), "足側カプセル半径", guistyle2);
				float num13 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(579), (float)this.GetPix(92), (float)this.GetPix(20)), this.skirtyure4, 0f, 0.2f);
				if (this.skirtyure4 != num13)
				{
					this.skirtyure4 = num13;
					base.Preferences["config"]["skirt_radius"].Value = this.skirtyure4.ToString();
					base.SaveConfig();
				}
				GUI.Label(new Rect((float)this.GetPix(108), (float)this.GetPix(590), (float)this.GetPix(100), (float)this.GetPix(25)), "足との距離パニエ力", guistyle2);
				float num14 = GUI.HorizontalSlider(new Rect((float)this.GetPix(108), (float)this.GetPix(604), (float)this.GetPix(92), (float)this.GetPix(20)), this.skirtyure2, 0f, 0.2f);
				if (this.skirtyure2 != num14)
				{
					this.skirtyure2 = num14;
					base.Preferences["config"]["skirt_damping"].Value = this.skirtyure2.ToString();
					base.SaveConfig();
				}
				GUI.Label(new Rect((float)this.GetPix(10), (float)this.GetPix(590), (float)this.GetPix(100), (float)this.GetPix(25)), "パニエ力", guistyle2);
				float num15 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(604), (float)this.GetPix(92), (float)this.GetPix(20)), this.skirtyure3, 0f, 0.1f);
				if (this.skirtyure3 != num15)
				{
					this.skirtyure3 = num15;
					base.Preferences["config"]["skirt_elasticity"].Value = this.skirtyure3.ToString();
					base.SaveConfig();
				}
				GUI.enabled = true;
			}
			GUI.enabled = true;
			GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(389), (float)this.GetPix(195), 2f), this.line1);
			GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(389), (float)this.GetPix(195), 1f), this.line2);
			if (this.doguCombo.isClickedComboButton || this.parCombo.isClickedComboButton || this.bgCombo.isClickedComboButton || this.bgmCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(176), (float)this.GetPix(195), 2f), this.line1);
			GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(176), (float)this.GetPix(195), 1f), this.line2);
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(187), (float)this.GetPix(100), (float)this.GetPix(25)), "照明", guistyle2);
			this.listStyle3.padding.top = this.GetPix(3);
			this.listStyle3.padding.bottom = this.GetPix(2);
			this.listStyle3.fontSize = this.GetPix(13);
			int num16 = this.lightCombo.List(new Rect((float)this.GetPix(34), (float)this.GetPix(185), (float)this.GetPix(78), (float)this.GetPix(23)), this.lightComboList[this.selectLightIndex].text, this.lightComboList, guistyle4, "box", this.listStyle3);
			if (num16 != this.selectLightIndex)
			{
				this.selectLightIndex = num16;
				this.isIdx1 = false;
				this.isIdx2 = false;
				this.isIdx3 = false;
				this.isIdx4 = false;
			}
			if (GUI.Button(new Rect((float)this.GetPix(115), (float)this.GetPix(185), (float)this.GetPix(35), (float)this.GetPix(23)), "追加", guistyle3))
			{
				GameObject gameObject = new GameObject("Light");
				gameObject.AddComponent<Light>();
				this.lightList.Add(gameObject);
				this.lightColorR.Add(1f);
				this.lightColorG.Add(1f);
				this.lightColorB.Add(1f);
				this.lightIndex.Add(0);
				this.lightX.Add(40f);
				this.lightY.Add(180f);
				this.lightAkarusa.Add(0.95f);
				this.lightKage.Add(0.098f);
				this.lightRange.Add(50f);
				gameObject.transform.position = GameMain.Instance.MainLight.transform.position;
				this.selectLightIndex = this.lightList.Count - 1;
				this.lightComboList = new GUIContent[this.lightList.Count];
				for (int num17 = 0; num17 < this.lightList.Count; num17++)
				{
					if (num17 == 0)
					{
						this.lightComboList[num17] = new GUIContent("メイン");
					}
					else
					{
						this.lightComboList[num17] = new GUIContent("追加" + num17);
					}
				}
				this.lightCombo.selectedItemIndex = this.selectLightIndex;
				gameObject.GetComponent<Light>().intensity = 0.95f;
				gameObject.GetComponent<Light>().spotAngle = 50f;
				gameObject.GetComponent<Light>().range = 10f;
				gameObject.GetComponent<Light>().type = LightType.Directional;
				gameObject.GetComponent<Light>().color = new Color(0.5f, 1f, 0f);
				if (this.gLight[this.selectLightIndex] == null)
				{
					this.gLight[this.selectLightIndex] = GameObject.CreatePrimitive(PrimitiveType.Cube);
					Material material = new Material(Shader.Find("Transparent/Diffuse"));
					material.color = new Color(0.5f, 0.5f, 1f, 0.8f);
					this.gLight[this.selectLightIndex].GetComponent<Renderer>().material = material;
					this.gLight[this.selectLightIndex].layer = 8;
					this.gLight[this.selectLightIndex].GetComponent<Renderer>().enabled = false;
					this.gLight[this.selectLightIndex].SetActive(false);
					this.gLight[this.selectLightIndex].transform.position = gameObject.transform.position;
					this.mLight[this.selectLightIndex] = this.gLight[this.selectLightIndex].AddComponent<MouseDrag6>();
					this.mLight[this.selectLightIndex].obj = this.gLight[this.selectLightIndex];
					this.mLight[this.selectLightIndex].maid = gameObject.gameObject;
					this.mLight[this.selectLightIndex].angles = gameObject.gameObject.transform.eulerAngles;
					this.gLight[this.selectLightIndex].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
					this.mLight[this.selectLightIndex].ido = 1;
					this.mLight[this.selectLightIndex].isScale = false;
				}
			}
			if (GUI.Button(new Rect((float)this.GetPix(153), (float)this.GetPix(185), (float)this.GetPix(23), (float)this.GetPix(23)), "R", guistyle3))
			{
				for (int num18 = 1; num18 < this.lightList.Count; num18++)
				{
					UnityEngine.Object.Destroy(this.lightList[num18]);
				}
				this.lightIndex = new List<int>();
				this.lightIndex.Add(0);
				this.lightColorR = new List<float>();
				this.lightColorR.Add(1f);
				this.lightColorG = new List<float>();
				this.lightColorG.Add(1f);
				this.lightColorB = new List<float>();
				this.lightColorB.Add(1f);
				this.lightX = new List<float>();
				this.lightX.Add(40f);
				this.lightY = new List<float>();
				this.lightY.Add(180f);
				this.lightAkarusa = new List<float>();
				this.lightAkarusa.Add(0.95f);
				this.lightKage = new List<float>();
				this.lightKage.Add(0.098f);
				this.lightRange = new List<float>();
				this.lightRange.Add(50f);
				this.lightCombo.selectedItemIndex = 0;
				this.lightList = new List<GameObject>();
				this.lightList.Add(GameMain.Instance.MainLight.gameObject);
				this.lightComboList = new GUIContent[this.lightList.Count];
				for (int num19 = 0; num19 < this.lightList.Count; num19++)
				{
					if (num19 == 0)
					{
						this.lightComboList[num19] = new GUIContent("メイン");
					}
					else
					{
						this.lightComboList[num19] = new GUIContent("追加" + num19);
					}
				}
				this.selectLightIndex = 0;
				GameMain.Instance.MainLight.Reset();
				GameMain.Instance.MainLight.SetIntensity(0.95f);
				GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 50f;
				GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
				GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
				GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
				this.bgObject.SetActive(true);
				this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
				this.isIdx1 = false;
				this.isIdx2 = false;
				this.isIdx3 = false;
				this.isIdx4 = false;
			}
			GUI.enabled = true;
			if (this.doguCombo.isClickedComboButton || this.bgCombo.isClickedComboButton || this.bgmCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			this.listStyle3.padding.top = this.GetPix(0);
			this.listStyle3.padding.bottom = this.GetPix(0);
			this.listStyle3.fontSize = this.GetPix(12);
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(116), (float)this.GetPix(150), (float)this.GetPix(25)), "大道具2", guistyle2);
			this.parIndex = this.parCombo.List(new Rect((float)this.GetPix(51), (float)this.GetPix(113), (float)this.GetPix(100), (float)this.GetPix(23)), this.parComboList[this.parIndex].text, this.parComboList, guistyle4, "box", this.listStyle3);
			if (GUI.Button(new Rect((float)this.GetPix(156), (float)this.GetPix(113), (float)this.GetPix(38), (float)this.GetPix(23)), "追加", guistyle3))
			{
				GameObject gameObject2 = null;
				bool flag5 = false;
				bool flag6 = false;
				if (this.parArray[this.parIndex].Contains("#"))
				{
					string[] array3 = this.parArray[this.parIndex].Split(new char[]
					{
						'#'
					});
					gameObject2 = GameMain.Instance.BgMgr.CreateAssetBundle(array3[1]);
					if (gameObject2 != null)
					{
						gameObject2 = UnityEngine.Object.Instantiate<GameObject>(gameObject2);
						MeshRenderer[] componentsInChildren = gameObject2.GetComponentsInChildren<MeshRenderer>();
						for (int num20 = 0; num20 < componentsInChildren.Length; num20++)
						{
							if (componentsInChildren[num20] != null)
							{
								componentsInChildren[num20].shadowCastingMode = ShadowCastingMode.Off;
							}
						}
					}
					flag5 = true;
					if (!this.parArray[this.parIndex].Contains("Odogu_"))
					{
						flag6 = true;
					}
					this.doguBObject.Add(gameObject2);
				}
				else if (!this.parArray[this.parIndex].StartsWith("mirror") && this.parArray[this.parIndex].IndexOf(":") < 0)
				{
					gameObject2 = (UnityEngine.Object.Instantiate(Resources.Load("Prefab/" + this.parArray[this.parIndex])) as GameObject);
					this.doguBObject.Add(gameObject2);
				}
				else if (this.parArray[this.parIndex].StartsWith("mirror"))
				{
					Material material2 = new Material(Shader.Find("Mirror"));
					GameObject gameObject3 = GameObject.CreatePrimitive(PrimitiveType.Plane);
					gameObject3.GetComponent<Renderer>().material = material2;
					gameObject3.AddComponent<MirrorReflection2>();
					MirrorReflection2 component2 = gameObject3.GetComponent<MirrorReflection2>();
					component2.m_TextureSize = 2048;
					component2.m_ClipPlaneOffset = 0.07f;
					gameObject3.GetComponent<Renderer>().enabled = true;
					gameObject2 = gameObject3;
					this.doguBObject.Add(gameObject2);
				}
				else
				{
					string[] array4 = this.parArray[this.parIndex].Split(new char[]
					{
						':'
					});
					UnityEngine.Object @object = GameMain.Instance.BgMgr.CreateAssetBundle(array4[0]);
					if (@object == null)
					{
						@object = Resources.Load("BG/" + array4[0]);
					}
					GameObject gameObject4 = UnityEngine.Object.Instantiate(@object) as GameObject;
					int num21 = 0;
					int num22 = 0;
					int.TryParse(array4[1], out num22);
					foreach (object obj in gameObject4.transform)
					{
						Transform transform = (Transform)obj;
						if (num22 == num21)
						{
							gameObject2 = transform.gameObject;
							break;
						}
						num21++;
					}
					this.doguBObject.Add(gameObject2);
					gameObject2.transform.parent = null;
					UnityEngine.Object.Destroy(gameObject4);
					gameObject4.SetActive(false);
				}
				gameObject2.name = this.parArray[this.parIndex];
				Vector3 zero = Vector3.zero;
				Vector3 zero2 = Vector3.zero;
				switch (this.parIndex)
				{
				case 0:
					zero.z = -0.6f;
					zero.y = 0.96f;
					zero2.z = 180f;
					zero2.x = -90f;
					gameObject2.transform.localScale = new Vector3(0.2f, 0.4f, 0.2f);
					break;
				case 1:
					zero.z = -0.6f;
					zero.y = 0.96f;
					zero2.z = 180f;
					zero2.x = -90f;
					gameObject2.transform.localScale = new Vector3(0.1f, 0.4f, 0.2f);
					break;
				case 2:
					zero.z = -0.6f;
					zero.y = 0.85f;
					zero2.z = 180f;
					zero2.x = -90f;
					gameObject2.transform.localScale = new Vector3(0.03f, 0.18f, 0.124f);
					break;
				case 3:
				case 4:
				case 5:
				case 6:
				case 7:
				case 8:
				case 9:
				case 10:
				case 11:
				case 12:
				case 13:
				case 14:
				case 15:
				case 16:
				case 17:
					zero.z = 0.5f;
					zero2.x = -90f;
					break;
				}
				if (flag5)
				{
					zero.z = 0.4f;
					if (flag6)
					{
						zero2.x = -90f;
					}
				}
				if (gameObject2.name == "Salon_Entrance:3" || gameObject2.name == "Salon_Entrance:4" || gameObject2.name == "Salon_Entrance:1" || gameObject2.name == "Salon_Entrance:2" || gameObject2.name == "Salon_Entrance:0" || gameObject2.name == "Shitsumu:23" || gameObject2.name == "Shitsumu_Night:23")
				{
					zero.z = 0.5f;
					zero2.x = -90f;
				}
				if (gameObject2.name == "Pool:26")
				{
					zero.z = 0.5f;
					zero2.x = -90f;
					zero2.z = 90f;
					zero.y = 0.15f;
				}
				if (gameObject2.name == "Particle/pstarY_act2")
				{
					zero2.y = 90f;
				}
				gameObject2.transform.localPosition = zero;
				gameObject2.transform.localRotation = Quaternion.Euler(zero2);
				this.doguCnt = this.doguBObject.Count - 1;
				this.gDogu[this.doguCnt] = GameObject.CreatePrimitive(PrimitiveType.Cube);
				this.gDogu[this.doguCnt].GetComponent<Renderer>().material = this.m_material;
				this.gDogu[this.doguCnt].layer = 8;
				this.gDogu[this.doguCnt].GetComponent<Renderer>().enabled = false;
				this.gDogu[this.doguCnt].SetActive(false);
				this.gDogu[this.doguCnt].transform.position = gameObject2.transform.position;
				this.mDogu[this.doguCnt] = this.gDogu[this.doguCnt].AddComponent<MouseDrag6>();
				this.mDogu[this.doguCnt].obj = this.gDogu[this.doguCnt];
				this.mDogu[this.doguCnt].maid = gameObject2;
				this.mDogu[this.doguCnt].angles = gameObject2.transform.eulerAngles;
				this.gDogu[this.doguCnt].transform.localScale = new Vector3(this.cubeSize, this.cubeSize, this.cubeSize);
				this.mDogu[this.doguCnt].ido = 1;
				this.mDogu[this.doguCnt].isScale = false;
				if (gameObject2.name == "Particle/pLineY")
				{
					this.mDogu[this.doguCnt].count = 180;
					gameObject2.transform.localScale = new Vector3(3f, 3f, 3f);
				}
				if (gameObject2.name == "Particle/pLineP02")
				{
					this.mDogu[this.doguCnt].count = 115;
					gameObject2.transform.localScale = new Vector3(3f, 3f, 3f);
				}
				if (gameObject2.name == "Particle/pLine_act2")
				{
					this.mDogu[this.doguCnt].count = 90;
					gameObject2.transform.localScale = new Vector3(3f, 3f, 3f);
				}
				if (gameObject2.name == "Particle/pHeart01")
				{
					this.mDogu[this.doguCnt].count = 77;
				}
				if (this.parIndex < 3)
				{
					this.mDogu[this.doguCnt].isScale = true;
					this.mDogu[this.doguCnt].isScale2 = true;
					this.mDogu[this.doguCnt].scale2 = gameObject2.transform.localScale;
					if (this.parIndex == 0)
					{
						this.mDogu[this.doguCnt].scale = new Vector3(gameObject2.transform.localScale.x * 5f, gameObject2.transform.localScale.y * 5f, gameObject2.transform.localScale.z * 5f);
					}
					if (this.parIndex == 1)
					{
						this.mDogu[this.doguCnt].scale = new Vector3(gameObject2.transform.localScale.x * 10f, gameObject2.transform.localScale.y * 10f, gameObject2.transform.localScale.z * 10f);
					}
					if (this.parIndex == 2)
					{
						this.mDogu[this.doguCnt].scale = new Vector3(gameObject2.transform.localScale.x * 33f, gameObject2.transform.localScale.y * 33f, gameObject2.transform.localScale.z * 33f);
					}
				}
				if (gameObject2.GetComponent<Collider>() != null)
				{
					gameObject2.GetComponent<Collider>().enabled = false;
				}
			}
			GUI.enabled = true;
			if (this.bgCombo.isClickedComboButton || this.bgmCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(88), (float)this.GetPix(100), (float)this.GetPix(25)), "大道具1", guistyle2);
			this.doguBIndex = this.doguCombo.List(new Rect((float)this.GetPix(51), (float)this.GetPix(85), (float)this.GetPix(100), (float)this.GetPix(23)), this.doguComboList[this.doguBIndex].text, this.doguComboList, guistyle4, "box", this.listStyle3);
			if (GUI.Button(new Rect((float)this.GetPix(156), (float)this.GetPix(85), (float)this.GetPix(38), (float)this.GetPix(23)), "追加", guistyle3))
			{
				GameObject gameObject5 = null;
				if (!Class1.doguBArray[this.doguBIndex].StartsWith("mirror"))
				{
					UnityEngine.Object object2;
					if (Class1.doguBArray[this.doguBIndex].StartsWith("BG"))
					{
						string text2 = Class1.doguBArray[this.doguBIndex].Replace("BG", "");
						object2 = GameMain.Instance.BgMgr.CreateAssetBundle(text2);
						if (object2 == null)
						{
							object2 = Resources.Load("BG/" + text2);
						}
					}
					else
					{
						object2 = Resources.Load("Prefab/" + Class1.doguBArray[this.doguBIndex]);
					}
					gameObject5 = (UnityEngine.Object.Instantiate(object2) as GameObject);
					this.doguBObject.Add(gameObject5);
				}
				else
				{
					Material material3 = new Material(Shader.Find("Mirror"));
					GameObject gameObject6 = GameObject.CreatePrimitive(PrimitiveType.Plane);
					gameObject6.transform.localScale = new Vector3(0.3f, 1f, 0.3f);
					gameObject6.GetComponent<Renderer>().material = material3;
					gameObject6.AddComponent<MirrorReflection2>();
					MirrorReflection2 component3 = gameObject6.GetComponent<MirrorReflection2>();
					component3.m_TextureSize = 2048;
					component3.m_ClipPlaneOffset = 0f;
					gameObject6.GetComponent<Renderer>().enabled = true;
					gameObject5 = gameObject6;
					this.doguBObject.Add(gameObject5);
				}
				gameObject5.name = Class1.doguBArray[this.doguBIndex];
				Vector3 zero = Vector3.zero;
				Vector3 zero2 = Vector3.zero;
				string text = gameObject5.name;
				uint num2 = <PrivateImplementationDetails>.ComputeStringHash(text);
				if (num2 <= 2280646706u)
				{
					if (num2 <= 1318781766u)
					{
						if (num2 <= 803455776u)
						{
							if (num2 <= 424015558u)
							{
								if (num2 <= 106875671u)
								{
									if (num2 <= 49483317u)
									{
										if (num2 != 1879131u)
										{
											if (num2 != 49483317u)
											{
												goto IL_D727;
											}
											if (!(text == "Odogu_OmuriceOppai"))
											{
												goto IL_D727;
											}
											goto IL_D70A;
										}
										else
										{
											if (!(text == "BGodogu_villabr_sideboard"))
											{
												goto IL_D727;
											}
											goto IL_D70A;
										}
									}
									else if (num2 != 80713500u)
									{
										if (num2 != 83048649u)
										{
											if (num2 != 106875671u)
											{
												goto IL_D727;
											}
											if (!(text == "BGOdogu_sp002_susuki"))
											{
												goto IL_D727;
											}
											goto IL_D70A;
										}
										else
										{
											if (!(text == "BGOdogu_sp002_oharaibou"))
											{
												goto IL_D727;
											}
											goto IL_D70A;
										}
									}
									else
									{
										if (!(text == "BGOdogu_denkigai2018s_syatifloot"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else if (num2 <= 241697273u)
								{
									if (num2 != 111272023u)
									{
										if (num2 != 241697273u)
										{
											goto IL_D727;
										}
										if (!(text == "Odogu_Styluspen_red"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "Odogu_Cocktail_Yellow"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else if (num2 != 270580409u)
								{
									if (num2 != 334281919u)
									{
										if (num2 != 424015558u)
										{
											goto IL_D727;
										}
										if (!(text == "BGodogu_vf_crops_zakuro"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "Odogu_HeroineChair_rindere"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else
								{
									if (!(text == "Odogu_Planter_Lightblue"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 <= 575630666u)
							{
								if (num2 <= 451391264u)
								{
									if (num2 != 433951271u)
									{
										if (num2 != 451391264u)
										{
											goto IL_D727;
										}
										if (!(text == "Odogu_Smoothie_Green"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "Odogu_Omurice3"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else if (num2 != 467506509u)
								{
									if (num2 != 573965529u)
									{
										if (num2 != 575630666u)
										{
											goto IL_D727;
										}
										if (!(text == "Odogu_Styluspen_yellow"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "BGOdogu_alicesoft_brownhoney"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else
								{
									if (!(text == "Odogu_Omurice1"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 <= 698453061u)
							{
								if (num2 != 586727624u)
								{
									if (num2 != 695211335u)
									{
										if (num2 != 698453061u)
										{
											goto IL_D727;
										}
										if (!(text == "BGodogu_bucket"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "Odogu_OmuriceKao2"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else
								{
									if (!(text == "BGOdogu_denkigai2018s_toropicalicetea"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 711988954u)
							{
								if (num2 != 715433616u)
								{
									if (num2 != 803455776u)
									{
										goto IL_D727;
									}
									if (!(text == "BGodogu_rb_obon"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "BGodogu_game_dartsboard"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_OmuriceKao1"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 976271599u)
						{
							if (num2 <= 869264255u)
							{
								if (num2 <= 832325157u)
								{
									if (num2 != 831607857u)
									{
										if (num2 != 832325157u)
										{
											goto IL_D727;
										}
										if (!(text == "BGodogu_karaoketable"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "BGodogu_sunanoyama"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else if (num2 != 852486636u)
								{
									if (num2 != 862772154u)
									{
										if (num2 != 869264255u)
										{
											goto IL_D727;
										}
										if (!(text == "Odogu_Card_h11"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "BGodogu_villa_table"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else
								{
									if (!(text == "Odogu_Card_h10"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 <= 928158752u)
							{
								if (num2 != 886041874u)
								{
									if (num2 != 902819493u)
									{
										if (num2 != 928158752u)
										{
											goto IL_D727;
										}
										if (!(text == "Odogu_Smoothie_Red"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "Odogu_Card_h13"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else
								{
									if (!(text == "Odogu_Card_h12"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 959462305u)
							{
								if (num2 != 975585938u)
								{
									if (num2 != 976271599u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_HeroineChair_cooldere"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "PlayAreaOut"))
									{
										goto IL_D727;
									}
									zero.z = 0.5f;
									zero.y = 0.2f;
									goto IL_D7BC;
								}
							}
							else
							{
								if (!(text == "BGodogu_rb_duck"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 1088441161u)
						{
							if (num2 <= 1013814085u)
							{
								if (num2 != 986657037u)
								{
									if (num2 != 1013814085u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_DildoBox"))
									{
										goto IL_D727;
									}
									zero.z = 0.5f;
									zero2.x = -90f;
									goto IL_D7BC;
								}
								else
								{
									if (!(text == "BGOdogu_alicesoft_bluehoney"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 1084661973u)
							{
								if (num2 != 1085838226u)
								{
									if (num2 != 1088441161u)
									{
										goto IL_D727;
									}
									if (!(text == "BGodogu_vf_crops_natsumikan"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_Shortcake"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_Styluspen_black"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 1229595303u)
						{
							if (num2 != 1139668471u)
							{
								if (num2 != 1176757686u)
								{
									if (num2 != 1229595303u)
									{
										goto IL_D727;
									}
									if (!(text == "BGodogu_vf_crops_suika"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "BGodogu_vf_crops_gekkabijinflower"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_Styluspen_white"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 1274011334u)
						{
							if (num2 != 1279488099u)
							{
								if (num2 != 1318781766u)
								{
									goto IL_D727;
								}
								if (!(text == "BGOdogu_denkigai2018s_beachball_green"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "BGodogu_natumikan"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "BGOdogu_denkigai2018s_coneice_strawberry"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 1675268793u)
					{
						if (num2 <= 1616051281u)
						{
							if (num2 <= 1553096124u)
							{
								if (num2 <= 1440168550u)
								{
									if (num2 != 1352521040u)
									{
										if (num2 != 1440168550u)
										{
											goto IL_D727;
										}
										if (!(text == "BGOdogu_denkigai2018s_beachball_red"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "BGOdogu_alicesoft_redhoney"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else if (num2 != 1475755338u)
								{
									if (num2 != 1482067521u)
									{
										if (num2 != 1553096124u)
										{
											goto IL_D727;
										}
										if (!(text == "Odogu_Card_s8"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "Odogu_CasinoChip_100"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else
								{
									if (!(text == "Odogu_CardShooter"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 <= 1574257980u)
							{
								if (num2 != 1569873743u)
								{
									if (num2 != 1574257980u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Card_h9"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_Card_s9"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 1591035599u)
							{
								if (num2 != 1602346372u)
								{
									if (num2 != 1616051281u)
									{
										goto IL_D727;
									}
									if (!(text == "BGodogu_pafe"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "BGOdogu_alicesoft_greenhoney"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_Card_h8"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 1641368456u)
						{
							if (num2 <= 1620206600u)
							{
								if (num2 != 1616791204u)
								{
									if (num2 != 1620206600u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Card_s4"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "BGodogu_kakigori"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 1636161886u)
							{
								if (num2 != 1636984219u)
								{
									if (num2 != 1641368456u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Card_h5"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_Card_s5"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_StandMike"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 1658717458u)
						{
							if (num2 != 1653761838u)
							{
								if (num2 != 1658146075u)
								{
									if (num2 != 1658717458u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_OmuriceH"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_Card_h4"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_Card_s6"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 1670539457u)
						{
							if (num2 != 1674923694u)
							{
								if (num2 != 1675268793u)
								{
									goto IL_D727;
								}
								if (!(text == "BGodogu_omuriceh"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "Odogu_Card_h7"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "Odogu_Card_s7"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 1909509623u)
					{
						if (num2 <= 1720872314u)
						{
							if (num2 <= 1703720341u)
							{
								if (num2 != 1691701313u)
								{
									if (num2 != 1703720341u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Dresser_photo_ver"))
									{
										goto IL_D727;
									}
									GameObject.Find("Prim.00000000").GetComponent<Collider>().enabled = false;
									GameObject.Find("Prim.00000001").GetComponent<Collider>().enabled = false;
									GameObject.Find("Prim.00000002").GetComponent<Collider>().enabled = false;
									GameObject.Find("Prim.00000004").GetComponent<Collider>().enabled = false;
									goto IL_D7BC;
								}
								else
								{
									if (!(text == "Odogu_Card_h6"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 1704094695u)
							{
								if (num2 != 1708478932u)
								{
									if (num2 != 1720872314u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Card_s2"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_Card_h1"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_Card_s1"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 1758811789u)
						{
							if (num2 != 1737649933u)
							{
								if (num2 != 1742034170u)
								{
									if (num2 != 1758811789u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Card_h2"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_Card_h3"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_Card_s3"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 1836840438u)
						{
							if (num2 != 1845350244u)
							{
								if (num2 != 1909509623u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_Cocktail_Blue"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "BGOdogu_sp001_food"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "BGOdogu_Game_Wa"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 2049079671u)
					{
						if (num2 <= 1967824364u)
						{
							if (num2 != 1962924469u)
							{
								if (num2 != 1967824364u)
								{
									goto IL_D727;
								}
								if (!(text == "BGodogu_nabe_huta"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "Odogu_Sandwich"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 1990947846u)
						{
							if (num2 != 2016933682u)
							{
								if (num2 != 2049079671u)
								{
									goto IL_D727;
								}
								if (!(text == "BGOdogu_sp002_omamori"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else if (!(text == "Odogu_ClassRoomDesk"))
							{
								goto IL_D727;
							}
						}
						else
						{
							if (!(text == "Odogu_Jyouro"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 2131964186u)
					{
						if (num2 != 2072296816u)
						{
							if (num2 != 2101181530u)
							{
								if (num2 != 2131964186u)
								{
									goto IL_D727;
								}
								if (!(text == "BGodogu_omuriceoppai"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "BGodogu_coolerbox"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "BGodogu_vf_crops_himawari"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 != 2168601571u)
					{
						if (num2 != 2218695225u)
						{
							if (num2 != 2280646706u)
							{
								goto IL_D727;
							}
							if (!(text == "BGodogu_ukiwa"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
						else
						{
							if (!(text == "Odogu_HeroineChair_tsumdere"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else
					{
						if (!(text == "Odogu_CasinoChip_1000"))
						{
							goto IL_D727;
						}
						goto IL_D70A;
					}
				}
				else if (num2 <= 3443011656u)
				{
					if (num2 <= 2745036545u)
					{
						if (num2 <= 2435285402u)
						{
							if (num2 <= 2335864741u)
							{
								if (num2 <= 2289414659u)
								{
									if (num2 != 2285531884u)
									{
										if (num2 != 2289414659u)
										{
											goto IL_D727;
										}
										if (!(text == "Odogu_KadomatsuMini_photo_ver"))
										{
											goto IL_D727;
										}
									}
									else
									{
										if (!(text == "Odogu_Card_c13"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else if (num2 != 2302309503u)
								{
									if (num2 != 2319087122u)
									{
										if (num2 != 2335864741u)
										{
											goto IL_D727;
										}
										if (!(text == "Odogu_Card_c10"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
									else
									{
										if (!(text == "Odogu_Card_c11"))
										{
											goto IL_D727;
										}
										goto IL_D70A;
									}
								}
								else
								{
									if (!(text == "Odogu_Card_c12"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 <= 2413425204u)
							{
								if (num2 != 2360267261u)
								{
									if (num2 != 2413425204u)
									{
										goto IL_D727;
									}
									if (!(text == "BGodogu_furaidopoteto"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "BGodogu_karaoke_box"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 2424605882u)
							{
								if (num2 != 2435199394u)
								{
									if (num2 != 2435285402u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Pafe"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_SimpleTable"))
									{
										goto IL_D727;
									}
									zero.z = 0.5f;
									zero2.x = -90f;
									goto IL_D7BC;
								}
							}
							else
							{
								if (!(text == "Odogu_Styluspen_blue"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 2694703688u)
						{
							if (num2 <= 2523431457u)
							{
								if (num2 != 2518856562u)
								{
									if (num2 != 2523431457u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_BirthdayCake"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_WineBottle(cap_off)"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 2664260971u)
							{
								if (num2 != 2676620466u)
								{
									if (num2 != 2694703688u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Card_d10"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "BGodogu_sunanoshiro"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_CasinoChip_10"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 2728258926u)
						{
							if (num2 != 2711481307u)
							{
								if (num2 != 2714538534u)
								{
									if (num2 != 2728258926u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Card_d12"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_CardsDeck"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_Card_d11"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 2730247737u)
						{
							if (num2 != 2731341107u)
							{
								if (num2 != 2745036545u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_Card_d13"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "BGOdogu_Game_Wanage"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "BGodogu_pretzel_sara"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 3145712098u)
					{
						if (num2 <= 3049025047u)
						{
							if (num2 <= 2959365732u)
							{
								if (num2 != 2921759677u)
								{
									if (num2 != 2959365732u)
									{
										goto IL_D727;
									}
									if (!(text == "BGOdogu_sp001_cake"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_Styluspen_green"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 3013621816u)
							{
								if (num2 != 3024796573u)
								{
									if (num2 != 3049025047u)
									{
										goto IL_D727;
									}
									if (!(text == "BGodogu_rb_tokkuri"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_AcquaPazza"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_Coffiecup"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 3109014154u)
						{
							if (num2 != 3073894054u)
							{
								if (num2 != 3100571376u)
								{
									if (num2 != 3109014154u)
									{
										goto IL_D727;
									}
									if (!(text == "BGodogu_bbqgrill"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "BGodogu_game_darts"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_WineBottle(cap_on)"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 3112156860u)
						{
							if (num2 != 3128934479u)
							{
								if (num2 != 3145712098u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_Card_s11"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "Odogu_Card_s12"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "Odogu_Card_s13"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 3294553651u)
					{
						if (num2 <= 3228528464u)
						{
							if (num2 != 3162489717u)
							{
								if (num2 != 3228528464u)
								{
									goto IL_D727;
								}
								if (!(text == "BGOdogu_sp001_beerjug"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "Odogu_Card_s10"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 3256958719u)
						{
							if (num2 != 3273736338u)
							{
								if (num2 != 3294553651u)
								{
									goto IL_D727;
								}
								if (!(text == "BGodogu_villa_tvrimocon"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "BGodogu_omuricekao2"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "BGodogu_omuricekao1"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 3391272421u)
					{
						if (num2 != 3342033269u)
						{
							if (num2 != 3386921615u)
							{
								if (num2 != 3391272421u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_XmasTreeMini_photo_ver"))
								{
									goto IL_D727;
								}
								zero.z = 0.6f;
								gameObject5.transform.localScale = new Vector3(4.5f, 4.5f, 4.5f);
								using (IEnumerator enumerator2 = gameObject5.transform.GetEnumerator())
								{
									while (enumerator2.MoveNext())
									{
										object obj2 = enumerator2.Current;
										Transform transform2 = (Transform)obj2;
										if (transform2.GetComponent<Collider>() != null)
										{
											transform2.GetComponent<Collider>().enabled = false;
										}
									}
									goto IL_D7BC;
								}
							}
							else
							{
								if (!(text == "BGOdogu_Game_Nei_USB"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "BGodogu_vf_crops_gekkabijin"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 != 3408306308u)
					{
						if (num2 != 3440190063u)
						{
							if (num2 != 3443011656u)
							{
								goto IL_D727;
							}
							if (!(text == "BGOdogu_sp001_beercan"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
						else
						{
							if (!(text == "BGOdogu_sp002_tukimidango"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else
					{
						if (!(text == "BGOdogu_sp002_waraningyou_gosunkugi"))
						{
							goto IL_D727;
						}
						goto IL_D70A;
					}
					zero.z = 0.6f;
					gameObject5.transform.localScale = new Vector3(3.5f, 3.5f, 3.5f);
					using (IEnumerator enumerator2 = gameObject5.transform.GetEnumerator())
					{
						while (enumerator2.MoveNext())
						{
							object obj3 = enumerator2.Current;
							Transform transform3 = (Transform)obj3;
							if (transform3.GetComponent<Collider>() != null)
							{
								transform3.GetComponent<Collider>().enabled = false;
							}
						}
						goto IL_D7BC;
					}
				}
				else if (num2 <= 3803709831u)
				{
					if (num2 <= 3690630051u)
					{
						if (num2 <= 3585600784u)
						{
							if (num2 <= 3539855339u)
							{
								if (num2 != 3443607053u)
								{
									if (num2 != 3539855339u)
									{
										goto IL_D727;
									}
									if (!(text == "BGOdogu_denkigai2018s_coneice_chocomint"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "Odogu_MariGold"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else if (num2 != 3544135236u)
							{
								if (num2 != 3575144398u)
								{
									if (num2 != 3585600784u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Card_d9"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "BGOdogu_denkigai2018s_coneice_vanilla"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "BGodogu_saratomato"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 <= 3602378403u)
						{
							if (num2 != 3585919522u)
							{
								if (num2 != 3600313344u)
								{
									if (num2 != 3602378403u)
									{
										goto IL_D727;
									}
									if (!(text == "Odogu_Card_d8"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
								else
								{
									if (!(text == "BGodogu_tsutsuhanabi"))
									{
										goto IL_D727;
									}
									goto IL_D70A;
								}
							}
							else
							{
								if (!(text == "Odogu_Cocktail_Red"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 3605574358u)
						{
							if (num2 != 3689410930u)
							{
								if (num2 != 3690630051u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_StandMikeBase"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "BGodogu_vf_crops_corn"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "Odogu_Planter_Red"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 3753376974u)
					{
						if (num2 <= 3719821736u)
						{
							if (num2 != 3703191212u)
							{
								if (num2 != 3719821736u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_Card_d1"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "Odogu_Card_c8"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 3719968831u)
						{
							if (num2 != 3748475509u)
							{
								if (num2 != 3753376974u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_Card_d3"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "Odogu_TabletPC"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "Odogu_Card_c9"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 3786932212u)
					{
						if (num2 != 3770154593u)
						{
							if (num2 != 3770301688u)
							{
								if (num2 != 3786932212u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_Card_d5"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "Odogu_Card_c4"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "Odogu_Card_d2"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 != 3787079307u)
					{
						if (num2 != 3793148475u)
						{
							if (num2 != 3803709831u)
							{
								goto IL_D727;
							}
							if (!(text == "Odogu_Card_d4"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
						else
						{
							if (!(text == "BGOdogu_sp002_waraningyou"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else
					{
						if (!(text == "Odogu_Card_c5"))
						{
							goto IL_D727;
						}
						goto IL_D70A;
					}
				}
				else if (num2 <= 3902501524u)
				{
					if (num2 <= 3837265069u)
					{
						if (num2 <= 3820487450u)
						{
							if (num2 != 3803856926u)
							{
								if (num2 != 3820487450u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_Card_d7"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "Odogu_Card_c6"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else if (num2 != 3820634545u)
						{
							if (num2 != 3833308618u)
							{
								if (num2 != 3837265069u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_Card_d6"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "BGOdogu_sp002_takebouki"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "Odogu_Card_c7"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 <= 3883823873u)
					{
						if (num2 != 3854189783u)
						{
							if (num2 != 3870967402u)
							{
								if (num2 != 3883823873u)
								{
									goto IL_D727;
								}
								if (!(text == "Odogu_HeroineChair_mazime"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
							else
							{
								if (!(text == "Odogu_Card_c2"))
								{
									goto IL_D727;
								}
								goto IL_D70A;
							}
						}
						else
						{
							if (!(text == "Odogu_Card_c1"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 != 3887745021u)
					{
						if (num2 != 3889530859u)
						{
							if (num2 != 3902501524u)
							{
								goto IL_D727;
							}
							if (!(text == "Odogu_MontBlanc"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
						else
						{
							if (!(text == "BGOdogu_denkigai2018s_beachball_yellow"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else
					{
						if (!(text == "Odogu_Card_c3"))
						{
							goto IL_D727;
						}
						goto IL_D70A;
					}
				}
				else if (num2 <= 4112326331u)
				{
					if (num2 <= 3991494149u)
					{
						if (num2 != 3921842955u)
						{
							if (num2 != 3991494149u)
							{
								goto IL_D727;
							}
							if (!(text == "Odogu_HeroineChair_junshin"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
						else
						{
							if (!(text == "Odogu_vichyssoise"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else if (num2 != 4038541241u)
					{
						if (num2 != 4061776986u)
						{
							if (num2 != 4112326331u)
							{
								goto IL_D727;
							}
							if (!(text == "BGOdogu_denkigai2018s_beachball_blue"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
						else
						{
							if (!(text == "Odogu_HeroineChair_muku"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else
					{
						if (!(text == "BGOdogu_sp001_yakisoba"))
						{
							goto IL_D727;
						}
						goto IL_D70A;
					}
				}
				else if (num2 <= 4216236839u)
				{
					if (num2 != 4148627356u)
					{
						if (num2 != 4174356387u)
						{
							if (num2 != 4216236839u)
							{
								goto IL_D727;
							}
							if (!(text == "BGOdogu_denkigai2018s_melondish"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
						else
						{
							if (!(text == "BGodogu_nabe_water"))
							{
								goto IL_D727;
							}
							goto IL_D70A;
						}
					}
					else
					{
						if (!(text == "BGodogu_saracorn"))
						{
							goto IL_D727;
						}
						goto IL_D70A;
					}
				}
				else if (num2 != 4236804898u)
				{
					if (num2 != 4239604969u)
					{
						if (num2 != 4282773125u)
						{
							goto IL_D727;
						}
						if (!(text == "BGodogu_rb_chair"))
						{
							goto IL_D727;
						}
						goto IL_D70A;
					}
					else
					{
						if (!(text == "BGodogu_saraimo"))
						{
							goto IL_D727;
						}
						goto IL_D70A;
					}
				}
				else
				{
					if (!(text == "Odogu_Card_joker"))
					{
						goto IL_D727;
					}
					goto IL_D70A;
				}
				zero.z = 0.5f;
				zero2.x = -90f;
				goto IL_D7BC;
				IL_D70A:
				zero.z = 0.5f;
				zero2.x = -90f;
				goto IL_D7BC;
				IL_D727:
				zero.z = 0.5f;
				if (gameObject5.name.StartsWith("Odogu_"))
				{
					using (IEnumerator enumerator2 = gameObject5.transform.GetEnumerator())
					{
						while (enumerator2.MoveNext())
						{
							object obj4 = enumerator2.Current;
							Transform transform4 = (Transform)obj4;
							if (transform4.GetComponent<Collider>() != null)
							{
								transform4.GetComponent<Collider>().enabled = false;
							}
						}
						goto IL_D7BC;
					}
				}
				if (gameObject5.GetComponent<Collider>() != null)
				{
					gameObject5.GetComponent<Collider>().enabled = false;
				}
				IL_D7BC:
				gameObject5.transform.localPosition = zero;
				gameObject5.transform.localRotation = Quaternion.Euler(zero2);
				this.doguCnt = this.doguBObject.Count - 1;
				this.gDogu[this.doguCnt] = GameObject.CreatePrimitive(PrimitiveType.Cube);
				this.gDogu[this.doguCnt].GetComponent<Renderer>().material = this.m_material;
				this.gDogu[this.doguCnt].layer = 8;
				this.gDogu[this.doguCnt].GetComponent<Renderer>().enabled = false;
				this.gDogu[this.doguCnt].SetActive(false);
				this.gDogu[this.doguCnt].transform.position = gameObject5.transform.position;
				this.mDogu[this.doguCnt] = this.gDogu[this.doguCnt].AddComponent<MouseDrag6>();
				this.mDogu[this.doguCnt].isScale = false;
				this.mDogu[this.doguCnt].obj = this.gDogu[this.doguCnt];
				this.mDogu[this.doguCnt].maid = gameObject5;
				this.mDogu[this.doguCnt].angles = gameObject5.transform.eulerAngles;
				this.gDogu[this.doguCnt].transform.localScale = new Vector3(this.cubeSize, this.cubeSize, this.cubeSize);
				this.mDogu[this.doguCnt].ido = 1;
				if (this.doguBIndex == 6 || this.doguBIndex == 7)
				{
					this.mDogu[this.doguCnt].isScale2 = true;
					this.mDogu[this.doguCnt].scale2 = gameObject5.transform.localScale;
				}
			}
			GUI.enabled = true;
			if (this.bgmCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			this.listStyle3.padding.top = this.GetPix(1);
			this.listStyle3.padding.bottom = this.GetPix(0);
			this.listStyle3.fontSize = this.GetPix(12);
			int num23 = this.bgCombo.List(new Rect((float)this.GetPix(31), (float)this.GetPix(53), (float)this.GetPix(95), (float)this.GetPix(23)), this.bgComboList[this.bgIndex].text, this.bgComboList, guistyle4, "box", this.listStyle3);
			if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(53), (float)this.GetPix(23), (float)this.GetPix(23)), "＜", guistyle3))
			{
				num23--;
				if (num23 <= -1)
				{
					num23 = this.bgArray.Length - 1;
				}
			}
			if (GUI.Button(new Rect((float)this.GetPix(129), (float)this.GetPix(53), (float)this.GetPix(23), (float)this.GetPix(23)), "＞", guistyle3))
			{
				num23++;
				if (num23 == this.bgArray.Length)
				{
					num23 = 0;
				}
			}
			if (this.bgIndex != num23)
			{
				this.bgIndex = num23;
				this.bg.localScale = new Vector3(1f, 1f, 1f);
				if (this.bgArray[this.bgIndex].Length == 36)
				{
					GameMain.Instance.BgMgr.ChangeBgMyRoom(this.bgArray[this.bgIndex]);
				}
				else
				{
					GameMain.Instance.BgMgr.ChangeBg(this.bgArray[this.bgIndex]);
				}
				this.bgCombo.selectedItemIndex = this.bgIndex;
				if (this.bgArray[this.bgIndex] == "karaokeroom")
				{
					this.bg.transform.position = this.bgObject.transform.position;
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					zero2.y = 90f;
					zero.z = 4f;
					zero.x = 1f;
					this.bg.transform.localPosition = zero;
					this.bg.transform.localRotation = Quaternion.Euler(zero2);
				}
			}
			GUI.enabled = true;
			int num24 = this.bgmCombo.List(new Rect((float)this.GetPix(31), (float)this.GetPix(25), (float)this.GetPix(95), (float)this.GetPix(23)), this.bgmComboList[this.bgmIndex].text, this.bgmComboList, guistyle4, "box", this.listStyle3);
			if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(25), (float)this.GetPix(23), (float)this.GetPix(23)), "＜", guistyle3))
			{
				num24--;
				if (num24 <= -1)
				{
					num24 = this.bgmArray.Length - 1;
				}
			}
			if (GUI.Button(new Rect((float)this.GetPix(129), (float)this.GetPix(25), (float)this.GetPix(23), (float)this.GetPix(23)), "＞", guistyle3))
			{
				num24++;
				if (num24 == this.bgmArray.Length)
				{
					num24 = 0;
				}
			}
			if (this.bgmIndex != num24)
			{
				this.bgmIndex = num24;
				GameMain.Instance.SoundMgr.PlayBGM(this.bgmArray[this.bgmIndex] + ".ogg", 0f, true);
				this.bgmCombo.selectedItemIndex = this.bgmIndex;
			}
			if (this.bgmCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
		}

		// Token: 0x0600003D RID: 61 RVA: 0x00034AEC File Offset: 0x00032CEC
		private void GuiFunc4(int winID)
		{
			GUIStyle guistyle = "label";
			guistyle.fontSize = this.GetPix(12);
			guistyle.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle2 = "label";
			guistyle2.fontSize = this.GetPix(11);
			guistyle2.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle3 = "button";
			guistyle3.fontSize = this.GetPix(20);
			GUIStyle guistyle4 = "button";
			guistyle4.fontSize = this.GetPix(14);
			guistyle4.alignment = TextAnchor.MiddleLeft;
			GUIStyle guistyle5 = "button";
			guistyle5.fontSize = this.GetPix(12);
			guistyle5.alignment = TextAnchor.MiddleLeft;
			GUIStyle guistyle6 = new GUIStyle("toggle");
			guistyle6.fontSize = this.GetPix(13);
			CharacterMgr characterMgr = GameMain.Instance.CharacterMgr;
			Maid maid = this.maidArray[this.selectMaidIndex];
			if (!this.poseInitFlg)
			{
				this.listStyle2.normal.textColor = Color.white;
				this.listStyle2.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
				GUIStyleState onHover = this.listStyle2.onHover;
				GUIStyleState hover = this.listStyle2.hover;
				Texture2D texture2D = new Texture2D(2, 2);
				Texture2D background = texture2D;
				hover.background = texture2D;
				onHover.background = background;
				RectOffset padding = this.listStyle2.padding;
				RectOffset padding2 = this.listStyle2.padding;
				RectOffset padding3 = this.listStyle2.padding;
				int num = this.listStyle2.padding.bottom = this.GetPix(0);
				padding3.top = num;
				padding2.right = num;
				padding.left = num;
				this.listStyle2.fontSize = this.GetPix(12);
				this.listStyle3.normal.textColor = Color.white;
				this.listStyle3.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
				GUIStyleState onHover2 = this.listStyle3.onHover;
				GUIStyleState hover2 = this.listStyle3.hover;
				Texture2D texture2D2 = new Texture2D(2, 2);
				background = texture2D2;
				hover2.background = texture2D2;
				onHover2.background = background;
				RectOffset padding4 = this.listStyle3.padding;
				RectOffset padding5 = this.listStyle3.padding;
				num = (this.listStyle3.padding.top = this.GetPix(1));
				padding5.right = num;
				padding4.left = num;
				this.listStyle3.padding.bottom = this.GetPix(0);
				this.listStyle3.fontSize = this.GetPix(12);
				this.listStyle4.normal.textColor = Color.white;
				this.listStyle4.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
				GUIStyleState onHover3 = this.listStyle4.onHover;
				GUIStyleState hover3 = this.listStyle4.hover;
				Texture2D texture2D3 = new Texture2D(2, 2);
				background = texture2D3;
				hover3.background = texture2D3;
				onHover3.background = background;
				RectOffset padding6 = this.listStyle4.padding;
				RectOffset padding7 = this.listStyle4.padding;
				num = (this.listStyle4.padding.top = 3);
				padding7.right = num;
				padding6.left = num;
				this.listStyle4.padding.bottom = 3;
				this.listStyle4.fontSize = this.GetPix(13);
				this.poseCombo.selectedItemIndex = 0;
				int num2 = (int)this.groupList[0];
				this.poseComboList = new GUIContent[num2];
				for (int i = 0; i < num2; i++)
				{
					this.poseComboList[i] = new GUIContent(i + 1 + ":" + this.poseArray[i]);
				}
				this.poseGroupCombo.selectedItemIndex = 0;
				this.poseGroupComboList = new GUIContent[this.poseGroupArray.Length + 1];
				this.poseGroupComboList[0] = new GUIContent("1:通常");
				for (int j = 0; j < this.poseGroupArray.Length; j++)
				{
					if (this.poseGroupArray[j] == "maid_dressroom01")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":立ち");
					}
					if (this.poseGroupArray[j] == "tennis_kamae_f")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":中腰");
					}
					if (this.poseGroupArray[j] == "senakanagasi_f")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":膝をつく");
					}
					if (this.poseGroupArray[j] == "work_hansei")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":座り");
					}
					if (this.poseGroupArray[j] == "inu_taiki_f")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":四つん這い");
					}
					if (this.poseGroupArray[j] == "syagami_pose_f")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":床座り");
					}
					if (this.poseGroupArray[j] == "densyasuwari_taiki_f")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":椅子座り");
					}
					if (this.poseGroupArray[j] == "work_kaiwa")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":ソファー座り");
					}
					if (this.poseGroupArray[j] == "dance_cm3d2_001_f1,14.14")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":ドキドキ☆Fallin' Love");
					}
					if (this.poseGroupArray[j] == "dance_cm3d_001_f1,39.25")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":entrance to you");
					}
					if (this.poseGroupArray[j] == "dance_cm3d_002_end_f1,50.71")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":scarlet leap");
					}
					if (this.poseGroupArray[j] == "dance_cm3d2_002_smt_f,7.76,")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":stellar my tears");
					}
					if (this.poseGroupArray[j] == "dance_cm3d_003_sp2_f1,90.15")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":rhythmix to you");
					}
					if (this.poseGroupArray[j] == "dance_cm3d2_003_hs_f1,0.01,")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":happy!happy!スキャンダル!!");
					}
					if (this.poseGroupArray[j] == "dance_cm3d_004_kano_f1,124.93")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":Can Know Two Close");
					}
					if (this.poseGroupArray[j] == "dance_cm3d2_004_sse_f1,0.01")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":sweet sweet everyday");
					}
					if (this.poseGroupArray[j] == "turusi_sex_in_taiki_f")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":拘束");
					}
					if (this.poseGroupArray[j] == "rosyutu_pose01_f")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":エロ");
					}
					if (this.poseGroupArray[j] == "rosyutu_aruki_f_once_,1.37")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":歩き");
					}
					if (this.poseGroupArray[j] == "stand_desk1")
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":その他");
					}
					if (this.poseGroupArray[j] == Class1.poseArray5[0])
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":ダンスMC");
					}
					if (this.poseGroupArray[j] == Class1.poseArray6[0])
					{
						this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":ダンス");
					}
					if (this.existPose && this.strS != "")
					{
						if (j == this.poseGroupArray.Length - 4)
						{
							this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":通常2");
						}
						if (j == this.poseGroupArray.Length - 3)
						{
							this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":エロ2");
						}
						if (j == this.poseGroupArray.Length - 2)
						{
							this.poseGroupComboList[j + 1] = new GUIContent("98:撮影モード");
						}
						if (j == this.poseGroupArray.Length - 1)
						{
							this.poseGroupComboList[j + 1] = new GUIContent("99:登録ポーズ");
						}
					}
					else if (this.existPose && this.strS == "")
					{
						if (j == this.poseGroupArray.Length - 3)
						{
							this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":通常2");
						}
						if (j == this.poseGroupArray.Length - 2)
						{
							this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":エロ2");
						}
						if (j == this.poseGroupArray.Length - 1)
						{
							this.poseGroupComboList[j + 1] = new GUIContent("99:登録ポーズ");
						}
					}
					else if (!this.existPose && this.strS != "")
					{
						if (j == this.poseGroupArray.Length - 3)
						{
							this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":通常2");
						}
						if (j == this.poseGroupArray.Length - 2)
						{
							this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":エロ2");
						}
						if (j == this.poseGroupArray.Length - 1)
						{
							this.poseGroupComboList[j + 1] = new GUIContent("98:撮影モード");
						}
					}
					else
					{
						if (j == this.poseGroupArray.Length - 2)
						{
							this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":通常2");
						}
						if (j == this.poseGroupArray.Length - 1)
						{
							this.poseGroupComboList[j + 1] = new GUIContent(j + 2 + ":エロ2");
						}
					}
				}
				this.poseInitFlg = true;
				this.itemCombo.selectedItemIndex = 0;
				num2 = Class1.itemArray.Length;
				this.itemComboList = new GUIContent[num2 - 1];
				for (int k = 0; k < num2; k++)
				{
					if (k == 0)
					{
						this.itemComboList[k] = new GUIContent("アイテム無し");
					}
					else
					{
						string text = Class1.itemArray[k];
						uint num3 = <PrivateImplementationDetails>.ComputeStringHash(text);
						if (num3 <= 2167365697u)
						{
							if (num3 <= 882100712u)
							{
								if (num3 <= 425560241u)
								{
									if (num3 <= 349597564u)
									{
										if (num3 != 103280414u)
										{
											if (num3 != 307103577u)
											{
												if (num3 == 349597564u)
												{
													if (text == "handitem,HandItemL_Dance_Zoukin_I_.menu")
													{
														this.itemComboList[k - 1] = new GUIContent(k - 1 + ":ダンス雑巾");
													}
												}
											}
											else if (text == "handitem,HandItemR_SmartPhone_I_.menu")
											{
												this.itemComboList[k] = new GUIContent(k + "スマートフォン");
											}
										}
										else if (text == "handitem,HandItemR_Houki_I_.menu")
										{
											this.itemComboList[k] = new GUIContent(k + ":ほうき");
										}
									}
									else if (num3 != 362931255u)
									{
										if (num3 != 365076182u)
										{
											if (num3 == 425560241u)
											{
												if (text == "handitem,HandItemR_Houchou_I_.menu")
												{
													this.itemComboList[k] = new GUIContent(k + ":包丁");
												}
											}
										}
										else if (text == "handitem,HandItemR_Otama_I_.menu")
										{
											this.itemComboList[k] = new GUIContent(k + ":おたま");
										}
									}
									else if (text == "handitem,HandItemL_Katuramuki_Daikon_I_.menu")
									{
										this.itemComboList[k - 1] = new GUIContent(k - 1 + "桂むき大根");
									}
								}
								else if (num3 <= 716834680u)
								{
									if (num3 != 596147124u)
									{
										if (num3 != 604451964u)
										{
											if (num3 == 716834680u)
											{
												if (text == "handitem,HandItemR_Usuba_Houchou_I_.menu")
												{
													this.itemComboList[k] = new GUIContent(k + "薄刃包丁");
												}
											}
										}
										else if (text == "handitem,HandItemL_Dance_Hataki_I_.menu")
										{
											this.itemComboList[k - 1] = new GUIContent(k - 1 + ":ダンスハタキ");
										}
									}
									else if (text == "accvag,accVag_Vibe_I_.menu")
									{
										this.itemComboList[k - 1] = new GUIContent(k - 1 + ":前：バイブ");
									}
								}
								else if (num3 <= 861594871u)
								{
									if (num3 != 720654456u)
									{
										if (num3 == 861594871u)
										{
											if (text == "handitem,HandItemH_SoutouVibe_I_.menu")
											{
												this.itemComboList[k - 1] = new GUIContent(k - 1 + ":前：双頭バイブ");
											}
										}
									}
									else if (text == "handitem,HandItemR_VibeBig_I_.menu")
									{
										this.itemComboList[k - 1] = new GUIContent(k - 1 + ":太バイブ");
									}
								}
								else if (num3 != 863101802u)
								{
									if (num3 == 882100712u)
									{
										if (text == "handitem,HandItemD_Sara_Sponge_I_.menu")
										{
											this.itemComboList[k] = new GUIContent(k + ":皿・スポンジ");
										}
									}
								}
								else if (text == "handitem,HandItemR_Hataki_I_.menu")
								{
									this.itemComboList[k] = new GUIContent(k + ":ハタキ");
								}
							}
							else if (num3 <= 1816208699u)
							{
								if (num3 <= 1473154842u)
								{
									if (num3 != 1047220412u)
									{
										if (num3 != 1221191479u)
										{
											if (num3 == 1473154842u)
											{
												if (text == "handitem,HandItemR_Vibe_I_.menu")
												{
													this.itemComboList[k - 1] = new GUIContent(k - 1 + ":バイブ");
												}
											}
										}
										else if (text == "handitem,HandItemR_Chusyaki_I_.menu")
										{
											this.itemComboList[k] = new GUIContent(k + "注射器");
										}
									}
									else if (text == "accanl,accAnl_AnalVibe_I_.menu")
									{
										this.itemComboList[k - 1] = new GUIContent(k - 1 + ":後：アナルバイブ");
									}
								}
								else if (num3 != 1513086965u)
								{
									if (num3 != 1534972376u)
									{
										if (num3 == 1816208699u)
										{
											if (text == "handitem,HandItemR_Book_I_.menu")
											{
												this.itemComboList[k] = new GUIContent(k + ":本");
											}
										}
									}
									else if (text == "handitem,HandItemR_Nei_Heartful_I_.menu")
									{
										this.itemComboList[k] = new GUIContent(k + "ハートフルねい人形");
									}
								}
								else if (text == "kousoku_upper,KousokuU_TekaseTwo_I_.menu")
								{
									this.itemComboList[k] = new GUIContent(k + ":手枷2");
								}
							}
							else if (num3 <= 1890707132u)
							{
								if (num3 != 1829407920u)
								{
									if (num3 != 1866377900u)
									{
										if (num3 == 1890707132u)
										{
											if (text == "handitem,HandItemR_AnalVibe_I_.menu")
											{
												this.itemComboList[k - 1] = new GUIContent(k - 1 + ":アナルバイブ");
											}
										}
									}
									else if (text == "kousoku_upper,KousokuU_SMRoom2_Haritsuke_I_.menu")
									{
										this.itemComboList[k - 1] = new GUIContent(k - 1 + ":磔台・手枷足枷2");
									}
								}
								else if (text == "accvag,accVag_VibePink_I_.menu")
								{
									this.itemComboList[k - 1] = new GUIContent(k - 1 + ":前：ピンクバイブ");
								}
							}
							else if (num3 <= 2111437926u)
							{
								if (num3 != 1911912656u)
								{
									if (num3 == 2111437926u)
									{
										if (text == "handitem,HandItemL_Kozara_I_.menu")
										{
											this.itemComboList[k - 1] = new GUIContent(k - 1 + ":小皿");
										}
									}
								}
								else if (text == "handitem,HandItemR_Teacup_I_.menu")
								{
									this.itemComboList[k - 1] = new GUIContent(k - 1 + ":ティーカップ");
								}
							}
							else if (num3 != 2134474702u)
							{
								if (num3 == 2167365697u)
								{
									if (text == "handitem,HandItemR_Pen_I_.menu")
									{
										this.itemComboList[k] = new GUIContent(k + ":ペン");
									}
								}
							}
							else if (text == "handitem,HandItemR_Mop_I_.menu")
							{
								this.itemComboList[k] = new GUIContent(k + ":モップ");
							}
						}
						else if (num3 <= 3166032195u)
						{
							if (num3 <= 2637853649u)
							{
								if (num3 <= 2320398109u)
								{
									if (num3 != 2233276519u)
									{
										if (num3 != 2273241048u)
										{
											if (num3 == 2320398109u)
											{
												if (text == "handitem,HandItemR_Wholecake_I_.menu")
												{
													this.itemComboList[k - 1] = new GUIContent("ホールケーキ");
												}
											}
										}
										else if (text == "handitem,HandItemL_Etoile_Saucer_I_.menu")
										{
											this.itemComboList[k - 1] = new GUIContent(k - 1 + "ティーソーサー");
										}
									}
									else if (text == "accanl,accAnl_Photo_VibeBig_I_.menu")
									{
										this.itemComboList[k - 1] = new GUIContent(k - 1 + ":後：太バイブ");
									}
								}
								else if (num3 != 2423937501u)
								{
									if (num3 != 2457697643u)
									{
										if (num3 == 2637853649u)
										{
											if (text == "handitem,HandItemL_Cracker_I_.menu")
											{
												this.itemComboList[k - 1] = new GUIContent(k - 1 + "クラッカー");
											}
										}
									}
									else if (text == "accanl,accAnl_Photo_VibePink_I_.menu")
									{
										this.itemComboList[k - 1] = new GUIContent(k - 1 + ":後：ピンクバイブ");
									}
								}
								else if (text == "handitem,HandItemR_WineGlass_I_.menu")
								{
									this.itemComboList[k] = new GUIContent(k + ":ワイングラス");
								}
							}
							else if (num3 <= 2815329218u)
							{
								if (num3 != 2758856534u)
								{
									if (num3 != 2759153101u)
									{
										if (num3 == 2815329218u)
										{
											if (text == "handitem,HandItemR_Mimikaki_I_.menu")
											{
												this.itemComboList[k] = new GUIContent(k + ":耳かき");
											}
										}
									}
									else if (text == "handitem,HandItemR_Rip_I_.menu")
									{
										this.itemComboList[k] = new GUIContent(k + ":リップ");
									}
								}
								else if (text == "accvag,accVag_VibeBig_I_.menu")
								{
									this.itemComboList[k - 1] = new GUIContent(k - 1 + ":前：太バイブ");
								}
							}
							else if (num3 <= 3089966924u)
							{
								if (num3 != 2958502557u)
								{
									if (num3 == 3089966924u)
									{
										if (text == "handitem,HandItemL_Dance_Mop_I_.menu")
										{
											this.itemComboList[k - 1] = new GUIContent(k - 1 + ":ダンスモップ");
										}
									}
								}
								else if (text == "handitem,HandItemR_Puff_I_.menu")
								{
									this.itemComboList[k] = new GUIContent(k + ":パフ");
								}
							}
							else if (num3 != 3152951418u)
							{
								if (num3 == 3166032195u)
								{
									if (text == "handitem,HandItemR_WineBottle_I_.menu")
									{
										this.itemComboList[k] = new GUIContent(k + ":ワインボトル");
									}
								}
							}
							else if (text == "handitem,HandItemR_Shaker_I_.menu")
							{
								this.itemComboList[k] = new GUIContent(k + "シェイカー");
							}
						}
						else if (num3 <= 3869056976u)
						{
							if (num3 <= 3462520004u)
							{
								if (num3 != 3239898107u)
								{
									if (num3 != 3239999949u)
									{
										if (num3 == 3462520004u)
										{
											if (text == "kousoku_lower,KousokuL_AshikaseUp_I_.menu")
											{
												this.itemComboList[k] = new GUIContent(k + ":足枷");
											}
										}
									}
									else if (text == "handitem,HandItemL_Teasaucer_I_.menu")
									{
										this.itemComboList[k - 1] = new GUIContent(k - 1 + ":ティーソーサー");
									}
								}
								else if (text == "handitem,HandItemD_Shisyuu_Hari_I_.menu")
								{
									this.itemComboList[k] = new GUIContent(k + ":刺繍");
								}
							}
							else if (num3 <= 3586052734u)
							{
								if (num3 != 3534555109u)
								{
									if (num3 == 3586052734u)
									{
										if (text == "accanl,accAnl_Photo_NomalVibe_I_.menu")
										{
											this.itemComboList[k - 1] = new GUIContent(k - 1 + ":後：バイブ");
										}
									}
								}
								else if (text == "handitem,HandItemL_Karte_I_.menu")
								{
									this.itemComboList[k - 1] = new GUIContent(k - 1 + "カルテ");
								}
							}
							else if (num3 != 3637898085u)
							{
								if (num3 == 3869056976u)
								{
									if (text == "handitem,handitemr_racket_I_.menu")
									{
										this.itemComboList[k] = new GUIContent(k + ":ラケット");
									}
								}
							}
							else if (text == "handitem,HandItemR_Chu-B_Lip_I_.menu")
							{
								this.itemComboList[k] = new GUIContent(k + ":Chu-B Lip");
							}
						}
						else if (num3 <= 4171855561u)
						{
							if (num3 != 3900296259u)
							{
								if (num3 != 4047481891u)
								{
									if (num3 == 4171855561u)
									{
										if (text == "kousoku_upper,KousokuU_Ushirode_I_.menu")
										{
											this.itemComboList[k - 1] = new GUIContent(k - 1 + ":後ろ手拘束具");
										}
									}
								}
								else if (text == "kousoku_upper,KousokuU_TekaseOne_I_.menu")
								{
									this.itemComboList[k] = new GUIContent(k + ":手枷1");
								}
							}
							else if (text == "handitem,HandItemR_Etoile_Teacup_I_.menu")
							{
								this.itemComboList[k - 1] = new GUIContent(k - 1 + "ティーカップ");
							}
						}
						else if (num3 <= 4244158060u)
						{
							if (num3 != 4177874677u)
							{
								if (num3 == 4244158060u)
								{
									if (text == "handitem,HandItemR_Zoukin2_I_.menu")
									{
										this.itemComboList[k] = new GUIContent(k + ":雑巾");
									}
								}
							}
							else if (text == "handitem,HandItemR_Menu_I_.menu")
							{
								this.itemComboList[k - 1] = new GUIContent("メニュー表");
							}
						}
						else if (num3 != 4274803196u)
						{
							if (num3 == 4288016398u)
							{
								if (text == "handitem,HandItemR_VibePink_I_.menu")
								{
									this.itemComboList[k - 1] = new GUIContent(k - 1 + ":ピンクバイブ");
								}
							}
						}
						else if (text == "kousoku_upper,KousokuU_SMRoom_Haritsuke_I_.menu")
						{
							this.itemComboList[k - 1] = new GUIContent(k - 1 + ":磔台・手枷足枷");
						}
						if (k == 12)
						{
							this.itemComboList[k] = new GUIContent(k + ":手枷・足枷");
						}
						if (k == 13)
						{
							this.itemComboList[k] = new GUIContent(k + ":手枷・足枷(下)");
						}
						if (k == 24)
						{
							this.itemComboList[k - 1] = new GUIContent(k - 1 + ":カップ＆ソーサー");
						}
					}
				}
			}
			if (this.poseCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			if (this.poseGroupCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			if (this.sceneLevel == 3 || this.sceneLevel == 5 || this.isF6)
			{
				if (!this.isF6)
				{
					bool value = true;
					if (this.faceFlg || this.poseFlg || this.sceneFlg || this.kankyoFlg || this.kankyo2Flg)
					{
						value = false;
					}
					if (GUI.Toggle(new Rect((float)this.GetPix(2), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), value, "配置", guistyle6))
					{
						this.faceFlg = false;
						this.poseFlg = false;
						this.sceneFlg = false;
						this.kankyoFlg = false;
						this.kankyo2Flg = false;
						this.bGui = true;
						this.isGuiInit = true;
					}
				}
				if (!this.yotogiFlg && GUI.Toggle(new Rect((float)this.GetPix(41), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.poseFlg, "操作", guistyle6))
				{
					this.poseFlg = true;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(80), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.faceFlg, "表情", guistyle6))
				{
					this.faceFlg = true;
					this.poseFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
					if (!this.faceFlg2)
					{
						this.isFaceInit = true;
						this.faceFlg2 = true;
						this.maidArray[this.selectMaidIndex].boMabataki = false;
						this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
					}
					this.isFaceInit = true;
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(119), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.kankyoFlg, "環境", guistyle6))
				{
					this.poseFlg = false;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = true;
					this.kankyo2Flg = false;
				}
				if (!this.line1)
				{
					this.line1 = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.3f));
					this.line2 = this.MakeTex(2, 2, new Color(0.7f, 0.7f, 0.7f, 0.6f));
				}
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(160), 2f), this.line1);
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(160), 1f), this.line2);
				guistyle.fontSize = this.GetPix(13);
				guistyle.alignment = TextAnchor.MiddleCenter;
				GUI.Label(new Rect((float)this.GetPix(125), (float)this.GetPix(25), (float)this.GetPix(40), (float)this.GetPix(25)), string.Concat(this.selectMaidIndex + 1), guistyle);
				guistyle.fontSize = this.GetPix(11);
				guistyle.alignment = TextAnchor.UpperLeft;
			}
			if (this.sceneLevel > 0)
			{
				int num4 = this.selectMaidIndex;
				if (this.sceneLevel == 3 || (this.sceneLevel == 5 && (this.isF7 || this.maidCnt > 1)))
				{
					if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(53), (float)this.GetPix(23), (float)this.GetPix(32)), "＜", guistyle3))
					{
						this.selectMaidIndex--;
						if (this.selectMaidIndex < 0)
						{
							this.selectMaidIndex = this.selectList.Count - 1;
						}
						this.isPoseInit = true;
						this.poseFlg = true;
						this.copyIndex = 0;
						this.poseCombo.selectedItemIndex = this.poseIndex[this.selectMaidIndex];
						this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
					}
					if (GUI.Button(new Rect((float)this.GetPix(135), (float)this.GetPix(53), (float)this.GetPix(23), (float)this.GetPix(32)), "＞", guistyle3))
					{
						this.selectMaidIndex++;
						if (this.selectList.Count <= this.selectMaidIndex)
						{
							this.selectMaidIndex = 0;
						}
						this.isPoseInit = true;
						this.poseFlg = true;
						this.copyIndex = 0;
						this.poseCombo.selectedItemIndex = this.poseIndex[this.selectMaidIndex];
						this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
					}
				}
				if (this.maidArray[this.selectMaidIndex].GetThumIcon())
				{
					GUI.DrawTexture(new Rect((float)this.GetPix(30), (float)this.GetPix(25), (float)this.GetPix(60), (float)this.GetPix(60)), this.maidArray[this.selectMaidIndex].GetThumIcon());
				}
				string text2 = this.maidArray[this.selectMaidIndex].status.lastName + "\n" + this.maidArray[this.selectMaidIndex].status.firstName;
				GUI.Label(new Rect((float)this.GetPix(90), (float)this.GetPix(50), (float)this.GetPix(140), (float)this.GetPix(210)), text2, guistyle);
			}
			if (!this.isF6)
			{
				if (this.isDanceStop)
				{
					this.isStop[this.selectMaidIndex] = true;
					this.isDanceStop = false;
				}
				if (this.sceneLevel == 5 && this.maidCnt > 1)
				{
					bool value2 = false;
					if (this.selectMaidIndex == this.isEditNo)
					{
						value2 = true;
					}
					this.isEdit[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(25), (float)this.GetPix(50), (float)this.GetPix(16)), value2, "Edit", guistyle6);
					if (this.isEdit[this.selectMaidIndex] && this.selectMaidIndex != this.isEditNo)
					{
						this.isEditNo = this.selectMaidIndex;
						for (int l = 0; l < this.maidCnt; l++)
						{
							if (l != this.isEditNo)
							{
								this.isEdit[l] = false;
							}
						}
						SceneEdit component = GameObject.Find("__SceneEdit__").GetComponent<SceneEdit>();
						ManyMaids.SetFieldValue<SceneEdit, Maid>(component, "m_maid", this.maidArray[this.selectMaidIndex]);
						component.PartsTypeCamera(MPN.lip);
						this.editSelectMaid = this.maidArray[this.selectMaidIndex];
						if (this.selectList[this.selectMaidIndex] != null && this.goSlot[(int)this.selectList[this.selectMaidIndex]] != null)
						{
							this.maidArray[this.selectMaidIndex].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[this.selectMaidIndex]]);
							for (int m = 0; m < this.bodyHit[(int)this.selectList[this.selectMaidIndex]].Count; m++)
							{
								this.maidArray[this.selectMaidIndex].body0.goSlot[m].bonehair.bodyhit = this.bodyHit[(int)this.selectList[this.selectMaidIndex]][m];
							}
						}
					}
				}
				if (this.poseGroupCombo.isClickedComboButton)
				{
					GUI.enabled = false;
				}
				else
				{
					GUI.enabled = true;
				}
				if (this.isLock[this.selectMaidIndex])
				{
					GUI.enabled = false;
				}
				if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(125), (float)this.GetPix(23), (float)this.GetPix(23)), "＜", guistyle3))
				{
					this.poseIndex[this.selectMaidIndex]--;
					if (this.poseGroupIndex > 0)
					{
						if ((int)this.groupList[this.poseGroupIndex - 1] > this.poseIndex[this.selectMaidIndex])
						{
							if (this.poseGroupIndex >= this.groupList.Count)
							{
								this.poseIndex[this.selectMaidIndex] = this.poseArray.Length - 1;
							}
							else
							{
								this.poseIndex[this.selectMaidIndex] = (int)this.groupList[this.poseGroupIndex] - 1;
							}
						}
					}
					else if (this.poseIndex[this.selectMaidIndex] < 0)
					{
						this.poseIndex[this.selectMaidIndex] = (int)this.groupList[this.poseGroupIndex] - 1;
					}
					this.isPoseInit = true;
					if (this.poseGroupIndex > 0)
					{
						this.poseCombo.selectedItemIndex = this.poseIndex[this.selectMaidIndex] - (int)this.groupList[this.poseGroupIndex - 1];
					}
					else
					{
						this.poseCombo.selectedItemIndex = this.poseIndex[this.selectMaidIndex];
					}
					if (!this.isLock[this.selectMaidIndex] && maid && maid.Visible)
					{
						string[] array = this.poseArray[this.poseIndex[this.selectMaidIndex]].Split(new char[]
						{
							','
						});
						this.isStop[this.selectMaidIndex] = false;
						this.poseCount[this.selectMaidIndex] = 20;
						if (array[0].Contains("_momi") || array[0].Contains("paizuri_"))
						{
							maid.body0.MuneYureL(0f);
							maid.body0.MuneYureR(0f);
						}
						else
						{
							maid.body0.MuneYureL(1f);
							maid.body0.MuneYureR(1f);
						}
						int num6;
						if (array[0].Contains("ManyMaidsPose"))
						{
							string path9 = array[0].Split(new char[]
							{
								'/'
							})[1];
							byte[] array2 = new byte[0];
							try
							{
								using (FileStream fileStream = new FileStream(path9, FileMode.Open, FileAccess.Read))
								{
									array2 = new byte[fileStream.Length];
									fileStream.Read(array2, 0, array2.Length);
								}
							}
							catch
							{
							}
							if (array2.Length != 0)
							{
								long num5 = (long)Path.GetFileName(path9).GetHashCode();
								maid.body0.CrossFade(num5.ToString(), array2, false, false, false, 0f, 1f);
								Maid.AutoTwist[] array3 = new Maid.AutoTwist[]
								{
									Maid.AutoTwist.ShoulderL,
									Maid.AutoTwist.ShoulderR,
									Maid.AutoTwist.WristL,
									Maid.AutoTwist.WristR,
									Maid.AutoTwist.ThighL,
									Maid.AutoTwist.ThighR
								};
								for (int n = 0; n < array3.Length; n++)
								{
									maid.SetAutoTwist(array3[n], true);
								}
							}
						}
						else if (array[0].StartsWith("p") && int.TryParse(array[0].Substring(1), out num6))
						{
							this.loadPose[this.selectMaidIndex] = array[0];
						}
						else if (!array[0].StartsWith("dance_"))
						{
							this.maidArray[this.selectMaidIndex].CrossFade(array[0] + ".anm", false, true, false, 0f, 1f);
						}
						else
						{
							if (!maid.body0.m_Bones.GetComponent<Animation>().GetClip(array[0] + ".anm"))
							{
								maid.body0.LoadAnime(array[0] + ".anm", GameUty.FileSystem, array[0] + ".anm", false, false);
							}
							maid.body0.m_Bones.GetComponent<Animation>().Play(array[0] + ".anm");
						}
						if (array.Length > 1)
						{
							maid.body0.m_Bones.GetComponent<Animation>()[array[0] + ".anm"].time = float.Parse(array[1]);
							this.isDanceStop = true;
							if (array.Length > 2)
							{
								CMT.SearchObjName(this.maidArray[this.selectMaidIndex].body0.m_Bones.transform, "Bip01", true);
								this.isPoseIti[this.selectMaidIndex] = true;
								this.poseIti[this.selectMaidIndex] = this.maidArray[this.selectMaidIndex].transform.position;
								this.maidArray[this.selectMaidIndex].transform.position = new Vector3(100f, 100f, 100f);
							}
						}
					}
				}
				if (GUI.Button(new Rect((float)this.GetPix(135), (float)this.GetPix(125), (float)this.GetPix(23), (float)this.GetPix(23)), "＞", guistyle3))
				{
					this.poseIndex[this.selectMaidIndex]++;
					if (this.poseIndex[this.selectMaidIndex] > (int)this.groupList[this.groupList.Count - 1])
					{
						if (this.poseIndex[this.selectMaidIndex] >= this.poseArray.Length)
						{
							this.poseIndex[this.selectMaidIndex] = (int)this.groupList[this.poseGroupIndex - 1];
						}
					}
					else if (this.poseIndex[this.selectMaidIndex] >= (int)this.groupList[this.poseGroupIndex])
					{
						if (this.poseGroupIndex > 0)
						{
							this.poseIndex[this.selectMaidIndex] = (int)this.groupList[this.poseGroupIndex - 1];
						}
						else
						{
							this.poseIndex[this.selectMaidIndex] = 0;
						}
					}
					this.isPoseInit = true;
					if (this.poseGroupIndex > 0)
					{
						this.poseCombo.selectedItemIndex = this.poseIndex[this.selectMaidIndex] - (int)this.groupList[this.poseGroupIndex - 1];
					}
					else
					{
						this.poseCombo.selectedItemIndex = this.poseIndex[this.selectMaidIndex];
					}
					if (!this.isLock[this.selectMaidIndex] && maid && maid.Visible)
					{
						string[] array4 = this.poseArray[this.poseIndex[this.selectMaidIndex]].Split(new char[]
						{
							','
						});
						this.isStop[this.selectMaidIndex] = false;
						this.poseCount[this.selectMaidIndex] = 20;
						if (array4[0].Contains("_momi") || array4[0].Contains("paizuri_"))
						{
							maid.body0.MuneYureL(0f);
							maid.body0.MuneYureR(0f);
						}
						else
						{
							maid.body0.MuneYureL(1f);
							maid.body0.MuneYureR(1f);
						}
						int num6;
						if (array4[0].Contains("ManyMaidsPose"))
						{
							string path2 = array4[0].Split(new char[]
							{
								'/'
							})[1];
							byte[] array5 = new byte[0];
							try
							{
								using (FileStream fileStream2 = new FileStream(path2, FileMode.Open, FileAccess.Read))
								{
									array5 = new byte[fileStream2.Length];
									fileStream2.Read(array5, 0, array5.Length);
								}
							}
							catch
							{
							}
							if (array5.Length != 0)
							{
								long num7 = (long)Path.GetFileName(path2).GetHashCode();
								maid.body0.CrossFade(num7.ToString(), array5, false, false, false, 0f, 1f);
								Maid.AutoTwist[] array6 = new Maid.AutoTwist[]
								{
									Maid.AutoTwist.ShoulderL,
									Maid.AutoTwist.ShoulderR,
									Maid.AutoTwist.WristL,
									Maid.AutoTwist.WristR,
									Maid.AutoTwist.ThighL,
									Maid.AutoTwist.ThighR
								};
								for (int num8 = 0; num8 < array6.Length; num8++)
								{
									maid.SetAutoTwist(array6[num8], true);
								}
							}
						}
						else if (array4[0].StartsWith("p") && int.TryParse(array4[0].Substring(1), out num6))
						{
							this.loadPose[this.selectMaidIndex] = array4[0];
						}
						else if (!array4[0].StartsWith("dance_"))
						{
							this.maidArray[this.selectMaidIndex].CrossFade(array4[0] + ".anm", false, true, false, 0f, 1f);
						}
						else
						{
							if (!maid.body0.m_Bones.GetComponent<Animation>().GetClip(array4[0] + ".anm"))
							{
								maid.body0.LoadAnime(array4[0] + ".anm", GameUty.FileSystem, array4[0] + ".anm", false, false);
							}
							maid.body0.m_Bones.GetComponent<Animation>().Play(array4[0] + ".anm");
						}
						if (array4.Length > 1)
						{
							maid.body0.m_Bones.GetComponent<Animation>()[array4[0] + ".anm"].time = float.Parse(array4[1]);
							this.isDanceStop = true;
							if (array4.Length > 2)
							{
								CMT.SearchObjName(this.maidArray[this.selectMaidIndex].body0.m_Bones.transform, "Bip01", true);
								this.isPoseIti[this.selectMaidIndex] = true;
								this.poseIti[this.selectMaidIndex] = this.maidArray[this.selectMaidIndex].transform.position;
								this.maidArray[this.selectMaidIndex].transform.position = new Vector3(100f, 100f, 100f);
							}
						}
					}
				}
				GUI.enabled = true;
				int num9 = -1;
				for (int num10 = 0; num10 < this.groupList.Count; num10++)
				{
					if (this.poseIndex[this.selectMaidIndex] < (int)this.groupList[num10])
					{
						num9 = num10;
						break;
					}
				}
				int num11 = (int)this.groupList[0];
				int num12 = 0;
				if (num9 > 0)
				{
					num11 = (int)this.groupList[num9] - (int)this.groupList[num9 - 1];
					num12 = (int)this.groupList[num9 - 1];
				}
				if (num9 < 0)
				{
					num9 = this.groupList.Count;
					num11 = this.poseArray.Length - (int)this.groupList[num9 - 1];
					num12 = (int)this.groupList[num9 - 1];
				}
				if (this.poseGroupCombo.selectedItemIndex != num9)
				{
					this.poseComboList = new GUIContent[num11];
					int num13 = 0;
					for (int num14 = num12; num14 < num12 + num11; num14++)
					{
						bool flag = false;
						foreach (IniKey iniKey in base.Preferences["pose"].Keys)
						{
							if (this.poseArray[num14] == iniKey.Key)
							{
								IniKey iniKey2 = base.Preferences["pose"][iniKey.Key];
								if (iniKey2.Value != null && iniKey2.Value.ToString() != "" && iniKey2.Value.ToString() != "del")
								{
									this.poseComboList[num13] = new GUIContent(string.Concat(new object[]
									{
										num13 + 1,
										":",
										iniKey2.Value.Split(new char[]
										{
											'_'
										})[0],
										"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000",
										iniKey.Key
									}));
									flag = true;
								}
							}
						}
						if (!flag)
						{
							this.poseComboList[num13] = new GUIContent(num13 + 1 + ":" + this.poseArray[num14]);
						}
						num13++;
					}
					this.poseGroupCombo.selectedItemIndex = num9;
					this.poseGroupIndex = num9;
					this.poseCombo.selectedItemIndex = 0;
				}
				if (this.poseCombo.isClickedComboButton || this.poseGroupCombo.isClickedComboButton)
				{
					GUI.enabled = false;
				}
				else
				{
					GUI.enabled = true;
				}
				this.isLook[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(8), (float)this.GetPix(155), (float)this.GetPix(65), (float)this.GetPix(16)), this.isLook[this.selectMaidIndex], "顔の向き", guistyle6);
				this.isPoseEdit = GUI.Toggle(new Rect((float)this.GetPix(86), (float)this.GetPix(155), (float)this.GetPix(90), (float)this.GetPix(16)), this.isPoseEdit, "ポーズ登録", guistyle6);
				if (this.isPoseEdit)
				{
					this.inName3 = GUI.TextField(new Rect((float)this.GetPix(5), (float)this.GetPix(180), (float)this.GetPix(100), (float)this.GetPix(20)), this.inName3);
					if (GUI.Button(new Rect((float)this.GetPix(107), (float)this.GetPix(180), (float)this.GetPix(35), (float)this.GetPix(20)), "追加", guistyle3))
					{
						this.isSavePose = true;
						GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
						this.existPose = true;
						GUI.FocusControl("");
					}
					if (this.poseGroupComboList[this.poseGroupCombo.selectedItemIndex].text != "99:登録ポーズ")
					{
						GUI.enabled = false;
					}
					if (GUI.Button(new Rect((float)this.GetPix(144), (float)this.GetPix(180), (float)this.GetPix(24), (float)this.GetPix(20)), "削", guistyle3))
					{
						GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
						List<string> list = new List<string>();
						list.AddRange(this.poseArray);
						if (this.poseComboList[this.poseCombo.selectedItemIndex].text.Contains("ManyMaidsPose"))
						{
							string text3 = this.poseArray[this.poseIndex[this.selectMaidIndex]];
							list.Remove(text3);
							string path3 = this.poseArray[this.poseIndex[this.selectMaidIndex]].Split(new char[]
							{
								'/'
							})[1].Replace("\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000", "");
							if (File.Exists(path3))
							{
								File.Delete(path3);
							}
						}
						else
						{
							string[] array7 = this.poseComboList[this.poseCombo.selectedItemIndex].text.Split(new char[]
							{
								'p'
							});
							string text3 = array7[array7.Length - 1];
							IniKey iniKey3 = base.Preferences["pose"]["p" + text3];
							if (iniKey3.Value != "" || iniKey3.Value != "del")
							{
								base.Preferences["pose"]["p" + text3].Value = "del";
								base.SaveConfig();
							}
							list.Remove("p" + text3);
						}
						GUI.FocusControl("");
						this.poseArray = list.ToArray();
						num9 = -1;
						for (int num15 = 0; num15 < this.groupList.Count; num15++)
						{
							if (this.poseIndex[this.selectMaidIndex] < (int)this.groupList[num15])
							{
								num9 = num15;
								break;
							}
						}
						num11 = (int)this.groupList[0];
						num12 = 0;
						if (num9 > 0)
						{
							num11 = (int)this.groupList[num9] - (int)this.groupList[num9 - 1];
							num12 = (int)this.groupList[num9 - 1];
						}
						if (num9 < 0)
						{
							num9 = this.groupList.Count;
							num11 = this.poseArray.Length - (int)this.groupList[num9 - 1];
							num12 = (int)this.groupList[num9 - 1];
						}
						this.poseComboList = new GUIContent[num11];
						int num16 = 0;
						bool existEdit = false;
						for (int num17 = num12; num17 < num12 + num11; num17++)
						{
							bool flag2 = false;
							foreach (IniKey iniKey4 in base.Preferences["pose"].Keys)
							{
								if (this.poseArray[num17] == iniKey4.Key)
								{
									IniKey iniKey5 = base.Preferences["pose"][iniKey4.Key];
									if (iniKey5.Value != null && iniKey5.Value.ToString() != "" && iniKey5.Value.ToString() != "del")
									{
										this.poseComboList[num16] = new GUIContent(string.Concat(new object[]
										{
											num16 + 1,
											":",
											iniKey5.Value.Split(new char[]
											{
												'_'
											})[0],
											"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000",
											iniKey4.Key
										}));
										flag2 = true;
										existEdit = true;
									}
								}
							}
							if (!flag2)
							{
								this.poseComboList[num16] = new GUIContent(num16 + 1 + ":" + this.poseArray[num17]);
							}
							num16++;
						}
						Action<string, List<string>> action = delegate(string path, List<string> result_list)
						{
							string[] files = Directory.GetFiles(path);
							this.countS = 0;
							for (int num63 = 0; num63 < files.Length; num63++)
							{
								if (Path.GetExtension(files[num63]) == ".anm")
								{
									existEdit = true;
									return;
								}
							}
						};
						List<string> arg = new List<string>();
						action(Path.GetFullPath(".\\") + "Mod\\ManyMaidsPose", arg);
						if (!existEdit)
						{
							this.poseIniStr = "";
							List<string> list2 = new List<string>(50 + Class1.poseGroupArray2.Length);
							list2.AddRange(Class1.poseGroupArray2);
							list2.AddRange(Class1.poseGroupArrayVP);
							list2.AddRange(Class1.poseGroupArrayFB);
							list2.AddRange(Class1.poseGroupArray3);
							list2.Add(Class1.poseArray5[0]);
							list2.Add(Class1.poseArray6[0]);
							list2.Add(this.strList2[0]);
							list2.Add(this.strListE2[0]);
							this.existPose = false;
							this.poseGroupArray = list2.ToArray();
							this.groupList = new ArrayList();
							for (int num18 = 0; num18 < this.poseArray.Length; num18++)
							{
								for (int num19 = 0; num19 < this.poseGroupArray.Length; num19++)
								{
									if (this.poseGroupArray[num19] == this.poseArray[num18])
									{
										this.groupList.Add(num18);
										if (this.poseGroupArray[num19] == this.strList2[0])
										{
											this.sPoseCount = num18;
										}
									}
								}
							}
							this.poseIndex[this.selectMaidIndex] = 0;
							this.poseGroupComboList = new GUIContent[this.poseGroupArray.Length + 1];
							this.poseGroupComboList[0] = new GUIContent("1:通常");
							for (int num20 = 0; num20 < this.poseGroupArray.Length; num20++)
							{
								if (this.poseGroupArray[num20] == "maid_dressroom01")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":立ち");
								}
								if (this.poseGroupArray[num20] == "tennis_kamae_f")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":中腰");
								}
								if (this.poseGroupArray[num20] == "senakanagasi_f")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":膝をつく");
								}
								if (this.poseGroupArray[num20] == "work_hansei")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":座り");
								}
								if (this.poseGroupArray[num20] == "inu_taiki_f")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":四つん這い");
								}
								if (this.poseGroupArray[num20] == "syagami_pose_f")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":床座り");
								}
								if (this.poseGroupArray[num20] == "densyasuwari_taiki_f")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":椅子座り");
								}
								if (this.poseGroupArray[num20] == "work_kaiwa")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":ソファー座り");
								}
								if (this.poseGroupArray[num20] == "dance_cm3d2_001_f1,14.14")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":ドキドキ☆Fallin' Love");
								}
								if (this.poseGroupArray[num20] == "dance_cm3d_001_f1,39.25")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":entrance to you");
								}
								if (this.poseGroupArray[num20] == "dance_cm3d_002_end_f1,50.71")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":scarlet leap");
								}
								if (this.poseGroupArray[num20] == "dance_cm3d2_002_smt_f,7.76,")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":stellar my tears");
								}
								if (this.poseGroupArray[num20] == "dance_cm3d_003_sp2_f1,90.15")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":rhythmix to you");
								}
								if (this.poseGroupArray[num20] == "dance_cm3d2_003_hs_f1,0.01,")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":happy!happy!スキャンダル!!");
								}
								if (this.poseGroupArray[num20] == "dance_cm3d_004_kano_f1,124.93")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":Can Know Two Close");
								}
								if (this.poseGroupArray[num20] == "dance_cm3d2_004_sse_f1,0.01")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":sweet sweet everyday");
								}
								if (this.poseGroupArray[num20] == "turusi_sex_in_taiki_f")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":拘束");
								}
								if (this.poseGroupArray[num20] == "rosyutu_pose01_f")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":エロ");
								}
								if (this.poseGroupArray[num20] == "rosyutu_aruki_f_once_,1.37")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":歩き");
								}
								if (this.poseGroupArray[num20] == "stand_desk1")
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":その他");
								}
								if (this.poseGroupArray[num20] == Class1.poseArray5[0])
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":ダンスMC");
								}
								if (this.poseGroupArray[num20] == Class1.poseArray6[0])
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":ダンス");
								}
								if (num20 == this.poseGroupArray.Length - 2)
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":通常2");
								}
								if (num20 == this.poseGroupArray.Length - 1)
								{
									this.poseGroupComboList[num20 + 1] = new GUIContent(num20 + 2 + ":エロ2");
								}
							}
						}
						else
						{
							this.poseGroupCombo.selectedItemIndex = num9;
							this.poseGroupIndex = num9;
							this.poseCombo.selectedItemIndex = 0;
							this.poseIndex[this.selectMaidIndex] = (int)this.groupList[this.groupList.Count - 1];
							if (this.poseArray.Length <= this.poseIndex[this.selectMaidIndex])
							{
								this.poseIndex[this.selectMaidIndex]--;
							}
						}
					}
					if (this.poseCombo.isClickedComboButton || this.poseGroupCombo.isClickedComboButton)
					{
						GUI.enabled = false;
					}
					else
					{
						GUI.enabled = true;
					}
				}
				else
				{
					if (!this.isLook[this.selectMaidIndex])
					{
						GUI.enabled = false;
					}
					GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(175), (float)this.GetPix(100), (float)this.GetPix(25)), "顔の向きX", guistyle2);
					this.lookX[this.selectMaidIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(191), (float)this.GetPix(70), (float)this.GetPix(20)), this.lookX[this.selectMaidIndex], -0.6f, 0.6f);
					GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(175), (float)this.GetPix(100), (float)this.GetPix(25)), "顔の向きY", guistyle2);
					this.lookY[this.selectMaidIndex] = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(191), (float)this.GetPix(70), (float)this.GetPix(20)), this.lookY[this.selectMaidIndex], 0.5f, -0.55f);
					if (this.poseCombo.isClickedComboButton || this.poseGroupCombo.isClickedComboButton)
					{
						GUI.enabled = false;
					}
					else
					{
						GUI.enabled = true;
					}
				}
				int num21 = 0;
				num21 = ((this.poseGroupIndex <= 0) ? this.poseIndex[this.selectMaidIndex] : (this.poseIndex[this.selectMaidIndex] - (int)this.groupList[this.poseGroupIndex - 1]));
				if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(215), (float)this.GetPix(23), (float)this.GetPix(23)), "＜", guistyle3))
				{
					this.itemIndex[this.selectMaidIndex]--;
					if (this.itemIndex[this.selectMaidIndex] <= -1)
					{
						this.itemIndex[this.selectMaidIndex] = Class1.itemArray.Length - 2;
					}
					string[] array8 = new string[2];
					array8 = Class1.itemArray[this.itemIndex[this.selectMaidIndex]].Split(new char[]
					{
						','
					});
					if (this.itemIndex[this.selectMaidIndex] > 13)
					{
						array8 = Class1.itemArray[this.itemIndex[this.selectMaidIndex] + 1].Split(new char[]
						{
							','
						});
					}
					maid.DelProp(MPN.acckami, true);
					maid.DelProp(MPN.accha, true);
					maid.DelProp(MPN.acchead, true);
					bool flag3 = false;
					if (this.itemIndex[this.selectMaidIndex] == 12 || this.itemIndex[this.selectMaidIndex] == 13 || this.itemIndex[this.selectMaidIndex] == 23)
					{
						flag3 = true;
					}
					if (!flag3)
					{
						maid.DelProp(MPN.accvag, true);
						maid.DelProp(MPN.megane, true);
					}
					if (array8[0] != "")
					{
						maid.SetProp(array8[0], array8[1], 0, true, false);
					}
					if (this.itemIndex[this.selectMaidIndex] == 12)
					{
						array8 = Class1.itemArray[this.itemIndex[this.selectMaidIndex] - 1].Split(new char[]
						{
							','
						});
						maid.SetProp(array8[0], array8[1], 0, true, false);
					}
					if (this.itemIndex[this.selectMaidIndex] == 13)
					{
						array8 = Class1.itemArray[this.itemIndex[this.selectMaidIndex] + 1].Split(new char[]
						{
							','
						});
						maid.SetProp(array8[0], array8[1], 0, true, false);
					}
					if (this.itemIndex[this.selectMaidIndex] == 23)
					{
						array8 = Class1.itemArray[this.itemIndex[this.selectMaidIndex]].Split(new char[]
						{
							','
						});
						maid.SetProp(array8[0], array8[1], 0, true, false);
						this.cafeFlg[this.selectMaidIndex] = true;
					}
					maid.AllProcPropSeqStart();
					this.itemCombo.selectedItemIndex = this.itemIndex[this.selectMaidIndex];
				}
				if (GUI.Button(new Rect((float)this.GetPix(135), (float)this.GetPix(215), (float)this.GetPix(23), (float)this.GetPix(23)), "＞", guistyle3))
				{
					this.itemIndex[this.selectMaidIndex]++;
					if (this.itemIndex[this.selectMaidIndex] >= Class1.itemArray.Length - 1)
					{
						this.itemIndex[this.selectMaidIndex] = 0;
					}
					string[] array9 = new string[2];
					array9 = Class1.itemArray[this.itemIndex[this.selectMaidIndex]].Split(new char[]
					{
						','
					});
					if (this.itemIndex[this.selectMaidIndex] > 13)
					{
						array9 = Class1.itemArray[this.itemIndex[this.selectMaidIndex] + 1].Split(new char[]
						{
							','
						});
					}
					maid.DelProp(MPN.acckami, true);
					maid.DelProp(MPN.accha, true);
					maid.DelProp(MPN.acchead, true);
					bool flag4 = false;
					if (this.itemIndex[this.selectMaidIndex] == 12 || this.itemIndex[this.selectMaidIndex] == 13)
					{
						flag4 = true;
					}
					if (!flag4)
					{
						maid.DelProp(MPN.accvag, true);
						maid.DelProp(MPN.megane, true);
					}
					if (array9[0] != "")
					{
						maid.SetProp(array9[0], array9[1], 0, true, false);
					}
					if (this.itemIndex[this.selectMaidIndex] == 12)
					{
						array9 = Class1.itemArray[this.itemIndex[this.selectMaidIndex] - 1].Split(new char[]
						{
							','
						});
						maid.SetProp(array9[0], array9[1], 0, true, false);
					}
					if (this.itemIndex[this.selectMaidIndex] == 13)
					{
						array9 = Class1.itemArray[this.itemIndex[this.selectMaidIndex] + 1].Split(new char[]
						{
							','
						});
						maid.SetProp(array9[0], array9[1], 0, true, false);
					}
					if (this.itemIndex[this.selectMaidIndex] == 23)
					{
						array9 = Class1.itemArray[this.itemIndex[this.selectMaidIndex]].Split(new char[]
						{
							','
						});
						maid.SetProp(array9[0], array9[1], 0, true, false);
						this.cafeFlg[this.selectMaidIndex] = true;
					}
					maid.AllProcPropSeqStart();
					this.itemCombo.selectedItemIndex = this.itemIndex[this.selectMaidIndex];
				}
				if (this.itemCombo.isClickedComboButton)
				{
					GUI.enabled = false;
				}
				this.isWear = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(248), (float)this.GetPix(70), (float)this.GetPix(20)), this.isWear, "トップス", guistyle6);
				this.isSkirt = GUI.Toggle(new Rect((float)this.GetPix(90), (float)this.GetPix(248), (float)this.GetPix(70), (float)this.GetPix(20)), this.isSkirt, "ボトムス", guistyle6);
				this.isBra = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(273), (float)this.GetPix(80), (float)this.GetPix(20)), this.isBra, "ブラジャー", guistyle6);
				this.isPanz = GUI.Toggle(new Rect((float)this.GetPix(90), (float)this.GetPix(273), (float)this.GetPix(60), (float)this.GetPix(20)), this.isPanz, "パンツ", guistyle6);
				this.isHeadset = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(298), (float)this.GetPix(70), (float)this.GetPix(20)), this.isHeadset, "ヘッド", guistyle6);
				this.isMegane = GUI.Toggle(new Rect((float)this.GetPix(95), (float)this.GetPix(298), (float)this.GetPix(70), (float)this.GetPix(20)), this.isMegane, "メガネ", guistyle6);
				this.isAccUde = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(323), (float)this.GetPix(40), (float)this.GetPix(20)), this.isAccUde, "腕", guistyle6);
				this.isGlove = GUI.Toggle(new Rect((float)this.GetPix(50), (float)this.GetPix(323), (float)this.GetPix(40), (float)this.GetPix(20)), this.isGlove, "手袋", guistyle6);
				this.isAccSenaka = GUI.Toggle(new Rect((float)this.GetPix(95), (float)this.GetPix(323), (float)this.GetPix(40), (float)this.GetPix(20)), this.isAccSenaka, "背中", guistyle6);
				this.isStkg = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(348), (float)this.GetPix(40), (float)this.GetPix(20)), this.isStkg, "靴下", guistyle6);
				this.isShoes = GUI.Toggle(new Rect((float)this.GetPix(50), (float)this.GetPix(348), (float)this.GetPix(40), (float)this.GetPix(20)), this.isShoes, "靴", guistyle6);
				this.isMaid = GUI.Toggle(new Rect((float)this.GetPix(95), (float)this.GetPix(348), (float)this.GetPix(70), (float)this.GetPix(20)), this.isMaid, "メイド", guistyle6);
				this.mekure1[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(373), (float)this.GetPix(62), (float)this.GetPix(20)), this.mekure1[this.selectMaidIndex], "めくれ前", guistyle6);
				this.mekure2[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(67), (float)this.GetPix(373), (float)this.GetPix(40), (float)this.GetPix(20)), this.mekure2[this.selectMaidIndex], "後ろ", guistyle6);
				this.zurasi[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(105), (float)this.GetPix(373), (float)this.GetPix(50), (float)this.GetPix(20)), this.zurasi[this.selectMaidIndex], "ずらし", guistyle6);
				this.voice1[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(530), (float)this.GetPix(70), (float)this.GetPix(20)), this.zFlg[this.selectMaidIndex], "ボイス", guistyle6);
				this.voice2[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(70), (float)this.GetPix(530), (float)this.GetPix(70), (float)this.GetPix(20)), this.xFlg[this.selectMaidIndex], "Hボイス", guistyle6);
				if (this.poseCombo.isClickedComboButton || this.poseGroupCombo.isClickedComboButton || this.itemCombo.isClickedComboButton)
				{
					GUI.enabled = false;
				}
				else
				{
					GUI.enabled = true;
				}
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(402), (float)this.GetPix(160), 2f), this.line1);
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(402), (float)this.GetPix(160), 1f), this.line2);
				this.isIK[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(411), (float)this.GetPix(30), (float)this.GetPix(20)), this.isIK[this.selectMaidIndex], "IK", guistyle6);
				if (!this.isLock[this.selectMaidIndex])
				{
					GUI.enabled = false;
				}
				this.isLock[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(45), (float)this.GetPix(411), (float)this.GetPix(40), (float)this.GetPix(20)), this.isLock[this.selectMaidIndex], "解除", guistyle6);
				if (this.poseCombo.isClickedComboButton || this.poseGroupCombo.isClickedComboButton || this.itemCombo.isClickedComboButton)
				{
					GUI.enabled = false;
				}
				else
				{
					GUI.enabled = true;
				}
				if (!this.isIK[this.selectMaidIndex])
				{
					GUI.enabled = false;
				}
				this.isBone[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(100), (float)this.GetPix(411), (float)this.GetPix(60), (float)this.GetPix(20)), this.isBone[this.selectMaidIndex], "ボーン", guistyle6);
				if (this.poseCombo.isClickedComboButton || this.poseGroupCombo.isClickedComboButton)
				{
					GUI.enabled = false;
				}
				else
				{
					GUI.enabled = true;
				}
				if (this.isBone[this.selectMaidIndex] != this.isBoneN[this.selectMaidIndex])
				{
					this.isBoneN[this.selectMaidIndex] = this.isBone[this.selectMaidIndex];
					this.isChange[this.selectMaidIndex] = true;
				}
				if (!this.isLock[this.selectMaidIndex] && this.unLockFlg != this.isLock[this.selectMaidIndex])
				{
					string[] array10 = this.poseArray[this.poseIndex[this.selectMaidIndex]].Split(new char[]
					{
						','
					});
					this.isStop[this.selectMaidIndex] = false;
					this.poseCount[this.selectMaidIndex] = 20;
					if (array10[0].Contains("_momi") || array10[0].Contains("paizuri_"))
					{
						maid.body0.MuneYureL(0f);
						maid.body0.MuneYureR(0f);
					}
					else
					{
						maid.body0.MuneYureL(1f);
						maid.body0.MuneYureR(1f);
					}
					int num6;
					if (array10[0].Contains("ManyMaidsPose"))
					{
						string path4 = array10[0].Split(new char[]
						{
							'/'
						})[1];
						byte[] array11 = new byte[0];
						try
						{
							using (FileStream fileStream3 = new FileStream(path4, FileMode.Open, FileAccess.Read))
							{
								array11 = new byte[fileStream3.Length];
								fileStream3.Read(array11, 0, array11.Length);
							}
						}
						catch
						{
						}
						if (array11.Length != 0)
						{
							long num22 = (long)Path.GetFileName(path4).GetHashCode();
							maid.body0.CrossFade(num22.ToString(), array11, false, false, false, 0f, 1f);
							Maid.AutoTwist[] array12 = new Maid.AutoTwist[]
							{
								Maid.AutoTwist.ShoulderL,
								Maid.AutoTwist.ShoulderR,
								Maid.AutoTwist.WristL,
								Maid.AutoTwist.WristR,
								Maid.AutoTwist.ThighL,
								Maid.AutoTwist.ThighR
							};
							for (int num23 = 0; num23 < array12.Length; num23++)
							{
								maid.SetAutoTwist(array12[num23], true);
							}
						}
					}
					else if (array10[0].StartsWith("p") && int.TryParse(array10[0].Substring(1), out num6))
					{
						this.loadPose[this.selectMaidIndex] = array10[0];
					}
					else if (!array10[0].StartsWith("dance_"))
					{
						this.maidArray[this.selectMaidIndex].CrossFade(array10[0] + ".anm", false, true, false, 0f, 1f);
					}
					else
					{
						if (!maid.body0.m_Bones.GetComponent<Animation>().GetClip(array10[0] + ".anm"))
						{
							maid.body0.LoadAnime(array10[0] + ".anm", GameUty.FileSystem, array10[0] + ".anm", false, false);
						}
						maid.body0.m_Bones.GetComponent<Animation>().Play(array10[0] + ".anm");
					}
					if (array10.Length > 1)
					{
						maid.body0.m_Bones.GetComponent<Animation>()[array10[0] + ".anm"].time = float.Parse(array10[1]);
						this.isDanceStop = true;
						if (array10.Length > 2)
						{
							CMT.SearchObjName(this.maidArray[this.selectMaidIndex].body0.m_Bones.transform, "Bip01", true);
							this.isPoseIti[this.selectMaidIndex] = true;
							this.poseIti[this.selectMaidIndex] = this.maidArray[this.selectMaidIndex].transform.position;
							this.maidArray[this.selectMaidIndex].transform.position = new Vector3(100f, 100f, 100f);
						}
					}
					this.mHandL[this.selectMaidIndex].initFlg = false;
					this.mHandR[this.selectMaidIndex].initFlg = false;
					this.mFootL[this.selectMaidIndex].initFlg = false;
					this.mFootR[this.selectMaidIndex].initFlg = false;
					this.pHandL[this.selectMaidIndex] = 0;
					this.pHandR[this.selectMaidIndex] = 0;
					this.hanten[this.selectMaidIndex] = false;
					this.hantenn[this.selectMaidIndex] = false;
					this.muneIKL[this.selectMaidIndex] = false;
					this.muneIKR[this.selectMaidIndex] = false;
					maid.body0.jbMuneL.enabled = true;
					maid.body0.jbMuneR.enabled = true;
					if (!GameMain.Instance.VRMode)
					{
						this.maidArray[this.selectMaidIndex].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[this.selectMaidIndex]];
						this.maidArray[this.selectMaidIndex].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[this.selectMaidIndex]];
					}
				}
				this.unLockFlg = this.isLock[this.selectMaidIndex];
				if (this.poseCombo.isClickedComboButton || this.poseGroupCombo.isClickedComboButton || this.itemCombo.isClickedComboButton)
				{
					GUI.enabled = false;
				}
				else
				{
					GUI.enabled = true;
				}
				if (!this.isIK[this.selectMaidIndex])
				{
					GUI.enabled = false;
				}
				this.hanten[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(479), (float)this.GetPix(70), (float)this.GetPix(20)), this.hanten[this.selectMaidIndex], "左右反転", guistyle6);
				bool flag5 = GUI.Toggle(new Rect((float)this.GetPix(80), (float)this.GetPix(479), (float)this.GetPix(100), (float)this.GetPix(20)), this.kotei[this.selectMaidIndex], "スカート固定", guistyle6);
				if (this.kotei[this.selectMaidIndex] != flag5)
				{
					this.kotei[this.selectMaidIndex] = flag5;
					if (flag5)
					{
						this.SkirtListArray[this.selectMaidIndex] = new DynamicSkirtBone[100];
						for (int num24 = 0; num24 < maid.body0.goSlot.Count; num24++)
						{
							DynamicSkirtBone fieldValue = ManyMaids.GetFieldValue<BoneHair3, DynamicSkirtBone>(maid.body0.goSlot[num24].bonehair3, "m_SkirtBone");
							this.SkirtListArray[this.selectMaidIndex][num24] = fieldValue;
							ManyMaids.SetFieldValue8<BoneHair3, DynamicSkirtBone>(maid.body0.goSlot[num24].bonehair3, "m_SkirtBone", null);
						}
					}
					else
					{
						for (int num25 = 0; num25 < maid.body0.goSlot.Count; num25++)
						{
							ManyMaids.SetFieldValue8<BoneHair3, DynamicSkirtBone>(maid.body0.goSlot[num25].bonehair3, "m_SkirtBone", this.SkirtListArray[this.selectMaidIndex][num25]);
						}
					}
				}
				GUI.Label(new Rect((float)this.GetPix(29), (float)this.GetPix(433), (float)this.GetPix(100), (float)this.GetPix(25)), "右手", guistyle);
				GUI.Label(new Rect((float)this.GetPix(109), (float)this.GetPix(433), (float)this.GetPix(100), (float)this.GetPix(25)), "左手", guistyle);
				string text4 = "未選択";
				if (this.copyIndex > 0)
				{
					text4 = this.copyIndex + ":" + this.maidArray[this.copyIndex - 1].status.firstName;
				}
				if (this.maidCnt <= 1)
				{
					GUI.enabled = false;
				}
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(505), (float)this.GetPix(100), (float)this.GetPix(25)), "コピー", guistyle);
				GUI.Label(new Rect((float)this.GetPix(70), (float)this.GetPix(505), (float)this.GetPix(100), (float)this.GetPix(25)), text4, guistyle);
				if (this.poseCombo.isClickedComboButton || this.poseGroupCombo.isClickedComboButton || this.itemCombo.isClickedComboButton || !this.isIK[this.selectMaidIndex])
				{
					GUI.enabled = false;
				}
				else
				{
					GUI.enabled = true;
				}
				guistyle.fontSize = this.GetPix(13);
				guistyle.alignment = TextAnchor.UpperCenter;
				GUI.Label(new Rect((float)this.GetPix(-10), (float)this.GetPix(449), (float)this.GetPix(100), (float)this.GetPix(25)), this.pHandR[this.selectMaidIndex].ToString(), guistyle);
				GUI.Label(new Rect((float)this.GetPix(70), (float)this.GetPix(449), (float)this.GetPix(100), (float)this.GetPix(25)), this.pHandL[this.selectMaidIndex].ToString(), guistyle);
				guistyle.fontSize = this.GetPix(11);
				guistyle.alignment = TextAnchor.UpperLeft;
				if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(448), (float)this.GetPix(23), (float)this.GetPix(23)), "＜", guistyle3))
				{
					this.pHandR[this.selectMaidIndex]--;
					if (this.pHandR[this.selectMaidIndex] < 1)
					{
						this.pHandR[this.selectMaidIndex] = Class1.fingerRArray.GetLength(0);
					}
					for (int num26 = 0; num26 < 20; num26++)
					{
						string[] array13 = Class1.fingerRArray[this.pHandR[this.selectMaidIndex] - 1, num26].Split(new char[]
						{
							','
						});
						this.Finger[this.selectMaidIndex, num26 + 20].localEulerAngles = new Vector3(float.Parse(array13[0]), float.Parse(array13[1]), float.Parse(array13[2]));
					}
					this.isStop[this.selectMaidIndex] = true;
					this.isLock[this.selectMaidIndex] = true;
					for (int num27 = 0; num27 < 10; num27++)
					{
						if ((num27 == 0 || num27 == 5) && this.mFinger[this.selectMaidIndex, num27 * 3])
						{
							this.mFinger[this.selectMaidIndex, num27 * 3].reset = true;
						}
					}
				}
				if (GUI.Button(new Rect((float)this.GetPix(55), (float)this.GetPix(448), (float)this.GetPix(23), (float)this.GetPix(23)), "＞", guistyle3))
				{
					this.pHandR[this.selectMaidIndex]++;
					if (this.pHandR[this.selectMaidIndex] > Class1.fingerRArray.GetLength(0))
					{
						this.pHandR[this.selectMaidIndex] = 1;
					}
					for (int num28 = 0; num28 < 20; num28++)
					{
						string[] array14 = Class1.fingerRArray[this.pHandR[this.selectMaidIndex] - 1, num28].Split(new char[]
						{
							','
						});
						this.Finger[this.selectMaidIndex, num28 + 20].localEulerAngles = new Vector3(float.Parse(array14[0]), float.Parse(array14[1]), float.Parse(array14[2]));
					}
					this.isStop[this.selectMaidIndex] = true;
					this.isLock[this.selectMaidIndex] = true;
					for (int num29 = 0; num29 < 10; num29++)
					{
						if ((num29 == 0 || num29 == 5) && this.mFinger[this.selectMaidIndex, num29 * 3])
						{
							this.mFinger[this.selectMaidIndex, num29 * 3].reset = true;
						}
					}
				}
				if (GUI.Button(new Rect((float)this.GetPix(85), (float)this.GetPix(448), (float)this.GetPix(23), (float)this.GetPix(23)), "＜", guistyle3))
				{
					this.pHandL[this.selectMaidIndex]--;
					if (this.pHandL[this.selectMaidIndex] < 1)
					{
						this.pHandL[this.selectMaidIndex] = Class1.fingerLArray.GetLength(0);
					}
					for (int num30 = 0; num30 < 20; num30++)
					{
						string[] array15 = Class1.fingerLArray[this.pHandL[this.selectMaidIndex] - 1, num30].Split(new char[]
						{
							','
						});
						this.Finger[this.selectMaidIndex, num30].localEulerAngles = new Vector3(float.Parse(array15[0]), float.Parse(array15[1]), float.Parse(array15[2]));
					}
					this.isStop[this.selectMaidIndex] = true;
					this.isLock[this.selectMaidIndex] = true;
				}
				if (GUI.Button(new Rect((float)this.GetPix(135), (float)this.GetPix(448), (float)this.GetPix(23), (float)this.GetPix(23)), "＞", guistyle3))
				{
					this.pHandL[this.selectMaidIndex]++;
					if (this.pHandL[this.selectMaidIndex] > Class1.fingerRArray.GetLength(0))
					{
						this.pHandL[this.selectMaidIndex] = 1;
					}
					for (int num31 = 0; num31 < 20; num31++)
					{
						string[] array16 = Class1.fingerLArray[this.pHandL[this.selectMaidIndex] - 1, num31].Split(new char[]
						{
							','
						});
						this.Finger[this.selectMaidIndex, num31].localEulerAngles = new Vector3(float.Parse(array16[0]), float.Parse(array16[1]), float.Parse(array16[2]));
					}
					this.isStop[this.selectMaidIndex] = true;
					this.isLock[this.selectMaidIndex] = true;
				}
				if (this.maidCnt <= 1)
				{
					GUI.enabled = false;
				}
				if (GUI.Button(new Rect((float)this.GetPix(45), (float)this.GetPix(504), (float)this.GetPix(22), (float)this.GetPix(20)), "＞", guistyle3))
				{
					this.copyIndex++;
					if (this.copyIndex - 1 == this.selectMaidIndex)
					{
						this.copyIndex++;
					}
					if (this.copyIndex > this.maidCnt)
					{
						this.copyIndex = 0;
					}
				}
				if (this.isCopy)
				{
					this.isCopy = false;
					this.CopyIK2(this.maidArray[this.selectMaidIndex], this.selectMaidIndex, this.maidArray[this.copyIndex - 1], this.copyIndex - 1);
				}
				if (this.copyIndex == 0)
				{
					GUI.enabled = false;
				}
				if (GUI.Button(new Rect((float)this.GetPix(123), (float)this.GetPix(504), (float)this.GetPix(35), (float)this.GetPix(20)), "決定", guistyle3))
				{
					this.CopyIK(this.maidArray[this.selectMaidIndex], this.selectMaidIndex, this.maidArray[this.copyIndex - 1], this.copyIndex - 1);
					this.isCopy = true;
					this.pHandL[this.selectMaidIndex] = this.pHandL[this.copyIndex - 1];
					this.pHandR[this.selectMaidIndex] = this.pHandR[this.copyIndex - 1];
					this.hanten[this.selectMaidIndex] = this.hanten[this.copyIndex - 1];
					this.hantenn[this.selectMaidIndex] = this.hantenn[this.copyIndex - 1];
				}
				GUI.enabled = true;
				if (this.poseCombo.isClickedComboButton || this.poseGroupCombo.isClickedComboButton)
				{
					GUI.enabled = false;
				}
				this.itemIndex2[this.selectMaidIndex] = this.itemCombo.List(new Rect((float)this.GetPix(35), (float)this.GetPix(215), (float)this.GetPix(95), (float)this.GetPix(23)), this.itemComboList[this.itemIndex[this.selectMaidIndex]].text, this.itemComboList, guistyle4, "box", this.listStyle3);
				GUI.enabled = true;
				if (this.poseGroupCombo.isClickedComboButton || this.isLock[this.selectMaidIndex])
				{
					GUI.enabled = false;
				}
				this.poseCombo.List(new Rect((float)this.GetPix(35), (float)this.GetPix(125), (float)this.GetPix(95), (float)this.GetPix(23)), this.poseComboList[num21].text, this.poseComboList, guistyle4, "box", this.listStyle2);
				if (!this.isLock[this.selectMaidIndex])
				{
					GUI.enabled = true;
				}
				int num32 = -1;
				for (int num33 = 0; num33 < this.groupList.Count; num33++)
				{
					if (this.poseIndex[this.selectMaidIndex] < (int)this.groupList[num33])
					{
						num32 = num33;
						break;
					}
				}
				if (num32 < 0)
				{
					num32 = this.groupList.Count;
				}
				if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(95), (float)this.GetPix(23), (float)this.GetPix(23)), "＜", guistyle3))
				{
					this.isPoseInit = true;
					if (!this.isLock[this.selectMaidIndex])
					{
						int num34 = 0;
						while (num34 < this.groupList.Count)
						{
							if (num34 == 0 && this.poseIndex[this.selectMaidIndex] <= (int)this.groupList[num34])
							{
								if (this.poseIndex[this.selectMaidIndex] == 0)
								{
									this.poseIndex[this.selectMaidIndex] = (int)this.groupList[this.groupList.Count - 1];
									break;
								}
								this.poseIndex[this.selectMaidIndex] = 0;
								break;
							}
							else
							{
								if (num34 > 0 && this.poseIndex[this.selectMaidIndex] > (int)this.groupList[num34 - 1] && this.poseIndex[this.selectMaidIndex] <= (int)this.groupList[num34])
								{
									this.poseIndex[this.selectMaidIndex] = (int)this.groupList[num34 - 1];
									break;
								}
								num34++;
							}
						}
						if (this.poseIndex[this.selectMaidIndex] > (int)this.groupList[this.groupList.Count - 1])
						{
							this.poseIndex[this.selectMaidIndex] = (int)this.groupList[this.groupList.Count - 1];
						}
						if (maid && maid.Visible)
						{
							string[] array17 = this.poseArray[this.poseIndex[this.selectMaidIndex]].Split(new char[]
							{
								','
							});
							this.isStop[this.selectMaidIndex] = false;
							this.poseCount[this.selectMaidIndex] = 20;
							if (array17[0].Contains("_momi") || array17[0].Contains("paizuri_"))
							{
								maid.body0.MuneYureL(0f);
								maid.body0.MuneYureR(0f);
							}
							else
							{
								maid.body0.MuneYureL(1f);
								maid.body0.MuneYureR(1f);
							}
							int num6;
							if (array17[0].Contains("ManyMaidsPose"))
							{
								string path5 = array17[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array18 = new byte[0];
								try
								{
									using (FileStream fileStream4 = new FileStream(path5, FileMode.Open, FileAccess.Read))
									{
										array18 = new byte[fileStream4.Length];
										fileStream4.Read(array18, 0, array18.Length);
									}
								}
								catch
								{
								}
								if (array18.Length != 0)
								{
									long num35 = (long)Path.GetFileName(path5).GetHashCode();
									maid.body0.CrossFade(num35.ToString(), array18, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array19 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num36 = 0; num36 < array19.Length; num36++)
									{
										maid.SetAutoTwist(array19[num36], true);
									}
								}
							}
							else if (array17[0].StartsWith("p") && int.TryParse(array17[0].Substring(1), out num6))
							{
								this.loadPose[this.selectMaidIndex] = array17[0];
							}
							else if (!array17[0].StartsWith("dance_"))
							{
								this.maidArray[this.selectMaidIndex].CrossFade(array17[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!maid.body0.m_Bones.GetComponent<Animation>().GetClip(array17[0] + ".anm"))
								{
									maid.body0.LoadAnime(array17[0] + ".anm", GameUty.FileSystem, array17[0] + ".anm", false, false);
								}
								maid.body0.m_Bones.GetComponent<Animation>().Play(array17[0] + ".anm");
							}
							if (array17.Length > 1)
							{
								maid.body0.m_Bones.GetComponent<Animation>()[array17[0] + ".anm"].time = float.Parse(array17[1]);
								this.isDanceStop = true;
								if (array17.Length > 2)
								{
									CMT.SearchObjName(this.maidArray[this.selectMaidIndex].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[this.selectMaidIndex] = true;
									this.poseIti[this.selectMaidIndex] = this.maidArray[this.selectMaidIndex].transform.position;
									this.maidArray[this.selectMaidIndex].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
					}
					int num37 = -1;
					for (int num38 = 0; num38 < this.groupList.Count; num38++)
					{
						if (this.poseIndex[this.selectMaidIndex] < (int)this.groupList[num38])
						{
							num37 = num38;
							break;
						}
					}
					int num39 = (int)this.groupList[0];
					int num40 = 0;
					if (num37 > 0)
					{
						num39 = (int)this.groupList[num37] - (int)this.groupList[num37 - 1];
						num40 = (int)this.groupList[num37 - 1];
					}
					if (num37 < 0)
					{
						num37 = this.groupList.Count;
						num39 = this.poseArray.Length - (int)this.groupList[num37 - 1];
						num40 = (int)this.groupList[num37 - 1];
					}
					this.poseComboList = new GUIContent[num39];
					int num41 = 0;
					for (int num42 = num40; num42 < num40 + num39; num42++)
					{
						bool flag6 = false;
						foreach (IniKey iniKey6 in base.Preferences["pose"].Keys)
						{
							if (this.poseArray[num42] == iniKey6.Key)
							{
								IniKey iniKey7 = base.Preferences["pose"][iniKey6.Key];
								if (iniKey7.Value != null && iniKey7.Value.ToString() != "" && iniKey7.Value.ToString() != "del")
								{
									this.poseComboList[num41] = new GUIContent(string.Concat(new object[]
									{
										num41 + 1,
										":",
										iniKey7.Value.Split(new char[]
										{
											'_'
										})[0],
										"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000",
										iniKey6.Key
									}));
									flag6 = true;
								}
							}
						}
						if (!flag6)
						{
							this.poseComboList[num41] = new GUIContent(num41 + 1 + ":" + this.poseArray[num42]);
						}
						num41++;
					}
					this.poseCombo.scrollPos = new Vector2(0f, 0f);
					this.poseGroupCombo.selectedItemIndex = num37;
					this.poseCombo.selectedItemIndex = 0;
				}
				if (GUI.Button(new Rect((float)this.GetPix(135), (float)this.GetPix(95), (float)this.GetPix(23), (float)this.GetPix(23)), "＞", guistyle3))
				{
					this.isPoseInit = true;
					if (!this.isLock[this.selectMaidIndex])
					{
						int num43 = this.poseIndex[this.selectMaidIndex];
						for (int num44 = 0; num44 < this.groupList.Count; num44++)
						{
							if (this.poseIndex[this.selectMaidIndex] < (int)this.groupList[num44])
							{
								this.poseIndex[this.selectMaidIndex] = (int)this.groupList[num44];
								break;
							}
						}
						if (num43 == this.poseIndex[this.selectMaidIndex] && this.poseIndex[this.selectMaidIndex] >= (int)this.groupList[this.groupList.Count - 1])
						{
							this.poseIndex[this.selectMaidIndex] = 0;
						}
						if (maid && maid.Visible)
						{
							string[] array20 = this.poseArray[this.poseIndex[this.selectMaidIndex]].Split(new char[]
							{
								','
							});
							this.isStop[this.selectMaidIndex] = false;
							this.poseCount[this.selectMaidIndex] = 20;
							if (array20[0].Contains("_momi") || array20[0].Contains("paizuri_"))
							{
								maid.body0.MuneYureL(0f);
								maid.body0.MuneYureR(0f);
							}
							else
							{
								maid.body0.MuneYureL(1f);
								maid.body0.MuneYureR(1f);
							}
							int num6;
							if (array20[0].Contains("ManyMaidsPose"))
							{
								string path6 = array20[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array21 = new byte[0];
								try
								{
									using (FileStream fileStream5 = new FileStream(path6, FileMode.Open, FileAccess.Read))
									{
										array21 = new byte[fileStream5.Length];
										fileStream5.Read(array21, 0, array21.Length);
									}
								}
								catch
								{
								}
								if (array21.Length != 0)
								{
									long num45 = (long)Path.GetFileName(path6).GetHashCode();
									maid.body0.CrossFade(num45.ToString(), array21, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array22 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num46 = 0; num46 < array22.Length; num46++)
									{
										maid.SetAutoTwist(array22[num46], true);
									}
								}
							}
							else if (array20[0].StartsWith("p") && int.TryParse(array20[0].Substring(1), out num6))
							{
								this.loadPose[this.selectMaidIndex] = array20[0];
							}
							else if (!array20[0].StartsWith("dance_"))
							{
								this.maidArray[this.selectMaidIndex].CrossFade(array20[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!maid.body0.m_Bones.GetComponent<Animation>().GetClip(array20[0] + ".anm"))
								{
									maid.body0.LoadAnime(array20[0] + ".anm", GameUty.FileSystem, array20[0] + ".anm", false, false);
								}
								maid.body0.m_Bones.GetComponent<Animation>().Play(array20[0] + ".anm");
							}
							if (array20.Length > 1)
							{
								maid.body0.m_Bones.GetComponent<Animation>()[array20[0] + ".anm"].time = float.Parse(array20[1]);
								this.isDanceStop = true;
								if (array20.Length > 2)
								{
									CMT.SearchObjName(this.maidArray[this.selectMaidIndex].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[this.selectMaidIndex] = true;
									this.poseIti[this.selectMaidIndex] = this.maidArray[this.selectMaidIndex].transform.position;
									this.maidArray[this.selectMaidIndex].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
					}
					int num47 = -1;
					for (int num48 = 0; num48 < this.groupList.Count; num48++)
					{
						if (this.poseIndex[this.selectMaidIndex] < (int)this.groupList[num48])
						{
							num47 = num48;
							break;
						}
					}
					int num49 = (int)this.groupList[0];
					int num50 = 0;
					if (num47 > 0)
					{
						num49 = (int)this.groupList[num47] - (int)this.groupList[num47 - 1];
						num50 = (int)this.groupList[num47 - 1];
					}
					if (num47 < 0)
					{
						num47 = this.groupList.Count;
						num49 = this.poseArray.Length - (int)this.groupList[num47 - 1];
						num50 = (int)this.groupList[num47 - 1];
					}
					this.poseComboList = new GUIContent[num49];
					int num51 = 0;
					for (int num52 = num50; num52 < num50 + num49; num52++)
					{
						bool flag7 = false;
						foreach (IniKey iniKey8 in base.Preferences["pose"].Keys)
						{
							if (this.poseArray[num52] == iniKey8.Key)
							{
								IniKey iniKey9 = base.Preferences["pose"][iniKey8.Key];
								if (iniKey9.Value != null && iniKey9.Value.ToString() != "" && iniKey9.Value.ToString() != "del")
								{
									this.poseComboList[num51] = new GUIContent(string.Concat(new object[]
									{
										num51 + 1,
										":",
										iniKey9.Value.Split(new char[]
										{
											'_'
										})[0],
										"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000",
										iniKey8.Key
									}));
									flag7 = true;
								}
							}
						}
						if (!flag7)
						{
							this.poseComboList[num51] = new GUIContent(num51 + 1 + ":" + this.poseArray[num52]);
						}
						num51++;
					}
					this.poseCombo.scrollPos = new Vector2(0f, 0f);
					this.poseGroupCombo.selectedItemIndex = num47;
					this.poseCombo.selectedItemIndex = 0;
				}
				this.poseGroupIndex = this.poseGroupCombo.List(new Rect((float)this.GetPix(35), (float)this.GetPix(95), (float)this.GetPix(95), (float)this.GetPix(23)), this.poseGroupComboList[num32].text, this.poseGroupComboList, guistyle5, "box", this.listStyle4);
				if (this.poseGroupCombo.isClickedComboButton)
				{
					this.isCombo2 = true;
				}
				else if (this.isCombo2)
				{
					this.isCombo2 = false;
					this.isPoseInit = true;
					if (this.poseGroupIndex > 0)
					{
						this.poseIndex[this.selectMaidIndex] = (int)this.groupList[this.poseGroupIndex - 1];
					}
					else
					{
						this.poseIndex[this.selectMaidIndex] = 0;
					}
					if (!this.isLock[this.selectMaidIndex] && maid && maid.Visible)
					{
						string[] array23 = this.poseArray[this.poseIndex[this.selectMaidIndex]].Split(new char[]
						{
							','
						});
						this.isStop[this.selectMaidIndex] = false;
						this.poseCount[this.selectMaidIndex] = 20;
						if (array23[0].Contains("_momi") || array23[0].Contains("paizuri_"))
						{
							maid.body0.MuneYureL(0f);
							maid.body0.MuneYureR(0f);
						}
						else
						{
							maid.body0.MuneYureL(1f);
							maid.body0.MuneYureR(1f);
						}
						int num6;
						if (array23[0].Contains("ManyMaidsPose"))
						{
							string path7 = array23[0].Split(new char[]
							{
								'/'
							})[1];
							byte[] array24 = new byte[0];
							try
							{
								using (FileStream fileStream6 = new FileStream(path7, FileMode.Open, FileAccess.Read))
								{
									array24 = new byte[fileStream6.Length];
									fileStream6.Read(array24, 0, array24.Length);
								}
							}
							catch
							{
							}
							if (array24.Length != 0)
							{
								long num53 = (long)Path.GetFileName(path7).GetHashCode();
								maid.body0.CrossFade(num53.ToString(), array24, false, false, false, 0f, 1f);
								Maid.AutoTwist[] array25 = new Maid.AutoTwist[]
								{
									Maid.AutoTwist.ShoulderL,
									Maid.AutoTwist.ShoulderR,
									Maid.AutoTwist.WristL,
									Maid.AutoTwist.WristR,
									Maid.AutoTwist.ThighL,
									Maid.AutoTwist.ThighR
								};
								for (int num54 = 0; num54 < array25.Length; num54++)
								{
									maid.SetAutoTwist(array25[num54], true);
								}
							}
						}
						else if (array23[0].StartsWith("p") && int.TryParse(array23[0].Substring(1), out num6))
						{
							this.loadPose[this.selectMaidIndex] = array23[0];
						}
						else if (!array23[0].StartsWith("dance_"))
						{
							this.maidArray[this.selectMaidIndex].CrossFade(array23[0] + ".anm", false, true, false, 0f, 1f);
						}
						else
						{
							if (!maid.body0.m_Bones.GetComponent<Animation>().GetClip(array23[0] + ".anm"))
							{
								maid.body0.LoadAnime(array23[0] + ".anm", GameUty.FileSystem, array23[0] + ".anm", false, false);
							}
							maid.body0.m_Bones.GetComponent<Animation>().Play(array23[0] + ".anm");
						}
						if (array23.Length > 1)
						{
							maid.body0.m_Bones.GetComponent<Animation>()[array23[0] + ".anm"].time = float.Parse(array23[1]);
							this.isDanceStop = true;
							if (array23.Length > 2)
							{
								CMT.SearchObjName(this.maidArray[this.selectMaidIndex].body0.m_Bones.transform, "Bip01", true);
								this.isPoseIti[this.selectMaidIndex] = true;
								this.poseIti[this.selectMaidIndex] = this.maidArray[this.selectMaidIndex].transform.position;
								this.maidArray[this.selectMaidIndex].transform.position = new Vector3(100f, 100f, 100f);
							}
						}
					}
					int num55 = -1;
					for (int num56 = 0; num56 < this.groupList.Count; num56++)
					{
						if (this.poseIndex[this.selectMaidIndex] < (int)this.groupList[num56])
						{
							num55 = num56;
							break;
						}
					}
					int num57 = (int)this.groupList[0];
					int num58 = 0;
					if (num55 > 0)
					{
						num57 = (int)this.groupList[num55] - (int)this.groupList[num55 - 1];
						num58 = (int)this.groupList[num55 - 1];
					}
					if (num55 < 0)
					{
						num55 = this.groupList.Count;
						num57 = this.poseArray.Length - (int)this.groupList[num55 - 1];
						num58 = (int)this.groupList[num55 - 1];
					}
					this.poseComboList = new GUIContent[num57];
					int num59 = 0;
					for (int num60 = num58; num60 < num58 + num57; num60++)
					{
						bool flag8 = false;
						foreach (IniKey iniKey10 in base.Preferences["pose"].Keys)
						{
							if (this.poseArray[num60] == iniKey10.Key)
							{
								IniKey iniKey11 = base.Preferences["pose"][iniKey10.Key];
								if (iniKey11.Value != null && iniKey11.Value.ToString() != "" && iniKey11.Value.ToString() != "del")
								{
									this.poseComboList[num59] = new GUIContent(string.Concat(new object[]
									{
										num59 + 1,
										":",
										iniKey11.Value.Split(new char[]
										{
											'_'
										})[0],
										"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000",
										iniKey10.Key
									}));
									flag8 = true;
								}
							}
						}
						if (!flag8)
						{
							this.poseComboList[num59] = new GUIContent(num59 + 1 + ":" + this.poseArray[num60]);
						}
						num59++;
					}
					this.poseCombo.scrollPos = new Vector2(0f, 0f);
					this.poseGroupCombo.selectedItemIndex = num55;
					this.poseCombo.selectedItemIndex = 0;
				}
				if (this.poseCombo.isClickedComboButton)
				{
					this.isCombo = true;
				}
				else if (this.isCombo)
				{
					this.isCombo = false;
					this.isPoseInit = true;
					if (this.poseGroupIndex > 0)
					{
						this.poseIndex[this.selectMaidIndex] = (int)this.groupList[this.poseGroupIndex - 1] + this.poseCombo.selectedItemIndex;
					}
					else
					{
						this.poseIndex[this.selectMaidIndex] = this.poseCombo.selectedItemIndex;
					}
					if (this.poseIndex[this.selectMaidIndex] == this.poseArray.Length)
					{
						this.poseIndex[this.selectMaidIndex] = 0;
					}
					if (!this.isLock[this.selectMaidIndex] && maid && maid.Visible)
					{
						string[] array26 = this.poseArray[this.poseIndex[this.selectMaidIndex]].Split(new char[]
						{
							','
						});
						this.isStop[this.selectMaidIndex] = false;
						this.poseCount[this.selectMaidIndex] = 20;
						if (array26[0].Contains("_momi") || array26[0].Contains("paizuri_"))
						{
							maid.body0.MuneYureL(0f);
							maid.body0.MuneYureR(0f);
						}
						else
						{
							maid.body0.MuneYureL(1f);
							maid.body0.MuneYureR(1f);
						}
						int num6;
						if (array26[0].Contains("ManyMaidsPose"))
						{
							string path8 = array26[0].Split(new char[]
							{
								'/'
							})[1];
							byte[] array27 = new byte[0];
							try
							{
								using (FileStream fileStream7 = new FileStream(path8, FileMode.Open, FileAccess.Read))
								{
									array27 = new byte[fileStream7.Length];
									fileStream7.Read(array27, 0, array27.Length);
								}
							}
							catch
							{
							}
							if (array27.Length != 0)
							{
								long num61 = (long)Path.GetFileName(path8).GetHashCode();
								maid.body0.CrossFade(num61.ToString(), array27, false, false, false, 0f, 1f);
								Maid.AutoTwist[] array28 = new Maid.AutoTwist[]
								{
									Maid.AutoTwist.ShoulderL,
									Maid.AutoTwist.ShoulderR,
									Maid.AutoTwist.WristL,
									Maid.AutoTwist.WristR,
									Maid.AutoTwist.ThighL,
									Maid.AutoTwist.ThighR
								};
								for (int num62 = 0; num62 < array28.Length; num62++)
								{
									maid.SetAutoTwist(array28[num62], true);
								}
							}
						}
						else if (array26[0].StartsWith("p") && int.TryParse(array26[0].Substring(1), out num6))
						{
							this.loadPose[this.selectMaidIndex] = array26[0];
						}
						else if (!array26[0].StartsWith("dance_"))
						{
							this.maidArray[this.selectMaidIndex].CrossFade(array26[0] + ".anm", false, true, false, 0f, 1f);
						}
						else
						{
							if (!maid.body0.m_Bones.GetComponent<Animation>().GetClip(array26[0] + ".anm"))
							{
								maid.body0.LoadAnime(array26[0] + ".anm", GameUty.FileSystem, array26[0] + ".anm", false, false);
							}
							maid.body0.m_Bones.GetComponent<Animation>().Play(array26[0] + ".anm");
						}
						if (array26.Length > 1)
						{
							maid.body0.m_Bones.GetComponent<Animation>()[array26[0] + ".anm"].time = float.Parse(array26[1]);
							this.isDanceStop = true;
							if (array26.Length > 2)
							{
								CMT.SearchObjName(this.maidArray[this.selectMaidIndex].body0.m_Bones.transform, "Bip01", true);
								this.isPoseIti[this.selectMaidIndex] = true;
								this.poseIti[this.selectMaidIndex] = this.maidArray[this.selectMaidIndex].transform.position;
								this.maidArray[this.selectMaidIndex].transform.position = new Vector3(100f, 100f, 100f);
							}
						}
					}
				}
				if (this.itemCombo.isClickedComboButton)
				{
					this.isCombo3 = true;
					return;
				}
				if (this.isCombo3)
				{
					this.isCombo3 = false;
					string[] array29 = new string[2];
					array29 = Class1.itemArray[this.itemIndex2[this.selectMaidIndex]].Split(new char[]
					{
						','
					});
					if (this.itemIndex2[this.selectMaidIndex] > 13)
					{
						array29 = Class1.itemArray[this.itemIndex2[this.selectMaidIndex] + 1].Split(new char[]
						{
							','
						});
					}
					maid.DelProp(MPN.acckami, true);
					bool flag9 = false;
					if (this.itemIndex2[this.selectMaidIndex] == 0)
					{
						maid.DelProp(MPN.accha, true);
						maid.DelProp(MPN.acchead, true);
					}
					if (this.itemIndex2[this.selectMaidIndex] == 12 || this.itemIndex2[this.selectMaidIndex] == 13)
					{
						flag9 = true;
					}
					if (!flag9)
					{
						maid.DelProp(MPN.accvag, true);
						maid.DelProp(MPN.megane, true);
					}
					if (array29[0] != "")
					{
						maid.SetProp(array29[0], array29[1], 0, true, false);
					}
					if (this.itemIndex2[this.selectMaidIndex] == 12)
					{
						array29 = Class1.itemArray[this.itemIndex2[this.selectMaidIndex] - 1].Split(new char[]
						{
							','
						});
						maid.SetProp(array29[0], array29[1], 0, true, false);
					}
					if (this.itemIndex2[this.selectMaidIndex] == 13)
					{
						array29 = Class1.itemArray[this.itemIndex2[this.selectMaidIndex] + 1].Split(new char[]
						{
							','
						});
						maid.SetProp(array29[0], array29[1], 0, true, false);
					}
					if (this.itemIndex2[this.selectMaidIndex] == 23)
					{
						array29 = Class1.itemArray[this.itemIndex2[this.selectMaidIndex]].Split(new char[]
						{
							','
						});
						maid.SetProp(array29[0], array29[1], 0, true, false);
						this.cafeFlg[this.selectMaidIndex] = true;
					}
					maid.AllProcPropSeqStart();
					this.itemCombo.selectedItemIndex = this.itemIndex2[this.selectMaidIndex];
					this.itemIndex[this.selectMaidIndex] = this.itemIndex2[this.selectMaidIndex];
					return;
				}
			}
			else
			{
				this.isWear = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(98), (float)this.GetPix(70), (float)this.GetPix(20)), this.isWear, "トップス", guistyle6);
				this.isSkirt = GUI.Toggle(new Rect((float)this.GetPix(90), (float)this.GetPix(98), (float)this.GetPix(70), (float)this.GetPix(20)), this.isSkirt, "ボトムス", guistyle6);
				this.isBra = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(123), (float)this.GetPix(80), (float)this.GetPix(20)), this.isBra, "ブラジャー", guistyle6);
				this.isPanz = GUI.Toggle(new Rect((float)this.GetPix(90), (float)this.GetPix(123), (float)this.GetPix(60), (float)this.GetPix(20)), this.isPanz, "パンツ", guistyle6);
				this.isHeadset = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(148), (float)this.GetPix(70), (float)this.GetPix(20)), this.isHeadset, "ヘッド", guistyle6);
				this.isMegane = GUI.Toggle(new Rect((float)this.GetPix(90), (float)this.GetPix(148), (float)this.GetPix(70), (float)this.GetPix(20)), this.isMegane, "メガネ", guistyle6);
				this.isAccUde = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(173), (float)this.GetPix(40), (float)this.GetPix(20)), this.isAccUde, "腕", guistyle6);
				this.isGlove = GUI.Toggle(new Rect((float)this.GetPix(45), (float)this.GetPix(173), (float)this.GetPix(40), (float)this.GetPix(20)), this.isGlove, "手袋", guistyle6);
				this.isAccSenaka = GUI.Toggle(new Rect((float)this.GetPix(97), (float)this.GetPix(173), (float)this.GetPix(40), (float)this.GetPix(20)), this.isAccSenaka, "背中", guistyle6);
				this.isStkg = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(198), (float)this.GetPix(70), (float)this.GetPix(20)), this.isStkg, "ソックス", guistyle6);
				this.isShoes = GUI.Toggle(new Rect((float)this.GetPix(90), (float)this.GetPix(198), (float)this.GetPix(70), (float)this.GetPix(20)), this.isShoes, "シューズ", guistyle6);
				this.mekure1[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(223), (float)this.GetPix(62), (float)this.GetPix(20)), this.mekure1[this.selectMaidIndex], "めくれ前", guistyle6);
				this.mekure2[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(67), (float)this.GetPix(223), (float)this.GetPix(40), (float)this.GetPix(20)), this.mekure2[this.selectMaidIndex], "後ろ", guistyle6);
				this.zurasi[this.selectMaidIndex] = GUI.Toggle(new Rect((float)this.GetPix(105), (float)this.GetPix(223), (float)this.GetPix(50), (float)this.GetPix(20)), this.zurasi[this.selectMaidIndex], "ずらし", guistyle6);
			}
		}

		// Token: 0x0600003E RID: 62 RVA: 0x0003C938 File Offset: 0x0003AB38
		private void GuiFunc2(int winID)
		{
			GUIStyle guistyle = "label";
			guistyle.fontSize = this.GetPix(12);
			guistyle.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle2 = "label";
			guistyle2.fontSize = this.GetPix(11);
			guistyle2.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle3 = "button";
			guistyle3.fontSize = this.GetPix(20);
			GUIStyle guistyle4 = "button";
			guistyle4.fontSize = this.GetPix(12);
			guistyle4.alignment = TextAnchor.MiddleLeft;
			GUIStyle guistyle5 = new GUIStyle("toggle");
			guistyle5.fontSize = this.GetPix(13);
			CharacterMgr characterMgr = GameMain.Instance.CharacterMgr;
			if (!this.faceInitFlg)
			{
				this.listStyle2.normal.textColor = Color.white;
				this.listStyle2.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
				GUIStyleState onHover = this.listStyle2.onHover;
				GUIStyleState hover = this.listStyle2.hover;
				Texture2D texture2D = new Texture2D(2, 2);
				Texture2D background = texture2D;
				hover.background = texture2D;
				onHover.background = background;
				RectOffset padding = this.listStyle2.padding;
				RectOffset padding2 = this.listStyle2.padding;
				RectOffset padding3 = this.listStyle2.padding;
				int num = this.listStyle2.padding.bottom = this.GetPix(0);
				padding3.top = num;
				padding2.right = num;
				padding.left = num;
				this.listStyle2.fontSize = this.GetPix(12);
				this.faceCombo.selectedItemIndex = 0;
				List<string> list = new List<string>(300);
				list.AddRange(Class1.faceArray);
				for (int i = 1; i < 300; i++)
				{
					IniKey iniKey = base.Preferences["face"]["f" + i];
					if (iniKey.Value == null)
					{
						break;
					}
					string[] array = iniKey.Value.Split(new char[]
					{
						':'
					});
					if (array.Length > 1)
					{
						list.Add(string.Concat(new object[]
						{
							array[0],
							"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000:",
							i,
							":",
							array[1]
						}));
					}
				}
				this.faceCombo.selectedItemIndex = 0;
				this.faceComboList = new GUIContent[list.ToArray().Length];
				for (int j = 0; j < list.ToArray().Length; j++)
				{
					this.faceComboList[j] = new GUIContent(list.ToArray()[j]);
				}
				this.faceInitFlg = true;
			}
			if (this.faceCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			if (this.sceneLevel == 3 || this.sceneLevel == 5 || this.isF6)
			{
				if (!this.isF6)
				{
					bool value = true;
					if (this.faceFlg || this.poseFlg || this.sceneFlg || this.kankyoFlg || this.kankyo2Flg)
					{
						value = false;
					}
					if (GUI.Toggle(new Rect((float)this.GetPix(2), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), value, "配置", guistyle5))
					{
						this.faceFlg = false;
						this.poseFlg = false;
						this.sceneFlg = false;
						this.kankyoFlg = false;
						this.kankyo2Flg = false;
						this.bGui = true;
						this.isGuiInit = true;
					}
				}
				if (!this.yotogiFlg && GUI.Toggle(new Rect((float)this.GetPix(41), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.poseFlg, "操作", guistyle5))
				{
					this.poseFlg = true;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(80), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.faceFlg, "表情", guistyle5))
				{
					this.faceFlg = true;
					this.poseFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
					if (!this.faceFlg2)
					{
						this.isFaceInit = true;
						this.faceFlg2 = true;
						this.maidArray[this.selectMaidIndex].boMabataki = false;
						this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
					}
					this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
				}
				if (GUI.Toggle(new Rect((float)this.GetPix(119), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.kankyoFlg, "環境", guistyle5))
				{
					this.poseFlg = false;
					this.faceFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = true;
					this.kankyo2Flg = false;
				}
				if (!this.line1)
				{
					this.line1 = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.3f));
					this.line2 = this.MakeTex(2, 2, new Color(0.7f, 0.7f, 0.7f, 0.6f));
				}
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(160), 2f), this.line1);
				GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(160), 1f), this.line2);
				guistyle.fontSize = this.GetPix(13);
				guistyle.alignment = TextAnchor.MiddleCenter;
				GUI.Label(new Rect((float)this.GetPix(125), (float)this.GetPix(25), (float)this.GetPix(40), (float)this.GetPix(25)), string.Concat(this.selectMaidIndex + 1), guistyle);
				guistyle.fontSize = this.GetPix(11);
				guistyle.alignment = TextAnchor.UpperLeft;
			}
			if (this.sceneLevel > 0)
			{
				int num2 = this.selectMaidIndex;
				if (this.sceneLevel == 3 || (this.sceneLevel == 5 && (this.isF7 || this.maidCnt > 1)))
				{
					if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(53), (float)this.GetPix(23), (float)this.GetPix(32)), "＜", guistyle3))
					{
						this.selectMaidIndex--;
						if (this.selectMaidIndex < 0)
						{
							this.selectMaidIndex = this.selectList.Count - 1;
						}
						this.isFaceInit = true;
						this.faceFlg = true;
						this.copyIndex = 0;
						this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
					}
					if (GUI.Button(new Rect((float)this.GetPix(135), (float)this.GetPix(53), (float)this.GetPix(23), (float)this.GetPix(32)), "＞", guistyle3))
					{
						this.selectMaidIndex++;
						if (this.selectList.Count <= this.selectMaidIndex)
						{
							this.selectMaidIndex = 0;
						}
						this.isFaceInit = true;
						this.faceFlg = true;
						this.copyIndex = 0;
						this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
					}
				}
				if (this.maidArray[this.selectMaidIndex].GetThumIcon())
				{
					GUI.DrawTexture(new Rect((float)this.GetPix(30), (float)this.GetPix(25), (float)this.GetPix(60), (float)this.GetPix(60)), this.maidArray[this.selectMaidIndex].GetThumIcon());
				}
				string text = this.maidArray[this.selectMaidIndex].status.lastName + "\n" + this.maidArray[this.selectMaidIndex].status.firstName;
				GUI.Label(new Rect((float)this.GetPix(90), (float)this.GetPix(50), (float)this.GetPix(140), (float)this.GetPix(210)), text, guistyle);
				bool flag = GUI.Toggle(new Rect((float)this.GetPix(90), (float)this.GetPix(25), (float)this.GetPix(50), (float)this.GetPix(16)), this.isShosai, "詳細", guistyle5);
				if (flag != this.isShosai)
				{
					this.isShosai = flag;
					if (this.isShosai)
					{
						base.Preferences["config"]["hair_details"].Value = "true";
					}
					else
					{
						base.Preferences["config"]["hair_details"].Value = "false";
					}
					base.SaveConfig();
				}
				if (this.isFace[num2])
				{
					if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(25), (float)this.GetPix(23), (float)this.GetPix(23)), "有", guistyle3))
					{
						TMorph morph = this.maidArray[num2].body0.Face.morph;
						this.maidArray[num2].boMabataki = false;
						this.isFace[num2] = false;
					}
					this.maidArray[num2].boMabataki = false;
				}
				else
				{
					if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(25), (float)this.GetPix(23), (float)this.GetPix(23)), "無", guistyle3))
					{
						TMorph morph2 = this.maidArray[num2].body0.Face.morph;
						this.maidArray[num2].boMabataki = false;
						morph2.EyeMabataki = 0f;
						this.isFaceInit = true;
						this.isFace[num2] = true;
						this.faceCombo.selectedItemIndex = this.faceIndex[num2];
					}
					GUI.enabled = false;
					this.maidArray[num2].boMabataki = true;
				}
			}
			if (GUI.Button(new Rect((float)this.GetPix(5), (float)this.GetPix(95), (float)this.GetPix(23), (float)this.GetPix(23)), "＜", guistyle3))
			{
				this.faceIndex[this.selectMaidIndex]--;
				if (this.faceIndex[this.selectMaidIndex] <= -1)
				{
					this.faceIndex[this.selectMaidIndex] = this.faceComboList.Length - 1;
				}
				TMorph morph3 = this.maidArray[this.selectMaidIndex].body0.Face.morph;
				this.maidArray[this.selectMaidIndex].boMabataki = false;
				morph3.EyeMabataki = 0f;
				if (this.faceIndex[this.selectMaidIndex] < Class1.faceArray.Length)
				{
					morph3.MulBlendValues(Class1.faceArray[this.faceIndex[this.selectMaidIndex]], 1f);
				}
				else
				{
					float[] fieldValue = ManyMaids.GetFieldValue<TMorph, float[]>(morph3, "BlendValues");
					float[] fieldValue2 = ManyMaids.GetFieldValue<TMorph, float[]>(morph3, "BlendValuesBackup");
					if (!this.isVR)
					{
						this.maidArray[this.selectMaidIndex].boMabataki = false;
					}
					string[] array2 = this.faceComboList[this.faceIndex[this.selectMaidIndex]].text.Split(new char[]
					{
						':'
					})[2].Split(new char[]
					{
						','
					});
					fieldValue2[(int)morph3.hash["eyeclose"]] = float.Parse(array2[0]);
					fieldValue2[(int)morph3.hash["eyeclose2"]] = float.Parse(array2[1]);
					fieldValue2[(int)morph3.hash["eyeclose3"]] = float.Parse(array2[2]);
					fieldValue2[(int)morph3.hash["eyeclose6"]] = float.Parse(array2[3]);
					fieldValue[(int)morph3.hash["hitomih"]] = float.Parse(array2[4]);
					fieldValue[(int)morph3.hash["hitomis"]] = float.Parse(array2[5]);
					fieldValue[(int)morph3.hash["mayuha"]] = float.Parse(array2[6]);
					fieldValue[(int)morph3.hash["mayuup"]] = float.Parse(array2[7]);
					fieldValue[(int)morph3.hash["mayuv"]] = float.Parse(array2[8]);
					fieldValue[(int)morph3.hash["mayuvhalf"]] = float.Parse(array2[9]);
					fieldValue[(int)morph3.hash["moutha"]] = float.Parse(array2[10]);
					fieldValue[(int)morph3.hash["mouths"]] = float.Parse(array2[11]);
					fieldValue[(int)morph3.hash["mouthdw"]] = float.Parse(array2[12]);
					fieldValue[(int)morph3.hash["mouthup"]] = float.Parse(array2[13]);
					fieldValue[(int)morph3.hash["tangout"]] = float.Parse(array2[14]);
					fieldValue[(int)morph3.hash["tangup"]] = float.Parse(array2[15]);
					fieldValue[(int)morph3.hash["eyebig"]] = float.Parse(array2[16]);
					fieldValue2[(int)morph3.hash["eyeclose5"]] = float.Parse(array2[17]);
					fieldValue[(int)morph3.hash["mayuw"]] = float.Parse(array2[18]);
					fieldValue[(int)morph3.hash["mouthhe"]] = float.Parse(array2[19]);
					fieldValue[(int)morph3.hash["mouthc"]] = float.Parse(array2[20]);
					fieldValue[(int)morph3.hash["mouthi"]] = float.Parse(array2[21]);
					fieldValue[(int)morph3.hash["mouthuphalf"]] = float.Parse(array2[22]) + 0.01f;
					try
					{
						fieldValue[(int)morph3.hash["tangopen"]] = float.Parse(array2[23]);
					}
					catch
					{
					}
					if (float.Parse(array2[24]) == 1f)
					{
						fieldValue[(int)morph3.hash["namida"]] = 1f;
					}
					else
					{
						fieldValue[(int)morph3.hash["namida"]] = 0f;
					}
					if (float.Parse(array2[25]) == 1f)
					{
						fieldValue[(int)morph3.hash["tear1"]] = 1f;
					}
					else
					{
						fieldValue[(int)morph3.hash["tear1"]] = 0f;
					}
					if (float.Parse(array2[26]) == 1f)
					{
						fieldValue[(int)morph3.hash["tear2"]] = 1f;
					}
					else
					{
						fieldValue[(int)morph3.hash["tear2"]] = 0f;
					}
					if (float.Parse(array2[27]) == 1f)
					{
						fieldValue[(int)morph3.hash["tear3"]] = 1f;
					}
					else
					{
						fieldValue[(int)morph3.hash["tear3"]] = 0f;
					}
					if (float.Parse(array2[28]) == 1f)
					{
						fieldValue[(int)morph3.hash["shock"]] = 1f;
					}
					else
					{
						fieldValue[(int)morph3.hash["shock"]] = 0f;
					}
					if (float.Parse(array2[29]) == 1f)
					{
						fieldValue[(int)morph3.hash["yodare"]] = 1f;
					}
					else
					{
						fieldValue[(int)morph3.hash["yodare"]] = 0f;
					}
					if (float.Parse(array2[30]) == 1f)
					{
						fieldValue[(int)morph3.hash["hoho"]] = 0.5f;
					}
					else
					{
						fieldValue[(int)morph3.hash["hoho"]] = 0f;
					}
					if (float.Parse(array2[31]) == 1f)
					{
						fieldValue[(int)morph3.hash["hoho2"]] = 0.5f;
					}
					else
					{
						fieldValue[(int)morph3.hash["hoho2"]] = 0f;
					}
					if (float.Parse(array2[32]) == 1f)
					{
						fieldValue[(int)morph3.hash["hohos"]] = 1f;
					}
					else
					{
						fieldValue[(int)morph3.hash["hohos"]] = 0f;
					}
					if (float.Parse(array2[33]) == 1f)
					{
						fieldValue[(int)morph3.hash["hohol"]] = 1f;
					}
					else
					{
						fieldValue[(int)morph3.hash["hohol"]] = 0f;
					}
					if (float.Parse(array2[34]) == 1f)
					{
						fieldValue[(int)morph3.hash["toothoff"]] = 1f;
					}
					else
					{
						fieldValue[(int)morph3.hash["toothoff"]] = 0f;
					}
					if (array2.Length > 35)
					{
						if (float.Parse(array2[35]) == 1f)
						{
							morph3.boNoseFook = true;
						}
						else
						{
							morph3.boNoseFook = false;
						}
					}
				}
				this.maidArray[this.selectMaidIndex].body0.Face.morph.FixBlendValues_Face();
				this.isFaceInit = true;
				this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
			}
			if (GUI.Button(new Rect((float)this.GetPix(135), (float)this.GetPix(95), (float)this.GetPix(23), (float)this.GetPix(23)), "＞", guistyle3))
			{
				this.faceIndex[this.selectMaidIndex]++;
				if (this.faceIndex[this.selectMaidIndex] == this.faceComboList.Length)
				{
					this.faceIndex[this.selectMaidIndex] = 0;
				}
				TMorph morph4 = this.maidArray[this.selectMaidIndex].body0.Face.morph;
				this.maidArray[this.selectMaidIndex].boMabataki = false;
				morph4.EyeMabataki = 0f;
				if (this.faceIndex[this.selectMaidIndex] < Class1.faceArray.Length)
				{
					morph4.MulBlendValues(Class1.faceArray[this.faceIndex[this.selectMaidIndex]], 1f);
				}
				else
				{
					float[] fieldValue3 = ManyMaids.GetFieldValue<TMorph, float[]>(morph4, "BlendValues");
					float[] fieldValue4 = ManyMaids.GetFieldValue<TMorph, float[]>(morph4, "BlendValuesBackup");
					if (!this.isVR)
					{
						this.maidArray[this.selectMaidIndex].boMabataki = false;
					}
					string[] array3 = this.faceComboList[this.faceIndex[this.selectMaidIndex]].text.Split(new char[]
					{
						':'
					})[2].Split(new char[]
					{
						','
					});
					fieldValue4[(int)morph4.hash["eyeclose"]] = float.Parse(array3[0]);
					fieldValue4[(int)morph4.hash["eyeclose2"]] = float.Parse(array3[1]);
					fieldValue4[(int)morph4.hash["eyeclose3"]] = float.Parse(array3[2]);
					fieldValue4[(int)morph4.hash["eyeclose6"]] = float.Parse(array3[3]);
					fieldValue3[(int)morph4.hash["hitomih"]] = float.Parse(array3[4]);
					fieldValue3[(int)morph4.hash["hitomis"]] = float.Parse(array3[5]);
					fieldValue3[(int)morph4.hash["mayuha"]] = float.Parse(array3[6]);
					fieldValue3[(int)morph4.hash["mayuup"]] = float.Parse(array3[7]);
					fieldValue3[(int)morph4.hash["mayuv"]] = float.Parse(array3[8]);
					fieldValue3[(int)morph4.hash["mayuvhalf"]] = float.Parse(array3[9]);
					fieldValue3[(int)morph4.hash["moutha"]] = float.Parse(array3[10]);
					fieldValue3[(int)morph4.hash["mouths"]] = float.Parse(array3[11]);
					fieldValue3[(int)morph4.hash["mouthdw"]] = float.Parse(array3[12]);
					fieldValue3[(int)morph4.hash["mouthup"]] = float.Parse(array3[13]);
					fieldValue3[(int)morph4.hash["tangout"]] = float.Parse(array3[14]);
					fieldValue3[(int)morph4.hash["tangup"]] = float.Parse(array3[15]);
					fieldValue3[(int)morph4.hash["eyebig"]] = float.Parse(array3[16]);
					fieldValue4[(int)morph4.hash["eyeclose5"]] = float.Parse(array3[17]);
					fieldValue3[(int)morph4.hash["mayuw"]] = float.Parse(array3[18]);
					fieldValue3[(int)morph4.hash["mouthhe"]] = float.Parse(array3[19]);
					fieldValue3[(int)morph4.hash["mouthc"]] = float.Parse(array3[20]);
					fieldValue3[(int)morph4.hash["mouthi"]] = float.Parse(array3[21]);
					fieldValue3[(int)morph4.hash["mouthuphalf"]] = float.Parse(array3[22]) + 0.01f;
					try
					{
						fieldValue3[(int)morph4.hash["tangopen"]] = float.Parse(array3[23]);
					}
					catch
					{
					}
					if (float.Parse(array3[24]) == 1f)
					{
						fieldValue3[(int)morph4.hash["namida"]] = 1f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["namida"]] = 0f;
					}
					if (float.Parse(array3[25]) == 1f)
					{
						fieldValue3[(int)morph4.hash["tear1"]] = 1f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["tear1"]] = 0f;
					}
					if (float.Parse(array3[26]) == 1f)
					{
						fieldValue3[(int)morph4.hash["tear2"]] = 1f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["tear2"]] = 0f;
					}
					if (float.Parse(array3[27]) == 1f)
					{
						fieldValue3[(int)morph4.hash["tear3"]] = 1f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["tear3"]] = 0f;
					}
					if (float.Parse(array3[28]) == 1f)
					{
						fieldValue3[(int)morph4.hash["shock"]] = 1f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["shock"]] = 0f;
					}
					if (float.Parse(array3[29]) == 1f)
					{
						fieldValue3[(int)morph4.hash["yodare"]] = 1f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["yodare"]] = 0f;
					}
					if (float.Parse(array3[30]) == 1f)
					{
						fieldValue3[(int)morph4.hash["hoho"]] = 0.5f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["hoho"]] = 0f;
					}
					if (float.Parse(array3[31]) == 1f)
					{
						fieldValue3[(int)morph4.hash["hoho2"]] = 0.5f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["hoho2"]] = 0f;
					}
					if (float.Parse(array3[32]) == 1f)
					{
						fieldValue3[(int)morph4.hash["hohos"]] = 1f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["hohos"]] = 0f;
					}
					if (float.Parse(array3[33]) == 1f)
					{
						fieldValue3[(int)morph4.hash["hohol"]] = 1f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["hohol"]] = 0f;
					}
					if (float.Parse(array3[34]) == 1f)
					{
						fieldValue3[(int)morph4.hash["toothoff"]] = 1f;
					}
					else
					{
						fieldValue3[(int)morph4.hash["toothoff"]] = 0f;
					}
					if (array3.Length > 35)
					{
						if (float.Parse(array3[35]) == 1f)
						{
							morph4.boNoseFook = true;
						}
						else
						{
							morph4.boNoseFook = false;
						}
					}
				}
				this.maidArray[this.selectMaidIndex].body0.Face.morph.FixBlendValues_Face();
				this.isFaceInit = true;
				this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
			}
			if (!this.isShosai)
			{
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(130), (float)this.GetPix(100), (float)this.GetPix(25)), "目の開閉", guistyle);
				this.eyeclose = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(150), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyeclose, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(130), (float)this.GetPix(100), (float)this.GetPix(25)), "にっこり", guistyle);
				this.eyeclose2 = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(150), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyeclose2, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(170), (float)this.GetPix(100), (float)this.GetPix(25)), "ジト目", guistyle);
				this.eyeclose3 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(190), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyeclose3, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(170), (float)this.GetPix(100), (float)this.GetPix(25)), "ウインク", guistyle);
				this.eyeclose6 = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(190), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyeclose6, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(210), (float)this.GetPix(100), (float)this.GetPix(25)), "ハイライト", guistyle);
				this.hitomih = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(230), (float)this.GetPix(70), (float)this.GetPix(20)), this.hitomih, 0f, 2f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(210), (float)this.GetPix(100), (float)this.GetPix(25)), "瞳サイズ", guistyle);
				this.hitomis = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(230), (float)this.GetPix(70), (float)this.GetPix(20)), this.hitomis, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(250), (float)this.GetPix(100), (float)this.GetPix(25)), "眉角度", guistyle);
				this.mayuha = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(270), (float)this.GetPix(70), (float)this.GetPix(20)), this.mayuha, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(290), (float)this.GetPix(100), (float)this.GetPix(25)), "眉上げ", guistyle);
				this.mayuup = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(310), (float)this.GetPix(70), (float)this.GetPix(20)), this.mayuup, 0f, 0.8f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(290), (float)this.GetPix(100), (float)this.GetPix(25)), "眉下げ", guistyle);
				this.mayuv = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(310), (float)this.GetPix(70), (float)this.GetPix(20)), this.mayuv, 0f, 0.8f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(330), (float)this.GetPix(100), (float)this.GetPix(25)), "口開け1", guistyle);
				this.moutha = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(350), (float)this.GetPix(70), (float)this.GetPix(20)), this.moutha, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(330), (float)this.GetPix(100), (float)this.GetPix(25)), "口開け2", guistyle);
				this.mouths = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(350), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouths, 0f, 0.9f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(370), (float)this.GetPix(100), (float)this.GetPix(25)), "口角上げ", guistyle);
				this.mouthup = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(390), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouthup, 0f, 1.4f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(370), (float)this.GetPix(100), (float)this.GetPix(25)), "口角下げ", guistyle);
				this.mouthdw = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(390), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouthdw, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(410), (float)this.GetPix(100), (float)this.GetPix(25)), "舌出し", guistyle);
				this.tangout = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(430), (float)this.GetPix(70), (float)this.GetPix(20)), this.tangout, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(410), (float)this.GetPix(100), (float)this.GetPix(25)), "舌上げ", guistyle);
				this.tangup = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(430), (float)this.GetPix(70), (float)this.GetPix(20)), this.tangup, 0f, 0.7f);
				this.isHoho2 = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(455), (float)this.GetPix(50), (float)this.GetPix(20)), this.isHoho2, "赤面", guistyle5);
				this.isShock = GUI.Toggle(new Rect((float)this.GetPix(60), (float)this.GetPix(455), (float)this.GetPix(70), (float)this.GetPix(20)), this.isShock, "ショック", guistyle5);
				this.isNamida = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(480), (float)this.GetPix(50), (float)this.GetPix(20)), this.isNamida, "涙", guistyle5);
				this.isYodare = GUI.Toggle(new Rect((float)this.GetPix(60), (float)this.GetPix(480), (float)this.GetPix(50), (float)this.GetPix(20)), this.isYodare, "涎", guistyle5);
				this.isTear1 = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(505), (float)this.GetPix(50), (float)this.GetPix(20)), this.isTear1, "涙1", guistyle5);
				this.isTear2 = GUI.Toggle(new Rect((float)this.GetPix(60), (float)this.GetPix(505), (float)this.GetPix(50), (float)this.GetPix(20)), this.isTear2, "涙2", guistyle5);
				this.isTear3 = GUI.Toggle(new Rect((float)this.GetPix(115), (float)this.GetPix(505), (float)this.GetPix(50), (float)this.GetPix(20)), this.isTear3, "涙3", guistyle5);
				this.isHohos = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(530), (float)this.GetPix(50), (float)this.GetPix(20)), this.isHohos, "頬1", guistyle5);
				this.isHoho = GUI.Toggle(new Rect((float)this.GetPix(60), (float)this.GetPix(530), (float)this.GetPix(50), (float)this.GetPix(20)), this.isHoho, "頬2", guistyle5);
				this.isHohol = GUI.Toggle(new Rect((float)this.GetPix(115), (float)this.GetPix(530), (float)this.GetPix(50), (float)this.GetPix(20)), this.isHohol, "頬3", guistyle5);
			}
			else
			{
				int num3 = 120;
				int num4 = 135;
				int num5 = 28;
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3), (float)this.GetPix(100), (float)this.GetPix(25)), "目の開閉", guistyle2);
				this.eyeclose = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyeclose, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3), (float)this.GetPix(100), (float)this.GetPix(25)), "にっこり", guistyle2);
				this.eyeclose2 = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyeclose2, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5), (float)this.GetPix(100), (float)this.GetPix(25)), "ジト目", guistyle2);
				this.eyeclose3 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyeclose3, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5), (float)this.GetPix(100), (float)this.GetPix(25)), "見開く", guistyle2);
				this.eyebig = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyebig, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 2), (float)this.GetPix(100), (float)this.GetPix(25)), "ウインク1", guistyle2);
				this.eyeclose6 = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 2), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyeclose6, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5 * 2), (float)this.GetPix(100), (float)this.GetPix(25)), "ウインク2", guistyle2);
				this.eyeclose5 = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5 * 2), (float)this.GetPix(70), (float)this.GetPix(20)), this.eyeclose5, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 3), (float)this.GetPix(100), (float)this.GetPix(25)), "ハイライト", guistyle2);
				this.hitomih = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 3), (float)this.GetPix(70), (float)this.GetPix(20)), this.hitomih, 0f, 2f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5 * 3), (float)this.GetPix(100), (float)this.GetPix(25)), "瞳サイズ", guistyle2);
				this.hitomis = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5 * 3), (float)this.GetPix(70), (float)this.GetPix(20)), this.hitomis, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 4), (float)this.GetPix(100), (float)this.GetPix(25)), "眉角度1", guistyle2);
				this.mayuha = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 4), (float)this.GetPix(70), (float)this.GetPix(20)), this.mayuha, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5 * 4), (float)this.GetPix(100), (float)this.GetPix(25)), "眉角度2", guistyle2);
				this.mayuw = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5 * 4), (float)this.GetPix(70), (float)this.GetPix(20)), this.mayuw, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 5), (float)this.GetPix(100), (float)this.GetPix(25)), "眉上げ", guistyle2);
				this.mayuup = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 5), (float)this.GetPix(70), (float)this.GetPix(20)), this.mayuup, 0f, 0.8f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5 * 5), (float)this.GetPix(100), (float)this.GetPix(25)), "眉下げ1", guistyle2);
				this.mayuv = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5 * 5), (float)this.GetPix(70), (float)this.GetPix(20)), this.mayuv, 0f, 0.8f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 6), (float)this.GetPix(100), (float)this.GetPix(25)), "眉下げ2", guistyle2);
				this.mayuvhalf = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 6), (float)this.GetPix(70), (float)this.GetPix(20)), this.mayuvhalf, 0f, 0.9f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 7), (float)this.GetPix(100), (float)this.GetPix(25)), "口開け1", guistyle2);
				this.moutha = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 7), (float)this.GetPix(70), (float)this.GetPix(20)), this.moutha, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5 * 7), (float)this.GetPix(100), (float)this.GetPix(25)), "口開け2", guistyle2);
				this.mouths = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5 * 7), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouths, 0f, 0.9f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 8), (float)this.GetPix(100), (float)this.GetPix(25)), "口幅狭く", guistyle2);
				this.mouthc = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 8), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouthc, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5 * 8), (float)this.GetPix(100), (float)this.GetPix(25)), "口幅広く", guistyle2);
				this.mouthi = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5 * 8), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouthi, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 9), (float)this.GetPix(100), (float)this.GetPix(25)), "口角上げ", guistyle2);
				this.mouthup = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 9), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouthup, 0f, 1.4f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5 * 9), (float)this.GetPix(100), (float)this.GetPix(25)), "口角下げ", guistyle2);
				this.mouthdw = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5 * 9), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouthdw, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 10), (float)this.GetPix(100), (float)this.GetPix(25)), "口中央上げ", guistyle2);
				this.mouthhe = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 10), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouthhe, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5 * 10), (float)this.GetPix(100), (float)this.GetPix(25)), "左口角上げ", guistyle2);
				this.mouthuphalf = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5 * 10), (float)this.GetPix(70), (float)this.GetPix(20)), this.mouthuphalf, 0f, 2f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 11), (float)this.GetPix(100), (float)this.GetPix(25)), "舌出し", guistyle2);
				this.tangout = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 11), (float)this.GetPix(70), (float)this.GetPix(20)), this.tangout, 0f, 1f);
				GUI.Label(new Rect((float)this.GetPix(88), (float)this.GetPix(num3 + num5 * 11), (float)this.GetPix(100), (float)this.GetPix(25)), "舌上げ", guistyle2);
				this.tangup = GUI.HorizontalSlider(new Rect((float)this.GetPix(88), (float)this.GetPix(num4 + num5 * 11), (float)this.GetPix(70), (float)this.GetPix(20)), this.tangup, 0f, 0.7f);
				GUI.Label(new Rect((float)this.GetPix(8), (float)this.GetPix(num3 + num5 * 12), (float)this.GetPix(100), (float)this.GetPix(25)), "舌根上げ", guistyle2);
				this.tangopen = GUI.HorizontalSlider(new Rect((float)this.GetPix(8), (float)this.GetPix(num4 + num5 * 12), (float)this.GetPix(70), (float)this.GetPix(20)), this.tangopen, 0f, 1f);
				bool enabled = GUI.enabled;
				if (!this.faceCombo.isClickedComboButton)
				{
					GUI.enabled = true;
				}
				GUI.enabled = enabled;
				this.isHoho2 = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(489), (float)this.GetPix(50), (float)this.GetPix(16)), this.isHoho2, "赤面", guistyle5);
				this.isShock = GUI.Toggle(new Rect((float)this.GetPix(60), (float)this.GetPix(489), (float)this.GetPix(58), (float)this.GetPix(16)), this.isShock, "ショック", guistyle5);
				this.isNosefook = GUI.Toggle(new Rect((float)this.GetPix(115), (float)this.GetPix(489), (float)this.GetPix(62), (float)this.GetPix(16)), this.isNosefook, "鼻フック", guistyle5);
				this.isNamida = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(511), (float)this.GetPix(50), (float)this.GetPix(16)), this.isNamida, "涙", guistyle5);
				this.isYodare = GUI.Toggle(new Rect((float)this.GetPix(60), (float)this.GetPix(511), (float)this.GetPix(50), (float)this.GetPix(16)), this.isYodare, "涎", guistyle5);
				this.isToothoff = !GUI.Toggle(new Rect((float)this.GetPix(115), (float)this.GetPix(511), (float)this.GetPix(50), (float)this.GetPix(16)), !this.isToothoff, "歯", guistyle5);
				this.isTear1 = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(533), (float)this.GetPix(50), (float)this.GetPix(16)), this.isTear1, "涙1", guistyle5);
				this.isTear2 = GUI.Toggle(new Rect((float)this.GetPix(60), (float)this.GetPix(533), (float)this.GetPix(50), (float)this.GetPix(16)), this.isTear2, "涙2", guistyle5);
				this.isTear3 = GUI.Toggle(new Rect((float)this.GetPix(115), (float)this.GetPix(533), (float)this.GetPix(50), (float)this.GetPix(16)), this.isTear3, "涙3", guistyle5);
				this.isHohos = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(555), (float)this.GetPix(50), (float)this.GetPix(16)), this.isHohos, "頬1", guistyle5);
				this.isHoho = GUI.Toggle(new Rect((float)this.GetPix(60), (float)this.GetPix(555), (float)this.GetPix(50), (float)this.GetPix(16)), this.isHoho, "頬2", guistyle5);
				this.isHohol = GUI.Toggle(new Rect((float)this.GetPix(115), (float)this.GetPix(555), (float)this.GetPix(50), (float)this.GetPix(16)), this.isHohol, "頬3", guistyle5);
			}
			int num6 = 0;
			if (this.isShosai)
			{
				num6 = 22;
			}
			this.isFaceEdit = GUI.Toggle(new Rect((float)this.GetPix(5), (float)this.GetPix(555 + num6), (float)this.GetPix(50), (float)this.GetPix(16)), this.isFaceEdit, "登録", guistyle5);
			if (this.isFaceEdit)
			{
				this.inName4 = GUI.TextField(new Rect((float)this.GetPix(5), (float)this.GetPix(575 + num6), (float)this.GetPix(100), (float)this.GetPix(20)), this.inName4);
				if (GUI.Button(new Rect((float)this.GetPix(107), (float)this.GetPix(575 + num6), (float)this.GetPix(35), (float)this.GetPix(20)), "追加", guistyle3))
				{
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
					GUI.FocusControl("");
					int num7 = 1;
					for (int k = 1; k < 1000; k++)
					{
						if (base.Preferences["face"]["f" + k].Value == null)
						{
							num7 = k;
							break;
						}
					}
					TMorph morph5 = this.maidArray[this.selectMaidIndex].body0.Face.morph;
					float[] fieldValue5 = ManyMaids.GetFieldValue<TMorph, float[]>(morph5, "BlendValues");
					float[] fieldValue6 = ManyMaids.GetFieldValue<TMorph, float[]>(morph5, "BlendValuesBackup");
					string text2 = this.inName4 + ":";
					text2 = text2 + fieldValue6[(int)morph5.hash["eyeclose"]] + ",";
					text2 = text2 + fieldValue6[(int)morph5.hash["eyeclose2"]] + ",";
					text2 = text2 + fieldValue6[(int)morph5.hash["eyeclose3"]] + ",";
					text2 = text2 + fieldValue6[(int)morph5.hash["eyeclose6"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["hitomih"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["hitomis"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mayuha"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mayuup"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mayuv"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mayuvhalf"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["moutha"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mouths"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mouthdw"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mouthup"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["tangout"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["tangup"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["eyebig"]] + ",";
					text2 = text2 + fieldValue6[(int)morph5.hash["eyeclose5"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mayuw"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mouthhe"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mouthc"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mouthi"]] + ",";
					text2 = text2 + fieldValue5[(int)morph5.hash["mouthuphalf"]] + ",";
					try
					{
						text2 = text2 + fieldValue5[(int)morph5.hash["tangopen"]] + ",";
					}
					catch
					{
						text2 += "0,";
					}
					text2 = ((fieldValue5[(int)morph5.hash["namida"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["tear1"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["tear2"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["tear3"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["shock"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["yodare"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["hoho"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["hoho2"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["hohos"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["hohol"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["toothoff"]] <= 0f) ? (text2 + 0 + ",") : (text2 + 1 + ","));
					text2 = ((fieldValue5[(int)morph5.hash["nosefook"]] <= 0f) ? (text2 + 0 + ":") : (text2 + 1 + ":"));
					base.Preferences["face"]["f" + num7].Value = text2;
					base.SaveConfig();
					List<string> list2 = new List<string>(300);
					list2.AddRange(Class1.faceArray);
					for (int l = 1; l < 300; l++)
					{
						IniKey iniKey2 = base.Preferences["face"]["f" + l];
						if (iniKey2.Value == null)
						{
							break;
						}
						string[] array4 = iniKey2.Value.Split(new char[]
						{
							':'
						});
						if (array4.Length > 1)
						{
							list2.Add(string.Concat(new object[]
							{
								array4[0],
								"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000:",
								l,
								":",
								array4[1]
							}));
						}
					}
					this.faceCombo.selectedItemIndex = 0;
					this.faceComboList = new GUIContent[list2.ToArray().Length];
					for (int m = 0; m < list2.ToArray().Length; m++)
					{
						this.faceComboList[m] = new GUIContent(list2.ToArray()[m]);
					}
					this.faceCombo.selectedItemIndex = list2.ToArray().Length - 1;
					this.inName4 = "";
				}
				if (this.faceIndex[this.selectMaidIndex] < Class1.faceArray.Length)
				{
					GUI.enabled = false;
				}
				if (GUI.Button(new Rect((float)this.GetPix(144), (float)this.GetPix(575 + num6), (float)this.GetPix(24), (float)this.GetPix(20)), "削", guistyle3))
				{
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
					string[] array5 = this.faceComboList[this.faceIndex[this.selectMaidIndex]].text.Split(new char[]
					{
						':'
					});
					base.Preferences["face"]["f" + array5[1]].Value = "del";
					base.SaveConfig();
					List<string> list3 = new List<string>(300);
					list3.AddRange(Class1.faceArray);
					for (int n = 1; n < 300; n++)
					{
						IniKey iniKey3 = base.Preferences["face"]["f" + n];
						if (iniKey3.Value == null)
						{
							break;
						}
						string[] array6 = iniKey3.Value.Split(new char[]
						{
							':'
						});
						if (array6.Length > 1)
						{
							list3.Add(string.Concat(new object[]
							{
								array6[0],
								"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000:",
								n,
								":",
								array6[1]
							}));
						}
					}
					this.faceCombo.selectedItemIndex = 0;
					this.faceComboList = new GUIContent[list3.ToArray().Length];
					for (int num8 = 0; num8 < list3.ToArray().Length; num8++)
					{
						this.faceComboList[num8] = new GUIContent(list3.ToArray()[num8]);
					}
					this.faceCombo.selectedItemIndex = 0;
					for (int num9 = 0; num9 < this.maidCnt; num9++)
					{
						if (this.maidArray[num9] && this.maidArray[num9].Visible && list3.ToArray().Length <= this.faceIndex[num9])
						{
							this.faceIndex[num9] = 0;
						}
					}
				}
				GUI.enabled = true;
			}
			if (this.faceCombo.isClickedComboButton)
			{
				GUI.enabled = true;
			}
			if (this.isFace[this.selectMaidIndex])
			{
				this.faceIndex[this.selectMaidIndex] = this.faceCombo.List(new Rect((float)this.GetPix(35), (float)this.GetPix(95), (float)this.GetPix(95), (float)this.GetPix(23)), this.faceComboList[this.faceIndex[this.selectMaidIndex]].text, this.faceComboList, guistyle4, "box", this.listStyle2);
			}
			else
			{
				this.faceCombo.List(new Rect((float)this.GetPix(35), (float)this.GetPix(95), (float)this.GetPix(95), (float)this.GetPix(23)), this.faceComboList[this.faceIndex[this.selectMaidIndex]].text, this.faceComboList, guistyle4, "box", this.listStyle2);
			}
			if (this.faceCombo.isClickedComboButton)
			{
				this.isCombo = true;
			}
			else if (this.isCombo)
			{
				this.isCombo = false;
				TMorph morph6 = this.maidArray[this.selectMaidIndex].body0.Face.morph;
				float[] fieldValue7 = ManyMaids.GetFieldValue<TMorph, float[]>(morph6, "BlendValues");
				morph6.EyeMabataki = 0f;
				if (this.faceIndex[this.selectMaidIndex] < Class1.faceArray.Length)
				{
					morph6.MulBlendValues(Class1.faceArray[this.faceIndex[this.selectMaidIndex]], 1f);
				}
				else
				{
					float[] fieldValue8 = ManyMaids.GetFieldValue<TMorph, float[]>(morph6, "BlendValuesBackup");
					if (!this.isVR)
					{
						this.maidArray[this.selectMaidIndex].boMabataki = false;
					}
					string[] array7 = this.faceComboList[this.faceIndex[this.selectMaidIndex]].text.Split(new char[]
					{
						':'
					})[2].Split(new char[]
					{
						','
					});
					fieldValue8[(int)morph6.hash["eyeclose"]] = float.Parse(array7[0]);
					fieldValue8[(int)morph6.hash["eyeclose2"]] = float.Parse(array7[1]);
					fieldValue8[(int)morph6.hash["eyeclose3"]] = float.Parse(array7[2]);
					fieldValue8[(int)morph6.hash["eyeclose6"]] = float.Parse(array7[3]);
					fieldValue7[(int)morph6.hash["hitomih"]] = float.Parse(array7[4]);
					fieldValue7[(int)morph6.hash["hitomis"]] = float.Parse(array7[5]);
					fieldValue7[(int)morph6.hash["mayuha"]] = float.Parse(array7[6]);
					fieldValue7[(int)morph6.hash["mayuup"]] = float.Parse(array7[7]);
					fieldValue7[(int)morph6.hash["mayuv"]] = float.Parse(array7[8]);
					fieldValue7[(int)morph6.hash["mayuvhalf"]] = float.Parse(array7[9]);
					fieldValue7[(int)morph6.hash["moutha"]] = float.Parse(array7[10]);
					fieldValue7[(int)morph6.hash["mouths"]] = float.Parse(array7[11]);
					fieldValue7[(int)morph6.hash["mouthdw"]] = float.Parse(array7[12]);
					fieldValue7[(int)morph6.hash["mouthup"]] = float.Parse(array7[13]);
					fieldValue7[(int)morph6.hash["tangout"]] = float.Parse(array7[14]);
					fieldValue7[(int)morph6.hash["tangup"]] = float.Parse(array7[15]);
					fieldValue7[(int)morph6.hash["eyebig"]] = float.Parse(array7[16]);
					fieldValue8[(int)morph6.hash["eyeclose5"]] = float.Parse(array7[17]);
					fieldValue7[(int)morph6.hash["mayuw"]] = float.Parse(array7[18]);
					fieldValue7[(int)morph6.hash["mouthhe"]] = float.Parse(array7[19]);
					fieldValue7[(int)morph6.hash["mouthc"]] = float.Parse(array7[20]);
					fieldValue7[(int)morph6.hash["mouthi"]] = float.Parse(array7[21]);
					fieldValue7[(int)morph6.hash["mouthuphalf"]] = float.Parse(array7[22]) + 0.01f;
					try
					{
						fieldValue7[(int)morph6.hash["tangopen"]] = float.Parse(array7[23]);
					}
					catch
					{
					}
					if (float.Parse(array7[24]) == 1f)
					{
						fieldValue7[(int)morph6.hash["namida"]] = 1f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["namida"]] = 0f;
					}
					if (float.Parse(array7[25]) == 1f)
					{
						fieldValue7[(int)morph6.hash["tear1"]] = 1f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["tear1"]] = 0f;
					}
					if (float.Parse(array7[26]) == 1f)
					{
						fieldValue7[(int)morph6.hash["tear2"]] = 1f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["tear2"]] = 0f;
					}
					if (float.Parse(array7[27]) == 1f)
					{
						fieldValue7[(int)morph6.hash["tear3"]] = 1f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["tear3"]] = 0f;
					}
					if (float.Parse(array7[28]) == 1f)
					{
						fieldValue7[(int)morph6.hash["shock"]] = 1f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["shock"]] = 0f;
					}
					if (float.Parse(array7[29]) == 1f)
					{
						fieldValue7[(int)morph6.hash["yodare"]] = 1f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["yodare"]] = 0f;
					}
					if (float.Parse(array7[30]) == 1f)
					{
						fieldValue7[(int)morph6.hash["hoho"]] = 0.5f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["hoho"]] = 0f;
					}
					if (float.Parse(array7[31]) == 1f)
					{
						fieldValue7[(int)morph6.hash["hoho2"]] = 0.5f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["hoho2"]] = 0f;
					}
					if (float.Parse(array7[32]) == 1f)
					{
						fieldValue7[(int)morph6.hash["hohos"]] = 1f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["hohos"]] = 0f;
					}
					if (float.Parse(array7[33]) == 1f)
					{
						fieldValue7[(int)morph6.hash["hohol"]] = 1f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["hohol"]] = 0f;
					}
					if (float.Parse(array7[34]) == 1f)
					{
						fieldValue7[(int)morph6.hash["toothoff"]] = 1f;
					}
					else
					{
						fieldValue7[(int)morph6.hash["toothoff"]] = 0f;
					}
					if (array7.Length > 35)
					{
						if (float.Parse(array7[35]) == 1f)
						{
							morph6.boNoseFook = true;
						}
						else
						{
							morph6.boNoseFook = false;
						}
					}
				}
				this.maidArray[this.selectMaidIndex].body0.Face.morph.FixBlendValues_Face();
				this.isFaceInit = true;
				this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
			}
			if (this.faceCombo.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			else
			{
				GUI.enabled = true;
			}
			this.yotogiFlg = false;
			if (this.sceneLevel == 14 && GameObject.Find("/UI Root/YotogiPlayPanel/CommandViewer/SkillViewer/MaskGroup/SkillGroup/CommandParent/CommandUnit"))
			{
				this.yotogiFlg = true;
			}
		}

		// Token: 0x0600003F RID: 63 RVA: 0x00041410 File Offset: 0x0003F610
		private void GuiFunc(int winID)
		{
			CharacterMgr characterMgr = GameMain.Instance.CharacterMgr;
			GUIStyle guistyle = "label";
			guistyle.fontSize = this.GetPix(14);
			guistyle.alignment = TextAnchor.UpperLeft;
			GUIStyle guistyle2 = "button";
			guistyle2.fontSize = this.GetPix(16);
			guistyle2.alignment = TextAnchor.MiddleCenter;
			GUIStyle guistyle3 = new GUIStyle("toggle");
			guistyle3.fontSize = this.GetPix(13);
			float num = (float)this.GetPix(70);
			if (this.comboBoxList == null)
			{
				this.comboBoxControl.selectedItemIndex = 0;
				this.comboBoxList = new GUIContent[11];
				this.comboBoxList[0] = new GUIContent("通常");
				this.comboBoxList[1] = new GUIContent("横一列");
				this.comboBoxList[2] = new GUIContent("縦一列");
				this.comboBoxList[3] = new GUIContent("斜め");
				this.comboBoxList[4] = new GUIContent("円（外向き）");
				this.comboBoxList[5] = new GUIContent("円（内向き）");
				this.comboBoxList[6] = new GUIContent("扇");
				this.comboBoxList[7] = new GUIContent("Ｖ");
				this.comboBoxList[8] = new GUIContent("^");
				this.comboBoxList[9] = new GUIContent("Ｍ");
				this.comboBoxList[10] = new GUIContent("Ｗ");
			}
			bool value = true;
			if (this.faceFlg || this.poseFlg || this.sceneFlg || this.kankyoFlg || this.kankyo2Flg)
			{
				value = false;
			}
			if (!this.isF6 && GUI.Toggle(new Rect((float)this.GetPix(2), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), value, "配置", guistyle3))
			{
				this.faceFlg = false;
				this.poseFlg = false;
				this.sceneFlg = false;
				this.kankyoFlg = false;
				this.kankyo2Flg = false;
				this.bGui = true;
				this.isGuiInit = true;
			}
			if (!this.yotogiFlg && GUI.Toggle(new Rect((float)this.GetPix(41), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.poseFlg, "操作", guistyle3))
			{
				this.poseFlg = true;
				this.faceFlg = false;
				this.sceneFlg = false;
				this.kankyoFlg = false;
				this.kankyo2Flg = false;
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(80), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.faceFlg, "表情", guistyle3))
			{
				this.faceFlg = true;
				this.poseFlg = false;
				this.sceneFlg = false;
				this.kankyoFlg = false;
				this.kankyo2Flg = false;
				if (!this.faceFlg2)
				{
					this.isFaceInit = true;
					this.faceFlg2 = true;
					this.maidArray[this.selectMaidIndex].boMabataki = false;
					this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
				}
			}
			if (GUI.Toggle(new Rect((float)this.GetPix(119), (float)this.GetPix(2), (float)this.GetPix(39), (float)this.GetPix(20)), this.kankyoFlg, "環境", guistyle3))
			{
				this.poseFlg = false;
				this.faceFlg = false;
				this.sceneFlg = false;
				this.kankyoFlg = true;
				this.kankyo2Flg = false;
			}
			if (!this.line1)
			{
				this.line1 = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.3f));
				this.line2 = this.MakeTex(2, 2, new Color(0.7f, 0.7f, 0.7f, 0.6f));
			}
			GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(160), 2f), this.line1);
			GUI.DrawTexture(new Rect((float)this.GetPix(5), (float)this.GetPix(20), (float)this.GetPix(160), 1f), this.line2);
			int stockMaidCount = characterMgr.GetStockMaidCount();
			Rect position = default(Rect);
			Rect viewRect = default(Rect);
			if (this.sceneLevel != 5)
			{
				position = new Rect((float)this.GetPix(7), (float)this.GetPix(140), this.rectWin.width - (float)this.GetPix(14), this.rectWin.height * 0.8f);
				viewRect = new Rect(0f, 0f, position.width * 0.85f, (num + (float)this.GetPix(5)) * (float)stockMaidCount + (float)this.GetPix(15));
			}
			else
			{
				position = new Rect((float)this.GetPix(7), (float)this.GetPix(140), this.rectWin.width - (float)this.GetPix(14), this.rectWin.height * 0.8f * 0.98f);
				viewRect = new Rect(0f, 0f, position.width * 0.85f, (num + (float)this.GetPix(5)) * (float)stockMaidCount + (float)this.GetPix(15) * 0.92f);
			}
			float num2 = 0f;
			if (this.comboBoxControl.isClickedComboButton)
			{
				GUI.enabled = false;
			}
			if (GUI.Button(new Rect((float)this.GetPix(10), (float)this.GetPix(78), this.rectWin.width * 0.85f, (float)this.GetPix(28)), "呼び出す", guistyle2))
			{
				this.isYobidashi = true;
				this.selectMaidIndex = 0;
				this.copyIndex = 0;
				for (int i = 0; i < this.maxMaidCnt; i++)
				{
					if (!this.isLock[i] && this.maidArray[i] && this.maidArray[i].Visible)
					{
						this.maidArray[i].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						this.maidArray[i].SetAutoTwistAll(true);
					}
					this.maidArray[i] = null;
				}
				for (int j = 0; j < this.maxMaidCnt; j++)
				{
					this.isStop[j] = false;
				}
				this.bGui = false;
				this.isFadeOut = true;
				GameMain.Instance.MainCamera.FadeOut(0f, false, null, true, default(Color));
				for (int k = 0; k < characterMgr.GetStockMaidCount(); k++)
				{
					characterMgr.GetStockMaidList()[k].Visible = false;
				}
			}
			GUIStyle guistyle4 = "button";
			guistyle4.fontSize = this.GetPix(13);
			GUIStyleState guistyleState = new GUIStyleState();
			if (GUI.Button(new Rect((float)this.GetPix(10), (float)this.GetPix(52), this.rectWin.width * 0.4f, (float)this.GetPix(23)), "7人選択", guistyle4))
			{
				if (this.sceneLevel != 5)
				{
					this.selectList = new ArrayList();
					this.selectList.Add(0);
					this.selectList.Add(1);
					this.selectList.Add(2);
					this.selectList.Add(3);
					this.selectList.Add(4);
					this.selectList.Add(5);
					this.selectList.Add(6);
				}
				else
				{
					int stockMaidCount2 = characterMgr.GetStockMaidCount();
					this.selectList = new ArrayList();
					this.selectList.Add(this.editMaid);
					if (stockMaidCount2 > 1)
					{
						if (this.editMaid >= 1)
						{
							this.selectList.Add(0);
						}
						else if (stockMaidCount2 > 2)
						{
							this.selectList.Add(1);
						}
					}
					if (stockMaidCount2 > 2)
					{
						if (this.editMaid >= 2)
						{
							this.selectList.Add(1);
						}
						else if (stockMaidCount2 > 3)
						{
							this.selectList.Add(2);
						}
					}
					if (stockMaidCount2 > 3)
					{
						if (this.editMaid >= 3)
						{
							this.selectList.Add(2);
						}
						else if (stockMaidCount2 > 4)
						{
							this.selectList.Add(3);
						}
					}
					if (stockMaidCount2 > 4)
					{
						if (this.editMaid >= 4)
						{
							this.selectList.Add(3);
						}
						else if (stockMaidCount2 > 5)
						{
							this.selectList.Add(4);
						}
					}
					if (stockMaidCount2 > 5)
					{
						if (this.editMaid >= 5)
						{
							this.selectList.Add(4);
						}
						else if (stockMaidCount2 > 6)
						{
							this.selectList.Add(5);
						}
					}
					if (stockMaidCount2 > 6)
					{
						if (this.editMaid >= 6)
						{
							this.selectList.Add(5);
						}
						else if (stockMaidCount2 > 7)
						{
							this.selectList.Add(6);
						}
					}
				}
			}
			if (GUI.Button(new Rect(this.rectWin.width * 0.5f, (float)this.GetPix(52), this.rectWin.width * 0.4f, (float)this.GetPix(23)), "選択解除", guistyle4))
			{
				this.selectList = new ArrayList();
				if (this.sceneLevel == 5)
				{
					this.selectList.Add(this.editMaid);
				}
			}
			bool flag = this.maidListOrig;
			bool flag2 = this.maidListUniEx;
			this.maidListOrig = GUI.Toggle(new Rect((float)this.GetPix(2), (float)this.GetPix(112), (float)this.GetPix(60), (float)this.GetPix(20)), this.maidListOrig, "メイン", guistyle3);
			if (!this.maidListOrig)
			{
				this.maidListUniEx = true;
			}
			this.maidListUniEx = GUI.Toggle(new Rect((float)this.GetPix(62), (float)this.GetPix(112), (float)this.GetPix(60), (float)this.GetPix(20)), this.maidListUniEx, "NPC", guistyle3);
			if (!this.maidListUniEx)
			{
				this.maidListOrig = true;
			}
			if (flag != this.maidListOrig || flag2 != this.maidListUniEx)
			{
				this.scrollPos = Vector2.zero;
			}
			GUI.enabled = true;
			this.scrollPos = GUI.BeginScrollView(position, this.scrollPos, viewRect);
			for (int l = 0; l < characterMgr.GetStockMaidCount(); l++)
			{
				if ((this.maidListOrig || characterMgr.GetStockMaid(l).status.heroineType == HeroineType.Sub) && (this.maidListUniEx || characterMgr.GetStockMaid(l).status.heroineType != HeroineType.Sub))
				{
					GUI.enabled = true;
					GUI.DrawTexture(new Rect(2f, num2 + 2f, this.rectWin.width * 0.83f - 4f, num - 4f), Texture2D.whiteTexture);
					bool flag3 = false;
					for (int m = 0; m < this.selectList.Count; m++)
					{
						if ((int)this.selectList[m] == l)
						{
							flag3 = true;
							break;
						}
					}
					if (this.comboBoxControl.isClickedComboButton)
					{
						GUI.enabled = false;
						GUI.Button(new Rect(0f, num2, this.rectWin.width * 0.83f, num), "", guistyle2);
						GUI.Button(new Rect(0f, num2, this.rectWin.width * 0.83f, num), "", guistyle2);
					}
					if (GUI.Button(new Rect(0f, num2, this.rectWin.width * 0.83f, num), "", guistyle2))
					{
						if (flag3)
						{
							for (int n = 0; n < this.selectList.Count; n++)
							{
								if ((int)this.selectList[n] == l && (this.sceneLevel != 5 || (int)this.selectList[n] != this.editMaid))
								{
									this.selectList.Remove(l);
									break;
								}
							}
						}
						else
						{
							if (this.selectList.Count > this.maxMaidCnt - 1)
							{
								this.selectList.Remove(this.selectList[this.maxMaidCnt - 1]);
							}
							this.selectList.Add(l);
						}
					}
					GUI.enabled = true;
					if (flag3)
					{
						GUI.DrawTexture(new Rect(5f, num2 + 5f, this.rectWin.width * 0.83f - 10f, num - 10f), Texture2D.whiteTexture);
					}
					if (characterMgr.GetStockMaid(l).GetThumIcon())
					{
						GUI.DrawTexture(new Rect(0f, num2 - 5f, num, num), characterMgr.GetStockMaid(l).GetThumIcon());
					}
					string text = characterMgr.GetStockMaid(l).status.lastName + "\n" + characterMgr.GetStockMaid(l).status.firstName;
					guistyleState.textColor = Color.black;
					guistyle.normal = guistyleState;
					GUI.Label(new Rect((float)this.GetPix(65), num2 + num / 4f, num * 2f, num * 3f), text, guistyle);
					if (flag3)
					{
						for (int num3 = 0; num3 < this.selectList.Count; num3++)
						{
							if ((int)this.selectList[num3] == l)
							{
								GUI.Label(new Rect(this.rectWin.width * 0.7f, num2 + 6f, num, num), (num3 + 1).ToString(), guistyle);
								break;
							}
						}
					}
					num2 += num + (float)this.GetPix(5);
				}
			}
			GUI.EndScrollView();
			guistyleState.textColor = Color.white;
			guistyle.normal = guistyleState;
			int num4 = this.comboBoxControl.GetSelectedItemIndex();
			num4 = this.comboBoxControl.List(new Rect((float)this.GetPix(10), (float)this.GetPix(25), this.rectWin.width * 0.56f, (float)this.GetPix(24)), this.comboBoxList[num4].text, this.comboBoxList, this.listStyle);
			if (!GUI.Button(new Rect(this.rectWin.width * 0.66f, (float)this.GetPix(25), this.rectWin.width * 0.24f, (float)this.GetPix(24)), "決定", guistyle4))
			{
				return;
			}
			for (int num5 = 0; num5 < this.maxMaidCnt; num5++)
			{
				this.isStop[num5] = false;
			}
			switch (this.comboBoxControl.GetSelectedItemIndex())
			{
			case 0:
				for (int num6 = 0; num6 < this.maidCnt; num6++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					if (this.selectList.Count <= 7)
					{
						if (this.selectList.Count % 2 == 1)
						{
							switch (num6)
							{
							case 0:
								this.maidArray[num6].SetPos(new Vector3(0f, 0f, 0f));
								break;
							case 1:
								this.maidArray[num6].SetPos(new Vector3(-0.6f, 0f, 0.26f));
								break;
							case 2:
								this.maidArray[num6].SetPos(new Vector3(0.6f, 0f, 0.26f));
								break;
							case 3:
								this.maidArray[num6].SetPos(new Vector3(-1.1f, 0f, 0.69f));
								break;
							case 4:
								this.maidArray[num6].SetPos(new Vector3(1.1f, 0f, 0.69f));
								break;
							case 5:
								this.maidArray[num6].SetPos(new Vector3(-1.47f, 0f, 1.1f));
								break;
							case 6:
								this.maidArray[num6].SetPos(new Vector3(1.47f, 0f, 1.1f));
								break;
							}
						}
						else
						{
							switch (num6)
							{
							case 0:
								this.maidArray[num6].SetPos(new Vector3(0.3f, 0f, 0f));
								break;
							case 1:
								this.maidArray[num6].SetPos(new Vector3(-0.3f, 0f, 0f));
								break;
							case 2:
								this.maidArray[num6].SetPos(new Vector3(0.7f, 0f, 0.4f));
								break;
							case 3:
								this.maidArray[num6].SetPos(new Vector3(-0.7f, 0f, 0.4f));
								break;
							case 4:
								this.maidArray[num6].SetPos(new Vector3(1f, 0f, 0.9f));
								break;
							case 5:
								this.maidArray[num6].SetPos(new Vector3(-1f, 0f, 0.9f));
								break;
							}
						}
					}
					else
					{
						float num7 = 0f;
						if (this.selectList.Count >= 11)
						{
							num7 = -0.4f;
							if (this.selectList.Count % 2 == 1)
							{
								switch (num6)
								{
								case 0:
									this.maidArray[num6].SetPos(new Vector3(0f, 0f, 0f + num7));
									break;
								case 1:
									this.maidArray[num6].SetPos(new Vector3(-0.5f, 0f, 0.2f + num7));
									break;
								case 2:
									this.maidArray[num6].SetPos(new Vector3(0.5f, 0f, 0.2f + num7));
									break;
								case 3:
									this.maidArray[num6].SetPos(new Vector3(-0.9f, 0f, 0.55f + num7));
									break;
								case 4:
									this.maidArray[num6].SetPos(new Vector3(0.9f, 0f, 0.55f + num7));
									break;
								case 5:
									this.maidArray[num6].SetPos(new Vector3(-1.25f, 0f, 0.9f + num7));
									break;
								case 6:
									this.maidArray[num6].SetPos(new Vector3(1.25f, 0f, 0.9f + num7));
									break;
								case 7:
									this.maidArray[num6].SetPos(new Vector3(-1.57f, 0f, 1.3f + num7));
									break;
								case 8:
									this.maidArray[num6].SetPos(new Vector3(1.57f, 0f, 1.3f + num7));
									break;
								case 9:
									this.maidArray[num6].SetPos(new Vector3(-1.77f, 0f, 1.72f + num7));
									break;
								case 10:
									this.maidArray[num6].SetPos(new Vector3(1.77f, 0f, 1.72f + num7));
									break;
								case 11:
									this.maidArray[num6].SetPos(new Vector3(-1.85f, 0f, 2.17f + num7));
									break;
								case 12:
									this.maidArray[num6].SetPos(new Vector3(1.85f, 0f, 2.17f + num7));
									break;
								default:
									this.maidArray[num6].SetPos(new Vector3(0f, 0f, 0.7f + num7));
									break;
								}
							}
							else
							{
								switch (num6)
								{
								case 0:
									this.maidArray[num6].SetPos(new Vector3(0.25f, 0f, 0f + num7));
									break;
								case 1:
									this.maidArray[num6].SetPos(new Vector3(-0.25f, 0f, 0f + num7));
									break;
								case 2:
									this.maidArray[num6].SetPos(new Vector3(0.7f, 0f, 0.25f + num7));
									break;
								case 3:
									this.maidArray[num6].SetPos(new Vector3(-0.7f, 0f, 0.25f + num7));
									break;
								case 4:
									this.maidArray[num6].SetPos(new Vector3(1.05f, 0f, 0.6f + num7));
									break;
								case 5:
									this.maidArray[num6].SetPos(new Vector3(-1.05f, 0f, 0.6f + num7));
									break;
								case 6:
									this.maidArray[num6].SetPos(new Vector3(1.35f, 0f, 0.9f + num7));
									break;
								case 7:
									this.maidArray[num6].SetPos(new Vector3(-1.35f, 0f, 0.9f + num7));
									break;
								case 8:
									this.maidArray[num6].SetPos(new Vector3(1.6f, 0f, 1.3f + num7));
									break;
								case 9:
									this.maidArray[num6].SetPos(new Vector3(-1.6f, 0f, 1.3f + num7));
									break;
								case 10:
									this.maidArray[num6].SetPos(new Vector3(1.8f, 0f, 1.72f + num7));
									break;
								case 11:
									this.maidArray[num6].SetPos(new Vector3(-1.8f, 0f, 1.72f + num7));
									break;
								case 12:
									this.maidArray[num6].SetPos(new Vector3(1.9f, 0f, 2.17f + num7));
									break;
								case 13:
									this.maidArray[num6].SetPos(new Vector3(-1.9f, 0f, 2.17f + num7));
									break;
								default:
									this.maidArray[num6].SetPos(new Vector3(0f, 0f, 0.7f + num7));
									break;
								}
							}
						}
						else if (this.selectList.Count >= 8)
						{
							if (this.selectList.Count >= 9)
							{
								num7 = -0.2f;
							}
							if (this.selectList.Count % 2 == 1)
							{
								switch (num6)
								{
								case 0:
									this.maidArray[num6].SetPos(new Vector3(0f, 0f, 0f + num7));
									break;
								case 1:
									this.maidArray[num6].SetPos(new Vector3(-0.55f, 0f, 0.2f + num7));
									break;
								case 2:
									this.maidArray[num6].SetPos(new Vector3(0.55f, 0f, 0.2f + num7));
									break;
								case 3:
									this.maidArray[num6].SetPos(new Vector3(-1f, 0f, 0.6f + num7));
									break;
								case 4:
									this.maidArray[num6].SetPos(new Vector3(1f, 0f, 0.6f + num7));
									break;
								case 5:
									this.maidArray[num6].SetPos(new Vector3(-1.35f, 0f, 1f + num7));
									break;
								case 6:
									this.maidArray[num6].SetPos(new Vector3(1.35f, 0f, 1f + num7));
									break;
								case 7:
									this.maidArray[num6].SetPos(new Vector3(-1.6f, 0f, 1.4f + num7));
									break;
								case 8:
									this.maidArray[num6].SetPos(new Vector3(1.6f, 0f, 1.4f + num7));
									break;
								}
							}
							else
							{
								switch (num6)
								{
								case 0:
									this.maidArray[num6].SetPos(new Vector3(0.28f, 0f, 0f + num7));
									break;
								case 1:
									this.maidArray[num6].SetPos(new Vector3(-0.28f, 0f, 0f + num7));
									break;
								case 2:
									this.maidArray[num6].SetPos(new Vector3(0.78f, 0f, 0.3f + num7));
									break;
								case 3:
									this.maidArray[num6].SetPos(new Vector3(-0.78f, 0f, 0.3f + num7));
									break;
								case 4:
									this.maidArray[num6].SetPos(new Vector3(1.22f, 0f, 0.7f + num7));
									break;
								case 5:
									this.maidArray[num6].SetPos(new Vector3(-1.22f, 0f, 0.7f + num7));
									break;
								case 6:
									this.maidArray[num6].SetPos(new Vector3(1.55f, 0f, 1.1f + num7));
									break;
								case 7:
									this.maidArray[num6].SetPos(new Vector3(-1.55f, 0f, 1.1f + num7));
									break;
								case 8:
									this.maidArray[num6].SetPos(new Vector3(1.77f, 0f, 1.58f + num7));
									break;
								case 9:
									this.maidArray[num6].SetPos(new Vector3(-1.77f, 0f, 1.58f + num7));
									break;
								}
							}
						}
					}
					zero2.y = (float)(Math.Atan2((double)this.maidArray[num6].transform.position.x, (double)(this.maidArray[num6].transform.position.z - 1.5f)) * 180.0 / 3.1415926535897931) + 180f;
					this.maidArray[num6].SetRot(zero2);
				}
				break;
			case 1:
				for (int num8 = 0; num8 < this.maidCnt; num8++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					if (this.maidCnt < 9)
					{
						switch (num8)
						{
						case 1:
							zero.x = -0.6f;
							break;
						case 2:
							zero.x = 0.6f;
							break;
						case 3:
							zero.x = -1.2f;
							break;
						case 4:
							zero.x = 1.2f;
							break;
						case 5:
							zero.x = -1.8f;
							break;
						case 6:
							zero.x = 1.8f;
							break;
						case 7:
							zero.x = -2.4f;
							break;
						case 8:
							zero.x = 2.4f;
							break;
						case 9:
							zero.x = -3f;
							break;
						case 10:
							zero.x = 3f;
							break;
						}
					}
					else
					{
						switch (num8)
						{
						case 1:
							zero.x = -0.5f;
							break;
						case 2:
							zero.x = 0.5f;
							break;
						case 3:
							zero.x = -1f;
							break;
						case 4:
							zero.x = 1f;
							break;
						case 5:
							zero.x = -1.5f;
							break;
						case 6:
							zero.x = 1.5f;
							break;
						case 7:
							zero.x = -2f;
							break;
						case 8:
							zero.x = 2f;
							break;
						case 9:
							zero.x = -2.5f;
							break;
						case 10:
							zero.x = 2.5f;
							break;
						case 11:
							zero.x = -3f;
							break;
						case 12:
							zero.x = 3f;
							break;
						case 13:
							zero.x = -3.5f;
							break;
						}
					}
					this.maidArray[num8].SetPos(zero);
					this.maidArray[num8].SetRot(zero2);
					if (num8 >= 14)
					{
						this.maidArray[num8].SetPos(new Vector3(0f, 0f, 0.7f));
					}
				}
				break;
			case 2:
				for (int num9 = 0; num9 < this.maidCnt; num9++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					if (this.maidCnt < 9)
					{
						switch (num9)
						{
						case 1:
							zero.z = 0.6f;
							break;
						case 2:
							zero.z = -0.6f;
							break;
						case 3:
							zero.z = 1.2f;
							break;
						case 4:
							zero.z = -1.2f;
							break;
						case 5:
							zero.z = 1.8f;
							break;
						case 6:
							zero.z = -1.8f;
							break;
						case 7:
							zero.z = 2.4f;
							break;
						case 8:
							zero.z = -2.4f;
							break;
						case 9:
							zero.z = 3f;
							break;
						case 10:
							zero.z = -3f;
							break;
						}
					}
					else
					{
						switch (num9)
						{
						case 1:
							zero.z = 0.5f;
							break;
						case 2:
							zero.z = -0.5f;
							break;
						case 3:
							zero.z = 1f;
							break;
						case 4:
							zero.z = -1f;
							break;
						case 5:
							zero.z = 1.5f;
							break;
						case 6:
							zero.z = -1.5f;
							break;
						case 7:
							zero.z = 2f;
							break;
						case 8:
							zero.z = -2f;
							break;
						case 9:
							zero.z = 2.5f;
							break;
						case 10:
							zero.z = -2.5f;
							break;
						case 11:
							zero.z = 3f;
							break;
						case 12:
							zero.z = -3f;
							break;
						case 13:
							zero.z = 3.5f;
							break;
						}
					}
					this.maidArray[num9].SetPos(zero);
					this.maidArray[num9].SetRot(zero2);
					if (num9 >= 14)
					{
						this.maidArray[num9].SetPos(new Vector3(0f, 0f, 0.7f));
					}
				}
				break;
			case 3:
				for (int num10 = 0; num10 < this.maidCnt; num10++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					float num11 = 0.5f;
					if (this.maidCnt > 11)
					{
						num11 = 0.25f;
					}
					else if (this.maidCnt > 9)
					{
						num11 = 0.32f;
					}
					else if (this.maidCnt > 7)
					{
						num11 = 0.4f;
					}
					switch (num10)
					{
					case 1:
						zero.x = 0f - num11;
						zero.z = num11;
						break;
					case 2:
						zero.x = num11;
						zero.z = 0f - num11;
						break;
					case 3:
						zero.x = (0f - num11) * 2f;
						zero.z = num11 * 2f;
						break;
					case 4:
						zero.x = num11 * 2f;
						zero.z = (0f - num11) * 2f;
						break;
					case 5:
						zero.x = (0f - num11) * 3f;
						zero.z = num11 * 3f;
						break;
					case 6:
						zero.x = num11 * 3f;
						zero.z = (0f - num11) * 3f;
						break;
					case 7:
						zero.x = (0f - num11) * 4f;
						zero.z = num11 * 4f;
						break;
					case 8:
						zero.x = num11 * 4f;
						zero.z = (0f - num11) * 4f;
						break;
					case 9:
						zero.x = (0f - num11) * 5f;
						zero.z = num11 * 5f;
						break;
					case 10:
						zero.x = num11 * 5f;
						zero.z = (0f - num11) * 5f;
						break;
					case 11:
						zero.x = (0f - num11) * 6f;
						zero.z = num11 * 6f;
						break;
					case 12:
						zero.x = num11 * 6f;
						zero.z = (0f - num11) * 6f;
						break;
					case 13:
						zero.x = (0f - num11) * 7f;
						zero.z = num11 * 7f;
						break;
					}
					this.maidArray[num10].SetPos(zero);
					this.maidArray[num10].SetRot(zero2);
					if (num10 >= 14)
					{
						this.maidArray[num10].SetPos(new Vector3(0f, 0f, 0.7f));
					}
				}
				break;
			case 4:
				for (int num12 = 0; num12 < this.maidCnt; num12++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					float num13 = 0.4f + 0.08f * (float)this.maidCnt;
					zero.x = (float)((double)num13 * Math.Cos(0.017453292519943295 * (double)(90 + 360 * num12 / this.maidCnt)));
					zero.z = (float)((double)num13 * Math.Sin(0.017453292519943295 * (double)(90 + 360 * num12 / this.maidCnt)));
					this.maidArray[num12].SetPos(zero);
					zero2.y = (float)(Math.Atan2((double)zero.x, (double)zero.z) * 180.0 / 3.1415926535897931);
					this.maidArray[num12].SetRot(zero2);
				}
				break;
			case 5:
				for (int num14 = 0; num14 < this.maidCnt; num14++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					float num15 = 0.4f + 0.08f * (float)this.maidCnt;
					zero.x = (float)((double)num15 * Math.Cos(0.017453292519943295 * (double)(90 + 360 * num14 / this.maidCnt)));
					zero.z = (float)((double)num15 * Math.Sin(0.017453292519943295 * (double)(90 + 360 * num14 / this.maidCnt)));
					this.maidArray[num14].SetPos(zero);
					zero2.y = (float)(Math.Atan2((double)zero.x, (double)zero.z) * 180.0 / 3.1415926535897931) + 180f;
					this.maidArray[num14].SetRot(zero2);
				}
				break;
			case 6:
				for (int num16 = 0; num16 < this.maidCnt; num16++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					float num17 = 0f;
					if (this.maidCnt > 9)
					{
						num17 = -0.4f;
					}
					else if (this.maidCnt > 7)
					{
						num17 = -0.2f;
					}
					switch (num16)
					{
					case 0:
						zero.z = 0.3f;
						break;
					case 1:
						zero.x = -0.9f;
						zero.z = -0.4f;
						zero2.y = 40f;
						break;
					case 2:
						zero.x = 0.9f;
						zero.z = -0.4f;
						zero2.y = -40f;
						break;
					case 3:
						zero.x = -0.4f;
						zero.z = -0.8f;
						zero2.y = 20f;
						break;
					case 4:
						zero.x = 0.4f;
						zero.z = -0.8f;
						zero2.y = -20f;
						break;
					case 5:
						zero.x = -1.2f;
						zero.z = 0.1f;
						zero2.y = 60f;
						break;
					case 6:
						zero.x = 1.2f;
						zero.z = 0.1f;
						zero2.y = -60f;
						break;
					case 7:
						zero.x = -1.5f;
						zero.z = 0.6f;
						zero2.y = 80f;
						break;
					case 8:
						zero.x = 1.5f;
						zero.z = 0.6f;
						zero2.y = -80f;
						break;
					case 9:
						zero.x = -1.6f;
						zero.z = 1.15f;
						zero2.y = 100f;
						break;
					case 10:
						zero.x = 1.6f;
						zero.z = 1.15f;
						zero2.y = -100f;
						break;
					case 11:
						zero.x = -1.6f;
						zero.z = 1.65f;
						zero2.y = 110f;
						break;
					case 12:
						zero.x = 1.65f;
						zero.z = 1.65f;
						zero2.y = -110f;
						break;
					case 13:
						zero.x = -1.65f;
						zero.z = 2.15f;
						zero2.y = 120f;
						break;
					}
					if (num16 > 0)
					{
						zero.z += num17;
					}
					else
					{
						zero.z -= num17;
					}
					this.maidArray[num16].SetPos(zero);
					this.maidArray[num16].SetRot(zero2);
					if (num16 >= 14)
					{
						this.maidArray[num16].SetPos(new Vector3(0f, 0f, 0.7f));
					}
				}
				break;
			case 7:
				for (int num18 = 0; num18 < this.maidCnt; num18++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					float num19 = 0f;
					if (this.maidCnt > 11)
					{
						num19 = 0.6f;
					}
					else if (this.maidCnt > 9)
					{
						num19 = 0.4f;
					}
					else if (this.maidCnt > 7)
					{
						num19 = 0.2f;
					}
					switch (num18)
					{
					case 0:
						zero.z = 0.8f;
						break;
					case 1:
						zero.x = -0.45f;
						zero.z = 0.3f;
						zero2.y = -10f;
						break;
					case 2:
						zero.x = 0.45f;
						zero.z = 0.3f;
						zero2.y = 10f;
						break;
					case 3:
						zero.x = -0.8f;
						zero.z = -0.2f;
						zero2.y = -20f;
						break;
					case 4:
						zero.x = 0.8f;
						zero.z = -0.2f;
						zero2.y = 20f;
						break;
					case 5:
						zero.x = -1.2f;
						zero.z = -0.75f;
						zero2.y = -30f;
						break;
					case 6:
						zero.x = 1.2f;
						zero.z = -0.75f;
						zero2.y = 30f;
						break;
					case 7:
						zero.x = -1.6f;
						zero.z = -1.25f;
						zero2.y = -40f;
						break;
					case 8:
						zero.x = 1.6f;
						zero.z = -1.25f;
						zero2.y = 40f;
						break;
					case 9:
						zero.x = -2f;
						zero.z = -1.75f;
						zero2.y = -50f;
						break;
					case 10:
						zero.x = 2f;
						zero.z = -1.75f;
						zero2.y = 50f;
						break;
					case 11:
						zero.x = -2.4f;
						zero.z = -2.25f;
						zero2.y = -60f;
						break;
					case 12:
						zero.x = 2.4f;
						zero.z = -2.25f;
						zero2.y = 60f;
						break;
					case 13:
						zero.x = -2.8f;
						zero.z = -2.75f;
						zero2.y = -70f;
						break;
					}
					zero.z += num19;
					this.maidArray[num18].SetPos(zero);
					this.maidArray[num18].SetRot(zero2);
					if (num18 >= 14)
					{
						this.maidArray[num18].SetPos(new Vector3(0f, 0f, 0.7f));
					}
				}
				break;
			case 8:
				for (int num20 = 0; num20 < this.maidCnt; num20++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					float num21 = 0f;
					if (this.maidCnt > 11)
					{
						num21 = -0.6f;
					}
					else if (this.maidCnt > 9)
					{
						num21 = -0.4f;
					}
					else if (this.maidCnt > 7)
					{
						num21 = -0.2f;
					}
					switch (num20)
					{
					case 0:
						zero.z = -0.75f;
						break;
					case 1:
						zero.x = -0.45f;
						zero.z = -0.2f;
						zero2.y = 20f;
						break;
					case 2:
						zero.x = 0.45f;
						zero.z = -0.2f;
						zero2.y = -20f;
						break;
					case 3:
						zero.x = -0.8f;
						zero.z = 0.3f;
						zero2.y = 35f;
						break;
					case 4:
						zero.x = 0.8f;
						zero.z = 0.3f;
						zero2.y = -35f;
						break;
					case 5:
						zero.x = -1.2f;
						zero.z = 0.8f;
						zero2.y = 50f;
						break;
					case 6:
						zero.x = 1.2f;
						zero.z = 0.8f;
						zero2.y = -50f;
						break;
					case 7:
						zero.x = -1.6f;
						zero.z = 1.3f;
						zero2.y = 65f;
						break;
					case 8:
						zero.x = 1.6f;
						zero.z = 1.3f;
						zero2.y = -65f;
						break;
					case 9:
						zero.x = -2f;
						zero.z = 1.8f;
						zero2.y = 80f;
						break;
					case 10:
						zero.x = 2f;
						zero.z = 1.8f;
						zero2.y = -80f;
						break;
					case 11:
						zero.x = -2.4f;
						zero.z = 2.3f;
						zero2.y = 90f;
						break;
					case 12:
						zero.x = 2.4f;
						zero.z = 2.3f;
						zero2.y = -90f;
						break;
					case 13:
						zero.x = -2.8f;
						zero.z = 2.8f;
						zero2.y = 100f;
						break;
					}
					zero.z += num21;
					this.maidArray[num20].SetPos(zero);
					this.maidArray[num20].SetRot(zero2);
					if (num20 >= 14)
					{
						this.maidArray[num20].SetPos(new Vector3(0f, 0f, 0.7f));
					}
				}
				break;
			case 9:
				for (int num22 = 0; num22 < this.maidCnt; num22++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					float num23 = 1f;
					if (this.maidCnt > 9)
					{
						num23 = 0.84f;
					}
					else if (this.maidCnt > 7)
					{
						num23 = 0.92f;
					}
					switch (num22)
					{
					case 0:
						zero.z = 0f;
						break;
					case 1:
						zero.x = -0.5f;
						zero.z = -0.5f;
						break;
					case 2:
						zero.x = 0.5f;
						zero.z = -0.5f;
						break;
					case 3:
						zero.x = -1f;
						zero.z = 0.2f;
						break;
					case 4:
						zero.x = 1f;
						zero.z = 0.2f;
						break;
					case 5:
						zero.x = -1.5f;
						zero.z = -0.5f;
						break;
					case 6:
						zero.x = 1.5f;
						zero.z = -0.5f;
						break;
					case 7:
						zero.x = -2f;
						zero.z = 0.2f;
						break;
					case 8:
						zero.x = 2f;
						zero.z = 0.2f;
						break;
					case 9:
						zero.x = -2.5f;
						zero.z = -0.5f;
						break;
					case 10:
						zero.x = 2.5f;
						zero.z = -0.5f;
						break;
					case 11:
						zero.x = -3f;
						zero.z = 0.2f;
						break;
					case 12:
						zero.x = 3f;
						zero.z = 0.2f;
						break;
					case 13:
						zero.x = -3.5f;
						zero.z = -0.5f;
						break;
					}
					zero.x *= num23;
					this.maidArray[num22].SetPos(zero);
					this.maidArray[num22].SetRot(zero2);
					if (num22 >= 14)
					{
						this.maidArray[num22].SetPos(new Vector3(0f, 0f, 0.7f));
					}
				}
				break;
			case 10:
				for (int num24 = 0; num24 < this.maidCnt; num24++)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					float num25 = 1f;
					if (this.maidCnt > 9)
					{
						num25 = 0.84f;
					}
					else if (this.maidCnt > 7)
					{
						num25 = 0.92f;
					}
					switch (num24)
					{
					case 0:
						zero.z = -0.4f;
						break;
					case 1:
						zero.x = -0.5f;
						zero.z = 0.2f;
						break;
					case 2:
						zero.x = 0.5f;
						zero.z = 0.2f;
						break;
					case 3:
						zero.x = -1f;
						zero.z = -0.5f;
						break;
					case 4:
						zero.x = 1f;
						zero.z = -0.5f;
						break;
					case 5:
						zero.x = -1.5f;
						zero.z = 0.2f;
						break;
					case 6:
						zero.x = 1.5f;
						zero.z = 0.2f;
						break;
					case 7:
						zero.x = -2f;
						zero.z = -0.5f;
						break;
					case 8:
						zero.x = 2f;
						zero.z = -0.5f;
						break;
					case 9:
						zero.x = -2.5f;
						zero.z = 0.2f;
						break;
					case 10:
						zero.x = 2.5f;
						zero.z = 0.2f;
						break;
					case 11:
						zero.x = -3f;
						zero.z = -0.5f;
						break;
					case 12:
						zero.x = 3f;
						zero.z = -0.5f;
						break;
					case 13:
						zero.x = -3.5f;
						zero.z = 0.2f;
						break;
					}
					zero.x *= num25;
					this.maidArray[num24].SetPos(zero);
					this.maidArray[num24].SetRot(zero2);
					if (num24 >= 14)
					{
						this.maidArray[num24].SetPos(new Vector3(0f, 0f, 0.7f));
					}
				}
				break;
			}
			for (int num26 = 0; num26 < this.maxMaidCnt; num26++)
			{
				if (!this.isLock[num26] && this.maidArray[num26] != null && this.maidArray[num26].Visible)
				{
					this.maidArray[num26].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
					this.maidArray[num26].SetAutoTwistAll(true);
				}
			}
		}

		// Token: 0x06000040 RID: 64 RVA: 0x000447BC File Offset: 0x000429BC
		internal static TResult GetFieldValue<T, TResult>(T inst, string name)
		{
			if (inst == null)
			{
				return default(TResult);
			}
			FieldInfo fieldInfo = ManyMaids.GetFieldInfo<T>(name);
			if (fieldInfo == null)
			{
				return default(TResult);
			}
			return (TResult)((object)fieldInfo.GetValue(inst));
		}

		// Token: 0x06000041 RID: 65 RVA: 0x00044800 File Offset: 0x00042A00
		internal static FieldInfo GetFieldInfo<T>(string name)
		{
			BindingFlags bindingAttr = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic;
			return typeof(T).GetField(name, bindingAttr);
		}

		// Token: 0x06000042 RID: 66 RVA: 0x00044821 File Offset: 0x00042A21
		internal static void SetFieldValue<T, TResult>(T inst, string name, Maid maid)
		{
			ManyMaids.GetFieldInfo<T>(name).SetValue(inst, maid);
		}

		// Token: 0x06000043 RID: 67 RVA: 0x00044835 File Offset: 0x00042A35
		internal static void SetFieldValue2<T, TResult>(T inst, string name, int maid)
		{
			ManyMaids.GetFieldInfo<T>(name).SetValue(inst, maid);
		}

		// Token: 0x06000044 RID: 68 RVA: 0x0004484E File Offset: 0x00042A4E
		internal static void SetFieldValue3<T, TResult>(T inst, string name, Vector3 maid)
		{
			ManyMaids.GetFieldInfo<T>(name).SetValue(inst, maid);
		}

		// Token: 0x06000045 RID: 69 RVA: 0x00044867 File Offset: 0x00042A67
		internal static void SetFieldValue4<T, TResult>(T inst, string name, Transform maid)
		{
			ManyMaids.GetFieldInfo<T>(name).SetValue(inst, maid);
		}

		// Token: 0x06000046 RID: 70 RVA: 0x0004487B File Offset: 0x00042A7B
		internal static void SetFieldValue5<T, TResult>(T inst, string name, UILabel maid)
		{
			ManyMaids.GetFieldInfo<T>(name).SetValue(inst, maid);
		}

		// Token: 0x06000047 RID: 71 RVA: 0x0004488F File Offset: 0x00042A8F
		internal static void SetFieldValue6<T, TResult>(T inst, string name, Hashtable maid)
		{
			ManyMaids.GetFieldInfo<T>(name).SetValue(inst, maid);
		}

		// Token: 0x06000048 RID: 72 RVA: 0x000448A3 File Offset: 0x00042AA3
		internal static void SetFieldValue7<T, TResult>(T inst, string name, float[] maid)
		{
			ManyMaids.GetFieldInfo<T>(name).SetValue(inst, maid);
		}

		// Token: 0x06000049 RID: 73 RVA: 0x000448B7 File Offset: 0x00042AB7
		internal static void SetFieldValue8<T, TResult>(T inst, string name, DynamicSkirtBone maid)
		{
			ManyMaids.GetFieldInfo<T>(name).SetValue(inst, maid);
		}

		// Token: 0x0600004A RID: 74 RVA: 0x000448CC File Offset: 0x00042ACC
		private void SetIKInit6(int k)
		{
			this.gHead2[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gHead2[k].GetComponent<Renderer>().enabled = false;
			this.mHead2[k] = this.gHead2[k].AddComponent<MouseDrag5>();
			this.mHead2[k].obj = this.gHead2[k];
			this.gHead2[k].transform.localScale = new Vector3(0.2f, 0.24f, 0.2f);
			this.gHead2[k].layer = 8;
			this.gMaid2[k] = GameObject.CreatePrimitive(PrimitiveType.Capsule);
			this.gMaid2[k].GetComponent<Renderer>().enabled = false;
			this.mMaid2[k] = this.gMaid2[k].AddComponent<MouseDrag5>();
			this.mMaid2[k].obj = this.gMaid2[k];
			this.gMaid2[k].transform.localScale = new Vector3(0.2f, 0.3f, 0.24f);
			this.gMaid2[k].layer = 8;
		}

		// Token: 0x0600004B RID: 75 RVA: 0x000449D8 File Offset: 0x00042BD8
		private void SetIKInit7(int k)
		{
			this.gIKMuneL[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gIKMuneL[k].GetComponent<Renderer>().enabled = false;
			this.mIKMuneL[k] = this.gIKMuneL[k].AddComponent<MouseDrag>();
			this.mIKMuneL[k].obj = this.gIKMuneL[k];
			this.gIKMuneL[k].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
			this.gIKMuneL[k].layer = 8;
			this.gIKMuneR[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gIKMuneR[k].GetComponent<Renderer>().enabled = false;
			this.mIKMuneR[k] = this.gIKMuneR[k].AddComponent<MouseDrag>();
			this.mIKMuneR[k].obj = this.gIKMuneR[k];
			this.gIKMuneR[k].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
			this.gIKMuneR[k].layer = 8;
		}

		// Token: 0x0600004C RID: 76 RVA: 0x00044AE4 File Offset: 0x00042CE4
		private void SetIKInit5(int k)
		{
			this.gIKHandL[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gIKHandL[k].GetComponent<Renderer>().enabled = false;
			this.mIKHandL[k] = this.gIKHandL[k].AddComponent<MouseDrag4>();
			this.mIKHandL[k].obj = this.gIKHandL[k];
			this.gIKHandL[k].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
			this.gIKHandR[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gIKHandR[k].GetComponent<Renderer>().enabled = false;
			this.mIKHandR[k] = this.gIKHandR[k].AddComponent<MouseDrag4>();
			this.mIKHandR[k].obj = this.gIKHandR[k];
			this.gIKHandR[k].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
		}

		// Token: 0x0600004D RID: 77 RVA: 0x00044BD4 File Offset: 0x00042DD4
		private void SetIKInit4(int k)
		{
			this.gHead[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gHead[k].GetComponent<Renderer>().enabled = false;
			this.mHead[k] = this.gHead[k].AddComponent<MouseDrag3>();
			this.mHead[k].obj = this.gHead[k];
			this.gHead[k].transform.localScale = new Vector3(0.2f, 0.24f, 0.2f);
			this.gJotai[k] = GameObject.CreatePrimitive(PrimitiveType.Capsule);
			this.gJotai[k].GetComponent<Renderer>().enabled = false;
			this.mJotai[k] = this.gJotai[k].AddComponent<MouseDrag3>();
			this.mJotai[k].obj = this.gJotai[k];
			this.gJotai[k].transform.localScale = new Vector3(0.2f, 0.19f, 0.24f);
			this.gJotai[k].layer = 8;
			this.gKahuku[k] = GameObject.CreatePrimitive(PrimitiveType.Capsule);
			this.gKahuku[k].GetComponent<Renderer>().enabled = false;
			this.mKahuku[k] = this.gKahuku[k].AddComponent<MouseDrag3>();
			this.mKahuku[k].obj = this.gKahuku[k];
			this.gKahuku[k].transform.localScale = new Vector3(0.2f, 0.15f, 0.24f);
			this.gKahuku[k].layer = 8;
		}

		// Token: 0x0600004E RID: 78 RVA: 0x00044D50 File Offset: 0x00042F50
		private void SetIKInit3(int k)
		{
			this.gMaid[k] = GameObject.CreatePrimitive(PrimitiveType.Capsule);
			this.gMaid[k].GetComponent<Renderer>().enabled = false;
			this.mMaid[k] = this.gMaid[k].AddComponent<MouseDrag2>();
			this.mMaid[k].obj = this.gMaid[k];
			this.gMaid[k].transform.localScale = new Vector3(0.2f, 0.3f, 0.24f);
			this.gMaid[k].layer = 8;
			this.gMaidC[k] = GameObject.CreatePrimitive(PrimitiveType.Cube);
			this.gMaidC[k].GetComponent<Renderer>().enabled = true;
			this.mMaidC[k] = this.gMaidC[k].AddComponent<MouseDrag2>();
			this.mMaidC[k].obj = this.gMaidC[k];
			this.gMaidC[k].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
			Material material = new Material(Shader.Find("Transparent/Diffuse"));
			material.color = new Color(0.5f, 0.5f, 1f, 0.8f);
			this.gMaidC[k].GetComponent<Renderer>().material = material;
			this.gMaidC[k].layer = 8;
		}

		// Token: 0x0600004F RID: 79 RVA: 0x00044EA0 File Offset: 0x000430A0
		private void SetIKInit2(int k)
		{
			for (int i = 0; i < 30; i++)
			{
				this.gFinger[k, i] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
				int num = i % 3;
				this.mFinger[k, i] = this.gFinger[k, i].AddComponent<MouseDrag>();
				this.mFinger[k, i].obj = this.gFinger[k, i];
				float num2 = 0f;
				switch (i)
				{
				case 0:
				case 15:
					num2 = 0.024f;
					break;
				case 1:
				case 16:
					num2 = 0.018f;
					break;
				case 2:
				case 17:
					num2 = 0.014f;
					break;
				case 3:
				case 6:
				case 9:
				case 18:
				case 21:
				case 24:
					num2 = 0.017f;
					break;
				case 4:
				case 7:
				case 10:
				case 19:
				case 22:
				case 25:
					num2 = 0.015f;
					break;
				case 5:
				case 8:
				case 11:
				case 20:
				case 23:
				case 26:
					num2 = 0.013f;
					break;
				case 12:
				case 27:
					num2 = 0.015f;
					break;
				case 13:
				case 28:
					num2 = 0.013f;
					break;
				case 14:
				case 29:
					num2 = 0.012f;
					break;
				}
				this.gFinger[k, i].transform.localScale = new Vector3(num2, num2, num2);
				Material material = new Material(Shader.Find("Transparent/Diffuse"));
				this.gFinger[k, i].GetComponent<Renderer>().material = material;
				this.gFinger[k, i].GetComponent<MeshRenderer>().material.color = new Color(0f, 0f, 1f, 0.2f);
			}
			for (int j = 0; j < 12; j++)
			{
				this.gFinger2[k, j] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
				this.mFinger2[k, j] = this.gFinger2[k, j].AddComponent<MouseDrag>();
				this.mFinger2[k, j].obj = this.gFinger2[k, j];
				float num3 = 0f;
				switch (j)
				{
				case 0:
				case 6:
					num3 = 0.017f;
					break;
				case 1:
				case 7:
					num3 = 0.016f;
					break;
				case 2:
				case 8:
					num3 = 0.024f;
					break;
				case 3:
				case 9:
					num3 = 0.017f;
					break;
				case 4:
				case 10:
					num3 = 0.024f;
					break;
				case 5:
				case 11:
					num3 = 0.018f;
					break;
				}
				this.gFinger2[k, j].transform.localScale = new Vector3(num3, num3, num3);
				Material material2 = new Material(Shader.Find("Transparent/Diffuse"));
				this.gFinger2[k, j].GetComponent<Renderer>().material = material2;
				this.gFinger2[k, j].GetComponent<MeshRenderer>().material.color = new Color(0f, 0f, 1f, 0.2f);
			}
		}

		// Token: 0x06000050 RID: 80 RVA: 0x000451B8 File Offset: 0x000433B8
		private void SetIKInit(int k)
		{
			Material material = new Material(Shader.Find("Transparent/Diffuse"));
			material.color = new Color(0.4f, 0.4f, 1f, 0.3f);
			this.m_material2 = new Material(Shader.Find("Transparent/Diffuse"));
			this.m_material2.color = new Color(0.4f, 0.4f, 1f, 0.26f);
			this.m_material3 = new Material(Shader.Find("Transparent/Diffuse"));
			this.m_material3.color = new Color(0.4f, 0.4f, 1f, 0.36f);
			this.gHandL[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gHandL[k].GetComponent<Renderer>().enabled = false;
			this.gHandL[k].layer = 8;
			this.mHandL[k] = this.gHandL[k].AddComponent<MouseDrag>();
			this.mHandL[k].obj = this.gHandL[k];
			this.gArmL[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gArmL[k].GetComponent<Renderer>().enabled = false;
			this.gArmL[k].layer = 8;
			this.mArmL[k] = this.gArmL[k].AddComponent<MouseDrag>();
			this.mArmL[k].obj = this.gArmL[k];
			this.gFootL[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gFootL[k].GetComponent<Renderer>().enabled = false;
			this.gFootL[k].layer = 8;
			this.mFootL[k] = this.gFootL[k].AddComponent<MouseDrag>();
			this.mFootL[k].obj = this.gFootL[k];
			this.gHizaL[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gHizaL[k].GetComponent<Renderer>().enabled = false;
			this.gHizaL[k].layer = 8;
			this.mHizaL[k] = this.gHizaL[k].AddComponent<MouseDrag>();
			this.mHizaL[k].obj = this.gHizaL[k];
			this.gHandR[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gHandR[k].GetComponent<Renderer>().enabled = false;
			this.gHandR[k].layer = 8;
			this.mHandR[k] = this.gHandR[k].AddComponent<MouseDrag>();
			this.mHandR[k].obj = this.gHandR[k];
			this.gArmR[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gArmR[k].GetComponent<Renderer>().enabled = false;
			this.gArmR[k].layer = 8;
			this.mArmR[k] = this.gArmR[k].AddComponent<MouseDrag>();
			this.mArmR[k].obj = this.gArmR[k];
			this.gFootR[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gFootR[k].GetComponent<Renderer>().enabled = false;
			this.gFootR[k].layer = 8;
			this.mFootR[k] = this.gFootR[k].AddComponent<MouseDrag>();
			this.mFootR[k].obj = this.gFootR[k];
			this.gHizaR[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gHizaR[k].GetComponent<Renderer>().enabled = false;
			this.gHizaR[k].layer = 8;
			this.mHizaR[k] = this.gHizaR[k].AddComponent<MouseDrag>();
			this.mHizaR[k].obj = this.gHizaR[k];
			this.gClavicleL[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gClavicleL[k].GetComponent<Renderer>().enabled = false;
			this.gClavicleL[k].layer = 8;
			this.mClavicleL[k] = this.gClavicleL[k].AddComponent<MouseDrag>();
			this.mClavicleL[k].obj = this.gClavicleL[k];
			this.gClavicleR[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gClavicleR[k].GetComponent<Renderer>().enabled = false;
			this.gClavicleR[k].layer = 8;
			this.mClavicleR[k] = this.gClavicleR[k].AddComponent<MouseDrag>();
			this.mClavicleR[k].obj = this.gClavicleR[k];
			if (!this.isBone[k])
			{
				this.gHandL[k].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
				this.gHandR[k].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
				this.gArmL[k].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
				this.gArmR[k].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
				this.gFootL[k].transform.localScale = new Vector3(0.15f, 0.15f, 0.15f);
				this.gFootR[k].transform.localScale = new Vector3(0.15f, 0.15f, 0.15f);
				this.gHizaL[k].transform.localScale = new Vector3(0.15f, 0.15f, 0.15f);
				this.gHizaR[k].transform.localScale = new Vector3(0.15f, 0.15f, 0.15f);
				this.gClavicleL[k].transform.localScale = new Vector3(0.13f, 0.13f, 0.13f);
				this.mClavicleR[k].transform.localScale = new Vector3(0.13f, 0.13f, 0.13f);
			}
			else
			{
				this.gHandL[k].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
				this.gHandR[k].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
				this.gArmL[k].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
				this.gArmR[k].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
				this.gFootL[k].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
				this.gFootR[k].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
				this.gHizaL[k].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
				this.gHizaR[k].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
				this.gClavicleL[k].transform.localScale = new Vector3(0.06f, 0.06f, 0.06f);
				this.gClavicleR[k].transform.localScale = new Vector3(0.06f, 0.06f, 0.06f);
				this.gHandL[k].GetComponent<Renderer>().enabled = true;
				this.gHandR[k].GetComponent<Renderer>().enabled = true;
				this.gArmL[k].GetComponent<Renderer>().enabled = true;
				this.gArmR[k].GetComponent<Renderer>().enabled = true;
				this.gFootL[k].GetComponent<Renderer>().enabled = true;
				this.gFootR[k].GetComponent<Renderer>().enabled = true;
				this.gHizaL[k].GetComponent<Renderer>().enabled = true;
				this.gHizaR[k].GetComponent<Renderer>().enabled = true;
				this.gClavicleL[k].GetComponent<Renderer>().enabled = true;
				this.gClavicleR[k].GetComponent<Renderer>().enabled = true;
				this.gHandL[k].GetComponent<Renderer>().material = this.m_material2;
				this.gHandR[k].GetComponent<Renderer>().material = this.m_material2;
				this.gArmL[k].GetComponent<Renderer>().material = this.m_material2;
				this.gArmR[k].GetComponent<Renderer>().material = this.m_material2;
				this.gFootL[k].GetComponent<Renderer>().material = this.m_material2;
				this.gFootR[k].GetComponent<Renderer>().material = this.m_material2;
				this.gHizaL[k].GetComponent<Renderer>().material = this.m_material2;
				this.gHizaR[k].GetComponent<Renderer>().material = this.m_material2;
				this.gClavicleL[k].GetComponent<Renderer>().material = this.m_material2;
				this.gClavicleR[k].GetComponent<Renderer>().material = this.m_material2;
			}
			GameObject gameObject = new GameObject();
			gameObject.transform.SetParent(base.transform, false);
			this.gizmoHandL[k] = gameObject.AddComponent<GizmoRender>();
			this.gizmoHandL[k].eRotate = true;
			this.gizmoHandL[k].offsetScale = 0.25f;
			this.gizmoHandL[k].lineRSelectedThick = 0.25f;
			this.gizmoHandL[k].Visible = false;
			GameObject gameObject2 = new GameObject();
			gameObject2.transform.SetParent(base.transform, false);
			this.gizmoHandR[k] = gameObject2.AddComponent<GizmoRender>();
			this.gizmoHandR[k].eRotate = true;
			this.gizmoHandR[k].offsetScale = 0.25f;
			this.gizmoHandR[k].lineRSelectedThick = 0.25f;
			this.gizmoHandR[k].Visible = false;
			GameObject gameObject3 = new GameObject();
			gameObject3.transform.SetParent(base.transform, false);
			this.gizmoFootL[k] = gameObject3.AddComponent<GizmoRender>();
			this.gizmoFootL[k].eRotate = true;
			this.gizmoFootL[k].offsetScale = 0.25f;
			this.gizmoFootL[k].lineRSelectedThick = 0.25f;
			this.gizmoFootL[k].Visible = false;
			GameObject gameObject4 = new GameObject();
			gameObject4.transform.SetParent(base.transform, false);
			this.gizmoFootR[k] = gameObject4.AddComponent<GizmoRender>();
			this.gizmoFootR[k].eRotate = true;
			this.gizmoFootR[k].offsetScale = 0.25f;
			this.gizmoFootR[k].lineRSelectedThick = 0.25f;
			this.gizmoFootR[k].Visible = false;
			this.gNeck[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gNeck[k].GetComponent<Renderer>().material = material;
			this.gNeck[k].layer = 8;
			this.mNeck[k] = this.gNeck[k].AddComponent<MouseDrag3>();
			this.mNeck[k].obj = this.gNeck[k];
			this.gNeck[k].transform.localScale = new Vector3(0.055f, 0.055f, 0.055f);
			this.gNeck[k].SetActive(false);
			this.gSpine[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gSpine[k].GetComponent<Renderer>().material = material;
			this.gSpine[k].layer = 8;
			this.mSpine[k] = this.gSpine[k].AddComponent<MouseDrag3>();
			this.mSpine[k].obj = this.gSpine[k];
			this.gSpine[k].transform.localScale = new Vector3(0.04f, 0.04f, 0.04f);
			this.gSpine[k].SetActive(false);
			this.gSpine0a[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gSpine0a[k].GetComponent<Renderer>().material = material;
			this.gSpine0a[k].layer = 8;
			this.mSpine0a[k] = this.gSpine0a[k].AddComponent<MouseDrag3>();
			this.mSpine0a[k].obj = this.gSpine0a[k];
			this.gSpine0a[k].transform.localScale = new Vector3(0.04f, 0.04f, 0.04f);
			this.gSpine0a[k].SetActive(false);
			this.gSpine1a[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gSpine1a[k].GetComponent<Renderer>().material = material;
			this.gSpine1a[k].layer = 8;
			this.mSpine1a[k] = this.gSpine1a[k].AddComponent<MouseDrag3>();
			this.mSpine1a[k].obj = this.gSpine1a[k];
			this.gSpine1a[k].transform.localScale = new Vector3(0.04f, 0.04f, 0.04f);
			this.gSpine1a[k].SetActive(false);
			this.gSpine1[k] = GameObject.CreatePrimitive(PrimitiveType.Sphere);
			this.gSpine1[k].GetComponent<Renderer>().material = material;
			this.gSpine1[k].layer = 8;
			this.mSpine1[k] = this.gSpine1[k].AddComponent<MouseDrag3>();
			this.mSpine1[k].obj = this.gSpine1[k];
			this.gSpine1[k].transform.localScale = new Vector3(0.04f, 0.04f, 0.04f);
			this.gSpine1[k].SetActive(false);
			this.gPelvis[k] = GameObject.CreatePrimitive(PrimitiveType.Cube);
			this.gPelvis[k].GetComponent<Renderer>().material = this.m_material3;
			this.gPelvis[k].layer = 8;
			this.mPelvis[k] = this.gPelvis[k].AddComponent<MouseDrag3>();
			this.mPelvis[k].obj = this.gPelvis[k];
			this.gPelvis[k].transform.localScale = new Vector3(0.045f, 0.045f, 0.045f);
			this.gPelvis[k].SetActive(false);
		}

		// Token: 0x06000051 RID: 81 RVA: 0x00045F88 File Offset: 0x00044188
		private void SetIK(Maid maid, int i)
		{
			this.Head = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Neck", true);
			this.Head1[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Neck", true);
			this.Head2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Head", true);
			this.Head3[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 HeadNub", true);
			this.IKHandL[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "_IK_handL", true);
			this.IKHandR[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "_IK_handR", true);
			this.IKMuneL[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Mune_L", true);
			this.IKMuneLSub[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Mune_L_sub", true);
			this.IKMuneR[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Mune_R", true);
			this.IKMuneRSub[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Mune_R_sub", true);
			this.Spine = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Spine", true);
			this.Spine0a = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Spine0a", true);
			this.Spine1 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Spine1", true);
			this.Spine1a = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Spine1a", true);
			this.Pelvis = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Pelvis", true);
			this.Neck[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Neck", true);
			this.Pelvis2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01", true);
			this.Spine12[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Spine1", true);
			this.Spine0a2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Spine0a", true);
			this.Spine2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Spine", true);
			this.Spine1a2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 Spine1a", true);
			this.HandL1[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Hand", true);
			this.UpperArmL1[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L UpperArm", true);
			this.ForearmL1[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Forearm", true);
			this.HandR1[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Hand", true);
			this.UpperArmR1[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R UpperArm", true);
			this.ForearmR1[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Forearm", true);
			this.HandL2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Foot", true);
			this.UpperArmL2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Thigh", true);
			this.ForearmL2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Calf", true);
			this.HandR2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Foot", true);
			this.UpperArmR2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Thigh", true);
			this.ForearmR2[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Calf", true);
			this.ClavicleL1[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Clavicle", true);
			this.ClavicleR1[i] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Clavicle", true);
			this.Finger[i, 0] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger0", true);
			this.Finger[i, 1] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger01", true);
			this.Finger[i, 2] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger02", true);
			this.Finger[i, 3] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger0Nub", true);
			this.Finger[i, 4] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger1", true);
			this.Finger[i, 5] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger11", true);
			this.Finger[i, 6] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger12", true);
			this.Finger[i, 7] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger1Nub", true);
			this.Finger[i, 8] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger2", true);
			this.Finger[i, 9] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger21", true);
			this.Finger[i, 10] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger22", true);
			this.Finger[i, 11] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger2Nub", true);
			this.Finger[i, 12] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger3", true);
			this.Finger[i, 13] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger31", true);
			this.Finger[i, 14] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger32", true);
			this.Finger[i, 15] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger3Nub", true);
			this.Finger[i, 16] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger4", true);
			this.Finger[i, 17] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger41", true);
			this.Finger[i, 18] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger42", true);
			this.Finger[i, 19] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Finger4Nub", true);
			this.Finger[i, 20] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger0", true);
			this.Finger[i, 21] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger01", true);
			this.Finger[i, 22] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger02", true);
			this.Finger[i, 23] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger0Nub", true);
			this.Finger[i, 24] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger1", true);
			this.Finger[i, 25] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger11", true);
			this.Finger[i, 26] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger12", true);
			this.Finger[i, 27] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger1Nub", true);
			this.Finger[i, 28] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger2", true);
			this.Finger[i, 29] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger21", true);
			this.Finger[i, 30] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger22", true);
			this.Finger[i, 31] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger2Nub", true);
			this.Finger[i, 32] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger3", true);
			this.Finger[i, 33] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger31", true);
			this.Finger[i, 34] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger32", true);
			this.Finger[i, 35] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger3Nub", true);
			this.Finger[i, 36] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger4", true);
			this.Finger[i, 37] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger41", true);
			this.Finger[i, 38] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger42", true);
			this.Finger[i, 39] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Finger4Nub", true);
			this.Finger2[i, 0] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe0", true);
			this.Finger2[i, 1] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe01", true);
			this.Finger2[i, 2] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe0Nub", true);
			this.Finger2[i, 3] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe1", true);
			this.Finger2[i, 4] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe11", true);
			this.Finger2[i, 5] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe1Nub", true);
			this.Finger2[i, 6] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe2", true);
			this.Finger2[i, 7] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe21", true);
			this.Finger2[i, 8] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe2Nub", true);
			this.Finger2[i, 9] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe0", true);
			this.Finger2[i, 10] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe01", true);
			this.Finger2[i, 11] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe0Nub", true);
			this.Finger2[i, 12] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe1", true);
			this.Finger2[i, 13] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe11", true);
			this.Finger2[i, 14] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe1Nub", true);
			this.Finger2[i, 15] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe2", true);
			this.Finger2[i, 16] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe21", true);
			this.Finger2[i, 17] = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe2Nub", true);
		}

		// Token: 0x06000052 RID: 82 RVA: 0x00046D8C File Offset: 0x00044F8C
		private void CopyIK(Maid maid, int i, Maid maid2, int i2)
		{
			this.poseIndex[i] = this.poseIndex[i2];
			if (!maid || !maid.Visible)
			{
				return;
			}
			string[] array = this.poseArray[this.poseIndex[i]].Split(new char[]
			{
				','
			});
			this.isStop[i] = false;
			if (array[0].Contains("_momi") || array[0].Contains("paizuri_"))
			{
				maid.body0.MuneYureL(0f);
				maid.body0.MuneYureR(0f);
			}
			else
			{
				maid.body0.MuneYureL(1f);
				maid.body0.MuneYureR(1f);
			}
			int num2;
			if (array[0].Contains("ManyMaidsPose"))
			{
				string path = array[0].Split(new char[]
				{
					'/'
				})[1];
				byte[] array2 = new byte[0];
				try
				{
					using (FileStream fileStream = new FileStream(path, FileMode.Open, FileAccess.Read))
					{
						array2 = new byte[fileStream.Length];
						fileStream.Read(array2, 0, array2.Length);
					}
				}
				catch
				{
				}
				if (array2.Length != 0)
				{
					long num = (long)Path.GetFileName(path).GetHashCode();
					maid.body0.CrossFade(num.ToString(), array2, false, false, false, 0f, 1f);
					Maid.AutoTwist[] array3 = new Maid.AutoTwist[]
					{
						Maid.AutoTwist.ShoulderL,
						Maid.AutoTwist.ShoulderR,
						Maid.AutoTwist.WristL,
						Maid.AutoTwist.WristR,
						Maid.AutoTwist.ThighL,
						Maid.AutoTwist.ThighR
					};
					for (int j = 0; j < array3.Length; j++)
					{
						maid.SetAutoTwist(array3[j], true);
					}
				}
			}
			else if (array[0].StartsWith("p") && int.TryParse(array[0].Substring(1), out num2))
			{
				this.loadPose[i] = array[0];
			}
			else if (!array[0].StartsWith("dance_"))
			{
				this.maidArray[i].CrossFade(array[0] + ".anm", false, true, false, 0f, 1f);
			}
			else
			{
				if (!maid.body0.m_Bones.GetComponent<Animation>().GetClip(array[0] + ".anm"))
				{
					maid.body0.LoadAnime(array[0] + ".anm", GameUty.FileSystem, array[0] + ".anm", false, false);
				}
				maid.body0.m_Bones.GetComponent<Animation>().Play(array[0] + ".anm");
			}
			if (array.Length > 1)
			{
				maid.body0.m_Bones.GetComponent<Animation>()[array[0] + ".anm"].time = float.Parse(array[1]);
				this.isStop[i] = true;
				if (array.Length > 2)
				{
					CMT.SearchObjName(this.maidArray[i].body0.m_Bones.transform, "Bip01", true);
					this.isPoseIti[i] = true;
					this.poseIti[i] = this.maidArray[i].transform.position;
					this.maidArray[i].transform.position = new Vector3(100f, 100f, 100f);
				}
			}
		}

		// Token: 0x06000053 RID: 83 RVA: 0x000470D8 File Offset: 0x000452D8
		private void CopyIK2(Maid maid, int i, Maid maid2, int i2)
		{
			this.isStop[i] = true;
			this.isLock[i] = true;
			maid.transform.position = new Vector3(maid.transform.position.x, maid2.transform.position.y, maid.transform.position.z);
			this.SetIK(maid2, i2);
			Transform transform = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 L Toe0", true);
			Transform transform2 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 R Toe0", true);
			Transform transform3 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 L Toe01", true);
			Transform transform4 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 R Toe01", true);
			Transform transform5 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 L Toe0Nub", true);
			Transform transform6 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 R Toe0Nub", true);
			Transform transform7 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 L Toe1", true);
			Transform transform8 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 R Toe1", true);
			Transform transform9 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 L Toe11", true);
			Transform transform10 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 R Toe11", true);
			Transform transform11 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 L Toe1Nub", true);
			Transform transform12 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 R Toe1Nub", true);
			Transform transform13 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 L Toe2", true);
			Transform transform14 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 R Toe2", true);
			Transform transform15 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 L Toe21", true);
			Transform transform16 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 R Toe21", true);
			Transform transform17 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 L Toe2Nub", true);
			Transform transform18 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01 R Toe2Nub", true);
			Transform transform19 = CMT.SearchObjName(maid2.body0.m_Bones.transform, "Bip01", true);
			Vector3 eulerAngles = this.Head.eulerAngles;
			Vector3 eulerAngles2 = this.Spine.eulerAngles;
			Vector3 eulerAngles3 = this.Spine0a.eulerAngles;
			Vector3 eulerAngles4 = this.Spine1.eulerAngles;
			Vector3 eulerAngles5 = this.Spine1a.eulerAngles;
			Vector3 eulerAngles6 = this.Pelvis.eulerAngles;
			Vector3 eulerAngles7 = this.ClavicleL1[i2].eulerAngles;
			Vector3 eulerAngles8 = this.ClavicleR1[i2].eulerAngles;
			Vector3 localEulerAngles = transform.localEulerAngles;
			Vector3 localEulerAngles2 = transform2.localEulerAngles;
			Vector3 localEulerAngles3 = transform3.localEulerAngles;
			Vector3 localEulerAngles4 = transform4.localEulerAngles;
			Vector3 localEulerAngles5 = transform5.localEulerAngles;
			Vector3 localEulerAngles6 = transform6.localEulerAngles;
			Vector3 localEulerAngles7 = transform7.localEulerAngles;
			Vector3 localEulerAngles8 = transform8.localEulerAngles;
			Vector3 localEulerAngles9 = transform9.localEulerAngles;
			Vector3 localEulerAngles10 = transform10.localEulerAngles;
			Vector3 localEulerAngles11 = transform11.localEulerAngles;
			Vector3 localEulerAngles12 = transform12.localEulerAngles;
			Vector3 localEulerAngles13 = transform13.localEulerAngles;
			Vector3 localEulerAngles14 = transform14.localEulerAngles;
			Vector3 localEulerAngles15 = transform15.localEulerAngles;
			Vector3 localEulerAngles16 = transform16.localEulerAngles;
			Vector3 localEulerAngles17 = transform17.localEulerAngles;
			Vector3 localEulerAngles18 = transform18.localEulerAngles;
			Vector3 eulerAngles9 = transform19.eulerAngles;
			Vector3 localEulerAngles19 = this.HandL1[i2].localEulerAngles;
			Vector3 localEulerAngles20 = this.HandR1[i2].localEulerAngles;
			Vector3 localEulerAngles21 = this.HandL2[i2].localEulerAngles;
			Vector3 localEulerAngles22 = this.HandR2[i2].localEulerAngles;
			Vector3[] array = new Vector3[40];
			for (int j = 0; j < 20; j++)
			{
				array[j] = this.Finger[i2, j].localEulerAngles;
			}
			for (int k = 20; k < 40; k++)
			{
				array[k] = this.Finger[i2, k].localEulerAngles;
			}
			Vector3 eulerAngles10 = this.UpperArmL1[i2].eulerAngles;
			Vector3 eulerAngles11 = this.ForearmL1[i2].eulerAngles;
			Vector3 eulerAngles12 = this.UpperArmR1[i2].eulerAngles;
			Vector3 eulerAngles13 = this.ForearmR1[i2].eulerAngles;
			Vector3 eulerAngles14 = this.UpperArmL2[i2].eulerAngles;
			Vector3 eulerAngles15 = this.ForearmL2[i2].eulerAngles;
			Vector3 eulerAngles16 = this.UpperArmR2[i2].eulerAngles;
			Vector3 eulerAngles17 = this.ForearmR2[i2].eulerAngles;
			maid.transform.localEulerAngles = maid2.transform.localEulerAngles;
			this.SetIK(maid, i);
			transform = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe0", true);
			transform2 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe0", true);
			transform3 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe01", true);
			transform4 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe01", true);
			transform5 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe0Nub", true);
			transform6 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe0Nub", true);
			transform7 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe1", true);
			transform8 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe1", true);
			transform9 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe11", true);
			transform10 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe11", true);
			transform11 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe1Nub", true);
			transform12 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe1Nub", true);
			transform13 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe2", true);
			transform14 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe2", true);
			transform15 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe21", true);
			transform16 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe21", true);
			transform17 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe2Nub", true);
			transform18 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe2Nub", true);
			CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01", true).eulerAngles = eulerAngles9;
			this.Pelvis.eulerAngles = eulerAngles6;
			this.Spine.eulerAngles = eulerAngles2;
			this.Spine0a.eulerAngles = eulerAngles3;
			this.Spine1.eulerAngles = eulerAngles4;
			this.Spine1a.eulerAngles = eulerAngles5;
			this.ClavicleL1[i].eulerAngles = eulerAngles7;
			this.ClavicleR1[i].eulerAngles = eulerAngles8;
			this.Head.eulerAngles = eulerAngles;
			this.HandL1[i].localEulerAngles = localEulerAngles19;
			this.HandR1[i].localEulerAngles = localEulerAngles20;
			this.HandL2[i].localEulerAngles = localEulerAngles21;
			this.HandR2[i].localEulerAngles = localEulerAngles22;
			for (int l = 0; l < 20; l++)
			{
				this.Finger[i, l].localEulerAngles = array[l];
			}
			for (int m = 20; m < 40; m++)
			{
				this.Finger[i, m].localEulerAngles = array[m];
			}
			transform.localEulerAngles = localEulerAngles;
			transform2.localEulerAngles = localEulerAngles2;
			transform3.localEulerAngles = localEulerAngles3;
			transform4.localEulerAngles = localEulerAngles4;
			transform5.localEulerAngles = localEulerAngles5;
			transform6.localEulerAngles = localEulerAngles6;
			transform7.localEulerAngles = localEulerAngles7;
			transform8.localEulerAngles = localEulerAngles8;
			transform9.localEulerAngles = localEulerAngles9;
			transform10.localEulerAngles = localEulerAngles10;
			transform11.localEulerAngles = localEulerAngles11;
			transform12.localEulerAngles = localEulerAngles12;
			transform13.localEulerAngles = localEulerAngles13;
			transform14.localEulerAngles = localEulerAngles14;
			transform15.localEulerAngles = localEulerAngles15;
			transform16.localEulerAngles = localEulerAngles16;
			transform17.localEulerAngles = localEulerAngles17;
			transform18.localEulerAngles = localEulerAngles18;
			this.UpperArmL1[i].eulerAngles = eulerAngles10;
			this.UpperArmR1[i].eulerAngles = eulerAngles12;
			this.ForearmL1[i].eulerAngles = eulerAngles11;
			this.ForearmR1[i].eulerAngles = eulerAngles13;
			this.UpperArmL2[i].eulerAngles = eulerAngles14;
			this.UpperArmR2[i].eulerAngles = eulerAngles16;
			this.ForearmL2[i].eulerAngles = eulerAngles15;
			this.ForearmR2[i].eulerAngles = eulerAngles17;
		}

		// Token: 0x06000054 RID: 84 RVA: 0x000479FC File Offset: 0x00045BFC
		private void SetHanten(Maid maid, int i)
		{
			this.SetIK(maid, i);
			int num = this.pHandL[this.selectMaidIndex];
			this.pHandL[this.selectMaidIndex] = this.pHandR[this.selectMaidIndex];
			this.pHandR[this.selectMaidIndex] = num;
			this.isStop[i] = true;
			this.isLock[i] = true;
			Transform transform = CMT.SearchObjName(maid.body0.m_Bones.transform, "Hip_L", true);
			Transform transform2 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Hip_R", true);
			Transform transform3 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe0", true);
			Transform transform4 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe0", true);
			Transform transform5 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe01", true);
			Transform transform6 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe01", true);
			Transform transform7 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe0Nub", true);
			Transform transform8 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe0Nub", true);
			Transform transform9 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe1", true);
			Transform transform10 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe1", true);
			Transform transform11 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe11", true);
			Transform transform12 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe11", true);
			Transform transform13 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe1Nub", true);
			Transform transform14 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe1Nub", true);
			Transform transform15 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe2", true);
			Transform transform16 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe2", true);
			Transform transform17 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe21", true);
			Transform transform18 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe21", true);
			Transform transform19 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 L Toe2Nub", true);
			Transform transform20 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01 R Toe2Nub", true);
			Transform transform21 = CMT.SearchObjName(maid.body0.m_Bones.transform, "Bip01", true);
			Vector3 eulerAngles = this.Head.eulerAngles;
			Vector3 eulerAngles2 = this.Spine.eulerAngles;
			Vector3 eulerAngles3 = this.Spine0a.eulerAngles;
			Vector3 eulerAngles4 = this.Spine1.eulerAngles;
			Vector3 eulerAngles5 = this.Spine1a.eulerAngles;
			Vector3 eulerAngles6 = this.Pelvis.eulerAngles;
			Vector3 eulerAngles7 = this.ClavicleL1[i].eulerAngles;
			Vector3 eulerAngles8 = this.ClavicleR1[i].eulerAngles;
			Vector3 eulerAngles9 = transform.eulerAngles;
			Vector3 eulerAngles10 = transform2.eulerAngles;
			Vector3 localEulerAngles = transform3.localEulerAngles;
			Vector3 localEulerAngles2 = transform4.localEulerAngles;
			Vector3 localEulerAngles3 = transform5.localEulerAngles;
			Vector3 localEulerAngles4 = transform6.localEulerAngles;
			Vector3 localEulerAngles5 = transform7.localEulerAngles;
			Vector3 localEulerAngles6 = transform8.localEulerAngles;
			Vector3 localEulerAngles7 = transform9.localEulerAngles;
			Vector3 localEulerAngles8 = transform10.localEulerAngles;
			Vector3 localEulerAngles9 = transform11.localEulerAngles;
			Vector3 localEulerAngles10 = transform12.localEulerAngles;
			Vector3 localEulerAngles11 = transform13.localEulerAngles;
			Vector3 localEulerAngles12 = transform14.localEulerAngles;
			Vector3 localEulerAngles13 = transform15.localEulerAngles;
			Vector3 localEulerAngles14 = transform16.localEulerAngles;
			Vector3 localEulerAngles15 = transform17.localEulerAngles;
			Vector3 localEulerAngles16 = transform18.localEulerAngles;
			Vector3 localEulerAngles17 = transform19.localEulerAngles;
			Vector3 localEulerAngles18 = transform20.localEulerAngles;
			Vector3 eulerAngles11 = transform21.eulerAngles;
			Vector3 localEulerAngles19 = this.HandL1[i].localEulerAngles;
			Vector3 localEulerAngles20 = this.HandR1[i].localEulerAngles;
			Vector3 localEulerAngles21 = this.HandL2[i].localEulerAngles;
			Vector3 localEulerAngles22 = this.HandR2[i].localEulerAngles;
			Vector3[] array = new Vector3[40];
			for (int j = 0; j < 20; j++)
			{
				array[j] = this.Finger[i, j].localEulerAngles;
			}
			for (int k = 20; k < 40; k++)
			{
				array[k] = this.Finger[i, k].localEulerAngles;
			}
			Vector3 eulerAngles12 = this.UpperArmL1[i].eulerAngles;
			Vector3 eulerAngles13 = this.ForearmL1[i].eulerAngles;
			Vector3 eulerAngles14 = this.UpperArmR1[i].eulerAngles;
			Vector3 eulerAngles15 = this.ForearmR1[i].eulerAngles;
			Vector3 eulerAngles16 = this.UpperArmL2[i].eulerAngles;
			Vector3 eulerAngles17 = this.ForearmL2[i].eulerAngles;
			Vector3 eulerAngles18 = this.UpperArmR2[i].eulerAngles;
			Vector3 eulerAngles19 = this.ForearmR2[i].eulerAngles;
			transform21.eulerAngles = new Vector3(360f - (eulerAngles11.x + 270f) - 270f, 360f - (eulerAngles11.y + 90f) - 90f, 360f - eulerAngles11.z);
			transform.eulerAngles = this.getHanten(eulerAngles10);
			transform2.eulerAngles = this.getHanten(eulerAngles9);
			this.Pelvis.eulerAngles = this.getHanten(eulerAngles6);
			this.Spine.eulerAngles = this.getHanten(eulerAngles2);
			this.Spine0a.eulerAngles = this.getHanten(eulerAngles3);
			this.Spine1.eulerAngles = this.getHanten(eulerAngles4);
			this.Spine1a.eulerAngles = this.getHanten(eulerAngles5);
			this.ClavicleL1[i].eulerAngles = this.getHanten(eulerAngles8);
			this.ClavicleR1[i].eulerAngles = this.getHanten(eulerAngles7);
			this.Head.eulerAngles = this.getHanten(eulerAngles);
			this.HandR1[i].localEulerAngles = this.getHanten2(localEulerAngles19);
			this.HandL1[i].localEulerAngles = this.getHanten2(localEulerAngles20);
			this.HandR2[i].localEulerAngles = this.getHanten2(localEulerAngles21);
			this.HandL2[i].localEulerAngles = this.getHanten2(localEulerAngles22);
			for (int l = 0; l < 20; l++)
			{
				this.Finger[i, l].localEulerAngles = this.getHanten2(array[l + 20]);
			}
			for (int m = 20; m < 40; m++)
			{
				this.Finger[i, m].localEulerAngles = this.getHanten2(array[m - 20]);
			}
			transform4.localEulerAngles = this.getHanten2(localEulerAngles);
			transform3.localEulerAngles = this.getHanten2(localEulerAngles2);
			transform6.localEulerAngles = this.getHanten2(localEulerAngles3);
			transform5.localEulerAngles = this.getHanten2(localEulerAngles4);
			transform8.localEulerAngles = this.getHanten2(localEulerAngles5);
			transform7.localEulerAngles = this.getHanten2(localEulerAngles6);
			transform10.localEulerAngles = this.getHanten2(localEulerAngles7);
			transform9.localEulerAngles = this.getHanten2(localEulerAngles8);
			transform12.localEulerAngles = this.getHanten2(localEulerAngles9);
			transform11.localEulerAngles = this.getHanten2(localEulerAngles10);
			transform14.localEulerAngles = this.getHanten2(localEulerAngles11);
			transform13.localEulerAngles = this.getHanten2(localEulerAngles12);
			transform16.localEulerAngles = this.getHanten2(localEulerAngles13);
			transform15.localEulerAngles = this.getHanten2(localEulerAngles14);
			transform18.localEulerAngles = this.getHanten2(localEulerAngles15);
			transform17.localEulerAngles = this.getHanten2(localEulerAngles16);
			transform20.localEulerAngles = this.getHanten2(localEulerAngles17);
			transform19.localEulerAngles = this.getHanten2(localEulerAngles18);
			this.UpperArmR1[i].eulerAngles = this.getHanten(eulerAngles12);
			this.UpperArmL1[i].eulerAngles = this.getHanten(eulerAngles14);
			this.ForearmR1[i].eulerAngles = this.getHanten(eulerAngles13);
			this.ForearmL1[i].eulerAngles = this.getHanten(eulerAngles15);
			this.UpperArmR2[i].eulerAngles = this.getHanten(eulerAngles16);
			this.UpperArmL2[i].eulerAngles = this.getHanten(eulerAngles18);
			this.ForearmR2[i].eulerAngles = this.getHanten(eulerAngles17);
			this.ForearmL2[i].eulerAngles = this.getHanten(eulerAngles19);
		}

		// Token: 0x06000055 RID: 85 RVA: 0x00048270 File Offset: 0x00046470
		private void MaidUpdate()
		{
			int j;
			if (this.isHaiti)
			{
				for (int i = 0; i < this.maxMaidCnt; i = j + 1)
				{
					if (this.gHandL[i])
					{
						this.HandL1[i] = null;
						UnityEngine.Object.Destroy(this.gHandL[i]);
						UnityEngine.Object.Destroy(this.gArmL[i]);
						UnityEngine.Object.Destroy(this.gFootL[i]);
						UnityEngine.Object.Destroy(this.gHizaL[i]);
						UnityEngine.Object.Destroy(this.gHandR[i]);
						UnityEngine.Object.Destroy(this.gArmR[i]);
						UnityEngine.Object.Destroy(this.gFootR[i]);
						UnityEngine.Object.Destroy(this.gHizaR[i]);
						UnityEngine.Object.Destroy(this.gClavicleL[i]);
						UnityEngine.Object.Destroy(this.gClavicleR[i]);
						UnityEngine.Object.Destroy(this.gNeck[i]);
						UnityEngine.Object.Destroy(this.gSpine[i]);
						UnityEngine.Object.Destroy(this.gSpine0a[i]);
						UnityEngine.Object.Destroy(this.gSpine1a[i]);
						UnityEngine.Object.Destroy(this.gSpine1[i]);
						UnityEngine.Object.Destroy(this.gPelvis[i]);
					}
					j = i;
				}
				for (int k = 0; k < this.maidCnt; k = j + 1)
				{
					Vector3 zero = Vector3.zero;
					Vector3 zero2 = Vector3.zero;
					if (this.selectList.Count <= 7)
					{
						if (this.selectList.Count % 2 == 1)
						{
							switch (k)
							{
							case 0:
								this.maidArray[k].SetPos(new Vector3(0f, 0f, 0f));
								break;
							case 1:
								this.maidArray[k].SetPos(new Vector3(-0.6f, 0f, 0.26f));
								break;
							case 2:
								this.maidArray[k].SetPos(new Vector3(0.6f, 0f, 0.26f));
								break;
							case 3:
								this.maidArray[k].SetPos(new Vector3(-1.1f, 0f, 0.69f));
								break;
							case 4:
								this.maidArray[k].SetPos(new Vector3(1.1f, 0f, 0.69f));
								break;
							case 5:
								this.maidArray[k].SetPos(new Vector3(-1.47f, 0f, 1.1f));
								break;
							case 6:
								this.maidArray[k].SetPos(new Vector3(1.47f, 0f, 1.1f));
								break;
							}
						}
						else
						{
							switch (k)
							{
							case 0:
								this.maidArray[k].SetPos(new Vector3(0.3f, 0f, 0f));
								break;
							case 1:
								this.maidArray[k].SetPos(new Vector3(-0.3f, 0f, 0f));
								break;
							case 2:
								this.maidArray[k].SetPos(new Vector3(0.7f, 0f, 0.4f));
								break;
							case 3:
								this.maidArray[k].SetPos(new Vector3(-0.7f, 0f, 0.4f));
								break;
							case 4:
								this.maidArray[k].SetPos(new Vector3(1f, 0f, 0.9f));
								break;
							case 5:
								this.maidArray[k].SetPos(new Vector3(-1f, 0f, 0.9f));
								break;
							}
						}
					}
					else
					{
						float num = 0f;
						if (this.selectList.Count >= 11)
						{
							num = -0.4f;
							if (this.selectList.Count % 2 == 1)
							{
								switch (k)
								{
								case 0:
									this.maidArray[k].SetPos(new Vector3(0f, 0f, 0f + num));
									break;
								case 1:
									this.maidArray[k].SetPos(new Vector3(-0.5f, 0f, 0.2f + num));
									break;
								case 2:
									this.maidArray[k].SetPos(new Vector3(0.5f, 0f, 0.2f + num));
									break;
								case 3:
									this.maidArray[k].SetPos(new Vector3(-0.9f, 0f, 0.55f + num));
									break;
								case 4:
									this.maidArray[k].SetPos(new Vector3(0.9f, 0f, 0.55f + num));
									break;
								case 5:
									this.maidArray[k].SetPos(new Vector3(-1.25f, 0f, 0.9f + num));
									break;
								case 6:
									this.maidArray[k].SetPos(new Vector3(1.25f, 0f, 0.9f + num));
									break;
								case 7:
									this.maidArray[k].SetPos(new Vector3(-1.57f, 0f, 1.3f + num));
									break;
								case 8:
									this.maidArray[k].SetPos(new Vector3(1.57f, 0f, 1.3f + num));
									break;
								case 9:
									this.maidArray[k].SetPos(new Vector3(-1.77f, 0f, 1.72f + num));
									break;
								case 10:
									this.maidArray[k].SetPos(new Vector3(1.77f, 0f, 1.72f + num));
									break;
								case 11:
									this.maidArray[k].SetPos(new Vector3(-1.85f, 0f, 2.17f + num));
									break;
								case 12:
									this.maidArray[k].SetPos(new Vector3(1.85f, 0f, 2.17f + num));
									break;
								default:
									this.maidArray[k].SetPos(new Vector3(0f, 0f, 0.7f + num));
									break;
								}
							}
							else
							{
								switch (k)
								{
								case 0:
									this.maidArray[k].SetPos(new Vector3(0.25f, 0f, 0f + num));
									break;
								case 1:
									this.maidArray[k].SetPos(new Vector3(-0.25f, 0f, 0f + num));
									break;
								case 2:
									this.maidArray[k].SetPos(new Vector3(0.7f, 0f, 0.25f + num));
									break;
								case 3:
									this.maidArray[k].SetPos(new Vector3(-0.7f, 0f, 0.25f + num));
									break;
								case 4:
									this.maidArray[k].SetPos(new Vector3(1.05f, 0f, 0.6f + num));
									break;
								case 5:
									this.maidArray[k].SetPos(new Vector3(-1.05f, 0f, 0.6f + num));
									break;
								case 6:
									this.maidArray[k].SetPos(new Vector3(1.35f, 0f, 0.9f + num));
									break;
								case 7:
									this.maidArray[k].SetPos(new Vector3(-1.35f, 0f, 0.9f + num));
									break;
								case 8:
									this.maidArray[k].SetPos(new Vector3(1.6f, 0f, 1.3f + num));
									break;
								case 9:
									this.maidArray[k].SetPos(new Vector3(-1.6f, 0f, 1.3f + num));
									break;
								case 10:
									this.maidArray[k].SetPos(new Vector3(1.8f, 0f, 1.72f + num));
									break;
								case 11:
									this.maidArray[k].SetPos(new Vector3(-1.8f, 0f, 1.72f + num));
									break;
								case 12:
									this.maidArray[k].SetPos(new Vector3(1.9f, 0f, 2.17f + num));
									break;
								case 13:
									this.maidArray[k].SetPos(new Vector3(-1.9f, 0f, 2.17f + num));
									break;
								default:
									this.maidArray[k].SetPos(new Vector3(0f, 0f, 0.7f + num));
									break;
								}
							}
						}
						else if (this.selectList.Count >= 8)
						{
							if (this.selectList.Count >= 9)
							{
								num = -0.2f;
							}
							if (this.selectList.Count % 2 == 1)
							{
								switch (k)
								{
								case 0:
									this.maidArray[k].SetPos(new Vector3(0f, 0f, 0f + num));
									break;
								case 1:
									this.maidArray[k].SetPos(new Vector3(-0.55f, 0f, 0.2f + num));
									break;
								case 2:
									this.maidArray[k].SetPos(new Vector3(0.55f, 0f, 0.2f + num));
									break;
								case 3:
									this.maidArray[k].SetPos(new Vector3(-1f, 0f, 0.6f + num));
									break;
								case 4:
									this.maidArray[k].SetPos(new Vector3(1f, 0f, 0.6f + num));
									break;
								case 5:
									this.maidArray[k].SetPos(new Vector3(-1.35f, 0f, 1f + num));
									break;
								case 6:
									this.maidArray[k].SetPos(new Vector3(1.35f, 0f, 1f + num));
									break;
								case 7:
									this.maidArray[k].SetPos(new Vector3(-1.6f, 0f, 1.4f + num));
									break;
								case 8:
									this.maidArray[k].SetPos(new Vector3(1.6f, 0f, 1.4f + num));
									break;
								}
							}
							else
							{
								switch (k)
								{
								case 0:
									this.maidArray[k].SetPos(new Vector3(0.28f, 0f, 0f + num));
									break;
								case 1:
									this.maidArray[k].SetPos(new Vector3(-0.28f, 0f, 0f + num));
									break;
								case 2:
									this.maidArray[k].SetPos(new Vector3(0.78f, 0f, 0.3f + num));
									break;
								case 3:
									this.maidArray[k].SetPos(new Vector3(-0.78f, 0f, 0.3f + num));
									break;
								case 4:
									this.maidArray[k].SetPos(new Vector3(1.22f, 0f, 0.7f + num));
									break;
								case 5:
									this.maidArray[k].SetPos(new Vector3(-1.22f, 0f, 0.7f + num));
									break;
								case 6:
									this.maidArray[k].SetPos(new Vector3(1.55f, 0f, 1.1f + num));
									break;
								case 7:
									this.maidArray[k].SetPos(new Vector3(-1.55f, 0f, 1.1f + num));
									break;
								case 8:
									this.maidArray[k].SetPos(new Vector3(1.77f, 0f, 1.58f + num));
									break;
								case 9:
									this.maidArray[k].SetPos(new Vector3(-1.77f, 0f, 1.58f + num));
									break;
								}
							}
						}
					}
					zero2.y = (float)(Math.Atan2((double)this.maidArray[k].transform.position.x, (double)(this.maidArray[k].transform.position.z - 1.5f)) * 180.0 / 3.1415926535897931) + 180f;
					this.maidArray[k].SetRot(zero2);
					j = k;
				}
				this.isHaiti = false;
			}
			if (this.isYobidashi)
			{
				bool flag = false;
				for (int l = 0; l < this.maxMaidCnt; l = j + 1)
				{
					if (this.selectList.Count > l && this.maidArray[l] != null && this.maidArray[l].IsBusy)
					{
						flag = true;
					}
					j = l;
				}
				if (!flag)
				{
					for (int m = 0; m < this.selectList.Count; m = j + 1)
					{
						if ((m == this.maxMaidCnt - 1 || (m < this.maxMaidCnt - 1 && this.maidArray[m + 1] == null)) && this.maidArray[m] == null)
						{
							if ((m != 0 || !(this.maidArray[m + 1] == null) || !(this.maidArray[m] == null)) && (m <= 0 || !(this.maidArray[m - 1] != null) || this.maidArray[m - 1].IsBusy))
							{
								return;
							}
							if ((int)this.selectList[m] >= 12)
							{
								this.maidArray[m] = GameMain.Instance.CharacterMgr.GetStockMaid((int)this.selectList[m]);
								if (!this.maidArray[m].body0.isLoadedBody)
								{
									this.maidArray[m].DutPropAll();
									this.maidArray[m].AllProcPropSeqStart();
								}
								this.maidArray[m].Visible = true;
							}
							else if (this.sceneLevel != 5)
							{
								this.maidArray[m] = GameMain.Instance.CharacterMgr.Activate((int)this.selectList[m], (int)this.selectList[m], false, false);
								this.maidArray[m] = GameMain.Instance.CharacterMgr.CharaVisible((int)this.selectList[m], true, false);
							}
							else if (m == 0 && (int)this.selectList[m] == 0)
							{
								this.maidArray[m] = GameMain.Instance.CharacterMgr.Activate((int)this.selectList[m], (int)this.selectList[m], false, false);
								this.maidArray[m] = GameMain.Instance.CharacterMgr.CharaVisible((int)this.selectList[m], true, false);
							}
							else if (m == 0)
							{
								this.maidArray[m] = GameMain.Instance.CharacterMgr.Activate(0, (int)this.selectList[m], false, false);
								this.maidArray[m] = GameMain.Instance.CharacterMgr.CharaVisible(0, true, false);
							}
							else if ((int)this.selectList[m] + 1 == 12)
							{
								this.maidArray[m] = GameMain.Instance.CharacterMgr.GetStockMaid((int)this.selectList[m]);
								if (!this.maidArray[m].body0.isLoadedBody)
								{
									this.maidArray[m].DutPropAll();
									this.maidArray[m].AllProcPropSeqStart();
								}
								this.maidArray[m].Visible = true;
							}
							else
							{
								this.maidArray[m] = GameMain.Instance.CharacterMgr.Activate((int)this.selectList[m] + 1, (int)this.selectList[m], false, false);
								this.maidArray[m] = GameMain.Instance.CharacterMgr.CharaVisible((int)this.selectList[m] + 1, true, false);
							}
							if (this.maidArray[m] && this.maidArray[m].Visible)
							{
								this.maidArray[m].body0.boHeadToCam = true;
								this.maidArray[m].body0.boEyeToCam = true;
							}
						}
						j = m;
					}
					this.isHaiti = true;
					this.isYobidashi = false;
				}
			}
			if (this.sceneLevel == 5 && !this.isFadeOut && Input.GetKeyDown(KeyCode.F7) && this.getModKeyPressing(ManyMaids.modKey.Shift))
			{
				if (!this.isF7S)
				{
					this.isF7S = true;
					this.isF7SInit = true;
					this.bGui = false;
					base.Preferences["config"]["shift_f7"].Value = "true";
					base.SaveConfig();
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
					this.bgmCombo.selectedItemIndex = 2;
				}
				else
				{
					this.isF7S = false;
					base.Preferences["config"]["shift_f7"].Value = "false";
					base.SaveConfig();
					if (!this.isF7)
					{
						this.init2();
						this.okFlg = false;
						this.bGui = false;
					}
					GameMain.Instance.SoundMgr.PlaySe("se003.ogg", false);
				}
			}
			else if (this.sceneLevel == 5 && !this.isFadeOut && Input.GetKeyDown(KeyCode.F7))
			{
				if (this.isF7S && !this.isF7)
				{
					this.okFlg = true;
					this.faceFlg = false;
					this.poseFlg = false;
					this.sceneFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
					this.bGui = true;
					this.isGuiInit = true;
					this.isF7 = true;
					this.bgmCombo.selectedItemIndex = 2;
				}
				else if (this.isF7S && this.isF7)
				{
					this.bGui = false;
					this.isF7 = false;
				}
				else if (!this.isF7)
				{
					this.init();
					this.okFlg = true;
					this.isGuiInit = true;
					this.comboBoxControl.selectedItemIndex = 0;
					this.comboBoxList = new GUIContent[11];
					this.comboBoxList[0] = new GUIContent("通常");
					this.comboBoxList[1] = new GUIContent("横一列");
					this.comboBoxList[2] = new GUIContent("縦一列");
					this.comboBoxList[3] = new GUIContent("斜め");
					this.comboBoxList[4] = new GUIContent("円（外向き）");
					this.comboBoxList[5] = new GUIContent("円（内向き）");
					this.comboBoxList[6] = new GUIContent("扇");
					this.comboBoxList[7] = new GUIContent("Ｖ");
					this.comboBoxList[8] = new GUIContent("^");
					this.comboBoxList[9] = new GUIContent("Ｍ");
					this.comboBoxList[10] = new GUIContent("Ｗ");
					this.listStyle.normal.textColor = Color.white;
					this.listStyle.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
					GUIStyleState onHover = this.listStyle.onHover;
					GUIStyleState hover = this.listStyle.hover;
					Texture2D texture2D = new Texture2D(2, 2);
					Texture2D background = texture2D;
					hover.background = texture2D;
					onHover.background = background;
					RectOffset padding = this.listStyle.padding;
					RectOffset padding2 = this.listStyle.padding;
					RectOffset padding3 = this.listStyle.padding;
					int num2 = this.listStyle.padding.bottom = 4;
					padding3.top = num2;
					padding2.right = num2;
					padding.left = num2;
					this.listStyle.fontSize = this.GetPix(13);
					this.isYobidashi = true;
					this.bGui = true;
					this.isFadeOut = true;
					if (!this.isF7S)
					{
						this.maidArray[0] = GameMain.Instance.CharacterMgr.GetMaid(0);
					}
					List<Maid> stockMaidList = GameMain.Instance.CharacterMgr.GetStockMaidList();
					for (int n = 0; n < stockMaidList.Count; n = j + 1)
					{
						if (this.maidArray[0] == stockMaidList[n])
						{
							this.editMaid = n;
						}
						j = n;
					}
					this.selectList = new ArrayList();
					this.selectList.Add(this.editMaid);
					this.bgmCombo.selectedItemIndex = 2;
					try
					{
						this.shodaiFlg[(int)this.selectList[0]] = false;
						TMorph morph = this.maidArray[0].body0.Face.morph;
						float[] fieldValue = ManyMaids.GetFieldValue<TMorph, float[]>(morph, "BlendValues");
						float num3 = fieldValue[(int)morph.hash["tangopen"]];
					}
					catch
					{
						this.shodaiFlg[(int)this.selectList[0]] = true;
					}
					if (!this.isVR)
					{
						this.eyeL[(int)this.selectList[0]] = this.maidArray[0].body0.quaDefEyeL.eulerAngles;
						this.eyeR[(int)this.selectList[0]] = this.maidArray[0].body0.quaDefEyeR.eulerAngles;
					}
					this.isF7 = true;
				}
				else
				{
					if (!this.isF7S)
					{
						this.init();
						this.maidArray[0] = GameMain.Instance.CharacterMgr.Activate(0, this.editMaid, false, false);
						this.maidArray[0] = GameMain.Instance.CharacterMgr.CharaVisible(0, true, false);
						this.okFlg = false;
					}
					else
					{
						this.isF7SInit = true;
					}
					this.bGui = false;
					this.isF7 = false;
				}
			}
			if (this.sceneLevel == 5 && this.isF7S && this.isF7SInit)
			{
				this.isF7SInit = false;
				this.init2();
				this.okFlg = true;
				this.ikMaid = 0;
				this.ikBui = 5;
				this.ikMode[0] = 0;
				this.bgmCombo.selectedItemIndex = 2;
				this.maidArray[0] = GameMain.Instance.CharacterMgr.GetMaid(0);
				List<Maid> stockMaidList2 = GameMain.Instance.CharacterMgr.GetStockMaidList();
				for (int num4 = 0; num4 < stockMaidList2.Count; num4 = j + 1)
				{
					if (this.maidArray[0] == stockMaidList2[num4])
					{
						this.editMaid = num4;
					}
					j = num4;
				}
				this.selectList = new ArrayList();
				this.selectList.Add(this.editMaid);
				this.listStyle.normal.textColor = Color.white;
				this.listStyle.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
				GUIStyleState onHover2 = this.listStyle.onHover;
				GUIStyleState hover2 = this.listStyle.hover;
				Texture2D texture2D2 = new Texture2D(2, 2);
				Texture2D background2 = texture2D2;
				hover2.background = texture2D2;
				onHover2.background = background2;
				RectOffset padding4 = this.listStyle.padding;
				RectOffset padding5 = this.listStyle.padding;
				RectOffset padding6 = this.listStyle.padding;
				int num5 = this.listStyle.padding.bottom = 4;
				padding6.top = num5;
				padding5.right = num5;
				padding4.left = num5;
				this.listStyle.fontSize = this.GetPix(13);
				try
				{
					this.shodaiFlg[(int)this.selectList[0]] = false;
					TMorph morph2 = this.maidArray[0].body0.Face.morph;
					float[] fieldValue2 = ManyMaids.GetFieldValue<TMorph, float[]>(morph2, "BlendValues");
					float num6 = fieldValue2[(int)morph2.hash["tangopen"]];
				}
				catch
				{
					this.shodaiFlg[(int)this.selectList[0]] = true;
				}
				if (!this.isVR)
				{
					this.eyeL[(int)this.selectList[0]] = this.maidArray[0].body0.quaDefEyeL.eulerAngles;
					this.eyeR[(int)this.selectList[0]] = this.maidArray[0].body0.quaDefEyeR.eulerAngles;
				}
				this.bGui = false;
			}
			if (this.sceneLevel == 3 && !this.isFadeOut && Input.GetKeyDown(KeyCode.F7))
			{
				GameObject gameObject = GameObject.Find("UI Root");
				GameObject gameObject2 = gameObject.transform.Find("DailyPanel").gameObject;
				if (!this.okFlg && !gameObject2.activeSelf)
				{
					return;
				}
				bool flag2 = GameMain.Instance.CharacterMgr.status.GetFlag("時間帯") == 3;
				CharacterMgr characterMgr = GameMain.Instance.CharacterMgr;
				for (int num7 = 0; num7 < characterMgr.GetStockMaidCount(); num7 = j + 1)
				{
					characterMgr.GetStockMaidList()[num7].Visible = false;
					j = num7;
				}
				if (this.isPanel)
				{
					this.init();
					this.okFlg = true;
					this.isF7 = true;
					this.isPanel = false;
					this.isGuiInit = true;
					this.comboBoxControl.selectedItemIndex = 0;
					this.comboBoxList = new GUIContent[11];
					this.comboBoxList[0] = new GUIContent("通常");
					this.comboBoxList[1] = new GUIContent("横一列");
					this.comboBoxList[2] = new GUIContent("縦一列");
					this.comboBoxList[3] = new GUIContent("斜め");
					this.comboBoxList[4] = new GUIContent("円（外向き）");
					this.comboBoxList[5] = new GUIContent("円（内向き）");
					this.comboBoxList[6] = new GUIContent("扇");
					this.comboBoxList[7] = new GUIContent("Ｖ");
					this.comboBoxList[8] = new GUIContent("^");
					this.comboBoxList[9] = new GUIContent("Ｍ");
					this.comboBoxList[10] = new GUIContent("Ｗ");
					this.listStyle.normal.textColor = Color.white;
					this.listStyle.normal.background = this.MakeTex(2, 2, new Color(0f, 0f, 0f, 0.5f));
					GUIStyleState onHover3 = this.listStyle.onHover;
					GUIStyleState hover3 = this.listStyle.hover;
					Texture2D texture2D3 = new Texture2D(2, 2);
					Texture2D background3 = texture2D3;
					hover3.background = texture2D3;
					onHover3.background = background3;
					RectOffset padding7 = this.listStyle.padding;
					RectOffset padding8 = this.listStyle.padding;
					RectOffset padding9 = this.listStyle.padding;
					int num8 = this.listStyle.padding.bottom = 4;
					padding9.top = num8;
					padding8.right = num8;
					padding7.left = num8;
					this.listStyle.fontSize = this.GetPix(13);
					GameMain.Instance.BgMgr.ChangeBg("Theater");
					if (!this.isVR)
					{
						GameMain.Instance.MainCamera.Reset(CameraMain.CameraType.Target, true);
						CameraMain cameraMain = GameMain.Instance.MainCamera;
						cameraMain.SetTargetPos(new Vector3(0f, 0.9f, 0f), true);
						cameraMain.SetDistance(3f, true);
					}
					this.isYobidashi = true;
					this.bGui = false;
					this.isFadeOut = true;
					GameMain.Instance.MainCamera.FadeOut(0f, false, null, true, default(Color));
					this.selectList = new ArrayList();
					this.selectList.Add(0);
					GameMain.Instance.SoundMgr.PlayBGM("BGM008.ogg", 0f, true);
					this.bgmCombo.selectedItemIndex = 0;
				}
				else
				{
					this.init();
					this.isPanel = true;
					this.isF7 = false;
					this.bGui = false;
					GameMain.Instance.SoundMgr.PlayBGM("BGM009.ogg", 1f, true);
					if (flag2)
					{
						GameMain.Instance.BgMgr.ChangeBg("ShinShitsumu_ChairRot_Night");
					}
					else
					{
						GameMain.Instance.BgMgr.ChangeBg("ShinShitsumu_ChairRot");
					}
					if (!this.isVR)
					{
						GameMain.Instance.MainCamera.Reset(CameraMain.CameraType.Target, true);
						GameMain.Instance.MainCamera.SetTargetPos(new Vector3(0.5609447f, 1.380762f, -1.382336f), true);
						GameMain.Instance.MainCamera.SetDistance(1.6f, true);
						GameMain.Instance.MainCamera.SetAroundAngle(new Vector2(245.5691f, 6.273283f), true);
					}
				}
				gameObject2.SetActive(this.isPanel);
			}
			if (!this.okFlg)
			{
				if (this.maidArray[0] && this.maidArray[0].Visible)
				{
					int num9 = (int)this.maidArray[0].transform.position.y;
					if (num9 == 100)
					{
						this.okFlg = true;
						Vector3 vector = Vector3.zero;
						this.maidArray[0].SetPos(vector);
						this.isScript = true;
					}
				}
				else if (this.maidArray[0] && !this.maidArray[0].Visible)
				{
					this.maidArray[0] = GameMain.Instance.CharacterMgr.GetMaid(0);
				}
				else if (!this.maidArray[0])
				{
					this.maidArray[0] = GameMain.Instance.CharacterMgr.GetMaid(0);
				}
			}
			if (!this.okFlg)
			{
				return;
			}
			this.hFlg = false;
			this.mFlg = false;
			this.fFlg = false;
			this.sFlg = false;
			this.atFlg = false;
			this.yFlg = false;
			this.escFlg = false;
			this.maidCnt = 0;
			if (!this.cameraObj && !this.isVR)
			{
				this.cameraObj = new GameObject("subCamera");
				this.subcamera = this.cameraObj.AddComponent<Camera>();
				this.subcamera.CopyFrom(Camera.main);
				this.cameraObj.SetActive(true);
				this.subcamera.clearFlags = CameraClearFlags.Depth;
				this.subcamera.cullingMask = 256;
				this.subcamera.depth = 1f;
				this.subcamera.transform.parent = this.mainCamera.transform;
				float num10 = 2f;
				if (Application.unityVersion.StartsWith("4"))
				{
					num10 = 1f;
				}
				GameObject gameObject3 = new GameObject("Light");
				gameObject3.AddComponent<Light>();
				this.lightList.Add(gameObject3);
				this.lightColorR.Add(1f);
				this.lightColorG.Add(1f);
				this.lightColorB.Add(1f);
				this.lightIndex.Add(0);
				this.lightX.Add(40f);
				this.lightY.Add(180f);
				this.lightAkarusa.Add(num10);
				this.lightKage.Add(0.098f);
				this.lightRange.Add(50f);
				gameObject3.transform.position = GameMain.Instance.MainLight.transform.position;
				gameObject3.GetComponent<Light>().intensity = num10;
				gameObject3.GetComponent<Light>().spotAngle = 50f;
				gameObject3.GetComponent<Light>().range = 10f;
				gameObject3.GetComponent<Light>().type = LightType.Directional;
				gameObject3.GetComponent<Light>().color = new Color(0.5f, 1f, 0f);
				gameObject3.GetComponent<Light>().cullingMask = 256;
			}
			if (this.getModKeyPressing(ManyMaids.modKey.Shift) && !this.getModKeyPressing(ManyMaids.modKey.Ctrl) && !this.getModKeyPressing(ManyMaids.modKey.Alt) && !Input.GetKey(KeyCode.Space) && !Input.GetKey(KeyCode.Z) && !Input.GetKey(KeyCode.X) && !Input.GetKey(KeyCode.W) && !Input.GetKey(KeyCode.Q) && !Input.GetKey(KeyCode.R) && !Input.GetKey(KeyCode.E) && !Input.GetKey(KeyCode.Y) && !Input.GetKey(KeyCode.V) && !Input.GetKey(KeyCode.C) && !Input.GetKey(KeyCode.D) && !Input.GetKey(KeyCode.S))
			{
				float axis = Input.GetAxis("Mouse ScrollWheel");
				if (axis > 0f)
				{
					this.mainCamera.SetDistance(this.mainCamera.GetDistance() - 0.5f, true);
					if (this.mainCamera.GetDistance() < 0.1f)
					{
						this.mainCamera.SetDistance(0.1f, true);
					}
				}
				else if (axis < 0f)
				{
					this.mainCamera.SetDistance(this.mainCamera.GetDistance() + 0.5f, true);
					if (this.mainCamera.GetDistance() > 25f)
					{
						this.mainCamera.SetDistance(25f, true);
					}
				}
			}
			for (int num11 = 0; num11 < this.maxMaidCnt; num11 = j + 1)
			{
				if (this.maidArray[num11] && this.maidArray[num11].Visible)
				{
					j = this.maidCnt;
					this.maidCnt = j + 1;
				}
				j = num11;
			}
			if (this.maidArray[0] != null && this.maidArray[0].Visible)
			{
				if (this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.speed = 5f * Time.deltaTime * 60f;
				}
				else
				{
					this.speed = 1f * Time.deltaTime * 60f;
				}
				Vector3 vector2 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector3 = this.mainCameraTransform.TransformDirection(Vector3.right);
				Vector3 vector4 = this.mainCameraTransform.TransformDirection(Vector3.up);
				if (!this.isVR || this.isVR2)
				{
					if (!this.isVR)
					{
						if (this.isBloom)
						{
							Bloom fieldValue3 = ManyMaids.GetFieldValue<CameraMain, Bloom>(this.mainCamera, "m_gcBloom");
							fieldValue3.enabled = true;
							fieldValue3.bloomIntensity = this.bloom1;
							fieldValue3.bloomBlurIterations = (int)this.bloom2;
							fieldValue3.bloomThreshholdColor = new Color(1f - this.bloom3, 1f - this.bloom4, 1f - this.bloom5);
							if (this.isBloomA)
							{
								fieldValue3.hdr = 1;
							}
							else
							{
								fieldValue3.hdr = 0;
							}
							this.isBloom2 = true;
						}
						else if (this.isBloom2)
						{
							this.isBloom2 = false;
							Bloom fieldValue4 = ManyMaids.GetFieldValue<CameraMain, Bloom>(this.mainCamera, "m_gcBloom");
							fieldValue4.enabled = true;
							fieldValue4.bloomIntensity = 2.85f;
							fieldValue4.hdr = 0;
							fieldValue4.bloomThreshholdColor = new Color(1f, 1f, 1f);
							fieldValue4.bloomBlurIterations = 3;
						}
						if (this.isDepth)
						{
							this.depth_field_.enabled = true;
							this.depth_field_.focalLength = this.depth1;
							this.depth_field_.focalSize = this.depth2;
							this.depth_field_.aperture = this.depth3;
							this.depth_field_.maxBlurSize = this.depth4;
							if (this.isDepthA)
							{
								this.depth_field_.visualizeFocus = true;
							}
							else
							{
								this.depth_field_.visualizeFocus = false;
							}
						}
						else
						{
							if (this.depth_field_ == null)
							{
								this.depth_field_ = GameMain.Instance.MainCamera.gameObject.AddComponent<DepthOfFieldScatter>();
								if (this.depth_field_.dofHdrShader == null)
								{
									this.depth_field_.dofHdrShader = Shader.Find("Hidden/Dof/DepthOfFieldHdr");
								}
								if (this.depth_field_.dx11BokehShader == null)
								{
									this.depth_field_.dx11BokehShader = Shader.Find("Hidden/Dof/DX11Dof");
								}
								if (this.depth_field_.dx11BokehTexture == null)
								{
									this.depth_field_.dx11BokehTexture = (Resources.Load("Textures/hexShape") as Texture2D);
								}
							}
							this.depth_field_.enabled = false;
						}
						if (this.isFog)
						{
							if (this.fog_.fogShader == null)
							{
								this.fog_.fogShader = Shader.Find("Hidden/GlobalFog");
							}
							this.fog_.enabled = true;
							this.fog_.startDistance = this.fog1;
							this.fog_.globalDensity = this.fog2;
							this.fog_.heightScale = this.fog3;
							this.fog_.height = this.fog4;
							this.fog_.globalFogColor.r = this.fog5;
							this.fog_.globalFogColor.g = this.fog6;
							this.fog_.globalFogColor.b = this.fog7;
						}
						else
						{
							if (this.fog_ == null)
							{
								this.fog_ = GameMain.Instance.MainCamera.gameObject.AddComponent<GlobalFog>();
							}
							this.fog_.enabled = false;
						}
						if (this.isSepia != this.isSepian)
						{
							this.isSepia = this.isSepian;
							if (this.isSepia)
							{
								if (this.sepia_tone_.shader == null)
								{
									this.sepia_tone_.shader = Shader.Find("Hidden/Sepiatone Effect");
								}
								this.sepia_tone_.enabled = true;
							}
							else
							{
								if (this.sepia_tone_ == null)
								{
									this.sepia_tone_ = GameMain.Instance.MainCamera.gameObject.AddComponent<SepiaToneEffect>();
								}
								this.sepia_tone_.enabled = false;
							}
						}
						if (this.bokashi > 0f)
						{
							Blur component = GameMain.Instance.MainCamera.gameObject.GetComponent<Blur>();
							component.enabled = true;
							component.blurSize = this.bokashi / 10f;
							component.blurIterations = 0;
							component.downsample = 0;
							if (this.bokashi > 3f)
							{
								Blur blur = component;
								Blur blur2 = blur;
								blur2.blurSize -= 0.3f;
								component.blurIterations = 1;
								component.downsample = 1;
							}
						}
						else
						{
							Blur component2 = GameMain.Instance.MainCamera.gameObject.GetComponent<Blur>();
							component2.enabled = false;
						}
						if (this.kamiyure > 0f)
						{
							for (int num12 = 0; num12 < this.maidCnt; num12 = j + 1)
							{
								Maid maid = this.maidArray[num12];
								for (int num13 = 0; num13 < maid.body0.goSlot.Count; num13 = j + 1)
								{
									if (maid.body0.goSlot[num13].obj != null)
									{
										DynamicBone component3 = maid.body0.goSlot[num13].obj.GetComponent<DynamicBone>();
										if (component3 != null && component3.enabled)
										{
											component3.m_Gravity = new Vector3(this.softG.x * 5f, this.softG.y * 5f + this.kamiyure, this.softG.z * 5f);
										}
									}
									List<THair1> fieldValue5 = ManyMaids.GetFieldValue<TBoneHair_, List<THair1>>(maid.body0.goSlot[num13].bonehair, "hair1list");
									for (int num14 = 0; num14 < fieldValue5.Count; num14 = j + 1)
									{
										fieldValue5[num14].SoftG = new Vector3(this.softG.x, this.softG.y + this.kamiyure, this.softG.z);
										j = num14;
									}
									j = num13;
								}
								j = num12;
							}
						}
						if (this.isBlur)
						{
							Vignetting component4 = GameMain.Instance.MainCamera.gameObject.GetComponent<Vignetting>();
							component4.mode = 0;
							component4.intensity = this.blur1;
							component4.chromaticAberration = this.blur4;
							component4.blur = this.blur2;
							component4.blurSpread = this.blur3;
							component4.enabled = true;
							this.isBlur2 = true;
						}
						else if (this.isBlur2)
						{
							this.isBlur2 = false;
							Vignetting component5 = GameMain.Instance.MainCamera.gameObject.GetComponent<Vignetting>();
							component5.mode = 0;
							component5.intensity = -3.98f;
							component5.chromaticAberration = -0.75f;
							component5.axialAberration = 1.18f;
							component5.blurSpread = 4.19f;
							component5.luminanceDependency = 0.494f;
							component5.blurDistance = 1.71f;
							component5.enabled = false;
						}
					}
					if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.I))
					{
						Transform transform = GameMain.Instance.MainLight.transform;
						transform.eulerAngles -= Vector3.right / 2f;
						this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.K))
					{
						if (GameMain.Instance.MainLight.transform.eulerAngles.x < 85f)
						{
							Transform transform2 = GameMain.Instance.MainLight.transform;
							transform2.eulerAngles += Vector3.right / 2f;
							this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.J))
					{
						Transform transform3 = GameMain.Instance.MainLight.transform;
						transform3.eulerAngles -= Vector3.up / 1.5f;
						this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.L))
					{
						Transform transform4 = GameMain.Instance.MainLight.transform;
						transform4.eulerAngles += Vector3.up / 1.5f;
						this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.BackQuote))
					{
						GameMain.Instance.MainLight.Reset();
						GameMain.Instance.MainLight.SetIntensity(0.95f);
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
						this.lightIndex[0] = 0;
						this.lightColorR[0] = 1f;
						this.lightColorG[0] = 1f;
						this.lightColorB[0] = 1f;
						this.lightX[0] = 40f;
						this.lightY[0] = 180f;
						this.lightAkarusa[0] = 0.95f;
						this.lightKage[0] = 0.098f;
						this.lightRange[0] = 50f;
						this.bgObject.SetActive(true);
						this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
						this.isIdx1 = false;
						this.isIdx2 = false;
						this.isIdx3 = false;
						this.isIdx4 = false;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Minus) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						List<float> list;
						(list = this.lightColorR)[0] = list[0] + 0.01f;
						if (this.lightColorR[0] > 1f)
						{
							this.lightColorR[0] = 1f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Quote) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						List<float> list2;
						(list2 = this.lightColorG)[0] = list2[0] + 0.01f;
						if (this.lightColorG[0] > 1f)
						{
							this.lightColorG[0] = 1f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.LeftBracket) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						List<float> list3;
						(list3 = this.lightColorB)[0] = list3[0] + 0.01f;
						if (this.lightColorB[0] > 1f)
						{
							this.lightColorB[0] = 1f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Minus))
					{
						List<float> list4;
						(list4 = this.lightColorR)[0] = list4[0] - 0.01f;
						if (this.lightColorR[0] < 0f)
						{
							this.lightColorR[0] = 0f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Quote))
					{
						List<float> list5;
						(list5 = this.lightColorG)[0] = list5[0] - 0.01f;
						if (this.lightColorG[0] < 0f)
						{
							this.lightColorG[0] = 0f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.LeftBracket))
					{
						List<float> list6;
						(list6 = this.lightColorB)[0] = list6[0] - 0.01f;
						if (this.lightColorB[0] < 0f)
						{
							this.lightColorB[0] = 0f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Alpha0))
					{
						Light component6 = GameMain.Instance.MainLight.GetComponent<Light>();
						component6.intensity += 0.12f * Time.deltaTime;
						this.lightAkarusa[0] = GameMain.Instance.MainLight.GetComponent<Light>().intensity;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.P))
					{
						Light component7 = GameMain.Instance.MainLight.GetComponent<Light>();
						component7.intensity -= 0.12f * Time.deltaTime;
						this.lightAkarusa[0] = GameMain.Instance.MainLight.GetComponent<Light>().intensity;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Alpha9))
					{
						Light component8 = GameMain.Instance.MainLight.GetComponent<Light>();
						component8.spotAngle += 0.2f;
						Light component9 = GameMain.Instance.MainLight.GetComponent<Light>();
						component9.range += 0.2f;
						this.lightRange[0] = GameMain.Instance.MainLight.GetComponent<Light>().spotAngle;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.O))
					{
						Light component10 = GameMain.Instance.MainLight.GetComponent<Light>();
						component10.spotAngle -= 0.2f;
						Light component11 = GameMain.Instance.MainLight.GetComponent<Light>();
						component11.range -= 0.2f;
						this.lightRange[0] = GameMain.Instance.MainLight.GetComponent<Light>().spotAngle;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKeyDown(KeyCode.U))
					{
						List<int> list7;
						(list7 = this.lightIndex)[0] = list7[0] + 1;
						if (this.lightIndex[0] == 4)
						{
							this.lightIndex[0] = 0;
						}
						this.lightColorR[0] = 1f;
						this.lightColorG[0] = 1f;
						this.lightColorB[0] = 1f;
						this.lightX[0] = 40f;
						this.lightY[0] = 180f;
						this.lightAkarusa[0] = 0.95f;
						this.lightKage[0] = 0.098f;
						this.lightRange[0] = 50f;
						GameMain.Instance.MainLight.Reset();
						GameMain.Instance.MainLight.SetIntensity(0.95f);
						GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 50f;
						GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
						GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
						if (this.lightIndex[0] == 0)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
							this.bgObject.SetActive(true);
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
						}
						else if (this.lightIndex[0] == 1)
						{
							Transform transform5 = GameMain.Instance.MainLight.transform;
							transform5.eulerAngles += Vector3.right * 40f;
							this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
							GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Spot;
						}
						else if (this.lightIndex[0] == 2)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Point;
						}
						else if (this.lightIndex[0] == 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
							this.bgObject.SetActive(false);
						}
						this.isIdx1 = false;
						this.isIdx2 = false;
						this.isIdx3 = false;
						this.isIdx4 = false;
					}
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Insert))
				{
					Transform transform6 = GameMain.Instance.MainLight.transform;
					transform6.eulerAngles -= Vector3.right / 2f;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Delete))
				{
					if (GameMain.Instance.MainLight.transform.eulerAngles.x < 85f)
					{
						Transform transform7 = GameMain.Instance.MainLight.transform;
						transform7.eulerAngles += Vector3.right / 2f;
					}
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Home))
				{
					Transform transform8 = GameMain.Instance.MainLight.transform;
					transform8.eulerAngles -= Vector3.up / 1.5f;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.End))
				{
					Transform transform9 = GameMain.Instance.MainLight.transform;
					transform9.eulerAngles += Vector3.up / 1.5f;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.BackQuote))
				{
					GameMain.Instance.MainLight.Reset();
					GameMain.Instance.MainLight.SetIntensity(0.95f);
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.PageUp))
				{
					Light component12 = GameMain.Instance.MainLight.GetComponent<Light>();
					component12.intensity += 0.1f * Time.deltaTime;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.PageDown))
				{
					Light component13 = GameMain.Instance.MainLight.GetComponent<Light>();
					component13.intensity -= 0.1f * Time.deltaTime;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Quote))
				{
					if (this.lightIndex[0] == 1)
					{
						Light component14 = GameMain.Instance.MainLight.GetComponent<Light>();
						component14.spotAngle += 0.2f;
					}
					else
					{
						Light component15 = GameMain.Instance.MainLight.GetComponent<Light>();
						component15.range += 0.2f;
					}
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.LeftBracket))
				{
					if (this.lightIndex[0] == 1)
					{
						Light component16 = GameMain.Instance.MainLight.GetComponent<Light>();
						component16.spotAngle -= 0.2f;
					}
					else
					{
						Light component17 = GameMain.Instance.MainLight.GetComponent<Light>();
						component17.range -= 0.2f;
					}
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKeyDown(KeyCode.Minus))
				{
					List<int> list8;
					(list8 = this.lightIndex)[0] = list8[0] + 1;
					if (this.lightIndex[0] == 3)
					{
						this.lightIndex[0] = 0;
					}
					GameMain.Instance.MainLight.Reset();
					GameMain.Instance.MainLight.SetIntensity(0.95f);
					GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 50f;
					GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
					GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
					if (this.lightIndex[0] == 0)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
					}
					else if (this.lightIndex[0] == 1)
					{
						Transform transform10 = GameMain.Instance.MainLight.transform;
						transform10.eulerAngles += Vector3.right * 40f;
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Spot;
					}
					else if (this.lightIndex[0] == 2)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Point;
					}
				}
				for (int num15 = 0; num15 < this.lightList.Count; num15 = j + 1)
				{
					if (num15 > 0)
					{
						this.lightList[num15].GetComponent<Light>().color = new Color(this.lightColorR[num15], this.lightColorG[num15], this.lightColorB[num15]);
						this.lightList[num15].GetComponent<Light>().intensity = this.lightAkarusa[num15];
						this.lightList[num15].GetComponent<Light>().spotAngle = this.lightRange[num15];
						this.lightList[num15].GetComponent<Light>().range = this.lightRange[num15] / 5f;
						if (!Input.GetKey(KeyCode.X) && (!Input.GetKey(KeyCode.Z) || !this.getModKeyPressing(ManyMaids.modKey.Shift)))
						{
							this.lightList[num15].transform.eulerAngles = new Vector3(this.lightX[num15], this.lightY[num15], 18f);
						}
					}
					else
					{
						GameMain.Instance.MainLight.SetIntensity(this.lightAkarusa[0]);
						GameMain.Instance.MainLight.GetComponent<Light>().shadowStrength = this.lightKage[0];
						if (!Input.GetKey(KeyCode.X) && (!Input.GetKey(KeyCode.Z) || !this.getModKeyPressing(ManyMaids.modKey.Shift)))
						{
							GameMain.Instance.MainLight.SetRotation(new Vector3(this.lightX[0], this.lightY[0], 18f));
						}
						GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = this.lightRange[num15];
						GameMain.Instance.MainLight.GetComponent<Light>().range = this.lightRange[num15] / 5f;
						if (this.lightIndex[num15] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					j = num15;
				}
				bool flag3 = false;
				if (this.sceneLevel == 5 && (Input.GetKeyDown(KeyCode.F12) || (Input.GetKey(KeyCode.Q) && this.getModKeyPressing(ManyMaids.modKey.Shift))))
				{
					for (int num16 = 0; num16 < this.maidCnt; num16 = j + 1)
					{
						if (this.goSlot[(int)this.selectList[num16]] != null)
						{
							this.maidArray[num16].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num16]]);
							for (int num17 = 0; num17 < this.bodyHit[(int)this.selectList[num16]].Count; num17 = j + 1)
							{
								this.maidArray[num16].body0.goSlot[num17].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num16]][num17];
								j = num17;
							}
						}
						j = num16;
					}
				}
				for (int num18 = 0; num18 < this.maidCnt; num18 = j + 1)
				{
					if (!this.isVR && this.sceneLevel == 5 && num18 == this.isEditNo)
					{
						bool flag4 = this.shodaiFlg[(int)this.selectList[num18]];
						this.shodaiFlg[(int)this.selectList[num18]] = false;
						try
						{
							TMorph morph3 = this.maidArray[num18].body0.Face.morph;
							float[] fieldValue6 = ManyMaids.GetFieldValue<TMorph, float[]>(morph3, "BlendValues");
							float num19 = fieldValue6[(int)morph3.hash["tangopen"]];
						}
						catch
						{
							this.shodaiFlg[(int)this.selectList[num18]] = true;
						}
						if (this.shodaiFlg[(int)this.selectList[num18]] != flag4 && !this.isVR)
						{
							this.eyeL[(int)this.selectList[num18]] = this.maidArray[num18].body0.quaDefEyeL.eulerAngles;
							this.eyeR[(int)this.selectList[num18]] = this.maidArray[num18].body0.quaDefEyeR.eulerAngles;
						}
					}
					if (this.maidArray[num18] && this.maidArray[num18].Visible && this.isStop[num18])
					{
						this.maidArray[num18].body0.m_Bones.GetComponent<Animation>().Stop();
					}
					if (this.sceneLevel == 5 && this.editSelectMaid == this.maidArray[num18])
					{
						flag3 = true;
					}
					Maid maid2 = this.maidArray[num18];
					j = num18;
				}
				if (this.sceneLevel == 5 && !flag3 && this.maidCnt > 0)
				{
					this.isEditNo = 0;
					SceneEdit component18 = GameObject.Find("__SceneEdit__").GetComponent<SceneEdit>();
					ManyMaids.SetFieldValue<SceneEdit, Maid>(component18, "m_maid", this.maidArray[0]);
				}
				int num20 = 0;
				while (num20 < this.maidCnt)
				{
					Transform transform11 = this.maidArray[num20].transform;
					Maid maid3 = this.maidArray[num20];
					if (this.cafeFlg[num20])
					{
						ref int ptr = ref this.cafeCount[num20];
						ref int ptr2 = ref ptr;
						j = ptr;
						ptr2 = j + 1;
						if (this.cafeCount[num20] > 1)
						{
							maid3.DelProp(MPN.acckami, true);
							maid3.SetProp("handitem", "HandItemR_Etoile_Teacup_I_.menu", 0, true, false);
							maid3.AllProcPropSeqStart();
							this.cafeFlg[num20] = false;
							this.cafeCount[num20] = 0;
						}
					}
					KeyCode key;
					if (num20 >= 14)
					{
						bool flag5 = false;
						bool flag6 = false;
						for (int num21 = 0; num21 < this.keyArray.Length; num21 = j + 1)
						{
							if (Input.GetKey(this.keyArray[num21]))
							{
								flag5 = true;
								break;
							}
							if (Input.GetKeyUp(this.keyArray[num21]))
							{
								flag6 = true;
								break;
							}
							j = num21;
						}
						key = this.keyArray[6];
						if (!flag5 || this.getModKeyPressing(ManyMaids.modKey.Ctrl))
						{
							if (!flag6 || this.getModKeyPressing(ManyMaids.modKey.Ctrl))
							{
								goto IL_43F2;
							}
							this.idoFlg[num20 - 7] = false;
						}
					}
					else if (num20 >= 7)
					{
						bool flag7 = false;
						bool flag8 = false;
						for (int num22 = 0; num22 < this.keyArray.Length; num22 = j + 1)
						{
							if (Input.GetKey(this.keyArray[num22]))
							{
								flag7 = true;
								break;
							}
							if (Input.GetKeyUp(this.keyArray[num22]))
							{
								flag8 = true;
								break;
							}
							j = num22;
						}
						key = this.keyArray[num20 - 7];
						if (!flag7 || this.getModKeyPressing(ManyMaids.modKey.Ctrl))
						{
							if (!flag8 || this.getModKeyPressing(ManyMaids.modKey.Ctrl))
							{
								goto IL_43F2;
							}
							this.idoFlg[num20 - 7] = false;
						}
					}
					else
					{
						bool flag9 = false;
						for (int num23 = 0; num23 < this.keyArray.Length; num23 = j + 1)
						{
							if (Input.GetKey(this.keyArray[num23]))
							{
								flag9 = true;
								break;
							}
							j = num23;
						}
						if (!flag9 || !this.getModKeyPressing(ManyMaids.modKey.Ctrl))
						{
							key = this.keyArray[num20];
							goto IL_43F2;
						}
					}
					IL_16115:
					j = num20;
					num20 = j + 1;
					continue;
					IL_43F2:
					if (this.xFlg[num20] && !maid3.AudioMan.audiosource.isPlaying)
					{
						if (maid3.status.personal.uniqueName == "Pride")
						{
							string text = "s0_";
							System.Random random = new System.Random();
							int num24 = random.Next(10000);
							bool flag10 = false;
							for (int num25 = 0; num25 < Class1.tunArray.Length; num25 = j + 1)
							{
								if (Class1.tunArray[num25] == num24)
								{
									flag10 = true;
									break;
								}
								j = num25;
							}
							if (!flag10)
							{
								text = text + "0" + num24.ToString() + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text))
								{
									maid3.AudioMan.LoadPlay(text, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Cool")
						{
							string text = "s1_";
							System.Random random2 = new System.Random();
							int num26 = random2.Next(10000);
							bool flag11 = false;
							for (int num27 = 0; num27 < Class1.coolArray.Length; num27 = j + 1)
							{
								if (Class1.coolArray[num27] == num26)
								{
									flag11 = true;
									break;
								}
								j = num27;
							}
							if (!flag11)
							{
								text = text + "0" + num26.ToString() + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text))
								{
									maid3.AudioMan.LoadPlay(text, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Pure")
						{
							string text = "s2_";
							System.Random random3 = new System.Random();
							int num28 = random3.Next(10000);
							bool flag12 = false;
							for (int num29 = 0; num29 < Class1.pureArray.Length; num29 = j + 1)
							{
								if (Class1.pureArray[num29] == num28)
								{
									flag12 = true;
									break;
								}
								j = num29;
							}
							if (!flag12)
							{
								text = text + "0" + num28.ToString() + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text))
								{
									maid3.AudioMan.LoadPlay(text, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Yandere")
						{
							string text = "s3_";
							System.Random random4 = new System.Random();
							int num30 = random4.Next(10000);
							bool flag13 = false;
							for (int num31 = 0; num31 < Class1.yanArray.Length; num31 = j + 1)
							{
								if (Class1.yanArray[num31] == num30)
								{
									flag13 = true;
									break;
								}
								j = num31;
							}
							if (!flag13)
							{
								text = text + string.Format("{0:00000}", num30) + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text))
								{
									maid3.AudioMan.LoadPlay(text, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Muku")
						{
							string text = "h0_";
							System.Random random5 = new System.Random();
							int num32 = random5.Next(10000);
							bool flag14 = false;
							for (int num33 = 0; num33 < Class1.h0Array.Length; num33 = j + 1)
							{
								if (Class1.h0Array[num33] == num32)
								{
									flag14 = true;
									break;
								}
								j = num33;
							}
							if (flag14)
							{
								text = text + string.Format("{0:00000}", num32) + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text))
								{
									maid3.AudioMan.LoadPlay(text, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Majime")
						{
							string text = "h1_";
							System.Random random6 = new System.Random();
							int num34 = random6.Next(10000);
							bool flag15 = false;
							for (int num35 = 0; num35 < Class1.h1Array.Length; num35 = j + 1)
							{
								if (Class1.h1Array[num35] == num34)
								{
									flag15 = true;
									break;
								}
								j = num35;
							}
							if (flag15)
							{
								text = text + string.Format("{0:00000}", num34) + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text))
								{
									maid3.AudioMan.LoadPlay(text, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Rindere")
						{
							string text = "h2_";
							System.Random random7 = new System.Random();
							int num36 = random7.Next(10000);
							bool flag16 = false;
							for (int num37 = 0; num37 < Class1.h2Array.Length; num37 = j + 1)
							{
								if (Class1.h2Array[num37] == num36)
								{
									flag16 = true;
									break;
								}
								j = num37;
							}
							if (flag16)
							{
								text = text + string.Format("{0:00000}", num36) + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text))
								{
									maid3.AudioMan.LoadPlay(text, 0f, false, false);
								}
							}
						}
					}
					if (this.zFlg[num20] && !maid3.AudioMan.audiosource.isPlaying)
					{
						string text2 = "";
						if (maid3.status.personal.uniqueName == "Pride")
						{
							text2 = "s0_";
							System.Random random8 = new System.Random();
							int num38 = random8.Next(Class1.tunArray.Length);
							object obj = text2;
							text2 = string.Concat(new object[]
							{
								obj,
								"0",
								Class1.tunArray[num38],
								".ogg"
							});
						}
						if (maid3.status.personal.uniqueName == "Cool")
						{
							text2 = "s1_";
							System.Random random9 = new System.Random();
							int num39 = random9.Next(Class1.coolArray.Length);
							object obj2 = text2;
							text2 = string.Concat(new object[]
							{
								obj2,
								"0",
								Class1.coolArray[num39],
								".ogg"
							});
						}
						if (maid3.status.personal.uniqueName == "Pure")
						{
							text2 = "s2_";
							System.Random random10 = new System.Random();
							int num40 = random10.Next(Class1.pureArray.Length);
							object obj3 = text2;
							text2 = string.Concat(new object[]
							{
								obj3,
								"0",
								Class1.pureArray[num40],
								".ogg"
							});
						}
						if (maid3.status.personal.uniqueName == "Yandere")
						{
							text2 = "s3_";
							System.Random random11 = new System.Random();
							int num41 = random11.Next(Class1.yanArray.Length);
							text2 = text2 + string.Format("{0:00000}", Class1.yanArray[num41]) + ".ogg";
						}
						if (maid3.status.personal.uniqueName == "Muku")
						{
							text2 = "h0_";
							System.Random random12 = new System.Random();
							int num42 = random12.Next(Class1.h0tArray.Length);
							text2 = text2 + string.Format("{0:00000}", Class1.h0tArray[num42]) + ".ogg";
						}
						if (maid3.status.personal.uniqueName == "Majime")
						{
							text2 = "h1_";
							System.Random random13 = new System.Random();
							int num43 = random13.Next(Class1.h1tArray.Length);
							text2 = text2 + string.Format("{0:00000}", Class1.h1tArray[num43]) + ".ogg";
						}
						if (maid3.status.personal.uniqueName == "Rindere")
						{
							text2 = "h2_";
							System.Random random14 = new System.Random();
							int num44 = random14.Next(Class1.h2tArray.Length);
							text2 = text2 + string.Format("{0:00000}", Class1.h2tArray[num44]) + ".ogg";
						}
						maid3.AudioMan.LoadPlay(text2, 0f, false, false);
					}
					if (!this.isVR || this.isVR2)
					{
						if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.Q))
						{
							this.ikMaid = num20;
							this.isIK[num20] = true;
							this.ikBui = 1;
							this.ikMode[num20] = 0;
							this.SetIK(maid3, num20);
							this.HandL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Hand", true);
							this.UpperArmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R UpperArm", true);
							this.ForearmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Forearm", true);
							this.Clavicle = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Clavicle", true);
							this.IK_hand = CMT.SearchObjName(maid3.body0.m_Bones.transform, "_IK_handR", true);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
							this.qFlg = true;
						}
						else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.W))
						{
							this.ikMaid = num20;
							this.isIK[num20] = true;
							this.ikBui = 2;
							this.ikMode[num20] = 0;
							this.SetIK(maid3, num20);
							this.HandL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Hand", true);
							this.UpperArmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L UpperArm", true);
							this.ForearmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Forearm", true);
							this.Clavicle = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Clavicle", true);
							this.IK_hand = CMT.SearchObjName(maid3.body0.m_Bones.transform, "_IK_handL", true);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.A))
						{
							this.ikMaid = num20;
							this.isIK[num20] = true;
							this.ikBui = 3;
							this.ikMode[num20] = 0;
							this.SetIK(maid3, num20);
							this.HandL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Foot", true);
							this.UpperArmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Thigh", true);
							this.ForearmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Calf", true);
							this.Clavicle = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Hip_L", true);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.S))
						{
							this.ikMaid = num20;
							this.isIK[num20] = true;
							this.ikBui = 4;
							this.ikMode[num20] = 0;
							this.SetIK(maid3, num20);
							this.HandL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Foot", true);
							this.UpperArmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Thigh", true);
							this.ForearmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Calf", true);
							this.Clavicle = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Hip_L", true);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
							this.sFlg = true;
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.U))
						{
							maid3.body0.transform.localRotation = Quaternion.Euler(maid3.body0.transform.localEulerAngles) * Quaternion.AngleAxis(-1.5f, Vector3.up);
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
							this.idoFlg[num20] = true;
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.O))
						{
							maid3.body0.transform.localRotation = Quaternion.Euler(maid3.body0.transform.localEulerAngles) * Quaternion.AngleAxis(1.5f, Vector3.up);
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
							this.idoFlg[num20] = true;
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.F))
						{
							this.bGui = true;
							this.isPoseInit = true;
							this.isGuiInit = true;
							this.poseFlg = true;
							this.faceFlg = false;
							this.sceneFlg = false;
							this.kankyoFlg = false;
							this.kankyo2Flg = false;
							this.fFlg = true;
							for (int num45 = 0; num45 < this.maidCnt; num45 = j + 1)
							{
								if (maid3 == this.maidArray[num45])
								{
									this.selectMaidIndex = num45;
								}
								j = num45;
							}
							this.copyIndex = 0;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
							this.idoFlg[num20] = true;
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.V))
						{
							this.bGui = true;
							this.isFaceInit = true;
							this.isGuiInit = true;
							this.faceFlg = true;
							this.poseFlg = false;
							this.sceneFlg = false;
							this.kankyoFlg = false;
							this.kankyo2Flg = false;
							maid3.boMabataki = false;
							for (int num46 = 0; num46 < this.maidCnt; num46 = j + 1)
							{
								if (maid3 == this.maidArray[num46])
								{
									this.selectMaidIndex = num46;
								}
								j = num46;
							}
							this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
							this.idoFlg[num20] = true;
						}
						else if (Input.GetKey(key) && this.getModKeyPressing(ManyMaids.modKey.Shift) && (Input.GetKeyDown(KeyCode.X) || (this.isVR && Input.GetKeyDown(KeyCode.UpArrow))))
						{
							if (!this.xFlg[num20])
							{
								this.xFlg[num20] = true;
								this.zFlg[num20] = false;
								if (maid3.status.personal.uniqueName == "Pride")
								{
									string text3 = "s0_";
									System.Random random15 = new System.Random();
									int num47 = random15.Next(10000);
									bool flag17 = false;
									for (int num48 = 0; num48 < Class1.tunArray.Length; num48 = j + 1)
									{
										if (Class1.tunArray[num48] == num47)
										{
											flag17 = true;
											break;
										}
										j = num48;
									}
									if (!flag17)
									{
										text3 = text3 + "0" + num47.ToString() + ".ogg";
										if (GameUty.FileSystem.IsExistentFile(text3))
										{
											maid3.AudioMan.LoadPlay(text3, 0f, false, false);
										}
									}
								}
								if (maid3.status.personal.uniqueName == "Cool")
								{
									string text3 = "s1_";
									System.Random random16 = new System.Random();
									int num49 = random16.Next(10000);
									bool flag18 = false;
									for (int num50 = 0; num50 < Class1.coolArray.Length; num50 = j + 1)
									{
										if (Class1.coolArray[num50] == num49)
										{
											flag18 = true;
											break;
										}
										j = num50;
									}
									if (!flag18)
									{
										text3 = text3 + "0" + num49.ToString() + ".ogg";
										if (GameUty.FileSystem.IsExistentFile(text3))
										{
											maid3.AudioMan.LoadPlay(text3, 0f, false, false);
										}
									}
								}
								if (maid3.status.personal.uniqueName == "Pure")
								{
									string text3 = "s2_";
									System.Random random17 = new System.Random();
									int num51 = random17.Next(10000);
									bool flag19 = false;
									for (int num52 = 0; num52 < Class1.pureArray.Length; num52 = j + 1)
									{
										if (Class1.pureArray[num52] == num51)
										{
											flag19 = true;
											break;
										}
										j = num52;
									}
									if (!flag19)
									{
										text3 = text3 + "0" + num51.ToString() + ".ogg";
										if (GameUty.FileSystem.IsExistentFile(text3))
										{
											maid3.AudioMan.LoadPlay(text3, 0f, false, false);
										}
									}
								}
								if (maid3.status.personal.uniqueName == "Yandere")
								{
									string text3 = "s3_";
									System.Random random18 = new System.Random();
									int num53 = random18.Next(10000);
									bool flag20 = false;
									for (int num54 = 0; num54 < Class1.yanArray.Length; num54 = j + 1)
									{
										if (Class1.yanArray[num54] == num53)
										{
											flag20 = true;
											break;
										}
										j = num54;
									}
									if (!flag20)
									{
										text3 = text3 + string.Format("{0:00000}", num53) + ".ogg";
										if (GameUty.FileSystem.IsExistentFile(text3))
										{
											maid3.AudioMan.LoadPlay(text3, 0f, false, false);
										}
									}
								}
								if (maid3.status.personal.uniqueName == "Muku")
								{
									string text3 = "h0_";
									System.Random random19 = new System.Random();
									int num55 = random19.Next(10000);
									bool flag21 = false;
									for (int num56 = 0; num56 < Class1.h0Array.Length; num56 = j + 1)
									{
										if (Class1.h0Array[num56] == num55)
										{
											flag21 = true;
											break;
										}
										j = num56;
									}
									if (flag21)
									{
										text3 = text3 + string.Format("{0:00000}", num55) + ".ogg";
										if (GameUty.FileSystem.IsExistentFile(text3))
										{
											maid3.AudioMan.LoadPlay(text3, 0f, false, false);
										}
									}
								}
								if (maid3.status.personal.uniqueName == "Majime")
								{
									string text3 = "h1_";
									System.Random random20 = new System.Random();
									int num57 = random20.Next(10000);
									bool flag22 = false;
									for (int num58 = 0; num58 < Class1.h1Array.Length; num58 = j + 1)
									{
										if (Class1.h1Array[num58] == num57)
										{
											flag22 = true;
											break;
										}
										j = num58;
									}
									if (flag22)
									{
										text3 = text3 + string.Format("{0:00000}", num57) + ".ogg";
										if (GameUty.FileSystem.IsExistentFile(text3))
										{
											maid3.AudioMan.LoadPlay(text3, 0f, false, false);
										}
									}
								}
								if (maid3.status.personal.uniqueName == "Rindere")
								{
									string text3 = "h2_";
									System.Random random21 = new System.Random();
									int num59 = random21.Next(10000);
									bool flag23 = false;
									for (int num60 = 0; num60 < Class1.h2Array.Length; num60 = j + 1)
									{
										if (Class1.h2Array[num60] == num59)
										{
											flag23 = true;
											break;
										}
										j = num60;
									}
									if (flag23)
									{
										text3 = text3 + string.Format("{0:00000}", num59) + ".ogg";
										if (GameUty.FileSystem.IsExistentFile(text3))
										{
											maid3.AudioMan.LoadPlay(text3, 0f, false, false);
										}
									}
								}
							}
							else
							{
								this.xFlg[num20] = false;
								maid3.AudioMan.Clear();
							}
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && this.getModKeyPressing(ManyMaids.modKey.Shift) && (Input.GetKeyDown(KeyCode.Z) || (this.isVR && Input.GetKeyDown(KeyCode.DownArrow))))
						{
							if (!this.zFlg[num20])
							{
								this.zFlg[num20] = true;
								this.xFlg[num20] = false;
								string text4 = "";
								if (maid3.status.personal.uniqueName == "Pride")
								{
									text4 = "s0_";
									System.Random random22 = new System.Random();
									int num61 = random22.Next(Class1.tunArray.Length);
									object obj4 = text4;
									text4 = string.Concat(new object[]
									{
										obj4,
										"0",
										Class1.tunArray[num61],
										".ogg"
									});
								}
								if (maid3.status.personal.uniqueName == "Cool")
								{
									text4 = "s1_";
									System.Random random23 = new System.Random();
									int num62 = random23.Next(Class1.coolArray.Length);
									object obj5 = text4;
									text4 = string.Concat(new object[]
									{
										obj5,
										"0",
										Class1.coolArray[num62],
										".ogg"
									});
								}
								if (maid3.status.personal.uniqueName == "Pure")
								{
									text4 = "s2_";
									System.Random random24 = new System.Random();
									int num63 = random24.Next(Class1.pureArray.Length);
									object obj6 = text4;
									text4 = string.Concat(new object[]
									{
										obj6,
										"0",
										Class1.pureArray[num63],
										".ogg"
									});
								}
								if (maid3.status.personal.uniqueName == "Yandere")
								{
									text4 = "s3_";
									System.Random random25 = new System.Random();
									int num64 = random25.Next(Class1.yanArray.Length);
									text4 = text4 + string.Format("{0:00000}", Class1.yanArray[num64]) + ".ogg";
								}
								if (maid3.status.personal.uniqueName == "Muku")
								{
									text4 = "h0_";
									System.Random random26 = new System.Random();
									int num65 = random26.Next(Class1.h0tArray.Length);
									text4 = text4 + string.Format("{0:00000}", Class1.h0tArray[num65]) + ".ogg";
								}
								if (maid3.status.personal.uniqueName == "Majime")
								{
									text4 = "h1_";
									System.Random random27 = new System.Random();
									int num66 = random27.Next(Class1.h1tArray.Length);
									text4 = text4 + string.Format("{0:00000}", Class1.h1tArray[num66]) + ".ogg";
								}
								if (maid3.status.personal.uniqueName == "Rindere")
								{
									text4 = "h2_";
									System.Random random28 = new System.Random();
									int num67 = random28.Next(Class1.h2tArray.Length);
									text4 = text4 + string.Format("{0:00000}", Class1.h2tArray[num67]) + ".ogg";
								}
								maid3.AudioMan.LoadPlay(text4, 0f, false, false);
							}
							else
							{
								this.zFlg[num20] = false;
								maid3.AudioMan.Clear();
							}
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && (Input.GetKeyDown(KeyCode.Z) || (this.isVR && Input.GetKeyDown(KeyCode.DownArrow))))
						{
							string text5 = "";
							if (maid3.status.personal.uniqueName == "Pride")
							{
								text5 = "s0_";
								System.Random random29 = new System.Random();
								int num68 = random29.Next(Class1.tunArray.Length);
								object obj7 = text5;
								text5 = string.Concat(new object[]
								{
									obj7,
									"0",
									Class1.tunArray[num68],
									".ogg"
								});
							}
							if (maid3.status.personal.uniqueName == "Cool")
							{
								text5 = "s1_";
								System.Random random30 = new System.Random();
								int num69 = random30.Next(Class1.coolArray.Length);
								object obj8 = text5;
								text5 = string.Concat(new object[]
								{
									obj8,
									"0",
									Class1.coolArray[num69],
									".ogg"
								});
							}
							if (maid3.status.personal.uniqueName == "Pure")
							{
								text5 = "s2_";
								System.Random random31 = new System.Random();
								int num70 = random31.Next(Class1.pureArray.Length);
								object obj9 = text5;
								text5 = string.Concat(new object[]
								{
									obj9,
									"0",
									Class1.pureArray[num70],
									".ogg"
								});
							}
							if (maid3.status.personal.uniqueName == "Yandere")
							{
								text5 = "s3_";
								System.Random random32 = new System.Random();
								int num71 = random32.Next(Class1.yanArray.Length);
								text5 = text5 + string.Format("{0:00000}", Class1.yanArray[num71]) + ".ogg";
							}
							if (maid3.status.personal.uniqueName == "Muku")
							{
								text5 = "h0_";
								System.Random random33 = new System.Random();
								int num72 = random33.Next(Class1.h0tArray.Length);
								text5 = text5 + string.Format("{0:00000}", Class1.h0tArray[num72]) + ".ogg";
							}
							if (maid3.status.personal.uniqueName == "Majime")
							{
								text5 = "h1_";
								System.Random random34 = new System.Random();
								int num73 = random34.Next(Class1.h1tArray.Length);
								text5 = text5 + string.Format("{0:00000}", Class1.h1tArray[num73]) + ".ogg";
							}
							if (maid3.status.personal.uniqueName == "Rindere")
							{
								text5 = "h2_";
								System.Random random35 = new System.Random();
								int num74 = random35.Next(Class1.h2tArray.Length);
								text5 = text5 + string.Format("{0:00000}", Class1.h2tArray[num74]) + ".ogg";
							}
							maid3.AudioMan.LoadPlay(text5, 0f, false, false);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && (Input.GetKeyDown(KeyCode.X) || (this.isVR && Input.GetKeyDown(KeyCode.UpArrow))))
						{
							if (maid3.status.personal.uniqueName == "Pride")
							{
								string text6 = "s0_";
								System.Random random36 = new System.Random();
								int num75 = random36.Next(10000);
								bool flag24 = false;
								for (int num76 = 0; num76 < Class1.tunArray.Length; num76 = j + 1)
								{
									if (Class1.tunArray[num76] == num75)
									{
										flag24 = true;
										break;
									}
									j = num76;
								}
								if (!flag24)
								{
									text6 = text6 + "0" + num75.ToString() + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text6))
									{
										maid3.AudioMan.LoadPlay(text6, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Cool")
							{
								string text6 = "s1_";
								System.Random random37 = new System.Random();
								int num77 = random37.Next(10000);
								bool flag25 = false;
								for (int num78 = 0; num78 < Class1.coolArray.Length; num78 = j + 1)
								{
									if (Class1.coolArray[num78] == num77)
									{
										flag25 = true;
										break;
									}
									j = num78;
								}
								if (!flag25)
								{
									text6 = text6 + "0" + num77.ToString() + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text6))
									{
										maid3.AudioMan.LoadPlay(text6, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Pure")
							{
								string text6 = "s2_";
								System.Random random38 = new System.Random();
								int num79 = random38.Next(10000);
								bool flag26 = false;
								for (int num80 = 0; num80 < Class1.pureArray.Length; num80 = j + 1)
								{
									if (Class1.pureArray[num80] == num79)
									{
										flag26 = true;
										break;
									}
									j = num80;
								}
								if (!flag26)
								{
									text6 = text6 + "0" + num79.ToString() + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text6))
									{
										maid3.AudioMan.LoadPlay(text6, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Yandere")
							{
								string text6 = "s3_";
								System.Random random39 = new System.Random();
								int num81 = random39.Next(10000);
								bool flag27 = false;
								for (int num82 = 0; num82 < Class1.yanArray.Length; num82 = j + 1)
								{
									if (Class1.yanArray[num82] == num81)
									{
										flag27 = true;
										break;
									}
									j = num82;
								}
								if (!flag27)
								{
									text6 = text6 + string.Format("{0:00000}", num81) + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text6))
									{
										maid3.AudioMan.LoadPlay(text6, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Muku")
							{
								string text6 = "h0_";
								System.Random random40 = new System.Random();
								int num83 = random40.Next(10000);
								bool flag28 = false;
								for (int num84 = 0; num84 < Class1.h0Array.Length; num84 = j + 1)
								{
									if (Class1.h0Array[num84] == num83)
									{
										flag28 = true;
										break;
									}
									j = num84;
								}
								if (flag28)
								{
									text6 = text6 + string.Format("{0:00000}", num83) + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text6))
									{
										maid3.AudioMan.LoadPlay(text6, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Majime")
							{
								string text6 = "h1_";
								System.Random random41 = new System.Random();
								int num85 = random41.Next(10000);
								bool flag29 = false;
								for (int num86 = 0; num86 < Class1.h1Array.Length; num86 = j + 1)
								{
									if (Class1.h1Array[num86] == num85)
									{
										flag29 = true;
										break;
									}
									j = num86;
								}
								if (flag29)
								{
									text6 = text6 + string.Format("{0:00000}", num85) + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text6))
									{
										maid3.AudioMan.LoadPlay(text6, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Rindere")
							{
								string text6 = "h2_";
								System.Random random42 = new System.Random();
								int num87 = random42.Next(10000);
								bool flag30 = false;
								for (int num88 = 0; num88 < Class1.h2Array.Length; num88 = j + 1)
								{
									if (Class1.h2Array[num88] == num87)
									{
										flag30 = true;
										break;
									}
									j = num88;
								}
								if (flag30)
								{
									text6 = text6 + string.Format("{0:00000}", num87) + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text6))
									{
										maid3.AudioMan.LoadPlay(text6, 0f, false, false);
									}
								}
							}
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.M))
						{
							this.delCount[num20] = 20;
							if (this.goSlot[(int)this.selectList[num20]] != null)
							{
								this.maidArray[num20].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num20]]);
								for (int num89 = 0; num89 < this.bodyHit[(int)this.selectList[num20]].Count; num89 = j + 1)
								{
									this.maidArray[num20].body0.goSlot[num89].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num20]][num89];
									j = num89;
								}
							}
							ref int ptr = ref this.itemIndex[num20];
							ref int ptr3 = ref ptr;
							j = ptr;
							ptr3 = j + 1;
							if (this.itemIndex[num20] == Class1.itemArray.Length - 1)
							{
								this.itemIndex[num20] = 0;
							}
							string[] array = new string[2];
							array = Class1.itemArray[this.itemIndex[num20]].Split(new char[]
							{
								','
							});
							if (this.itemIndex[num20] > 13)
							{
								array = Class1.itemArray[this.itemIndex[num20] + 1].Split(new char[]
								{
									','
								});
							}
							maid3.DelProp(MPN.acckami, true);
							maid3.DelProp(MPN.accha, true);
							maid3.DelProp(MPN.acchead, true);
							bool flag31 = false;
							if (this.itemIndex[num20] == 12 || this.itemIndex[num20] == 13)
							{
								flag31 = true;
							}
							if (!flag31)
							{
								maid3.DelProp(MPN.accvag, true);
								maid3.DelProp(MPN.megane, true);
							}
							if (array[0] != "")
							{
								maid3.SetProp(array[0], array[1], 0, true, false);
							}
							if (this.itemIndex[num20] == 13)
							{
								array = Class1.itemArray[this.itemIndex[num20] + 1].Split(new char[]
								{
									','
								});
								maid3.SetProp(array[0], array[1], 0, true, false);
							}
							if (this.itemIndex[num20] == 23)
							{
								array = Class1.itemArray[this.itemIndex[num20]].Split(new char[]
								{
									','
								});
								maid3.SetProp(array[0], array[1], 0, true, false);
								this.cafeFlg[num20] = true;
							}
							maid3.AllProcPropSeqStart();
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
							this.mFlg = true;
						}
						else if (Input.GetKey(key) && (Input.GetKeyDown(KeyCode.LeftBracket) || (Input.GetKeyDown(KeyCode.BackQuote) && this.getModKeyPressing(ManyMaids.modKey.Alt))))
						{
							for (int num90 = 0; num90 < 10; num90 = j + 1)
							{
								Transform transform12 = maid3.transform;
								Vector3 position = maid3.transform.position;
								Vector3 right = Vector3.right;
								transform12.RotateAround(position, right, 0f - maid3.transform.rotation.eulerAngles.x);
								Transform transform13 = maid3.transform;
								Vector3 position2 = maid3.transform.position;
								Vector3 forward = Vector3.forward;
								transform13.RotateAround(position2, forward, 0f - maid3.transform.rotation.eulerAngles.z);
								j = num90;
							}
							this.idoFlg[num20] = true;
							this.atFlg = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && ((Input.GetKey(KeyCode.Minus) && this.getModKeyPressing(ManyMaids.modKey.Shift)) || (Input.GetKey(KeyCode.I) && this.getModKeyPressing(ManyMaids.modKey.Alt))))
						{
							maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector3.x, 0f, vector3.z), 0.4f);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && ((Input.GetKey(KeyCode.Quote) && this.getModKeyPressing(ManyMaids.modKey.Shift)) || (Input.GetKey(KeyCode.K) && this.getModKeyPressing(ManyMaids.modKey.Alt))))
						{
							maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector3.x, 0f, vector3.z), -0.4f);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && (Input.GetKey(KeyCode.Minus) || (Input.GetKey(KeyCode.J) && this.getModKeyPressing(ManyMaids.modKey.Alt))))
						{
							maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector2.x, 0f, vector2.z), 0.4f);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && (Input.GetKey(KeyCode.Quote) || (Input.GetKey(KeyCode.L) && this.getModKeyPressing(ManyMaids.modKey.Alt))))
						{
							maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector2.x, 0f, vector2.z), -0.4f);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.J))
						{
							Vector3 vector = maid3.transform.position;
							vector += new Vector3(vector2.x, 0f, vector2.z) * 0.0075f * this.speed;
							vector += new Vector3(vector3.x, 0f, vector3.z) * -0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.L))
						{
							Vector3 vector = maid3.transform.position;
							vector += new Vector3(vector2.x, 0f, vector2.z) * 0.0075f * this.speed;
							vector += new Vector3(vector3.x, 0f, vector3.z) * 0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.J))
						{
							Vector3 vector = maid3.transform.position;
							vector += new Vector3(vector2.x, 0f, vector2.z) * -0.0075f * this.speed;
							vector += new Vector3(vector3.x, 0f, vector3.z) * -0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.L))
						{
							Vector3 vector = maid3.transform.position;
							vector += new Vector3(vector2.x, 0f, vector2.z) * -0.0075f * this.speed;
							vector += new Vector3(vector3.x, 0f, vector3.z) * 0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.I))
						{
							Vector3 vector = maid3.transform.position;
							vector += new Vector3(vector2.x, 0f, vector2.z) * 0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.K))
						{
							Vector3 vector = maid3.transform.position;
							vector += new Vector3(vector2.x, 0f, vector2.z) * -0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.J))
						{
							Vector3 vector = maid3.transform.position;
							vector += new Vector3(vector3.x, 0f, vector3.z) * -0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.L))
						{
							Vector3 vector = maid3.transform.position;
							vector += new Vector3(vector3.x, 0f, vector3.z) * 0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.Alpha0))
						{
							Vector3 vector = maid3.transform.position;
							ref float ptr4 = ref vector.y;
							ptr4 += 0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKey(KeyCode.P))
						{
							Vector3 vector = maid3.transform.position;
							ref float ptr4 = ref vector.y;
							ptr4 -= 0.0075f * this.speed;
							maid3.SetPos(vector);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (maid3.boMabataki && Input.GetKey(key) && Input.GetKeyDown(KeyCode.Alpha8) && this.getModKeyPressing(ManyMaids.modKey.Shift))
						{
							ref int ptr = ref this.faceIndex[num20];
							ref int ptr5 = ref ptr;
							j = ptr;
							ptr5 = j - 1;
							if (this.faceIndex[num20] <= -1)
							{
								this.faceIndex[num20] = Class1.faceArray.Length - 1;
							}
							maid3.FaceAnime(Class1.faceArray[this.faceIndex[num20]], 1f, 0);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (maid3.boMabataki && Input.GetKey(key) && Input.GetKeyDown(KeyCode.Alpha8))
						{
							ref int ptr = ref this.faceIndex[num20];
							ref int ptr6 = ref ptr;
							j = ptr;
							ptr6 = j + 1;
							if (this.faceIndex[num20] == Class1.faceArray.Length)
							{
								this.faceIndex[num20] = 0;
							}
							maid3.FaceAnime(Class1.faceArray[this.faceIndex[num20]], 1f, 0);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.Alpha9))
						{
							ref int ptr = ref this.faceBlendIndex[num20];
							ref int ptr7 = ref ptr;
							j = ptr;
							ptr7 = j + 1;
							if (this.faceBlendIndex[num20] == Class1.faceBlendArray.Length)
							{
								this.faceBlendIndex[num20] = 0;
							}
							maid3.FaceBlend(Class1.faceBlendArray[this.faceBlendIndex[num20]]);
							this.idoFlg[num20] = true;
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.Space))
						{
							string[] array2 = this.poseArray[this.poseIndex[num20]].Split(new char[]
							{
								','
							});
							this.isStop[num20] = false;
							this.poseCount[num20] = 20;
							if (array2[0].Contains("_momi") || array2[0].Contains("paizuri_"))
							{
								maid3.body0.MuneYureL(0f);
								maid3.body0.MuneYureR(0f);
							}
							else
							{
								maid3.body0.MuneYureL(1f);
								maid3.body0.MuneYureR(1f);
								maid3.body0.jbMuneL.enabled = true;
								maid3.body0.jbMuneR.enabled = true;
							}
							int num93;
							if (array2[0].Contains("ManyMaidsPose"))
							{
								string path = array2[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array3 = new byte[0];
								try
								{
									using (FileStream fileStream = new FileStream(path, FileMode.Open, FileAccess.Read))
									{
										array3 = new byte[fileStream.Length];
										fileStream.Read(array3, 0, array3.Length);
									}
								}
								catch
								{
								}
								if (array3.Length != 0)
								{
									string fileName = Path.GetFileName(path);
									long num91 = (long)fileName.GetHashCode();
									maid3.body0.CrossFade(num91.ToString(), array3, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array4 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num92 = 0; num92 < array4.Length; num92 = j + 1)
									{
										maid3.SetAutoTwist(array4[num92], true);
										j = num92;
									}
								}
							}
							else if (array2[0].StartsWith("p") && int.TryParse(array2[0].Substring(1), out num93))
							{
								this.loadPose[num20] = array2[0];
							}
							else if (!array2[0].StartsWith("dance_"))
							{
								this.maidArray[num20].CrossFade(array2[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!this.maidArray[num20].body0.m_Bones.GetComponent<Animation>().GetClip(array2[0] + ".anm"))
								{
									this.maidArray[num20].body0.LoadAnime(array2[0] + ".anm", GameUty.FileSystem, array2[0] + ".anm", false, false);
								}
								this.maidArray[num20].body0.m_Bones.GetComponent<Animation>().Play(array2[0] + ".anm");
							}
							if (array2.Length > 1)
							{
								this.maidArray[num20].body0.m_Bones.GetComponent<Animation>()[array2[0] + ".anm"].time = float.Parse(array2[1]);
								this.isStop[num20] = true;
								if (array2.Length > 2)
								{
									Transform transform14 = CMT.SearchObjName(this.maidArray[num20].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[num20] = true;
									this.poseIti[num20] = this.maidArray[num20].transform.position;
									this.maidArray[num20].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
							this.isLock[num20] = false;
							this.idoFlg[num20] = true;
							this.mHandL[num20].initFlg = false;
							this.mHandR[num20].initFlg = false;
							this.mFootL[num20].initFlg = false;
							this.mFootR[num20].initFlg = false;
							this.pHandL[num20] = 0;
							this.pHandR[num20] = 0;
							this.muneIKL[num20] = false;
							this.muneIKR[num20] = false;
							if (!this.isVR)
							{
								this.maidArray[num20].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num20]];
								this.maidArray[num20].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num20]];
							}
							if (num20 >= 7)
							{
								this.idoFlg[num20 - 7] = true;
							}
						}
						else if (maid3.body0.isLoadedBody)
						{
							if (this.muneIKL[num20] && this.vIKMuneL[num20].x != 0f)
							{
								this.IKMuneLSub[num20].localEulerAngles = this.vIKMuneLSub[num20];
								this.IKMuneL[num20].localEulerAngles = this.vIKMuneL[num20];
							}
							if (this.muneIKR[num20] && this.vIKMuneR[num20].x != 0f)
							{
								this.IKMuneRSub[num20].localEulerAngles = this.vIKMuneRSub[num20];
								this.IKMuneR[num20].localEulerAngles = this.vIKMuneR[num20];
							}
							if (!this.HandL1[num20])
							{
								this.SetIKInit(num20);
								this.SetIK(maid3, num20);
								this.ikBui = 5;
							}
							else
							{
								bool flag32 = false;
								for (int num94 = 0; num94 < this.keyArray.Length; num94 = j + 1)
								{
									if (Input.GetKey(this.keyArray[num94]))
									{
										flag32 = true;
										break;
									}
									j = num94;
								}
								if ((!Input.GetKey(KeyCode.Space) && Input.GetKey(KeyCode.W)) || Input.GetKey(KeyCode.R) || Input.GetKey(KeyCode.Y))
								{
									flag32 = true;
								}
								if (!flag32)
								{
									if (this.getModKeyPressing(ManyMaids.modKey.Ctrl) && this.getModKeyPressing(ManyMaids.modKey.Alt) && this.getModKeyPressing(ManyMaids.modKey.Shift))
									{
										this.ikMode[num20] = 15;
									}
									else if (this.getModKeyPressing(ManyMaids.modKey.Shift) && this.getModKeyPressing(ManyMaids.modKey.Alt))
									{
										this.ikMode[num20] = 5;
									}
									else if (this.getModKeyPressing(ManyMaids.modKey.Shift) && Input.GetKey(KeyCode.Space))
									{
										this.ikMode[num20] = 6;
									}
									else if (this.getModKeyPressing(ManyMaids.modKey.Ctrl) && Input.GetKey(KeyCode.Space))
									{
										this.ikMode[num20] = 7;
									}
									else if (Input.GetKey(KeyCode.Z) && this.getModKeyPressing(ManyMaids.modKey.Shift))
									{
										this.ikMode[num20] = 11;
									}
									else if (Input.GetKey(KeyCode.Z) && this.getModKeyPressing(ManyMaids.modKey.Ctrl))
									{
										this.ikMode[num20] = 12;
									}
									else if (Input.GetKey(KeyCode.X) && this.getModKeyPressing(ManyMaids.modKey.Shift))
									{
										this.ikMode[num20] = 14;
									}
									else if (this.getModKeyPressing(ManyMaids.modKey.Shift))
									{
										this.ikMode[num20] = 1;
									}
									else if (this.getModKeyPressing(ManyMaids.modKey.Ctrl) && this.getModKeyPressing(ManyMaids.modKey.Alt))
									{
										this.ikMode[num20] = 8;
									}
									else if (this.getModKeyPressing(ManyMaids.modKey.Ctrl))
									{
										this.ikMode[num20] = 2;
									}
									else if (this.getModKeyPressing(ManyMaids.modKey.Alt))
									{
										this.ikMode[num20] = 3;
									}
									else if (Input.GetKey(KeyCode.Space))
									{
										this.ikMode[num20] = 4;
									}
									else if (Input.GetKey(KeyCode.X))
									{
										this.ikMode[num20] = 9;
									}
									else if (Input.GetKey(KeyCode.Z))
									{
										this.ikMode[num20] = 10;
									}
									else if (Input.GetKey(KeyCode.C))
									{
										this.ikMode[num20] = 13;
									}
									else if (Input.GetKey(KeyCode.A))
									{
										this.ikMode[num20] = 16;
									}
									else
									{
										this.ikMode[num20] = 0;
									}
									if (!this.isIK[num20] && this.ikMode[num20] < 9)
									{
										this.ikMode[num20] = 0;
									}
									bool flag33 = false;
									bool flag34 = false;
									bool flag35 = false;
									bool flag36 = false;
									if (this.gFinger[num20, 0])
									{
										for (int num95 = 0; num95 < 15; num95 = j + 1)
										{
											if (this.mFinger[num20, num95].isStop)
											{
												flag33 = true;
											}
											j = num95;
										}
										for (int num96 = 15; num96 < 30; num96 = j + 1)
										{
											if (this.mFinger[num20, num96].isStop)
											{
												flag34 = true;
											}
											j = num96;
										}
										for (int num97 = 0; num97 < 6; num97 = j + 1)
										{
											if (this.mFinger2[num20, num97].isStop)
											{
												flag35 = true;
											}
											j = num97;
										}
										for (int num98 = 6; num98 < 12; num98 = j + 1)
										{
											if (this.mFinger2[num20, num98].isStop)
											{
												flag36 = true;
											}
											j = num98;
										}
									}
									if (this.gMaid[num20] != null)
									{
										if (this.ikMode[num20] >= 9 && this.ikMode[num20] <= 14)
										{
											this.gMaid[num20].SetActive(true);
											if (this.isCube)
											{
												this.gMaidC[num20].SetActive(true);
											}
										}
										else
										{
											this.gMaid[num20].SetActive(false);
											this.gMaidC[num20].SetActive(false);
										}
									}
									if (flag34 || this.mHandR[num20].isSelect || this.mArmR[num20].isSelect || this.mClavicleR[num20].isSelect || (this.ikMode[num20] == 4 && Input.GetKeyDown(KeyCode.Q)))
									{
										this.ikBui = 1;
										if (this.ikMode[num20] != 4 || !Input.GetKeyDown(KeyCode.Q))
										{
											this.ikMaid = num20;
										}
										if (this.ikMaid == num20)
										{
											this.SetIK(maid3, num20);
											this.HandL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Hand", true);
											this.UpperArmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R UpperArm", true);
											this.ForearmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Forearm", true);
											this.Clavicle = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Clavicle", true);
											this.IK_hand = CMT.SearchObjName(maid3.body0.m_Bones.transform, "_IK_handR", true);
										}
										if (Input.GetKeyDown(KeyCode.Q))
										{
											this.qFlg = true;
										}
									}
									else if (flag33 || this.mHandL[num20].isSelect || this.mArmL[num20].isSelect || this.mClavicleL[num20].isSelect || (this.ikMode[num20] == 4 && Input.GetKeyDown(KeyCode.W)))
									{
										this.ikBui = 2;
										if (this.ikMode[num20] != 4 || !Input.GetKeyDown(KeyCode.W))
										{
											this.ikMaid = num20;
										}
										if (this.ikMaid == num20)
										{
											this.SetIK(maid3, num20);
											this.HandL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Hand", true);
											this.UpperArmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L UpperArm", true);
											this.ForearmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Forearm", true);
											this.Clavicle = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Clavicle", true);
											this.IK_hand = CMT.SearchObjName(maid3.body0.m_Bones.transform, "_IK_handL", true);
										}
										if (Input.GetKeyDown(KeyCode.W))
										{
											this.wFlg = true;
										}
									}
									else if (flag36 || this.mFootR[num20].isSelect || this.mHizaR[num20].isSelect || (this.ikMode[num20] == 4 && Input.GetKeyDown(KeyCode.A)))
									{
										this.ikBui = 3;
										if (this.ikMode[num20] != 4 || !Input.GetKeyDown(KeyCode.A))
										{
											this.ikMaid = num20;
										}
										if (this.ikMaid == num20)
										{
											this.SetIK(maid3, num20);
											this.HandL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Foot", true);
											this.UpperArmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Thigh", true);
											this.ForearmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 R Calf", true);
											this.Clavicle = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Hip_L", true);
										}
									}
									else if (flag35 || this.mFootL[num20].isSelect || this.mHizaL[num20].isSelect || (this.ikMode[num20] == 4 && Input.GetKeyDown(KeyCode.S)))
									{
										this.ikBui = 4;
										if (this.ikMode[num20] != 4 || !Input.GetKeyDown(KeyCode.S))
										{
											this.ikMaid = num20;
										}
										if (this.ikMaid == num20)
										{
											this.SetIK(maid3, num20);
											this.HandL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Foot", true);
											this.UpperArmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Thigh", true);
											this.ForearmL = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 L Calf", true);
											this.Clavicle = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Hip_L", true);
										}
										if (Input.GetKeyDown(KeyCode.S))
										{
											this.sFlg = true;
										}
									}
									this.mHandR[num20].isSelect = false;
									this.mArmR[num20].isSelect = false;
									this.mHandL[num20].isSelect = false;
									this.mArmL[num20].isSelect = false;
									this.mFootR[num20].isSelect = false;
									this.mHizaR[num20].isSelect = false;
									this.mFootL[num20].isSelect = false;
									this.mHizaL[num20].isSelect = false;
									this.mClavicleL[num20].isSelect = false;
									this.mClavicleR[num20].isSelect = false;
									if (this.ikMode[num20] == 16)
									{
										if (!this.gHead2[num20])
										{
											this.SetIKInit6(num20);
										}
										if (this.mHead2[num20].isClick)
										{
											this.mHead2[num20].isClick = false;
											this.bGui = true;
											this.isFaceInit = true;
											this.isGuiInit = true;
											this.faceFlg = true;
											this.poseFlg = false;
											this.sceneFlg = false;
											this.kankyoFlg = false;
											this.kankyo2Flg = false;
											maid3.boMabataki = false;
											this.selectMaidIndex = this.mHead2[num20].no;
											this.faceCombo.selectedItemIndex = this.faceIndex[this.selectMaidIndex];
										}
										if (this.mMaid2[num20].isClick)
										{
											this.mMaid2[num20].isClick = false;
											this.bGui = true;
											this.isPoseInit = true;
											this.isGuiInit = true;
											this.poseFlg = true;
											this.faceFlg = false;
											this.sceneFlg = false;
											this.kankyoFlg = false;
											this.kankyo2Flg = false;
											this.selectMaidIndex = this.mMaid2[num20].no;
											this.copyIndex = 0;
										}
										this.gHead2[num20].transform.position = new Vector3(this.Head2[num20].position.x, (this.Head2[num20].position.y * 1.2f + this.Head3[num20].position.y * 0.8f) / 2f, this.Head2[num20].position.z);
										this.gHead2[num20].transform.eulerAngles = new Vector3(this.Head2[num20].transform.eulerAngles.x, this.Head2[num20].transform.eulerAngles.y, this.Head2[num20].transform.eulerAngles.z + 90f);
										this.mHead2[num20].no = num20;
										this.mHead2[num20].maid = maid3;
										this.mHead2[num20].ido = 1;
										this.gMaid2[num20].transform.position = new Vector3((this.Pelvis2[num20].position.x + this.Spine0a2[num20].position.x) / 2f, (this.Spine12[num20].position.y + this.Spine0a2[num20].position.y) / 2f, (this.Spine0a2[num20].position.z + this.Pelvis2[num20].position.z) / 2f);
										this.gMaid2[num20].transform.eulerAngles = new Vector3(this.Spine0a2[num20].transform.eulerAngles.x, this.Spine0a2[num20].transform.eulerAngles.y, this.Spine0a2[num20].transform.eulerAngles.z + 90f);
										this.mMaid2[num20].no = num20;
										this.mMaid2[num20].maid = maid3;
										this.mMaid2[num20].ido = 2;
										this.gArmL[num20].SetActive(false);
										this.gFootL[num20].SetActive(false);
										this.gHizaL[num20].SetActive(false);
										this.gHandR[num20].SetActive(false);
										this.gArmR[num20].SetActive(false);
										this.gFootR[num20].SetActive(false);
										this.gHizaR[num20].SetActive(false);
										this.gClavicleL[num20].SetActive(false);
										this.gClavicleR[num20].SetActive(false);
										this.gNeck[num20].SetActive(false);
										this.gSpine[num20].SetActive(false);
										this.gSpine0a[num20].SetActive(false);
										this.gSpine1a[num20].SetActive(false);
										this.gSpine1[num20].SetActive(false);
										this.gPelvis[num20].SetActive(false);
									}
									else if (this.ikMode[num20] == 8)
									{
										if (this.ikModeOld[num20] == 15 && this.gIKHandL[num20])
										{
											this.mIKHandL[num20].ido = 1;
											this.mIKHandL[num20].reset = true;
											this.mIKHandR[num20].ido = 1;
											this.mIKHandR[num20].reset = true;
										}
										else if (this.ikModeOld[num20] == 3 && this.gHead[num20])
										{
											this.mHead[num20].ido = 7;
											this.mHead[num20].reset = true;
										}
										else
										{
											if (!this.gIKHandL[num20])
											{
												this.SetIKInit5(num20);
											}
											this.gIKHandL[num20].transform.position = this.IKHandL[num20].position;
											this.gIKHandL[num20].transform.eulerAngles = this.IKHandL[num20].eulerAngles;
											this.mIKHandL[num20].maid = maid3;
											this.mIKHandL[num20].HandL = this.IKHandL[num20];
											this.mIKHandL[num20].ido = 1;
											this.gIKHandR[num20].transform.position = this.IKHandR[num20].position;
											this.gIKHandR[num20].transform.eulerAngles = this.IKHandR[num20].eulerAngles;
											this.mIKHandR[num20].maid = maid3;
											this.mIKHandR[num20].HandL = this.IKHandR[num20];
											this.mIKHandR[num20].ido = 1;
											if (!this.gIKMuneL[num20])
											{
												this.SetIKInit7(num20);
											}
											if (!this.gHead[num20])
											{
												this.SetIKInit4(num20);
											}
											this.mIKMuneL[num20].maid = maid3;
											this.mIKMuneL[num20].HandL = this.IKMuneLSub[num20];
											this.mIKMuneL[num20].UpperArmL = this.IKMuneL[num20];
											this.mIKMuneL[num20].ForearmL = this.IKMuneL[num20];
											this.gIKMuneL[num20].transform.position = (this.IKMuneL[num20].position + this.IKMuneLSub[num20].position) / 2f;
											this.mIKMuneR[num20].maid = maid3;
											this.mIKMuneR[num20].HandL = this.IKMuneRSub[num20];
											this.mIKMuneR[num20].UpperArmL = this.IKMuneR[num20];
											this.mIKMuneR[num20].ForearmL = this.IKMuneR[num20];
											this.gIKMuneR[num20].transform.position = (this.IKMuneR[num20].position + this.IKMuneRSub[num20].position) / 2f;
											this.gHead[num20].transform.position = new Vector3(this.Head2[num20].position.x, (this.Head2[num20].position.y * 1.2f + this.Head3[num20].position.y * 0.8f) / 2f, this.Head2[num20].position.z);
											this.gHead[num20].transform.eulerAngles = new Vector3(this.Head2[num20].transform.eulerAngles.x, this.Head2[num20].transform.eulerAngles.y, this.Head2[num20].transform.eulerAngles.z + 90f);
											this.mHead[num20].head = this.Head1[num20];
											this.mHead[num20].maid = maid3;
											this.mHead[num20].ido = 7;
											this.mHead[num20].shodaiFlg = this.shodaiFlg[(int)this.selectList[num20]];
											this.gHead[num20].SetActive(true);
											if (this.mHead[num20].isClick)
											{
												this.mHead[num20].isClick = false;
												this.mHead[num20].isClick2 = false;
												maid3.body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num20]];
												maid3.body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num20]];
											}
											if (this.mIKMuneL[num20].isMouseUp && this.mIKMuneL[num20].isMouseDrag)
											{
												this.IKMuneLSub[num20].localEulerAngles = this.mIKMuneL[num20].HandLangles;
												this.IKMuneL[num20].localEulerAngles = this.mIKMuneL[num20].UpperArmLangles;
												this.vIKMuneLSub[num20] = new Vector3(this.IKMuneLSub[num20].localEulerAngles.x, this.IKMuneLSub[num20].localEulerAngles.y, this.IKMuneLSub[num20].localEulerAngles.z);
												this.vIKMuneL[num20] = new Vector3(this.IKMuneL[num20].localEulerAngles.x, this.IKMuneL[num20].localEulerAngles.y, this.IKMuneL[num20].localEulerAngles.z);
												this.muneIKL[num20] = true;
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mIKMuneL[num20].isMouseDrag = false;
											}
											if (this.mIKMuneL[num20].isMouseDown)
											{
												maid3.body0.MuneYureL(0f);
												maid3.body0.MuneYureR(0f);
												maid3.body0.jbMuneL.enabled = false;
												maid3.body0.jbMuneR.enabled = false;
												this.muneIKL[num20] = false;
												this.mIKMuneL[num20].isMouseUp = false;
											}
											if (this.mIKMuneR[num20].isMouseUp && this.mIKMuneR[num20].isMouseDrag)
											{
												this.IKMuneRSub[num20].localEulerAngles = this.mIKMuneR[num20].HandLangles;
												this.IKMuneR[num20].localEulerAngles = this.mIKMuneR[num20].UpperArmLangles;
												this.vIKMuneRSub[num20] = new Vector3(this.IKMuneRSub[num20].localEulerAngles.x, this.IKMuneRSub[num20].localEulerAngles.y, this.IKMuneRSub[num20].localEulerAngles.z);
												this.vIKMuneR[num20] = new Vector3(this.IKMuneR[num20].localEulerAngles.x, this.IKMuneR[num20].localEulerAngles.y, this.IKMuneR[num20].localEulerAngles.z);
												this.muneIKR[num20] = true;
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mIKMuneR[num20].isMouseDrag = false;
											}
											if (this.mIKMuneR[num20].isMouseDown)
											{
												maid3.body0.MuneYureL(0f);
												maid3.body0.MuneYureR(0f);
												maid3.body0.jbMuneL.enabled = false;
												maid3.body0.jbMuneR.enabled = false;
												this.muneIKR[num20] = false;
												this.mIKMuneL[num20].isMouseUp = false;
											}
											if (this.mHead[num20].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mHead[num20].isStop = false;
											}
											this.gJotai[num20].SetActive(false);
											this.gKahuku[num20].SetActive(false);
											this.gHandL[num20].SetActive(false);
											this.gArmL[num20].SetActive(false);
											this.gFootL[num20].SetActive(false);
											this.gHizaL[num20].SetActive(false);
											this.gHandR[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gFootR[num20].SetActive(false);
											this.gHizaR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
										}
									}
									else if (this.ikMode[num20] == 15)
									{
										if (this.ikModeOld[num20] == 8 && this.gIKHandL[num20])
										{
											this.mIKHandL[num20].ido = 2;
											this.mIKHandL[num20].reset = true;
											this.mIKHandR[num20].ido = 2;
											this.mIKHandR[num20].reset = true;
										}
										else
										{
											if (!this.gIKHandL[num20])
											{
												this.SetIKInit5(num20);
											}
											this.gIKHandL[num20].transform.position = this.IKHandL[num20].position;
											this.gIKHandL[num20].transform.eulerAngles = this.IKHandL[num20].eulerAngles;
											this.mIKHandL[num20].maid = maid3;
											this.mIKHandL[num20].HandL = this.IKHandL[num20];
											this.mIKHandL[num20].ido = 2;
											this.gIKHandR[num20].transform.position = this.IKHandR[num20].position;
											this.gIKHandR[num20].transform.eulerAngles = this.IKHandR[num20].eulerAngles;
											this.mIKHandR[num20].maid = maid3;
											this.mIKHandR[num20].HandL = this.IKHandR[num20];
											this.mIKHandR[num20].ido = 2;
											UnityEngine.Object.Destroy(this.gHead[num20]);
											UnityEngine.Object.Destroy(this.gJotai[num20]);
											UnityEngine.Object.Destroy(this.gKahuku[num20]);
											this.gHandL[num20].SetActive(false);
											this.gArmL[num20].SetActive(false);
											this.gFootL[num20].SetActive(false);
											this.gHizaL[num20].SetActive(false);
											this.gHandR[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gFootR[num20].SetActive(false);
											this.gHizaR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
										}
									}
									else if (this.ikMode[num20] == 1)
									{
										this.mHandL[num20].ido = 10;
										this.mHandR[num20].ido = 10;
										this.mFootL[num20].ido = 10;
										this.mFootR[num20].ido = 10;
										if (this.ikModeOld[num20] == 0 && this.gNeck[num20])
										{
											if (this.isBone[num20])
											{
												this.mNeck[num20].ido = 4;
												this.mNeck[num20].reset = true;
												this.mSpine[num20].ido = 4;
												this.mSpine[num20].reset = true;
												this.mSpine0a[num20].ido = 4;
												this.mSpine0a[num20].reset = true;
												this.mSpine1a[num20].ido = 4;
												this.mSpine1a[num20].reset = true;
												this.mSpine1[num20].ido = 4;
												this.mSpine1[num20].reset = true;
												this.mPelvis[num20].ido = 4;
												this.mPelvis[num20].reset = true;
												this.mHizaL[num20].ido = 5;
												this.mHizaL[num20].reset = true;
												this.mHizaR[num20].ido = 5;
												this.mHizaR[num20].reset = true;
											}
										}
										else
										{
											this.gArmL[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											if (!this.isBone[num20])
											{
												this.gHizaL[num20].SetActive(false);
												this.gHizaR[num20].SetActive(false);
											}
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											if (this.isBone[num20])
											{
												this.mNeck[num20].maid = maid3;
												this.mNeck[num20].head = this.Neck[num20];
												this.mNeck[num20].no = num20;
												this.mNeck[num20].ido = 4;
												this.gNeck[num20].transform.position = this.Neck[num20].position;
												this.gNeck[num20].transform.localEulerAngles = this.Neck[num20].localEulerAngles;
												if (this.mNeck[num20].isHead)
												{
													this.mNeck[num20].isHead = false;
													this.isLookn[num20] = this.isLook[num20];
													this.isLook[num20] = !this.isLook[num20];
												}
												this.mSpine[num20].maid = maid3;
												this.mSpine[num20].head = this.Spine2[num20];
												this.mSpine[num20].no = num20;
												this.mSpine[num20].ido = 4;
												this.gSpine[num20].transform.position = this.Spine2[num20].position;
												this.gSpine[num20].transform.localEulerAngles = this.Spine2[num20].localEulerAngles;
												this.mSpine0a[num20].maid = maid3;
												this.mSpine0a[num20].head = this.Spine0a2[num20];
												this.mSpine0a[num20].no = num20;
												this.mSpine0a[num20].ido = 4;
												this.gSpine0a[num20].transform.position = this.Spine0a2[num20].position;
												this.gSpine0a[num20].transform.localEulerAngles = this.Spine0a2[num20].localEulerAngles;
												this.mSpine1a[num20].maid = maid3;
												this.mSpine1a[num20].head = this.Spine1a2[num20];
												this.mSpine1a[num20].no = num20;
												this.mSpine1a[num20].ido = 4;
												this.gSpine1a[num20].transform.position = this.Spine1a2[num20].position;
												this.gSpine1a[num20].transform.localEulerAngles = this.Spine1a2[num20].localEulerAngles;
												this.mSpine1[num20].maid = maid3;
												this.mSpine1[num20].head = this.Spine12[num20];
												this.mSpine1[num20].no = num20;
												this.mSpine1[num20].ido = 4;
												this.gSpine1[num20].transform.position = this.Spine12[num20].position;
												this.gSpine1[num20].transform.localEulerAngles = this.Spine12[num20].localEulerAngles;
												this.mPelvis[num20].maid = maid3;
												this.mPelvis[num20].head = this.Pelvis2[num20];
												this.mPelvis[num20].no = num20;
												this.mPelvis[num20].ido = 8;
												this.gPelvis[num20].transform.position = this.Pelvis2[num20].position;
												this.gPelvis[num20].transform.localEulerAngles = this.Pelvis2[num20].localEulerAngles;
												this.mHizaL[num20].ido = 5;
												this.mHizaR[num20].ido = 5;
											}
										}
									}
									else if (this.ikMode[num20] == 2)
									{
										if (this.ikModeOld[num20] == 0 && this.gPelvis[num20])
										{
											this.mPelvis[num20].ido = 9;
											this.mPelvis[num20].reset = true;
										}
										else
										{
											this.gArmL[num20].SetActive(false);
											this.gHizaL[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gHizaR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.mPelvis[num20].maid = maid3;
											this.mPelvis[num20].head = this.Pelvis2[num20];
											this.mPelvis[num20].no = num20;
											this.mPelvis[num20].ido = 9;
											this.gPelvis[num20].transform.position = this.Pelvis2[num20].position;
											this.gPelvis[num20].transform.localEulerAngles = this.Pelvis2[num20].localEulerAngles;
										}
									}
									else if (this.ikMode[num20] == 3)
									{
										if ((this.ikModeOld[num20] == 5 || this.ikModeOld[num20] == 8) && this.gHead[num20])
										{
											this.mHead[num20].ido = 1;
											this.mHead[num20].reset = true;
											this.mJotai[num20].ido = 2;
											this.mJotai[num20].reset = true;
											this.mKahuku[num20].ido = 3;
											this.mKahuku[num20].reset = true;
											this.mHandL[num20].ido = 1;
											this.mHandR[num20].ido = 1;
											this.mFootL[num20].ido = 3;
											this.mFootR[num20].ido = 3;
											this.mHizaL[num20].ido = 5;
											this.mHizaR[num20].ido = 5;
											this.mHandL[num20].reset = true;
											this.mHandR[num20].reset = true;
											this.mFootL[num20].reset = true;
											this.mFootR[num20].reset = true;
											this.mHizaL[num20].reset = true;
											this.mHizaR[num20].reset = true;
										}
										else if (this.ikModeOld[num20] == 0)
										{
											this.mHandL[num20].ido = 1;
											this.mHandR[num20].ido = 1;
											this.mFootL[num20].ido = 3;
											this.mFootR[num20].ido = 3;
											this.mHizaL[num20].ido = 5;
											this.mHizaR[num20].ido = 5;
											this.mHandL[num20].reset = true;
											this.mHandR[num20].reset = true;
											this.mFootL[num20].reset = true;
											this.mFootR[num20].reset = true;
											this.mHizaL[num20].reset = true;
											this.mHizaR[num20].reset = true;
										}
										else
										{
											if (!this.gHead[num20])
											{
												this.SetIKInit4(num20);
											}
											if (this.mHead[num20].isHead)
											{
												this.mHead[num20].isHead = false;
												this.isLookn[num20] = this.isLook[num20];
												this.isLook[num20] = !this.isLook[num20];
											}
											this.gHead[num20].transform.position = new Vector3(this.Head2[num20].position.x, (this.Head2[num20].position.y * 1.2f + this.Head3[num20].position.y * 0.8f) / 2f, this.Head2[num20].position.z);
											this.gHead[num20].transform.eulerAngles = new Vector3(this.Head2[num20].transform.eulerAngles.x, this.Head2[num20].transform.eulerAngles.y, this.Head2[num20].transform.eulerAngles.z + 90f);
											this.mHead[num20].head = this.Head1[num20];
											this.mHead[num20].maid = maid3;
											this.mHead[num20].no = num20;
											this.mHead[num20].ido = 1;
											Transform spine0a = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Spine0a", true);
											Transform transform15 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Spine1", true);
											Transform transform16 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Spine1a", true);
											Transform transform17 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Spine", true);
											Transform transform18 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Pelvis", true);
											this.gJotai[num20].transform.position = new Vector3(transform15.position.x, (transform15.position.y * 0f + transform16.position.y * 2f) / 2f, transform15.position.z);
											this.gJotai[num20].transform.eulerAngles = new Vector3(transform15.transform.eulerAngles.x, transform15.transform.eulerAngles.y, transform15.transform.eulerAngles.z + 90f);
											this.mJotai[num20].Spine0a = spine0a;
											this.mJotai[num20].Spine1 = transform15;
											this.mJotai[num20].Spine1a = transform16;
											this.mJotai[num20].Spine = transform17;
											this.mJotai[num20].maid = maid3;
											this.mJotai[num20].ido = 2;
											this.gKahuku[num20].transform.position = new Vector3(transform18.position.x, (transform18.position.y + transform17.position.y) / 2f, transform18.position.z);
											this.gKahuku[num20].transform.eulerAngles = new Vector3(transform18.transform.eulerAngles.x + 90f, transform18.transform.eulerAngles.y + 90f, transform18.transform.eulerAngles.z);
											this.mKahuku[num20].Pelvis = transform18;
											this.mKahuku[num20].maid = maid3;
											this.mKahuku[num20].ido = 3;
											this.mHandL[num20].ido = 1;
											this.mHandR[num20].ido = 1;
											this.mFootL[num20].ido = 3;
											this.mFootR[num20].ido = 3;
											this.mHizaL[num20].ido = 5;
											this.mHizaR[num20].ido = 5;
											this.gJotai[num20].SetActive(true);
											this.gKahuku[num20].SetActive(true);
											this.gHandL[num20].SetActive(true);
											this.gArmL[num20].SetActive(false);
											this.gFootL[num20].SetActive(true);
											this.gHizaL[num20].SetActive(true);
											this.gHandR[num20].SetActive(true);
											this.gArmR[num20].SetActive(false);
											this.gFootR[num20].SetActive(true);
											this.gHizaR[num20].SetActive(true);
											UnityEngine.Object.Destroy(this.gIKHandL[num20]);
											UnityEngine.Object.Destroy(this.gIKHandR[num20]);
											UnityEngine.Object.Destroy(this.gIKMuneL[num20]);
											UnityEngine.Object.Destroy(this.gIKMuneR[num20]);
											if (this.isBone[num20])
											{
												this.gHizaL[num20].SetActive(false);
												this.gHizaR[num20].SetActive(false);
												this.gHead[num20].SetActive(false);
												this.gJotai[num20].SetActive(false);
												this.gKahuku[num20].SetActive(false);
											}
											else
											{
												this.gHizaL[num20].SetActive(true);
												this.gHizaR[num20].SetActive(true);
												this.gHead[num20].SetActive(true);
												this.gJotai[num20].SetActive(true);
												this.gKahuku[num20].SetActive(true);
											}
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
											if (this.mHead[num20].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mHead[num20].isStop = false;
											}
											if (this.mJotai[num20].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mJotai[num20].isStop = false;
											}
											if (this.mKahuku[num20].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mKahuku[num20].isStop = false;
											}
											if (this.mKahuku[num20].isSelect)
											{
												this.mKahuku[num20].isSelect = false;
												if (this.ikMaid != num20)
												{
													this.ikMaid = num20;
													this.ikBui = 5;
													this.SetIK(maid3, num20);
												}
											}
											if (this.mJotai[num20].isSelect)
											{
												this.mJotai[num20].isSelect = false;
												if (this.ikMaid != num20)
												{
													this.ikMaid = num20;
													this.ikBui = 5;
													this.SetIK(maid3, num20);
												}
											}
											if (this.mKahuku[num20].isSelect)
											{
												this.mKahuku[num20].isSelect = false;
												if (this.ikMaid != num20)
												{
													this.ikMaid = num20;
													this.ikBui = 5;
													this.SetIK(maid3, num20);
												}
											}
										}
									}
									else if (this.ikMode[num20] == 5)
									{
										if (this.ikModeOld[num20] == 3 && this.gHead[num20])
										{
											this.mHead[num20].ido = 4;
											this.mHead[num20].reset = true;
											this.mJotai[num20].ido = 5;
											this.mJotai[num20].reset = true;
											this.mKahuku[num20].ido = 6;
											this.mKahuku[num20].reset = true;
											this.mHandL[num20].ido = 2;
											this.mHandR[num20].ido = 2;
											this.mFootL[num20].ido = 4;
											this.mFootR[num20].ido = 4;
											this.mHizaL[num20].ido = 5;
											this.mHizaR[num20].ido = 5;
											this.mHandL[num20].reset = true;
											this.mHandR[num20].reset = true;
											this.mFootL[num20].reset = true;
											this.mFootR[num20].reset = true;
											this.mHizaL[num20].reset = true;
											this.mHizaR[num20].reset = true;
										}
										else if (this.ikModeOld[num20] == 0)
										{
											this.mHandL[num20].ido = 2;
											this.mHandR[num20].ido = 2;
											this.mFootL[num20].ido = 4;
											this.mFootR[num20].ido = 4;
											this.mHizaL[num20].ido = 5;
											this.mHizaR[num20].ido = 5;
											this.mHandL[num20].reset = true;
											this.mHandR[num20].reset = true;
											this.mFootL[num20].reset = true;
											this.mFootR[num20].reset = true;
											this.mHizaL[num20].reset = true;
											this.mHizaR[num20].reset = true;
										}
										else
										{
											if (!this.gHead[num20])
											{
												this.SetIKInit4(num20);
											}
											if (this.mHead[num20].isHead)
											{
												this.mHead[num20].isHead = false;
												this.isLookn[num20] = this.isLook[num20];
												this.isLook[num20] = !this.isLook[num20];
											}
											this.gHead[num20].transform.position = new Vector3(this.Head2[num20].position.x, (this.Head2[num20].position.y * 1.2f + this.Head3[num20].position.y * 0.8f) / 2f, this.Head2[num20].position.z);
											this.gHead[num20].transform.eulerAngles = new Vector3(this.Head2[num20].transform.eulerAngles.x, this.Head2[num20].transform.eulerAngles.y, this.Head2[num20].transform.eulerAngles.z + 90f);
											this.mHead[num20].head = this.Head1[num20];
											this.mHead[num20].maid = maid3;
											this.mHead[num20].ido = 4;
											Transform spine0a2 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Spine0a", true);
											Transform transform19 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Spine1", true);
											Transform transform20 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Spine1a", true);
											Transform transform21 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Spine", true);
											Transform transform22 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01 Pelvis", true);
											this.gJotai[num20].transform.position = new Vector3(transform19.position.x, (transform19.position.y * 0f + transform20.position.y * 2f) / 2f, transform19.position.z);
											this.gJotai[num20].transform.eulerAngles = new Vector3(transform19.transform.eulerAngles.x, transform19.transform.eulerAngles.y, transform19.transform.eulerAngles.z + 90f);
											this.mJotai[num20].Spine0a = spine0a2;
											this.mJotai[num20].Spine1 = transform19;
											this.mJotai[num20].Spine1a = transform20;
											this.mJotai[num20].Spine = transform21;
											this.mJotai[num20].maid = maid3;
											this.mJotai[num20].ido = 5;
											this.gKahuku[num20].transform.position = new Vector3(transform22.position.x, (transform22.position.y + transform21.position.y) / 2f, transform22.position.z);
											this.gKahuku[num20].transform.eulerAngles = new Vector3(transform22.transform.eulerAngles.x + 90f, transform22.transform.eulerAngles.y + 90f, transform22.transform.eulerAngles.z);
											this.mKahuku[num20].Pelvis = transform22;
											this.mKahuku[num20].maid = maid3;
											this.mKahuku[num20].ido = 6;
											this.mHandL[num20].ido = 2;
											this.mHandR[num20].ido = 2;
											this.mFootL[num20].ido = 4;
											this.mFootR[num20].ido = 4;
											this.mHizaL[num20].ido = 5;
											this.mHizaR[num20].ido = 5;
											this.gArmL[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
											if (this.isBone[num20])
											{
												this.gHizaL[num20].SetActive(false);
												this.gHizaR[num20].SetActive(false);
												this.gHead[num20].SetActive(false);
												this.gJotai[num20].SetActive(false);
												this.gKahuku[num20].SetActive(false);
											}
											else
											{
												this.gHizaL[num20].SetActive(true);
												this.gHizaR[num20].SetActive(true);
												this.gHead[num20].SetActive(true);
												this.gJotai[num20].SetActive(true);
												this.gKahuku[num20].SetActive(true);
											}
											if (this.mHead[num20].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mHead[num20].isStop = false;
											}
											if (this.mJotai[num20].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mJotai[num20].isStop = false;
											}
											if (this.mKahuku[num20].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mKahuku[num20].isStop = false;
											}
											if (this.mHead[num20].isSelect)
											{
												this.mHead[num20].isSelect = false;
												if (this.ikMaid != num20)
												{
													this.ikMaid = num20;
													this.ikBui = 5;
													this.SetIK(maid3, num20);
												}
											}
											if (this.mJotai[num20].isSelect)
											{
												this.mJotai[num20].isSelect = false;
												if (this.ikMaid != num20)
												{
													this.ikMaid = num20;
													this.ikBui = 5;
													this.SetIK(maid3, num20);
												}
											}
											if (this.mKahuku[num20].isSelect)
											{
												this.mKahuku[num20].isSelect = false;
												if (this.ikMaid != num20)
												{
													this.ikMaid = num20;
													this.ikBui = 5;
													this.SetIK(maid3, num20);
												}
											}
										}
									}
									else if (this.ikMode[num20] == 13)
									{
										if ((this.ikModeOld[num20] == 0 || this.ikModeOld[num20] >= 9) && this.ikModeOld[num20] != 13 && this.gMaid[num20])
										{
											this.mMaid[num20].ido = 5;
											this.mMaid[num20].reset = true;
											this.mMaidC[num20].ido = 5;
											this.mMaidC[num20].reset = true;
											this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.3f);
										}
										else
										{
											if (!this.gMaid[num20])
											{
												this.SetIKInit3(num20);
											}
											this.gMaid[num20].transform.position = new Vector3((this.Pelvis2[num20].position.x + this.Spine0a2[num20].position.x) / 2f, (this.Spine12[num20].position.y + this.Spine0a2[num20].position.y) / 2f, (this.Spine0a2[num20].position.z + this.Pelvis2[num20].position.z) / 2f);
											this.gMaid[num20].transform.eulerAngles = new Vector3(this.Spine0a2[num20].transform.eulerAngles.x, this.Spine0a2[num20].transform.eulerAngles.y, this.Spine0a2[num20].transform.eulerAngles.z + 90f);
											this.mMaid[num20].maid = maid3;
											this.mMaid[num20].ido = 5;
											this.gMaidC[num20].transform.position = maid3.transform.position;
											this.gMaidC[num20].transform.eulerAngles = maid3.transform.eulerAngles;
											this.mMaidC[num20].maid = maid3;
											this.mMaidC[num20].ido = 5;
											if (this.isCube)
											{
												this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.3f);
												this.gMaidC[num20].SetActive(true);
											}
											else
											{
												this.gMaidC[num20].SetActive(false);
											}
											this.gHandL[num20].SetActive(false);
											this.gArmL[num20].SetActive(false);
											this.gFootL[num20].SetActive(false);
											this.gHizaL[num20].SetActive(false);
											this.gHandR[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gFootR[num20].SetActive(false);
											this.gHizaR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
										}
										if (this.mMaid[num20].isSelect)
										{
											this.mMaid[num20].isSelect = false;
											if (this.ikMaid != num20)
											{
												this.ikMaid = num20;
												this.ikBui = 5;
												this.SetIK(maid3, num20);
											}
										}
									}
									else if (this.ikMode[num20] == 11)
									{
										if ((this.ikModeOld[num20] == 0 || this.ikModeOld[num20] >= 9) && this.ikModeOld[num20] != 11 && this.gMaid[num20])
										{
											this.mMaid[num20].ido = 3;
											this.mMaid[num20].reset = true;
											this.mMaidC[num20].ido = 3;
											this.mMaidC[num20].reset = true;
											this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
										}
										else
										{
											if (!this.gMaid[num20])
											{
												this.SetIKInit3(num20);
											}
											this.gMaid[num20].transform.position = new Vector3((this.Pelvis2[num20].position.x + this.Spine0a2[num20].position.x) / 2f, (this.Spine12[num20].position.y + this.Spine0a2[num20].position.y) / 2f, (this.Spine0a2[num20].position.z + this.Pelvis2[num20].position.z) / 2f);
											this.gMaid[num20].transform.eulerAngles = new Vector3(this.Spine0a2[num20].transform.eulerAngles.x, this.Spine0a2[num20].transform.eulerAngles.y, this.Spine0a2[num20].transform.eulerAngles.z + 90f);
											this.mMaid[num20].maid = maid3;
											this.mMaid[num20].ido = 3;
											this.gMaidC[num20].transform.position = maid3.transform.position;
											this.gMaidC[num20].transform.eulerAngles = maid3.transform.eulerAngles;
											this.mMaidC[num20].maid = maid3;
											this.mMaidC[num20].ido = 3;
											if (this.isCube)
											{
												this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
												this.gMaidC[num20].SetActive(true);
											}
											else
											{
												this.gMaidC[num20].SetActive(false);
											}
											this.gHandL[num20].SetActive(false);
											this.gArmL[num20].SetActive(false);
											this.gFootL[num20].SetActive(false);
											this.gHizaL[num20].SetActive(false);
											this.gHandR[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gFootR[num20].SetActive(false);
											this.gHizaR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
										}
										if (this.mMaid[num20].isSelect)
										{
											this.mMaid[num20].isSelect = false;
											if (this.ikMaid != num20)
											{
												this.ikMaid = num20;
												this.ikBui = 5;
												this.SetIK(maid3, num20);
											}
										}
									}
									else if (this.ikMode[num20] == 12)
									{
										if ((this.ikModeOld[num20] == 0 || this.ikModeOld[num20] >= 9) && this.ikModeOld[num20] != 12 && this.gMaid[num20])
										{
											this.mMaid[num20].ido = 2;
											this.mMaid[num20].reset = true;
											this.mMaidC[num20].ido = 2;
											this.mMaidC[num20].reset = true;
											this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
										}
										else
										{
											if (!this.gMaid[num20])
											{
												this.SetIKInit3(num20);
											}
											this.gMaid[num20].transform.position = new Vector3((this.Pelvis2[num20].position.x + this.Spine0a2[num20].position.x) / 2f, (this.Spine12[num20].position.y + this.Spine0a2[num20].position.y) / 2f, (this.Spine0a2[num20].position.z + this.Pelvis2[num20].position.z) / 2f);
											this.gMaid[num20].transform.eulerAngles = new Vector3(this.Spine0a2[num20].transform.eulerAngles.x, this.Spine0a2[num20].transform.eulerAngles.y, this.Spine0a2[num20].transform.eulerAngles.z + 90f);
											this.mMaid[num20].maid = maid3;
											this.mMaid[num20].ido = 2;
											this.gMaidC[num20].transform.position = maid3.transform.position;
											this.gMaidC[num20].transform.eulerAngles = maid3.transform.eulerAngles;
											this.mMaidC[num20].maid = maid3;
											this.mMaidC[num20].ido = 2;
											if (this.isCube)
											{
												this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
												this.gMaidC[num20].SetActive(true);
											}
											else
											{
												this.gMaidC[num20].SetActive(false);
											}
											this.gHandL[num20].SetActive(false);
											this.gArmL[num20].SetActive(false);
											this.gFootL[num20].SetActive(false);
											this.gHizaL[num20].SetActive(false);
											this.gHandR[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gFootR[num20].SetActive(false);
											this.gHizaR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
										}
										if (this.mMaid[num20].isSelect)
										{
											this.mMaid[num20].isSelect = false;
											if (this.ikMaid != num20)
											{
												this.ikMaid = num20;
												this.ikBui = 5;
												this.SetIK(maid3, num20);
											}
										}
									}
									else if (this.ikMode[num20] == 10)
									{
										if ((this.ikModeOld[num20] == 0 || this.ikModeOld[num20] >= 9) && this.ikModeOld[num20] != 10 && this.gMaid[num20])
										{
											this.mMaid[num20].ido = 1;
											this.mMaid[num20].reset = true;
											this.mMaidC[num20].ido = 1;
											this.mMaidC[num20].reset = true;
											this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
										}
										else
										{
											if (!this.gMaid[num20])
											{
												this.SetIKInit3(num20);
											}
											this.gMaid[num20].transform.position = new Vector3((this.Pelvis2[num20].position.x + this.Spine0a2[num20].position.x) / 2f, (this.Spine12[num20].position.y + this.Spine0a2[num20].position.y) / 2f, (this.Spine0a2[num20].position.z + this.Pelvis2[num20].position.z) / 2f);
											this.gMaid[num20].transform.eulerAngles = new Vector3(this.Spine0a2[num20].transform.eulerAngles.x, this.Spine0a2[num20].transform.eulerAngles.y, this.Spine0a2[num20].transform.eulerAngles.z + 90f);
											this.mMaid[num20].maid = maid3;
											this.mMaid[num20].ido = 1;
											this.gMaidC[num20].transform.position = maid3.transform.position;
											this.gMaidC[num20].transform.eulerAngles = maid3.transform.eulerAngles;
											this.mMaidC[num20].maid = maid3;
											this.mMaidC[num20].ido = 1;
											if (this.isCube)
											{
												this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
												this.gMaidC[num20].SetActive(true);
											}
											else
											{
												this.gMaidC[num20].SetActive(false);
											}
											this.gHandL[num20].SetActive(false);
											this.gArmL[num20].SetActive(false);
											this.gFootL[num20].SetActive(false);
											this.gHizaL[num20].SetActive(false);
											this.gHandR[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gFootR[num20].SetActive(false);
											this.gHizaR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
										}
										if (this.mMaid[num20].isSelect)
										{
											this.mMaid[num20].isSelect = false;
											if (this.ikMaid != num20)
											{
												this.ikMaid = num20;
												this.ikBui = 5;
												this.SetIK(maid3, num20);
											}
										}
									}
									else if (this.ikMode[num20] == 9)
									{
										if ((this.ikModeOld[num20] == 0 || this.ikModeOld[num20] >= 9) && this.ikModeOld[num20] != 9 && this.gMaid[num20])
										{
											this.mMaid[num20].ido = 4;
											this.mMaid[num20].reset = true;
											this.mMaidC[num20].ido = 4;
											this.mMaidC[num20].reset = true;
											this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f);
										}
										else
										{
											if (!this.gMaid[num20])
											{
												this.SetIKInit3(num20);
											}
											this.gMaid[num20].transform.position = new Vector3((this.Pelvis2[num20].position.x + this.Spine0a2[num20].position.x) / 2f, (this.Spine12[num20].position.y + this.Spine0a2[num20].position.y) / 2f, (this.Spine0a2[num20].position.z + this.Pelvis2[num20].position.z) / 2f);
											this.gMaid[num20].transform.eulerAngles = new Vector3(this.Spine0a2[num20].transform.eulerAngles.x, this.Spine0a2[num20].transform.eulerAngles.y, this.Spine0a2[num20].transform.eulerAngles.z + 90f);
											this.mMaid[num20].maid = maid3;
											this.mMaid[num20].ido = 4;
											this.gMaidC[num20].transform.position = maid3.transform.position;
											this.gMaidC[num20].transform.eulerAngles = maid3.transform.eulerAngles;
											this.mMaidC[num20].maid = maid3;
											this.mMaidC[num20].ido = 4;
											if (this.isCube)
											{
												this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f);
												this.gMaidC[num20].SetActive(true);
											}
											else
											{
												this.gMaidC[num20].SetActive(false);
											}
											this.gHandL[num20].SetActive(false);
											this.gArmL[num20].SetActive(false);
											this.gFootL[num20].SetActive(false);
											this.gHizaL[num20].SetActive(false);
											this.gHandR[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gFootR[num20].SetActive(false);
											this.gHizaR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
										}
										if (this.mMaid[num20].isSelect)
										{
											this.mMaid[num20].isSelect = false;
											if (this.ikMaid != num20)
											{
												this.ikMaid = num20;
												this.ikBui = 5;
												this.SetIK(maid3, num20);
											}
										}
									}
									else if (this.ikMode[num20] == 14)
									{
										if ((this.ikModeOld[num20] == 0 || this.ikModeOld[num20] >= 9) && this.ikModeOld[num20] != 14 && this.gMaid[num20])
										{
											this.mMaid[num20].ido = 6;
											this.mMaid[num20].reset = true;
											this.mMaidC[num20].ido = 6;
											this.mMaidC[num20].reset = true;
											this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f);
										}
										else
										{
											if (!this.gMaid[num20])
											{
												this.SetIKInit3(num20);
											}
											this.gMaid[num20].transform.position = new Vector3((this.Pelvis2[num20].position.x + this.Spine0a2[num20].position.x) / 2f, (this.Spine12[num20].position.y + this.Spine0a2[num20].position.y) / 2f, (this.Spine0a2[num20].position.z + this.Pelvis2[num20].position.z) / 2f);
											this.gMaid[num20].transform.eulerAngles = new Vector3(this.Spine0a2[num20].transform.eulerAngles.x, this.Spine0a2[num20].transform.eulerAngles.y, this.Spine0a2[num20].transform.eulerAngles.z + 90f);
											this.mMaid[num20].maid = maid3;
											this.mMaid[num20].ido = 6;
											this.gMaidC[num20].transform.position = maid3.transform.position;
											this.gMaidC[num20].transform.eulerAngles = maid3.transform.eulerAngles;
											this.mMaidC[num20].maid = maid3;
											this.mMaidC[num20].ido = 6;
											if (this.isCube)
											{
												this.gMaidC[num20].GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f);
												this.gMaidC[num20].SetActive(true);
											}
											else
											{
												this.gMaidC[num20].SetActive(false);
											}
											this.gHandL[num20].SetActive(false);
											this.gArmL[num20].SetActive(false);
											this.gFootL[num20].SetActive(false);
											this.gHizaL[num20].SetActive(false);
											this.gHandR[num20].SetActive(false);
											this.gArmR[num20].SetActive(false);
											this.gFootR[num20].SetActive(false);
											this.gHizaR[num20].SetActive(false);
											this.gClavicleL[num20].SetActive(false);
											this.gClavicleR[num20].SetActive(false);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
										}
										if (this.mMaid[num20].isSelect)
										{
											this.mMaid[num20].isSelect = false;
											if (this.ikMaid != num20)
											{
												this.ikMaid = num20;
												this.ikBui = 5;
												this.SetIK(maid3, num20);
											}
										}
									}
									else if (this.ikMode[num20] == 6)
									{
										if (!this.gFinger[num20, 0])
										{
											this.SetIKInit2(num20);
										}
										UnityEngine.Object.Destroy(this.gMaid[num20]);
										UnityEngine.Object.Destroy(this.gMaidC[num20]);
										UnityEngine.Object.Destroy(this.gHead[num20]);
										UnityEngine.Object.Destroy(this.gJotai[num20]);
										UnityEngine.Object.Destroy(this.gKahuku[num20]);
										this.gHandL[num20].SetActive(false);
										this.gArmL[num20].SetActive(false);
										this.gFootL[num20].SetActive(false);
										this.gHizaL[num20].SetActive(false);
										this.gHandR[num20].SetActive(false);
										this.gArmR[num20].SetActive(false);
										this.gFootR[num20].SetActive(false);
										this.gHizaR[num20].SetActive(false);
										this.gClavicleL[num20].SetActive(false);
										this.gClavicleR[num20].SetActive(false);
										this.gNeck[num20].SetActive(false);
										this.gSpine[num20].SetActive(false);
										this.gSpine0a[num20].SetActive(false);
										this.gSpine1a[num20].SetActive(false);
										this.gSpine1[num20].SetActive(false);
										this.gPelvis[num20].SetActive(false);
										for (int num99 = 0; num99 < 10; num99 = j + 1)
										{
											this.mFinger[num20, num99 * 3 + 2].maid = maid3;
											this.mFinger[num20, num99 * 3 + 2].HandL = this.Finger[num20, num99 * 4 + 3];
											this.mFinger[num20, num99 * 3 + 2].UpperArmL = this.Finger[num20, num99 * 4 + 2];
											this.mFinger[num20, num99 * 3 + 2].ForearmL = this.Finger[num20, num99 * 4 + 2];
											this.mFinger[num20, num99 * 3 + 2].ido = 12;
											if (num99 == 0 || num99 == 5)
											{
												this.mFinger[num20, num99 * 3 + 2].ido = 15;
											}
											this.mFinger[num20, num99 * 3 + 1].maid = maid3;
											this.mFinger[num20, num99 * 3 + 1].HandL = this.Finger[num20, num99 * 4 + 2];
											this.mFinger[num20, num99 * 3 + 1].UpperArmL = this.Finger[num20, num99 * 4 + 1];
											this.mFinger[num20, num99 * 3 + 1].ForearmL = this.Finger[num20, num99 * 4 + 1];
											this.mFinger[num20, num99 * 3 + 1].ido = 11;
											if (num99 == 0 || num99 == 5)
											{
												this.mFinger[num20, num99 * 3 + 1].ido = 14;
											}
											this.mFinger[num20, num99 * 3].maid = maid3;
											this.mFinger[num20, num99 * 3].HandL = this.Finger[num20, num99 * 4 + 1];
											this.mFinger[num20, num99 * 3].UpperArmL = this.Finger[num20, num99 * 4];
											this.mFinger[num20, num99 * 3].ForearmL = this.Finger[num20, num99 * 4];
											this.mFinger[num20, num99 * 3].ido = 13;
											if (num99 == 0 || num99 == 5)
											{
												this.mFinger[num20, num99 * 3].ido = 0;
											}
											this.gFinger[num20, num99 * 3 + 2].SetActive(false);
											this.gFinger[num20, num99 * 3 + 1].SetActive(false);
											this.gFinger[num20, num99 * 3].SetActive(true);
											this.gFinger[num20, num99 * 3].SetActive(true);
											this.mFinger[num20, num99 * 3].ido = 16;
											if (this.ikModeOld[num20] != 6)
											{
												this.mFinger[num20, num99 * 3].reset = true;
											}
											this.gFinger[num20, num99 * 3 + 2].transform.position = (this.Finger[num20, num99 * 4 + 3].position + this.Finger[num20, num99 * 4 + 3].position + this.Finger[num20, num99 * 4 + 2].position) / 3f;
											this.gFinger[num20, num99 * 3 + 1].transform.position = this.Finger[num20, num99 * 4 + 2].position;
											this.gFinger[num20, num99 * 3].transform.position = this.Finger[num20, num99 * 4 + 1].position;
											if (this.mFinger[num20, num99 * 3 + 2].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger[num20, num99 * 3 + 2].isStop = false;
											}
											if (this.mFinger[num20, num99 * 3 + 1].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger[num20, num99 * 3 + 1].isStop = false;
											}
											if (this.mFinger[num20, num99 * 3].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger[num20, num99 * 3].isStop = false;
											}
											j = num99;
										}
										for (int num100 = 0; num100 < 6; num100 = j + 1)
										{
											this.mFinger2[num20, num100 * 2 + 1].maid = maid3;
											this.mFinger2[num20, num100 * 2 + 1].HandL = this.Finger2[num20, num100 * 3 + 2];
											this.mFinger2[num20, num100 * 2 + 1].UpperArmL = this.Finger2[num20, num100 * 3 + 1];
											this.mFinger2[num20, num100 * 2 + 1].ForearmL = this.Finger2[num20, num100 * 3 + 1];
											this.mFinger2[num20, num100 * 2 + 1].ido = 0;
											this.mFinger2[num20, num100 * 2].maid = maid3;
											this.mFinger2[num20, num100 * 2].HandL = this.Finger2[num20, num100 * 3 + 1];
											this.mFinger2[num20, num100 * 2].UpperArmL = this.Finger2[num20, num100 * 3];
											this.mFinger2[num20, num100 * 2].ForearmL = this.Finger2[num20, num100 * 3];
											this.mFinger2[num20, num100 * 2].ido = 0;
											this.gFinger2[num20, num100 * 2 + 1].SetActive(false);
											this.gFinger2[num20, num100 * 2].SetActive(false);
											this.gFinger2[num20, num100 * 2 + 1].transform.position = this.Finger2[num20, num100 * 3 + 2].position;
											this.gFinger2[num20, num100 * 2].transform.position = this.Finger2[num20, num100 * 3 + 1].position;
											if (this.mFinger2[num20, num100 * 2 + 1].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger2[num20, num100 * 2 + 1].isStop = false;
											}
											if (this.mFinger2[num20, num100 * 2].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger2[num20, num100 * 2].isStop = false;
											}
											j = num100;
										}
									}
									else if (this.ikMode[num20] == 4)
									{
										if (!this.gFinger[num20, 0])
										{
											this.SetIKInit2(num20);
										}
										UnityEngine.Object.Destroy(this.gMaid[num20]);
										UnityEngine.Object.Destroy(this.gMaidC[num20]);
										UnityEngine.Object.Destroy(this.gHead[num20]);
										UnityEngine.Object.Destroy(this.gJotai[num20]);
										UnityEngine.Object.Destroy(this.gKahuku[num20]);
										this.gHandL[num20].SetActive(false);
										this.gArmL[num20].SetActive(false);
										this.gFootL[num20].SetActive(false);
										this.gHizaL[num20].SetActive(false);
										this.gHandR[num20].SetActive(false);
										this.gArmR[num20].SetActive(false);
										this.gFootR[num20].SetActive(false);
										this.gHizaR[num20].SetActive(false);
										this.gClavicleL[num20].SetActive(false);
										this.gClavicleR[num20].SetActive(false);
										this.gNeck[num20].SetActive(false);
										this.gSpine[num20].SetActive(false);
										this.gSpine0a[num20].SetActive(false);
										this.gSpine1a[num20].SetActive(false);
										this.gSpine1[num20].SetActive(false);
										this.gPelvis[num20].SetActive(false);
										for (int num101 = 0; num101 < 10; num101 = j + 1)
										{
											this.mFinger[num20, num101 * 3 + 2].maid = maid3;
											this.mFinger[num20, num101 * 3 + 2].HandL = this.Finger[num20, num101 * 4 + 3];
											this.mFinger[num20, num101 * 3 + 2].UpperArmL = this.Finger[num20, num101 * 4 + 2];
											this.mFinger[num20, num101 * 3 + 2].ForearmL = this.Finger[num20, num101 * 4 + 2];
											this.mFinger[num20, num101 * 3 + 2].ido = 12;
											this.mFinger[num20, num101 * 3 + 2].onFlg = true;
											if (num101 == 0 || num101 == 5)
											{
												this.mFinger[num20, num101 * 3 + 2].ido = 15;
											}
											this.mFinger[num20, num101 * 3 + 1].maid = maid3;
											this.mFinger[num20, num101 * 3 + 1].HandL = this.Finger[num20, num101 * 4 + 2];
											this.mFinger[num20, num101 * 3 + 1].UpperArmL = this.Finger[num20, num101 * 4 + 1];
											this.mFinger[num20, num101 * 3 + 1].ForearmL = this.Finger[num20, num101 * 4 + 1];
											this.mFinger[num20, num101 * 3 + 1].ido = 11;
											this.mFinger[num20, num101 * 3 + 1].onFlg = true;
											if (num101 == 0 || num101 == 5)
											{
												this.mFinger[num20, num101 * 3 + 1].ido = 14;
											}
											this.mFinger[num20, num101 * 3].maid = maid3;
											this.mFinger[num20, num101 * 3].HandL = this.Finger[num20, num101 * 4 + 1];
											this.mFinger[num20, num101 * 3].UpperArmL = this.Finger[num20, num101 * 4];
											this.mFinger[num20, num101 * 3].ForearmL = this.Finger[num20, num101 * 4];
											this.mFinger[num20, num101 * 3].ido = 13;
											this.mFinger[num20, num101 * 3].onFlg = true;
											if (num101 == 0 || num101 == 5)
											{
												this.mFinger[num20, num101 * 3].ido = 0;
											}
											if (this.ikModeOld[num20] != 4)
											{
												this.mFinger[num20, num101 * 3].reset = true;
											}
											this.gFinger[num20, num101 * 3 + 2].SetActive(true);
											this.gFinger[num20, num101 * 3 + 1].SetActive(true);
											this.gFinger[num20, num101 * 3].SetActive(true);
											this.gFinger[num20, num101 * 3 + 2].transform.position = (this.Finger[num20, num101 * 4 + 3].position + this.Finger[num20, num101 * 4 + 3].position + this.Finger[num20, num101 * 4 + 2].position) / 3f;
											this.gFinger[num20, num101 * 3 + 1].transform.position = this.Finger[num20, num101 * 4 + 2].position;
											this.gFinger[num20, num101 * 3].transform.position = this.Finger[num20, num101 * 4 + 1].position;
											if (this.mFinger[num20, num101 * 3 + 2].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger[num20, num101 * 3 + 2].isStop = false;
											}
											if (this.mFinger[num20, num101 * 3 + 1].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger[num20, num101 * 3 + 1].isStop = false;
											}
											if (this.mFinger[num20, num101 * 3].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger[num20, num101 * 3].isStop = false;
											}
											j = num101;
										}
										for (int num102 = 0; num102 < 6; num102 = j + 1)
										{
											this.mFinger2[num20, num102 * 2 + 1].maid = maid3;
											this.mFinger2[num20, num102 * 2 + 1].HandL = this.Finger2[num20, num102 * 3 + 2];
											this.mFinger2[num20, num102 * 2 + 1].UpperArmL = this.Finger2[num20, num102 * 3 + 1];
											this.mFinger2[num20, num102 * 2 + 1].ForearmL = this.Finger2[num20, num102 * 3 + 1];
											this.mFinger2[num20, num102 * 2 + 1].ido = 17;
											this.mFinger2[num20, num102 * 2].maid = maid3;
											this.mFinger2[num20, num102 * 2].HandL = this.Finger2[num20, num102 * 3 + 1];
											this.mFinger2[num20, num102 * 2].UpperArmL = this.Finger2[num20, num102 * 3];
											this.mFinger2[num20, num102 * 2].ForearmL = this.Finger2[num20, num102 * 3];
											this.mFinger2[num20, num102 * 2].ido = 0;
											this.gFinger2[num20, num102 * 2 + 1].SetActive(true);
											this.gFinger2[num20, num102 * 2].SetActive(true);
											this.gFinger2[num20, num102 * 2 + 1].transform.position = this.Finger2[num20, num102 * 3 + 2].position;
											this.gFinger2[num20, num102 * 2].transform.position = this.Finger2[num20, num102 * 3 + 1].position;
											if (this.mFinger2[num20, num102 * 2 + 1].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger2[num20, num102 * 2 + 1].isStop = false;
											}
											if (this.mFinger2[num20, num102 * 2].isStop)
											{
												this.isStop[num20] = true;
												this.isLock[num20] = true;
												this.mFinger2[num20, num102 * 2].isStop = false;
											}
											j = num102;
										}
									}
									else if (this.ikModeOld[num20] == 1 || this.ikModeOld[num20] == 3 || this.ikModeOld[num20] == 5 || this.ikModeOld[num20] == 8)
									{
										this.mHandL[num20].ido = 0;
										this.mHandR[num20].ido = 0;
										this.mFootL[num20].ido = 0;
										this.mFootR[num20].ido = 0;
										this.mHizaL[num20].ido = 0;
										this.mHizaR[num20].ido = 0;
										this.mHandL[num20].reset = true;
										this.mHandR[num20].reset = true;
										this.mFootL[num20].reset = true;
										this.mFootR[num20].reset = true;
										this.mHizaL[num20].reset = true;
										this.mHizaR[num20].reset = true;
									}
									else
									{
										if (this.gFinger[num20, 0])
										{
											for (int num103 = 0; num103 < 30; num103 = j + 1)
											{
												this.gFinger[num20, num103].SetActive(false);
												j = num103;
											}
											for (int num104 = 0; num104 < 12; num104 = j + 1)
											{
												this.gFinger2[num20, num104].SetActive(false);
												j = num104;
											}
										}
										UnityEngine.Object.Destroy(this.gHead[num20]);
										UnityEngine.Object.Destroy(this.gJotai[num20]);
										UnityEngine.Object.Destroy(this.gKahuku[num20]);
										UnityEngine.Object.Destroy(this.gIKHandL[num20]);
										UnityEngine.Object.Destroy(this.gIKHandR[num20]);
										UnityEngine.Object.Destroy(this.gIKMuneL[num20]);
										UnityEngine.Object.Destroy(this.gIKMuneR[num20]);
										UnityEngine.Object.Destroy(this.gHead2[num20]);
										UnityEngine.Object.Destroy(this.gMaid2[num20]);
										this.gHandL[num20].SetActive(true);
										this.gArmL[num20].SetActive(true);
										this.gFootL[num20].SetActive(true);
										this.gHizaL[num20].SetActive(true);
										this.gHandR[num20].SetActive(true);
										this.gArmR[num20].SetActive(true);
										this.gFootR[num20].SetActive(true);
										this.gHizaR[num20].SetActive(true);
										this.mHandL[num20].ido = 0;
										this.mHandR[num20].ido = 0;
										this.mFootL[num20].ido = 0;
										this.mFootR[num20].ido = 0;
										this.gClavicleL[num20].SetActive(true);
										this.gClavicleR[num20].SetActive(true);
									}
									if (!this.isIK[num20])
									{
										this.gHandL[num20].SetActive(false);
										this.gArmL[num20].SetActive(false);
										this.gFootL[num20].SetActive(false);
										this.gHizaL[num20].SetActive(false);
										this.gHandR[num20].SetActive(false);
										this.gArmR[num20].SetActive(false);
										this.gFootR[num20].SetActive(false);
										this.gHizaR[num20].SetActive(false);
										this.gClavicleL[num20].SetActive(false);
										this.gClavicleR[num20].SetActive(false);
										this.gNeck[num20].SetActive(false);
										this.gSpine[num20].SetActive(false);
										this.gSpine0a[num20].SetActive(false);
										this.gSpine1a[num20].SetActive(false);
										this.gSpine1[num20].SetActive(false);
										this.gPelvis[num20].SetActive(false);
									}
									if (this.isIK[num20])
									{
										this.mHandL[num20].maid = maid3;
										this.mHandL[num20].HandL = this.HandL1[num20];
										if (this.ikMode[num20] == 2)
										{
											this.mHandL[num20].UpperArmL = this.ForearmL1[num20];
										}
										else
										{
											this.mHandL[num20].UpperArmL = this.UpperArmL1[num20];
											if (this.ikModeOld[num20] == 2 && this.isLock[num20])
											{
												this.mHandL[num20].OnMouseDown();
												this.mHandL[num20].isSelect = false;
											}
										}
										this.mHandL[num20].ForearmL = this.ForearmL1[num20];
										this.mArmL[num20].maid = maid3;
										this.mArmL[num20].HandL = this.ForearmL1[num20];
										this.mArmL[num20].UpperArmL = this.UpperArmL1[num20];
										this.mArmL[num20].ForearmL = this.UpperArmL1[num20];
										this.mArmL[num20].onFlg = true;
										if (this.mArmL[num20].onFlg2)
										{
											this.mArmL[num20].onFlg2 = false;
											this.mHandL[num20].initFlg = false;
										}
										if (this.ikMode[num20] == 2)
										{
											this.mHandL[num20].initFlg = false;
											this.mHandR[num20].initFlg = false;
											this.mFootL[num20].initFlg = false;
											this.mFootR[num20].initFlg = false;
											this.mHandL[num20].onFlg = true;
											this.mHandR[num20].onFlg = true;
											this.mFootL[num20].onFlg = true;
											this.mFootR[num20].onFlg = true;
										}
										else
										{
											this.mHandL[num20].onFlg = false;
											this.mHandR[num20].onFlg = false;
											this.mFootL[num20].onFlg = false;
											this.mFootR[num20].onFlg = false;
										}
										this.gHandL[num20].transform.position = this.HandL1[num20].position;
										this.gArmL[num20].transform.position = this.ForearmL1[num20].position;
										this.mClavicleL[num20].maid = maid3;
										this.mClavicleL[num20].HandL = this.UpperArmL1[num20];
										this.mClavicleL[num20].UpperArmL = this.ClavicleL1[num20];
										this.mClavicleL[num20].ForearmL = this.ClavicleL1[num20];
										this.gClavicleL[num20].transform.position = this.UpperArmL1[num20].position;
										if (this.mHandL[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mHandL[num20].isStop = false;
										}
										if (this.mArmL[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mArmL[num20].isStop = false;
										}
										if (this.mClavicleL[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mClavicleL[num20].isStop = false;
										}
										this.mHandR[num20].maid = maid3;
										this.mHandR[num20].HandL = this.HandR1[num20];
										if (this.ikMode[num20] == 2)
										{
											this.mHandR[num20].UpperArmL = this.ForearmR1[num20];
										}
										else
										{
											this.mHandR[num20].UpperArmL = this.UpperArmR1[num20];
											if (this.ikModeOld[num20] == 2 && this.isLock[num20])
											{
												this.mHandR[num20].OnMouseDown();
												this.mHandR[num20].isSelect = false;
											}
										}
										this.mHandR[num20].ForearmL = this.ForearmR1[num20];
										this.mArmR[num20].maid = maid3;
										this.mArmR[num20].HandL = this.ForearmR1[num20];
										this.mArmR[num20].UpperArmL = this.UpperArmR1[num20];
										this.mArmR[num20].ForearmL = this.UpperArmR1[num20];
										this.mArmR[num20].onFlg = true;
										if (this.mArmR[num20].onFlg2)
										{
											this.mArmR[num20].onFlg2 = false;
											this.mHandR[num20].initFlg = false;
										}
										this.gHandR[num20].transform.position = this.HandR1[num20].position;
										this.gArmR[num20].transform.position = this.ForearmR1[num20].position;
										this.mClavicleR[num20].maid = maid3;
										this.mClavicleR[num20].HandL = this.UpperArmR1[num20];
										this.mClavicleR[num20].UpperArmL = this.ClavicleR1[num20];
										this.mClavicleR[num20].ForearmL = this.ClavicleR1[num20];
										this.gClavicleR[num20].transform.position = this.UpperArmR1[num20].position;
										if (this.mHandR[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mHandR[num20].isStop = false;
										}
										if (this.mArmR[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mArmR[num20].isStop = false;
										}
										if (this.mClavicleL[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mClavicleL[num20].isStop = false;
										}
										this.mFootL[num20].maid = maid3;
										this.mFootL[num20].HandL = this.HandL2[num20];
										if (this.ikMode[num20] == 2)
										{
											this.mFootL[num20].UpperArmL = this.ForearmL2[num20];
										}
										else
										{
											this.mFootL[num20].UpperArmL = this.UpperArmL2[num20];
											if (this.ikModeOld[num20] == 2 && this.isLock[num20])
											{
												this.mFootL[num20].OnMouseDown();
												this.mFootL[num20].isSelect = false;
											}
										}
										this.mFootL[num20].ForearmL = this.ForearmL2[num20];
										this.mHizaL[num20].maid = maid3;
										this.mHizaL[num20].HandL = this.ForearmL2[num20];
										this.mHizaL[num20].UpperArmL = this.UpperArmL2[num20];
										this.mHizaL[num20].ForearmL = this.UpperArmL2[num20];
										this.mHizaL[num20].onFlg = true;
										if (this.mHizaL[num20].onFlg2)
										{
											this.mHizaL[num20].onFlg2 = false;
											this.mFootL[num20].initFlg = false;
										}
										this.gFootL[num20].transform.position = this.HandL2[num20].position;
										this.gHizaL[num20].transform.position = this.ForearmL2[num20].position;
										if (this.mFootL[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mFootL[num20].isStop = false;
										}
										if (this.mHizaL[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mHizaL[num20].isStop = false;
										}
										this.mFootR[num20].maid = maid3;
										this.mFootR[num20].HandL = this.HandR2[num20];
										if (this.ikMode[num20] == 2)
										{
											this.mFootR[num20].UpperArmL = this.ForearmR2[num20];
										}
										else
										{
											this.mFootR[num20].UpperArmL = this.UpperArmR2[num20];
											if (this.ikModeOld[num20] == 2 && this.isLock[num20])
											{
												this.mFootR[num20].OnMouseDown();
												this.mFootR[num20].isSelect = false;
											}
										}
										this.mFootR[num20].ForearmL = this.ForearmR2[num20];
										this.mHizaR[num20].maid = maid3;
										this.mHizaR[num20].HandL = this.ForearmR2[num20];
										this.mHizaR[num20].UpperArmL = this.UpperArmR2[num20];
										this.mHizaR[num20].ForearmL = this.UpperArmR2[num20];
										this.mHizaR[num20].onFlg = true;
										if (this.mHizaR[num20].onFlg2)
										{
											this.mHizaR[num20].onFlg2 = false;
											this.mFootR[num20].initFlg = false;
										}
										this.gFootR[num20].transform.position = this.HandR2[num20].position;
										this.gHizaR[num20].transform.position = this.ForearmR2[num20].position;
										if (this.mFootR[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mFootR[num20].isStop = false;
										}
										if (this.mHizaR[num20].isStop)
										{
											this.isStop[num20] = true;
											this.isLock[num20] = true;
											this.mHizaR[num20].isStop = false;
										}
										bool flag37 = false;
										if (this.ikModeOld[num20] == 9 || this.ikModeOld[num20] == 10 || this.ikModeOld[num20] == 11 || this.ikModeOld[num20] == 12 || this.ikModeOld[num20] == 14)
										{
											flag37 = true;
										}
										if (this.isBone[num20])
										{
											if ((this.ikMode[num20] != 3 && this.ikMode[num20] != 5 && this.ikMode[num20] != 8) || this.ikMode[num20] != this.ikModeOld[num20] || this.isChange[num20])
											{
												this.gizmoFootL[num20].Visible = false;
												this.gizmoHandR[num20].Visible = false;
												this.gizmoHandL[num20].Visible = false;
												this.gizmoFootR[num20].Visible = false;
											}
											else
											{
												bool fieldValue7 = ManyMaids.GetFieldValue<GizmoRender, bool>(this.gizmoHandL[num20], "is_drag_");
												bool fieldValue8 = ManyMaids.GetFieldValue<GizmoRender, bool>(this.gizmoHandR[num20], "is_drag_");
												bool fieldValue9 = ManyMaids.GetFieldValue<GizmoRender, bool>(this.gizmoFootL[num20], "is_drag_");
												bool fieldValue10 = ManyMaids.GetFieldValue<GizmoRender, bool>(this.gizmoFootR[num20], "is_drag_");
												if (this.ikMode[num20] == 3)
												{
													this.gizmoHandL[num20].transform.position = this.HandL1[num20].transform.position;
													this.gizmoHandR[num20].transform.position = this.HandR1[num20].transform.position;
													this.gizmoFootL[num20].transform.position = this.HandL2[num20].transform.position;
													this.gizmoFootR[num20].transform.position = this.HandR2[num20].transform.position;
													if (fieldValue7 || fieldValue8 || fieldValue9 || fieldValue10)
													{
														this.HandL1[num20].transform.rotation = this.gizmoHandL[num20].transform.rotation;
														this.HandR1[num20].transform.rotation = this.gizmoHandR[num20].transform.rotation;
														this.HandL2[num20].transform.rotation = this.gizmoFootL[num20].transform.rotation;
														this.HandR2[num20].transform.rotation = this.gizmoFootR[num20].transform.rotation;
													}
													else
													{
														this.gizmoHandL[num20].transform.rotation = this.HandL1[num20].transform.rotation;
														this.gizmoHandR[num20].transform.rotation = this.HandR1[num20].transform.rotation;
														this.gizmoFootL[num20].transform.rotation = this.HandL2[num20].transform.rotation;
														this.gizmoFootR[num20].transform.rotation = this.HandR2[num20].transform.rotation;
													}
												}
												else if (this.ikMode[num20] == 5)
												{
													this.gizmoHandL[num20].transform.position = this.UpperArmL1[num20].transform.position;
													this.gizmoHandR[num20].transform.position = this.UpperArmR1[num20].transform.position;
													this.gizmoFootL[num20].transform.position = this.UpperArmL2[num20].transform.position;
													this.gizmoFootR[num20].transform.position = this.UpperArmR2[num20].transform.position;
													if (fieldValue7 || fieldValue8 || fieldValue9 || fieldValue10)
													{
														this.UpperArmL1[num20].transform.rotation = this.gizmoHandL[num20].transform.rotation;
														this.UpperArmR1[num20].transform.rotation = this.gizmoHandR[num20].transform.rotation;
														this.UpperArmL2[num20].transform.rotation = this.gizmoFootL[num20].transform.rotation;
														this.UpperArmR2[num20].transform.rotation = this.gizmoFootR[num20].transform.rotation;
														flag37 = true;
													}
													else
													{
														this.gizmoHandL[num20].transform.rotation = this.UpperArmL1[num20].transform.rotation;
														this.gizmoHandR[num20].transform.rotation = this.UpperArmR1[num20].transform.rotation;
														this.gizmoFootL[num20].transform.rotation = this.UpperArmL2[num20].transform.rotation;
														this.gizmoFootR[num20].transform.rotation = this.UpperArmR2[num20].transform.rotation;
													}
												}
												else if (this.ikMode[num20] == 8)
												{
													this.gizmoHandL[num20].transform.position = this.ForearmL1[num20].transform.position;
													this.gizmoHandR[num20].transform.position = this.ForearmR1[num20].transform.position;
													this.gizmoFootL[num20].transform.position = this.ForearmL2[num20].transform.position;
													this.gizmoFootR[num20].transform.position = this.ForearmR2[num20].transform.position;
													if (fieldValue7 || fieldValue8 || fieldValue9 || fieldValue10)
													{
														this.ForearmL1[num20].transform.rotation = this.gizmoHandL[num20].transform.rotation;
														this.ForearmR1[num20].transform.rotation = this.gizmoHandR[num20].transform.rotation;
														this.ForearmL2[num20].transform.rotation = this.gizmoFootL[num20].transform.rotation;
														this.ForearmR2[num20].transform.rotation = this.gizmoFootR[num20].transform.rotation;
														flag37 = true;
													}
													else
													{
														this.gizmoHandL[num20].transform.rotation = this.ForearmL1[num20].transform.rotation;
														this.gizmoHandR[num20].transform.rotation = this.ForearmR1[num20].transform.rotation;
														this.gizmoFootL[num20].transform.rotation = this.ForearmL2[num20].transform.rotation;
														this.gizmoFootR[num20].transform.rotation = this.ForearmR2[num20].transform.rotation;
													}
												}
												this.gizmoHandL[num20].Visible = true;
												this.gizmoHandR[num20].Visible = true;
												this.gizmoFootL[num20].Visible = true;
												this.gizmoFootR[num20].Visible = true;
												this.gHandL[num20].SetActive(false);
												this.gFootL[num20].SetActive(false);
												this.gHandR[num20].SetActive(false);
												this.gFootR[num20].SetActive(false);
												if (!this.isLock[num20] && (fieldValue7 || fieldValue8 || fieldValue9 || fieldValue10))
												{
													this.isStop[num20] = true;
													this.isLock[num20] = true;
												}
											}
											if (this.isChange[num20])
											{
												this.isChange[num20] = false;
												this.gHandL[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gHandR[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gArmL[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gArmR[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gFootL[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gFootR[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gHizaL[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gHizaR[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gClavicleL[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gClavicleR[num20].transform.localScale = new Vector3(0.07f, 0.07f, 0.07f);
												this.gHandL[num20].GetComponent<Renderer>().enabled = true;
												this.gHandR[num20].GetComponent<Renderer>().enabled = true;
												this.gArmL[num20].GetComponent<Renderer>().enabled = true;
												this.gArmR[num20].GetComponent<Renderer>().enabled = true;
												this.gFootL[num20].GetComponent<Renderer>().enabled = true;
												this.gFootR[num20].GetComponent<Renderer>().enabled = true;
												this.gHizaL[num20].GetComponent<Renderer>().enabled = true;
												this.gHizaR[num20].GetComponent<Renderer>().enabled = true;
												this.gClavicleL[num20].GetComponent<Renderer>().enabled = true;
												this.gClavicleR[num20].GetComponent<Renderer>().enabled = true;
												this.gHandL[num20].GetComponent<Renderer>().material = this.m_material2;
												this.gHandR[num20].GetComponent<Renderer>().material = this.m_material2;
												this.gArmL[num20].GetComponent<Renderer>().material = this.m_material2;
												this.gArmR[num20].GetComponent<Renderer>().material = this.m_material2;
												this.gFootL[num20].GetComponent<Renderer>().material = this.m_material2;
												this.gFootR[num20].GetComponent<Renderer>().material = this.m_material2;
												this.gHizaL[num20].GetComponent<Renderer>().material = this.m_material2;
												this.gHizaR[num20].GetComponent<Renderer>().material = this.m_material2;
												this.gClavicleL[num20].GetComponent<Renderer>().material = this.m_material2;
												this.gClavicleR[num20].GetComponent<Renderer>().material = this.m_material2;
											}
											if (this.ikMode[num20] == 0 && (this.ikModeOld[num20] == 1 || this.ikModeOld[num20] == 2) && this.gNeck[num20])
											{
												this.mNeck[num20].ido = 1;
												this.mNeck[num20].reset = true;
												this.mSpine[num20].ido = 1;
												this.mSpine[num20].reset = true;
												this.mSpine0a[num20].ido = 1;
												this.mSpine0a[num20].reset = true;
												this.mSpine1a[num20].ido = 1;
												this.mSpine1a[num20].reset = true;
												this.mSpine1[num20].ido = 1;
												this.mSpine1[num20].reset = true;
												this.mPelvis[num20].ido = 1;
												this.mPelvis[num20].reset = true;
											}
											else if (this.ikMode[num20] == 0)
											{
												this.gNeck[num20].SetActive(true);
												this.gSpine[num20].SetActive(true);
												this.gSpine0a[num20].SetActive(true);
												this.gSpine1a[num20].SetActive(true);
												this.gSpine1[num20].SetActive(true);
												this.gPelvis[num20].SetActive(true);
												if (this.mNeck[num20].isHead)
												{
													this.mNeck[num20].isHead = false;
													this.isLookn[num20] = this.isLook[num20];
													this.isLook[num20] = !this.isLook[num20];
												}
												this.mNeck[num20].maid = maid3;
												this.mNeck[num20].head = this.Neck[num20];
												this.mNeck[num20].no = num20;
												this.mNeck[num20].ido = 1;
												this.gNeck[num20].transform.position = this.Neck[num20].position;
												this.gNeck[num20].transform.localEulerAngles = this.Neck[num20].localEulerAngles;
												this.mSpine[num20].maid = maid3;
												this.mSpine[num20].head = this.Spine2[num20];
												this.mSpine[num20].no = num20;
												this.mSpine[num20].ido = 1;
												this.gSpine[num20].transform.position = this.Spine2[num20].position;
												this.gSpine[num20].transform.eulerAngles = new Vector3(this.Spine2[num20].localEulerAngles.z, this.Spine2[num20].localEulerAngles.y, this.Spine2[num20].localEulerAngles.x);
												this.mSpine0a[num20].maid = maid3;
												this.mSpine0a[num20].head = this.Spine0a2[num20];
												this.mSpine0a[num20].no = num20;
												this.mSpine0a[num20].ido = 1;
												this.gSpine0a[num20].transform.position = this.Spine0a2[num20].position;
												this.gSpine0a[num20].transform.eulerAngles = new Vector3(0f - this.Spine0a2[num20].localEulerAngles.z, this.Spine0a2[num20].localEulerAngles.x, this.Spine0a2[num20].localEulerAngles.y);
												this.mSpine1a[num20].maid = maid3;
												this.mSpine1a[num20].head = this.Spine1a2[num20];
												this.mSpine1a[num20].no = num20;
												this.mSpine1a[num20].ido = 1;
												this.gSpine1a[num20].transform.position = this.Spine1a2[num20].position;
												this.gSpine1a[num20].transform.localEulerAngles = new Vector3(0f - this.Spine1a2[num20].localEulerAngles.z, this.Spine1a2[num20].localEulerAngles.x, this.Spine1a2[num20].localEulerAngles.y);
												this.mSpine1[num20].maid = maid3;
												this.mSpine1[num20].head = this.Spine12[num20];
												this.mSpine1[num20].no = num20;
												this.mSpine1[num20].ido = 1;
												this.gSpine1[num20].transform.position = this.Spine12[num20].position;
												this.gSpine1[num20].transform.localEulerAngles = new Vector3(0f - this.Spine12[num20].localEulerAngles.z, this.Spine12[num20].localEulerAngles.x, this.Spine12[num20].localEulerAngles.y);
												this.mPelvis[num20].maid = maid3;
												this.mPelvis[num20].head = this.Pelvis2[num20];
												this.mPelvis[num20].no = num20;
												this.mPelvis[num20].ido = 1;
												this.gPelvis[num20].transform.position = this.Pelvis2[num20].position;
												this.gPelvis[num20].transform.localEulerAngles = this.Pelvis2[num20].localEulerAngles;
												if (this.mNeck[num20].isIdo)
												{
													this.mNeck[num20].isIdo = false;
													this.isLock[num20] = true;
												}
												if (this.mSpine[num20].isIdo)
												{
													this.mSpine[num20].isIdo = false;
													flag37 = true;
													this.isLock[num20] = true;
												}
												if (this.mSpine0a[num20].isIdo)
												{
													this.mSpine0a[num20].isIdo = false;
													flag37 = true;
													this.isLock[num20] = true;
												}
												if (this.mSpine1a[num20].isIdo)
												{
													this.mSpine1a[num20].isIdo = false;
													flag37 = true;
													this.isLock[num20] = true;
												}
												if (this.mSpine1[num20].isIdo)
												{
													this.mSpine1[num20].isIdo = false;
													flag37 = true;
													this.isLock[num20] = true;
												}
												if (this.mPelvis[num20].isIdo)
												{
													this.mPelvis[num20].isIdo = false;
													flag37 = true;
													this.isLock[num20] = true;
												}
												if (this.mClavicleL[num20].isIdo)
												{
													this.mClavicleL[num20].isIdo = false;
													flag37 = true;
													this.isLock[num20] = true;
												}
												if (this.mClavicleR[num20].isIdo)
												{
													this.mClavicleR[num20].isIdo = false;
													flag37 = true;
													this.isLock[num20] = true;
												}
											}
										}
										else if (this.isChange[num20])
										{
											this.isChange[num20] = false;
											this.gHandL[num20].GetComponent<Renderer>().enabled = false;
											this.gArmL[num20].GetComponent<Renderer>().enabled = false;
											this.gFootL[num20].GetComponent<Renderer>().enabled = false;
											this.gHizaL[num20].GetComponent<Renderer>().enabled = false;
											this.gHandR[num20].GetComponent<Renderer>().enabled = false;
											this.gArmR[num20].GetComponent<Renderer>().enabled = false;
											this.gFootR[num20].GetComponent<Renderer>().enabled = false;
											this.gHizaR[num20].GetComponent<Renderer>().enabled = false;
											this.gClavicleL[num20].GetComponent<Renderer>().enabled = false;
											this.gClavicleR[num20].GetComponent<Renderer>().enabled = false;
											this.gHandL[num20].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
											this.gHandR[num20].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
											this.gArmL[num20].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
											this.gArmR[num20].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
											this.gFootL[num20].transform.localScale = new Vector3(0.15f, 0.15f, 0.15f);
											this.gFootR[num20].transform.localScale = new Vector3(0.15f, 0.15f, 0.15f);
											this.gHizaL[num20].transform.localScale = new Vector3(0.15f, 0.15f, 0.15f);
											this.gHizaR[num20].transform.localScale = new Vector3(0.15f, 0.15f, 0.15f);
											this.gClavicleL[num20].transform.localScale = new Vector3(0.13f, 0.13f, 0.13f);
											this.mClavicleR[num20].transform.localScale = new Vector3(0.13f, 0.13f, 0.13f);
											this.gNeck[num20].SetActive(false);
											this.gSpine[num20].SetActive(false);
											this.gSpine0a[num20].SetActive(false);
											this.gSpine1a[num20].SetActive(false);
											this.gSpine1[num20].SetActive(false);
											this.gPelvis[num20].SetActive(false);
											this.gizmoHandL[num20].Visible = false;
											this.gizmoHandR[num20].Visible = false;
											this.gizmoFootL[num20].Visible = false;
											this.gizmoFootR[num20].Visible = false;
										}
										if (flag37)
										{
											this.mHandL[num20].initFlg = false;
											this.mHandR[num20].initFlg = false;
											this.mFootL[num20].initFlg = false;
											this.mFootR[num20].initFlg = false;
										}
									}
									this.ikModeOld[num20] = this.ikMode[num20];
									bool flag38 = false;
									if (!Input.GetKey(KeyCode.A) && !Input.GetKey(KeyCode.Q) && num20 == this.ikMaid)
									{
										if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.BackQuote))
										{
											for (int num105 = 0; num105 < 10; num105 = j + 1)
											{
												Transform transform23 = maid3.transform;
												Vector3 position3 = maid3.transform.position;
												Vector3 right2 = Vector3.right;
												transform23.RotateAround(position3, right2, 0f - maid3.transform.rotation.eulerAngles.x);
												Transform transform24 = maid3.transform;
												Vector3 position4 = maid3.transform.position;
												Vector3 forward2 = Vector3.forward;
												transform24.RotateAround(position4, forward2, 0f - maid3.transform.rotation.eulerAngles.z);
												j = num105;
											}
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.J))
										{
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector3.x, 0f, vector3.z), 0.3f);
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector2.x, 0f, vector2.z), 0.3f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.L))
										{
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector3.x, 0f, vector3.z), 0.3f);
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector2.x, 0f, vector2.z), -0.3f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.J))
										{
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector3.x, 0f, vector3.z), -0.3f);
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector2.x, 0f, vector2.z), 0.3f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.L))
										{
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector3.x, 0f, vector3.z), -0.3f);
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector2.x, 0f, vector2.z), -0.3f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.I))
										{
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector3.x, 0f, vector3.z), 0.4f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.K))
										{
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector3.x, 0f, vector3.z), -0.4f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.J))
										{
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector2.x, 0f, vector2.z), 0.4f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.L))
										{
											maid3.transform.RotateAround(maid3.transform.position, new Vector3(vector2.x, 0f, vector2.z), -0.4f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.U))
										{
											maid3.body0.transform.localRotation = Quaternion.Euler(maid3.body0.transform.localEulerAngles) * Quaternion.AngleAxis(-1.5f, Vector3.up);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.X) && Input.GetKey(KeyCode.O))
										{
											maid3.body0.transform.localRotation = Quaternion.Euler(maid3.body0.transform.localEulerAngles) * Quaternion.AngleAxis(1.5f, Vector3.up);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.U))
										{
											maid3.body0.transform.RotateAround(maid3.transform.position, Vector3.up, -1.5f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.O))
										{
											maid3.body0.transform.RotateAround(maid3.transform.position, Vector3.up, 1.5f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.J))
										{
											Vector3 vector = maid3.transform.position;
											vector += new Vector3(vector2.x, 0f, vector2.z) * 0.0075f * this.speed;
											vector += new Vector3(vector3.x, 0f, vector3.z) * -0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.L))
										{
											Vector3 vector = maid3.transform.position;
											vector += new Vector3(vector2.x, 0f, vector2.z) * 0.0075f * this.speed;
											vector += new Vector3(vector3.x, 0f, vector3.z) * 0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.J))
										{
											Vector3 vector = maid3.transform.position;
											vector += new Vector3(vector2.x, 0f, vector2.z) * -0.0075f * this.speed;
											vector += new Vector3(vector3.x, 0f, vector3.z) * -0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.L))
										{
											Vector3 vector = maid3.transform.position;
											vector += new Vector3(vector2.x, 0f, vector2.z) * -0.0075f * this.speed;
											vector += new Vector3(vector3.x, 0f, vector3.z) * 0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.I))
										{
											Vector3 vector = maid3.transform.position;
											vector += new Vector3(vector2.x, 0f, vector2.z) * 0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.K))
										{
											Vector3 vector = maid3.transform.position;
											vector += new Vector3(vector2.x, 0f, vector2.z) * -0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.J))
										{
											Vector3 vector = maid3.transform.position;
											vector += new Vector3(vector3.x, 0f, vector3.z) * -0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.Z) && Input.GetKey(KeyCode.L))
										{
											Vector3 vector = maid3.transform.position;
											vector += new Vector3(vector3.x, 0f, vector3.z) * 0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if ((Input.GetKey(KeyCode.Z) || Input.GetKey(KeyCode.X)) && Input.GetKey(KeyCode.Alpha0))
										{
											Vector3 vector = maid3.transform.position;
											ref float ptr4 = ref vector.y;
											ptr4 += 0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if ((Input.GetKey(KeyCode.Z) || Input.GetKey(KeyCode.X)) && Input.GetKey(KeyCode.P))
										{
											Vector3 vector = maid3.transform.position;
											ref float ptr4 = ref vector.y;
											ptr4 -= 0.0075f * this.speed;
											maid3.SetPos(vector);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.C) && Input.GetKey(KeyCode.I))
										{
											maid3.transform.localScale = new Vector3(maid3.transform.localScale.x * 1.005f, maid3.transform.localScale.y * 1.005f, maid3.transform.localScale.z * 1.005f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.C) && Input.GetKey(KeyCode.K))
										{
											maid3.transform.localScale = new Vector3(maid3.transform.localScale.x * 0.995f, maid3.transform.localScale.y * 0.995f, maid3.transform.localScale.z * 0.995f);
											flag38 = true;
										}
										else if (Input.GetKey(KeyCode.C) && Input.GetKey(KeyCode.BackQuote))
										{
											maid3.transform.localScale = new Vector3(1f, 1f, 1f);
											flag38 = true;
										}
									}
									if (!flag38 && (this.ikBui != 5 || (this.ikBui == 5 && (this.ikMode[num20] == 4 || this.ikMode[num20] == 6 || this.ikMode[num20] == 7))) && !Input.GetKey(KeyCode.V) && !Input.GetKey(KeyCode.A) && !Input.GetKey(KeyCode.Q) && num20 == this.ikMaid)
									{
										if (Input.GetKey(KeyCode.I))
										{
											if (this.ikMode[num20] == 0)
											{
												Vector3 vector5 = this.HandL.position;
												vector5 += new Vector3(vector2.x, 0f, vector2.z) * 0.004f;
												this.ikLeftArm.Init(this.UpperArmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik = this.ikLeftArm;
												Transform upperArmL = this.UpperArmL;
												Transform forearmL = this.ForearmL;
												Transform handL = this.HandL;
												Vector3 tgt = vector5;
												Vector3 vector6 = default(Vector3);
												ik.Porc(upperArmL, forearmL, handL, tgt, vector6);
											}
											else if (this.ikMode[num20] == 2)
											{
												Vector3 vector5 = this.HandL.position;
												vector5 += new Vector3(vector2.x, 0f, vector2.z) * 0.004f;
												this.ikLeftArm.Init(this.ForearmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik2 = this.ikLeftArm;
												Transform forearmL2 = this.ForearmL;
												Transform forearmL3 = this.ForearmL;
												Transform handL2 = this.HandL;
												Vector3 tgt2 = vector5;
												Vector3 vector6 = default(Vector3);
												ik2.Porc(forearmL2, forearmL3, handL2, tgt2, vector6);
											}
											else if (this.ikMode[num20] == 3)
											{
												if (this.ikBui == 1 || this.ikBui == 2)
												{
													this.HandL.RotateAround(this.HandL.position, new Vector3(vector3.x, 0f, vector3.z), 0.8f);
												}
												else
												{
													this.HandL.RotateAround(this.HandL.position, new Vector3(vector3.x, 0f, vector3.z), -0.8f);
												}
											}
											else if (this.ikMode[num20] == 4)
											{
												this.Head.RotateAround(this.Head.position, new Vector3(vector3.x, 0f, vector3.z), 0.4f);
											}
											else if (this.ikMode[num20] == 8)
											{
												this.IK_hand.RotateAround(this.IK_hand.position, new Vector3(vector3.x, 0f, vector3.z), 0.6f);
											}
											else if (this.ikMode[num20] == 6)
											{
												this.Spine1a.RotateAround(this.Spine1a.position, new Vector3(vector3.x, 0f, vector3.z), 0.03f);
												this.Spine1.RotateAround(this.Spine1.position, new Vector3(vector3.x, 0f, vector3.z), 0.1f);
												this.Spine0a.RotateAround(this.Spine0a.position, new Vector3(vector3.x, 0f, vector3.z), 0.09f);
												this.Spine.RotateAround(this.Spine.position, new Vector3(vector3.x, 0f, vector3.z), 0.07f);
											}
											else if (this.ikMode[num20] == 7)
											{
												this.Pelvis.RotateAround(this.Pelvis.position, new Vector3(vector3.x, 0f, vector3.z), -0.2f);
											}
											else if (this.ikMode[num20] == 5)
											{
												Vector3 vector5 = this.ForearmL.position;
												vector5 += new Vector3(vector2.x, 0f, vector2.z) * 0.0035f;
												this.ikLeftArm.Init(this.Clavicle, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik3 = this.ikLeftArm;
												Transform clavicle = this.Clavicle;
												Transform upperArmL2 = this.UpperArmL;
												Transform forearmL4 = this.ForearmL;
												Vector3 tgt3 = vector5;
												Vector3 vector6 = default(Vector3);
												ik3.Porc(clavicle, upperArmL2, forearmL4, tgt3, vector6);
											}
											else
											{
												Vector3 vector5 = this.ForearmL.position;
												vector5 += new Vector3(vector2.x, 0f, vector2.z) * 0.0035f;
												this.ikLeftArm.Init(this.UpperArmL, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik4 = this.ikLeftArm;
												Transform upperArmL3 = this.UpperArmL;
												Transform upperArmL4 = this.UpperArmL;
												Transform forearmL5 = this.ForearmL;
												Vector3 tgt4 = vector5;
												Vector3 vector6 = default(Vector3);
												ik4.Porc(upperArmL3, upperArmL4, forearmL5, tgt4, vector6);
											}
											this.isStop[num20] = true;
											this.isLock[num20] = true;
										}
										else if (Input.GetKey(KeyCode.K))
										{
											if (this.ikMode[num20] == 0)
											{
												Vector3 vector5 = this.HandL.position;
												vector5 += new Vector3(vector2.x, 0f, vector2.z) * -0.004f;
												this.ikLeftArm.Init(this.UpperArmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik5 = this.ikLeftArm;
												Transform upperArmL5 = this.UpperArmL;
												Transform forearmL6 = this.ForearmL;
												Transform handL3 = this.HandL;
												Vector3 tgt5 = vector5;
												Vector3 vector6 = default(Vector3);
												ik5.Porc(upperArmL5, forearmL6, handL3, tgt5, vector6);
											}
											else if (this.ikMode[num20] == 2)
											{
												Vector3 vector5 = this.HandL.position;
												vector5 += new Vector3(vector2.x, 0f, vector2.z) * -0.004f;
												this.ikLeftArm.Init(this.ForearmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik6 = this.ikLeftArm;
												Transform forearmL7 = this.ForearmL;
												Transform forearmL8 = this.ForearmL;
												Transform handL4 = this.HandL;
												Vector3 tgt6 = vector5;
												Vector3 vector6 = default(Vector3);
												ik6.Porc(forearmL7, forearmL8, handL4, tgt6, vector6);
											}
											else if (this.ikMode[num20] == 3)
											{
												if (this.ikBui == 1 || this.ikBui == 2)
												{
													this.HandL.RotateAround(this.HandL.position, new Vector3(vector3.x, 0f, vector3.z), -0.8f);
												}
												else
												{
													this.HandL.RotateAround(this.HandL.position, new Vector3(vector3.x, 0f, vector3.z), 0.8f);
												}
											}
											else if (this.ikMode[num20] == 4)
											{
												this.Head.RotateAround(this.Head.position, new Vector3(vector3.x, 0f, vector3.z), -0.4f);
											}
											else if (this.ikMode[num20] == 8)
											{
												this.IK_hand.RotateAround(this.IK_hand.position, new Vector3(vector3.x, 0f, vector3.z), -0.6f);
											}
											else if (this.ikMode[num20] == 6)
											{
												this.Spine1a.RotateAround(this.Spine1a.position, new Vector3(vector3.x, 0f, vector3.z), -0.03f);
												this.Spine1.RotateAround(this.Spine1.position, new Vector3(vector3.x, 0f, vector3.z), -0.1f);
												this.Spine0a.RotateAround(this.Spine0a.position, new Vector3(vector3.x, 0f, vector3.z), -0.09f);
												this.Spine.RotateAround(this.Spine.position, new Vector3(vector3.x, 0f, vector3.z), -0.07f);
											}
											else if (this.ikMode[num20] == 7)
											{
												this.Pelvis.RotateAround(this.Pelvis.position, new Vector3(vector3.x, 0f, vector3.z), 0.2f);
											}
											else if (this.ikMode[num20] == 5)
											{
												Vector3 vector5 = this.ForearmL.position;
												vector5 += new Vector3(vector2.x, 0f, vector2.z) * -0.0035f;
												this.ikLeftArm.Init(this.Clavicle, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik7 = this.ikLeftArm;
												Transform clavicle2 = this.Clavicle;
												Transform upperArmL6 = this.UpperArmL;
												Transform forearmL9 = this.ForearmL;
												Vector3 tgt7 = vector5;
												Vector3 vector6 = default(Vector3);
												ik7.Porc(clavicle2, upperArmL6, forearmL9, tgt7, vector6);
											}
											else
											{
												Vector3 vector5 = this.ForearmL.position;
												vector5 += new Vector3(vector2.x, 0f, vector2.z) * -0.0035f;
												this.ikLeftArm.Init(this.UpperArmL, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik8 = this.ikLeftArm;
												Transform upperArmL7 = this.UpperArmL;
												Transform upperArmL8 = this.UpperArmL;
												Transform forearmL10 = this.ForearmL;
												Vector3 tgt8 = vector5;
												Vector3 vector6 = default(Vector3);
												ik8.Porc(upperArmL7, upperArmL8, forearmL10, tgt8, vector6);
											}
											this.isStop[num20] = true;
											this.isLock[num20] = true;
										}
										else if (Input.GetKey(KeyCode.J))
										{
											if (this.ikMode[num20] == 0)
											{
												Vector3 vector5 = this.HandL.position;
												vector5 += new Vector3(vector3.x, 0f, vector3.z) * -0.004f;
												this.ikLeftArm.Init(this.UpperArmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik9 = this.ikLeftArm;
												Transform upperArmL9 = this.UpperArmL;
												Transform forearmL11 = this.ForearmL;
												Transform handL5 = this.HandL;
												Vector3 tgt9 = vector5;
												Vector3 vector6 = default(Vector3);
												ik9.Porc(upperArmL9, forearmL11, handL5, tgt9, vector6);
											}
											else if (this.ikMode[num20] == 2)
											{
												Vector3 vector5 = this.HandL.position;
												vector5 += new Vector3(vector3.x, 0f, vector3.z) * -0.004f;
												this.ikLeftArm.Init(this.ForearmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik10 = this.ikLeftArm;
												Transform forearmL12 = this.ForearmL;
												Transform forearmL13 = this.ForearmL;
												Transform handL6 = this.HandL;
												Vector3 tgt10 = vector5;
												Vector3 vector6 = default(Vector3);
												ik10.Porc(forearmL12, forearmL13, handL6, tgt10, vector6);
											}
											else if (this.ikMode[num20] == 3)
											{
												if (this.ikBui == 1 || this.ikBui == 2)
												{
													this.HandL.RotateAround(this.HandL.position, new Vector3(vector2.x, 0f, vector2.z), 0.8f);
												}
												else
												{
													this.HandL.RotateAround(this.HandL.position, new Vector3(vector2.x, 0f, vector2.z), -0.8f);
												}
											}
											else if (this.ikMode[num20] == 4)
											{
												this.Head.RotateAround(this.Head.position, new Vector3(vector2.x, 0f, vector2.z), 0.4f);
											}
											else if (this.ikMode[num20] == 8)
											{
												this.IK_hand.RotateAround(this.IK_hand.position, new Vector3(vector2.x, 0f, vector2.z), 0.6f);
											}
											else if (this.ikMode[num20] == 6)
											{
												this.Spine1a.RotateAround(this.Spine1a.position, new Vector3(vector2.x, 0f, vector2.z), 0.03f);
												this.Spine1.RotateAround(this.Spine1.position, new Vector3(vector2.x, 0f, vector2.z), 0.1f);
												this.Spine0a.RotateAround(this.Spine0a.position, new Vector3(vector2.x, 0f, vector2.z), 0.09f);
												this.Spine.RotateAround(this.Spine.position, new Vector3(vector2.x, 0f, vector2.z), 0.07f);
											}
											else if (this.ikMode[num20] == 7)
											{
												this.Pelvis.RotateAround(this.Pelvis.position, new Vector3(vector2.x, 0f, vector2.z), -0.2f);
											}
											else if (this.ikMode[num20] == 5)
											{
												Vector3 vector5 = this.ForearmL.position;
												vector5 += new Vector3(vector3.x, 0f, vector3.z) * -0.0035f;
												this.ikLeftArm.Init(this.Clavicle, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik11 = this.ikLeftArm;
												Transform clavicle3 = this.Clavicle;
												Transform upperArmL10 = this.UpperArmL;
												Transform forearmL14 = this.ForearmL;
												Vector3 tgt11 = vector5;
												Vector3 vector6 = default(Vector3);
												ik11.Porc(clavicle3, upperArmL10, forearmL14, tgt11, vector6);
											}
											else
											{
												Vector3 vector5 = this.ForearmL.position;
												vector5 += new Vector3(vector3.x, 0f, vector3.z) * -0.0035f;
												this.ikLeftArm.Init(this.UpperArmL, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik12 = this.ikLeftArm;
												Transform upperArmL11 = this.UpperArmL;
												Transform upperArmL12 = this.UpperArmL;
												Transform forearmL15 = this.ForearmL;
												Vector3 tgt12 = vector5;
												Vector3 vector6 = default(Vector3);
												ik12.Porc(upperArmL11, upperArmL12, forearmL15, tgt12, vector6);
											}
											this.isStop[num20] = true;
											this.isLock[num20] = true;
										}
										else if (Input.GetKey(KeyCode.L))
										{
											if (this.ikMode[num20] == 0)
											{
												Vector3 vector5 = this.HandL.position;
												vector5 += new Vector3(vector3.x, 0f, vector3.z) * 0.004f;
												this.ikLeftArm.Init(this.UpperArmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik13 = this.ikLeftArm;
												Transform upperArmL13 = this.UpperArmL;
												Transform forearmL16 = this.ForearmL;
												Transform handL7 = this.HandL;
												Vector3 tgt13 = vector5;
												Vector3 vector6 = default(Vector3);
												ik13.Porc(upperArmL13, forearmL16, handL7, tgt13, vector6);
											}
											else if (this.ikMode[num20] == 2)
											{
												Vector3 vector5 = this.HandL.position;
												vector5 += new Vector3(vector3.x, 0f, vector3.z) * 0.004f;
												this.ikLeftArm.Init(this.ForearmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik14 = this.ikLeftArm;
												Transform forearmL17 = this.ForearmL;
												Transform forearmL18 = this.ForearmL;
												Transform handL8 = this.HandL;
												Vector3 tgt14 = vector5;
												Vector3 vector6 = default(Vector3);
												ik14.Porc(forearmL17, forearmL18, handL8, tgt14, vector6);
											}
											else if (this.ikMode[num20] == 3)
											{
												if (this.ikBui == 1 || this.ikBui == 2)
												{
													this.HandL.RotateAround(this.HandL.position, new Vector3(vector2.x, 0f, vector2.z), -0.8f);
												}
												else
												{
													this.HandL.RotateAround(this.HandL.position, new Vector3(vector2.x, 0f, vector2.z), 0.8f);
												}
											}
											else if (this.ikMode[num20] == 4)
											{
												this.Head.RotateAround(this.Head.position, new Vector3(vector2.x, 0f, vector2.z), -0.4f);
											}
											else if (this.ikMode[num20] == 8)
											{
												this.IK_hand.RotateAround(this.IK_hand.position, new Vector3(vector2.x, 0f, vector2.z), -0.6f);
											}
											else if (this.ikMode[num20] == 6)
											{
												this.Spine1a.RotateAround(this.Spine1a.position, new Vector3(vector2.x, 0f, vector2.z), -0.03f);
												this.Spine1.RotateAround(this.Spine1.position, new Vector3(vector2.x, 0f, vector2.z), -0.1f);
												this.Spine0a.RotateAround(this.Spine0a.position, new Vector3(vector2.x, 0f, vector2.z), -0.09f);
												this.Spine.RotateAround(this.Spine.position, new Vector3(vector2.x, 0f, vector2.z), -0.07f);
											}
											else if (this.ikMode[num20] == 7)
											{
												this.Pelvis.RotateAround(this.Pelvis.position, new Vector3(vector2.x, 0f, vector2.z), 0.2f);
											}
											else if (this.ikMode[num20] == 5)
											{
												Vector3 vector5 = this.ForearmL.position;
												vector5 += new Vector3(vector3.x, 0f, vector3.z) * 0.0035f;
												this.ikLeftArm.Init(this.Clavicle, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik15 = this.ikLeftArm;
												Transform clavicle4 = this.Clavicle;
												Transform upperArmL14 = this.UpperArmL;
												Transform forearmL19 = this.ForearmL;
												Vector3 tgt15 = vector5;
												Vector3 vector6 = default(Vector3);
												ik15.Porc(clavicle4, upperArmL14, forearmL19, tgt15, vector6);
											}
											else
											{
												Vector3 vector5 = this.ForearmL.position;
												vector5 += new Vector3(vector3.x, 0f, vector3.z) * 0.0035f;
												this.ikLeftArm.Init(this.UpperArmL, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik16 = this.ikLeftArm;
												Transform upperArmL15 = this.UpperArmL;
												Transform upperArmL16 = this.UpperArmL;
												Transform forearmL20 = this.ForearmL;
												Vector3 tgt16 = vector5;
												Vector3 vector6 = default(Vector3);
												ik16.Porc(upperArmL15, upperArmL16, forearmL20, tgt16, vector6);
											}
											this.isStop[num20] = true;
											this.isLock[num20] = true;
										}
										else if (Input.GetKey(KeyCode.U))
										{
											if (this.ikMode[num20] == 3)
											{
												this.HandL.localRotation = Quaternion.Euler(this.HandL.localEulerAngles) * Quaternion.AngleAxis(1f, Vector3.right);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if (this.ikMode[num20] == 4)
											{
												this.Head.RotateAround(this.Head.position, Vector3.up, -0.7f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if (this.ikMode[num20] == 8)
											{
												this.IK_hand.RotateAround(this.IK_hand.position, Vector3.up, -0.7f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if (this.ikMode[num20] == 6)
											{
												this.Spine1a.RotateAround(this.Spine1a.position, Vector3.up, -0.084f);
												this.Spine0a.RotateAround(this.Spine0a.position, Vector3.up, -0.156f);
												this.Spine.RotateAround(this.Spine.position, Vector3.up, -0.156f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if (this.ikMode[num20] == 7)
											{
												this.Pelvis.RotateAround(this.Pelvis.position, Vector3.up, 0.4f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if ((this.ikMode[num20] == 0 || this.ikMode[num20] == 1 || this.ikMode[num20] == 2) && (this.ikBui == 3 || this.ikBui == 4))
											{
												this.UpperArmL.localRotation = Quaternion.Euler(this.UpperArmL.localEulerAngles) * Quaternion.AngleAxis(0.5f, Vector3.right);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if ((this.ikMode[num20] == 0 || this.ikMode[num20] == 1 || this.ikMode[num20] == 2) && (this.ikBui == 1 || this.ikBui == 2))
											{
												this.UpperArmL.RotateAround(this.UpperArmL.position, Vector3.right, 0.5f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
										}
										else if (Input.GetKey(KeyCode.O))
										{
											if (this.ikMode[num20] == 3)
											{
												this.HandL.localRotation = Quaternion.Euler(this.HandL.localEulerAngles) * Quaternion.AngleAxis(-1f, Vector3.right);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if (this.ikMode[num20] == 4)
											{
												this.Head.RotateAround(this.Head.position, Vector3.up, 0.7f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if (this.ikMode[num20] == 8)
											{
												this.IK_hand.RotateAround(this.IK_hand.position, Vector3.up, 0.7f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if (this.ikMode[num20] == 6)
											{
												this.Spine1a.RotateAround(this.Spine1a.position, Vector3.up, 0.084f);
												this.Spine0a.RotateAround(this.Spine0a.position, Vector3.up, 0.156f);
												this.Spine.RotateAround(this.Spine.position, Vector3.up, 0.156f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if (this.ikMode[num20] == 7)
											{
												this.Pelvis.RotateAround(this.Pelvis.position, Vector3.up, -0.4f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if ((this.ikMode[num20] == 0 || this.ikMode[num20] == 1 || this.ikMode[num20] == 2) && (this.ikBui == 3 || this.ikBui == 4))
											{
												this.UpperArmL.localRotation = Quaternion.Euler(this.UpperArmL.localEulerAngles) * Quaternion.AngleAxis(-0.5f, Vector3.right);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
											else if ((this.ikMode[num20] == 0 || this.ikMode[num20] == 1 || this.ikMode[num20] == 2) && (this.ikBui == 1 || this.ikBui == 2))
											{
												this.UpperArmL.RotateAround(this.UpperArmL.position, Vector3.right, -0.5f);
												this.isStop[num20] = true;
												this.isLock[num20] = true;
											}
										}
										else if (Input.GetKey(KeyCode.Alpha0))
										{
											if (this.ikMode[num20] == 0)
											{
												Vector3 vector5 = this.HandL.position;
												ref float ptr4 = ref vector5.y;
												ptr4 += 0.005f;
												this.ikLeftArm.Init(this.UpperArmL, this.HandL, this.HandL, this.maidArray[num20].body0);
												IK ik17 = this.ikLeftArm;
												Transform upperArmL17 = this.UpperArmL;
												Transform handL9 = this.HandL;
												Transform handL10 = this.HandL;
												Vector3 tgt17 = vector5;
												Vector3 vector6 = default(Vector3);
												ik17.Porc(upperArmL17, handL9, handL10, tgt17, vector6);
											}
											else if (this.ikMode[num20] == 2)
											{
												Vector3 vector5 = this.HandL.position;
												ref float ptr4 = ref vector5.y;
												ptr4 += 0.005f;
												this.ikLeftArm.Init(this.ForearmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik18 = this.ikLeftArm;
												Transform forearmL21 = this.ForearmL;
												Transform forearmL22 = this.ForearmL;
												Transform handL11 = this.HandL;
												Vector3 tgt18 = vector5;
												Vector3 vector6 = default(Vector3);
												ik18.Porc(forearmL21, forearmL22, handL11, tgt18, vector6);
											}
											else if (this.ikMode[num20] == 5)
											{
												Vector3 vector5 = this.ForearmL.position;
												ref float ptr4 = ref vector5.y;
												ptr4 += 0.0035f;
												this.ikLeftArm.Init(this.Clavicle, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik19 = this.ikLeftArm;
												Transform clavicle5 = this.Clavicle;
												Transform upperArmL18 = this.UpperArmL;
												Transform forearmL23 = this.ForearmL;
												Vector3 tgt19 = vector5;
												Vector3 vector6 = default(Vector3);
												ik19.Porc(clavicle5, upperArmL18, forearmL23, tgt19, vector6);
											}
											else
											{
												Vector3 vector5 = this.ForearmL.position;
												ref float ptr4 = ref vector5.y;
												ptr4 += 0.0035f;
												this.ikLeftArm.Init(this.UpperArmL, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik20 = this.ikLeftArm;
												Transform upperArmL19 = this.UpperArmL;
												Transform upperArmL20 = this.UpperArmL;
												Transform forearmL24 = this.ForearmL;
												Vector3 tgt20 = vector5;
												Vector3 vector6 = default(Vector3);
												ik20.Porc(upperArmL19, upperArmL20, forearmL24, tgt20, vector6);
											}
											this.isStop[num20] = true;
											this.isLock[num20] = true;
										}
										else if (Input.GetKey(KeyCode.P))
										{
											if (this.ikMode[num20] == 0)
											{
												Vector3 vector5 = this.HandL.position;
												ref float ptr4 = ref vector5.y;
												ptr4 -= 0.005f;
												this.ikLeftArm.Init(this.UpperArmL, this.HandL, this.HandL, this.maidArray[num20].body0);
												IK ik21 = this.ikLeftArm;
												Transform upperArmL21 = this.UpperArmL;
												Transform handL12 = this.HandL;
												Transform handL13 = this.HandL;
												Vector3 tgt21 = vector5;
												Vector3 vector6 = default(Vector3);
												ik21.Porc(upperArmL21, handL12, handL13, tgt21, vector6);
											}
											else if (this.ikMode[num20] == 2)
											{
												Vector3 vector5 = this.HandL.position;
												ref float ptr4 = ref vector5.y;
												ptr4 -= 0.005f;
												this.ikLeftArm.Init(this.ForearmL, this.ForearmL, this.HandL, this.maidArray[num20].body0);
												IK ik22 = this.ikLeftArm;
												Transform forearmL25 = this.ForearmL;
												Transform forearmL26 = this.ForearmL;
												Transform handL14 = this.HandL;
												Vector3 tgt22 = vector5;
												Vector3 vector6 = default(Vector3);
												ik22.Porc(forearmL25, forearmL26, handL14, tgt22, vector6);
											}
											else if (this.ikMode[num20] == 5)
											{
												Vector3 vector5 = this.ForearmL.position;
												ref float ptr4 = ref vector5.y;
												ptr4 -= 0.0035f;
												this.ikLeftArm.Init(this.Clavicle, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik23 = this.ikLeftArm;
												Transform clavicle6 = this.Clavicle;
												Transform upperArmL22 = this.UpperArmL;
												Transform forearmL27 = this.ForearmL;
												Vector3 tgt23 = vector5;
												Vector3 vector6 = default(Vector3);
												ik23.Porc(clavicle6, upperArmL22, forearmL27, tgt23, vector6);
											}
											else
											{
												Vector3 vector5 = this.ForearmL.position;
												ref float ptr4 = ref vector5.y;
												ptr4 -= 0.0035f;
												this.ikLeftArm.Init(this.UpperArmL, this.UpperArmL, this.ForearmL, this.maidArray[num20].body0);
												IK ik24 = this.ikLeftArm;
												Transform upperArmL23 = this.UpperArmL;
												Transform upperArmL24 = this.UpperArmL;
												Transform forearmL28 = this.ForearmL;
												Vector3 tgt24 = vector5;
												Vector3 vector6 = default(Vector3);
												ik24.Porc(upperArmL23, upperArmL24, forearmL28, tgt24, vector6);
											}
											this.isStop[num20] = true;
											this.isLock[num20] = true;
										}
									}
								}
							}
						}
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.LeftBracket) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						maid3.transform.RotateAround(maid3.transform.position, Vector3.up, -0.75f);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.LeftBracket))
					{
						maid3.transform.RotateAround(maid3.transform.position, Vector3.up, 0.75f);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.DownArrow) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						if (!this.xFlg[num20])
						{
							this.xFlg[num20] = true;
							this.zFlg[num20] = false;
							if (maid3.status.personal.uniqueName == "Pride")
							{
								string text7 = "s0_";
								System.Random random43 = new System.Random();
								int num106 = random43.Next(10000);
								bool flag39 = false;
								for (int num107 = 0; num107 < Class1.tunArray.Length; num107 = j + 1)
								{
									if (Class1.tunArray[num107] == num106)
									{
										flag39 = true;
										break;
									}
									j = num107;
								}
								if (!flag39)
								{
									text7 = text7 + "0" + num106.ToString() + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text7))
									{
										maid3.AudioMan.LoadPlay(text7, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Cool")
							{
								string text7 = "s1_";
								System.Random random44 = new System.Random();
								int num108 = random44.Next(10000);
								bool flag40 = false;
								for (int num109 = 0; num109 < Class1.coolArray.Length; num109 = j + 1)
								{
									if (Class1.coolArray[num109] == num108)
									{
										flag40 = true;
										break;
									}
									j = num109;
								}
								if (!flag40)
								{
									text7 = text7 + "0" + num108.ToString() + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text7))
									{
										maid3.AudioMan.LoadPlay(text7, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Pure")
							{
								string text7 = "s2_";
								System.Random random45 = new System.Random();
								int num110 = random45.Next(10000);
								bool flag41 = false;
								for (int num111 = 0; num111 < Class1.pureArray.Length; num111 = j + 1)
								{
									if (Class1.pureArray[num111] == num110)
									{
										flag41 = true;
										break;
									}
									j = num111;
								}
								if (!flag41)
								{
									text7 = text7 + "0" + num110.ToString() + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text7))
									{
										maid3.AudioMan.LoadPlay(text7, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Yandere")
							{
								string text7 = "s3_";
								System.Random random46 = new System.Random();
								int num112 = random46.Next(10000);
								bool flag42 = false;
								for (int num113 = 0; num113 < Class1.yanArray.Length; num113 = j + 1)
								{
									if (Class1.yanArray[num113] == num112)
									{
										flag42 = true;
										break;
									}
									j = num113;
								}
								if (!flag42)
								{
									text7 = text7 + string.Format("{0:00000}", num112) + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text7))
									{
										maid3.AudioMan.LoadPlay(text7, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Muku")
							{
								string text7 = "h0_";
								System.Random random47 = new System.Random();
								int num114 = random47.Next(10000);
								bool flag43 = false;
								for (int num115 = 0; num115 < Class1.h0Array.Length; num115 = j + 1)
								{
									if (Class1.h0Array[num115] == num114)
									{
										flag43 = true;
										break;
									}
									j = num115;
								}
								if (flag43)
								{
									text7 = text7 + string.Format("{0:00000}", num114) + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text7))
									{
										maid3.AudioMan.LoadPlay(text7, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Majime")
							{
								string text7 = "h1_";
								System.Random random48 = new System.Random();
								int num116 = random48.Next(10000);
								bool flag44 = false;
								for (int num117 = 0; num117 < Class1.h1Array.Length; num117 = j + 1)
								{
									if (Class1.h1Array[num117] == num116)
									{
										flag44 = true;
										break;
									}
									j = num117;
								}
								if (flag44)
								{
									text7 = text7 + string.Format("{0:00000}", num116) + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text7))
									{
										maid3.AudioMan.LoadPlay(text7, 0f, false, false);
									}
								}
							}
							if (maid3.status.personal.uniqueName == "Rindere")
							{
								string text7 = "h2_";
								System.Random random49 = new System.Random();
								int num118 = random49.Next(10000);
								bool flag45 = false;
								for (int num119 = 0; num119 < Class1.h2Array.Length; num119 = j + 1)
								{
									if (Class1.h2Array[num119] == num118)
									{
										flag45 = true;
										break;
									}
									j = num119;
								}
								if (flag45)
								{
									text7 = text7 + string.Format("{0:00000}", num118) + ".ogg";
									if (GameUty.FileSystem.IsExistentFile(text7))
									{
										maid3.AudioMan.LoadPlay(text7, 0f, false, false);
									}
								}
							}
						}
						else
						{
							this.xFlg[num20] = false;
							maid3.AudioMan.Clear();
						}
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.UpArrow) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						if (!this.zFlg[num20])
						{
							this.zFlg[num20] = true;
							this.xFlg[num20] = false;
							string text8 = "";
							if (maid3.status.personal.uniqueName == "Pride")
							{
								text8 = "s0_";
								System.Random random50 = new System.Random();
								int num120 = random50.Next(Class1.tunArray.Length);
								object obj10 = text8;
								text8 = string.Concat(new object[]
								{
									obj10,
									"0",
									Class1.tunArray[num120],
									".ogg"
								});
							}
							if (maid3.status.personal.uniqueName == "Cool")
							{
								text8 = "s1_";
								System.Random random51 = new System.Random();
								int num121 = random51.Next(Class1.coolArray.Length);
								object obj11 = text8;
								text8 = string.Concat(new object[]
								{
									obj11,
									"0",
									Class1.coolArray[num121],
									".ogg"
								});
							}
							if (maid3.status.personal.uniqueName == "Pure")
							{
								text8 = "s2_";
								System.Random random52 = new System.Random();
								int num122 = random52.Next(Class1.pureArray.Length);
								object obj12 = text8;
								text8 = string.Concat(new object[]
								{
									obj12,
									"0",
									Class1.pureArray[num122],
									".ogg"
								});
							}
							if (maid3.status.personal.uniqueName == "Yandere")
							{
								text8 = "s3_";
								System.Random random53 = new System.Random();
								int num123 = random53.Next(Class1.yanArray.Length);
								text8 = text8 + string.Format("{0:00000}", Class1.yanArray[num123]) + ".ogg";
							}
							if (maid3.status.personal.uniqueName == "Muku")
							{
								text8 = "h0_";
								System.Random random54 = new System.Random();
								int num124 = random54.Next(Class1.h0tArray.Length);
								text8 = text8 + string.Format("{0:00000}", Class1.h0tArray[num124]) + ".ogg";
							}
							if (maid3.status.personal.uniqueName == "Majime")
							{
								text8 = "h1_";
								System.Random random55 = new System.Random();
								int num125 = random55.Next(Class1.h1tArray.Length);
								text8 = text8 + string.Format("{0:00000}", Class1.h1tArray[num125]) + ".ogg";
							}
							if (maid3.status.personal.uniqueName == "Rindere")
							{
								text8 = "h2_";
								System.Random random56 = new System.Random();
								int num126 = random56.Next(Class1.h2tArray.Length);
								text8 = text8 + string.Format("{0:00000}", Class1.h2tArray[num126]) + ".ogg";
							}
							maid3.AudioMan.LoadPlay(text8, 0f, false, false);
						}
						else
						{
							this.zFlg[num20] = false;
							maid3.AudioMan.Clear();
						}
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.UpArrow))
					{
						string text9 = "";
						if (maid3.status.personal.uniqueName == "Pride")
						{
							text9 = "s0_";
							System.Random random57 = new System.Random();
							int num127 = random57.Next(Class1.tunArray.Length);
							object obj13 = text9;
							text9 = string.Concat(new object[]
							{
								obj13,
								"0",
								Class1.tunArray[num127],
								".ogg"
							});
						}
						if (maid3.status.personal.uniqueName == "Cool")
						{
							text9 = "s1_";
							System.Random random58 = new System.Random();
							int num128 = random58.Next(Class1.coolArray.Length);
							object obj14 = text9;
							text9 = string.Concat(new object[]
							{
								obj14,
								"0",
								Class1.coolArray[num128],
								".ogg"
							});
						}
						if (maid3.status.personal.uniqueName == "Pure")
						{
							text9 = "s2_";
							System.Random random59 = new System.Random();
							int num129 = random59.Next(Class1.pureArray.Length);
							object obj15 = text9;
							text9 = string.Concat(new object[]
							{
								obj15,
								"0",
								Class1.pureArray[num129],
								".ogg"
							});
						}
						if (maid3.status.personal.uniqueName == "Yandere")
						{
							text9 = "s3_";
							System.Random random60 = new System.Random();
							int num130 = random60.Next(Class1.yanArray.Length);
							text9 = text9 + string.Format("{0:00000}", Class1.yanArray[num130]) + ".ogg";
						}
						if (maid3.status.personal.uniqueName == "Muku")
						{
							text9 = "h0_";
							System.Random random61 = new System.Random();
							int num131 = random61.Next(Class1.h0tArray.Length);
							text9 = text9 + string.Format("{0:00000}", Class1.h0tArray[num131]) + ".ogg";
						}
						if (maid3.status.personal.uniqueName == "Majime")
						{
							text9 = "h1_";
							System.Random random62 = new System.Random();
							int num132 = random62.Next(Class1.h1tArray.Length);
							text9 = text9 + string.Format("{0:00000}", Class1.h1tArray[num132]) + ".ogg";
						}
						if (maid3.status.personal.uniqueName == "Rindere")
						{
							text9 = "h2_";
							System.Random random63 = new System.Random();
							int num133 = random63.Next(Class1.h2tArray.Length);
							text9 = text9 + string.Format("{0:00000}", Class1.h2tArray[num133]) + ".ogg";
						}
						maid3.AudioMan.LoadPlay(text9, 0f, false, false);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.DownArrow))
					{
						if (maid3.status.personal.uniqueName == "Pride")
						{
							string text10 = "s0_";
							System.Random random64 = new System.Random();
							int num134 = random64.Next(10000);
							bool flag46 = false;
							for (int num135 = 0; num135 < Class1.tunArray.Length; num135 = j + 1)
							{
								if (Class1.tunArray[num135] == num134)
								{
									flag46 = true;
									break;
								}
								j = num135;
							}
							if (!flag46)
							{
								text10 = text10 + "0" + num134.ToString() + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text10))
								{
									maid3.AudioMan.LoadPlay(text10, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Cool")
						{
							string text10 = "s1_";
							System.Random random65 = new System.Random();
							int num136 = random65.Next(10000);
							bool flag47 = false;
							for (int num137 = 0; num137 < Class1.coolArray.Length; num137 = j + 1)
							{
								if (Class1.coolArray[num137] == num136)
								{
									flag47 = true;
									break;
								}
								j = num137;
							}
							if (!flag47)
							{
								text10 = text10 + "0" + num136.ToString() + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text10))
								{
									maid3.AudioMan.LoadPlay(text10, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Pure")
						{
							string text10 = "s2_";
							System.Random random66 = new System.Random();
							int num138 = random66.Next(10000);
							bool flag48 = false;
							for (int num139 = 0; num139 < Class1.pureArray.Length; num139 = j + 1)
							{
								if (Class1.pureArray[num139] == num138)
								{
									flag48 = true;
									break;
								}
								j = num139;
							}
							if (!flag48)
							{
								text10 = text10 + "0" + num138.ToString() + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text10))
								{
									maid3.AudioMan.LoadPlay(text10, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Yandere")
						{
							string text10 = "s3_";
							System.Random random67 = new System.Random();
							int num140 = random67.Next(10000);
							bool flag49 = false;
							for (int num141 = 0; num141 < Class1.yanArray.Length; num141 = j + 1)
							{
								if (Class1.yanArray[num141] == num140)
								{
									flag49 = true;
									break;
								}
								j = num141;
							}
							if (!flag49)
							{
								text10 = text10 + string.Format("{0:00000}", num140) + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text10))
								{
									maid3.AudioMan.LoadPlay(text10, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Muku")
						{
							string text10 = "h0_";
							System.Random random68 = new System.Random();
							int num142 = random68.Next(10000);
							bool flag50 = false;
							for (int num143 = 0; num143 < Class1.h0Array.Length; num143 = j + 1)
							{
								if (Class1.h0Array[num143] == num142)
								{
									flag50 = true;
									break;
								}
								j = num143;
							}
							if (flag50)
							{
								text10 = text10 + string.Format("{0:00000}", num142) + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text10))
								{
									maid3.AudioMan.LoadPlay(text10, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Majime")
						{
							string text10 = "h1_";
							System.Random random69 = new System.Random();
							int num144 = random69.Next(10000);
							bool flag51 = false;
							for (int num145 = 0; num145 < Class1.h1Array.Length; num145 = j + 1)
							{
								if (Class1.h1Array[num145] == num144)
								{
									flag51 = true;
									break;
								}
								j = num145;
							}
							if (flag51)
							{
								text10 = text10 + string.Format("{0:00000}", num144) + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text10))
								{
									maid3.AudioMan.LoadPlay(text10, 0f, false, false);
								}
							}
						}
						if (maid3.status.personal.uniqueName == "Rindere")
						{
							string text10 = "h2_";
							System.Random random70 = new System.Random();
							int num146 = random70.Next(10000);
							bool flag52 = false;
							for (int num147 = 0; num147 < Class1.h2Array.Length; num147 = j + 1)
							{
								if (Class1.h2Array[num147] == num146)
								{
									flag52 = true;
									break;
								}
								j = num147;
							}
							if (flag52)
							{
								text10 = text10 + string.Format("{0:00000}", num146) + ".ogg";
								if (GameUty.FileSystem.IsExistentFile(text10))
								{
									maid3.AudioMan.LoadPlay(text10, 0f, false, false);
								}
							}
						}
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.Insert) && Input.GetKey(KeyCode.Home))
					{
						Vector3 vector = maid3.transform.position;
						vector += new Vector3(vector2.x, 0f, vector2.z) * 0.0075f * this.speed;
						vector += new Vector3(vector3.x, 0f, vector3.z) * -0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.Insert) && Input.GetKey(KeyCode.End))
					{
						Vector3 vector = maid3.transform.position;
						vector += new Vector3(vector2.x, 0f, vector2.z) * 0.0075f * this.speed;
						vector += new Vector3(vector3.x, 0f, vector3.z) * 0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.Delete) && Input.GetKey(KeyCode.Home))
					{
						Vector3 vector = maid3.transform.position;
						vector += new Vector3(vector2.x, 0f, vector2.z) * -0.0075f * this.speed;
						vector += new Vector3(vector3.x, 0f, vector3.z) * -0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.Delete) && Input.GetKey(KeyCode.End))
					{
						Vector3 vector = maid3.transform.position;
						vector += new Vector3(vector2.x, 0f, vector2.z) * -0.0075f * this.speed;
						vector += new Vector3(vector3.x, 0f, vector3.z) * 0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.Insert))
					{
						Vector3 vector = maid3.transform.position;
						vector += new Vector3(vector2.x, 0f, vector2.z) * 0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.Delete))
					{
						Vector3 vector = maid3.transform.position;
						vector += new Vector3(vector2.x, 0f, vector2.z) * -0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.Home))
					{
						Vector3 vector = maid3.transform.position;
						vector += new Vector3(vector3.x, 0f, vector3.z) * -0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.End))
					{
						Vector3 vector = maid3.transform.position;
						vector += new Vector3(vector3.x, 0f, vector3.z) * 0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.PageUp))
					{
						Vector3 vector = maid3.transform.position;
						ref float ptr4 = ref vector.y;
						ptr4 += 0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.PageDown))
					{
						Vector3 vector = maid3.transform.position;
						ref float ptr4 = ref vector.y;
						ptr4 -= 0.0075f * this.speed;
						maid3.SetPos(vector);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.Minus) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						ref int ptr = ref this.faceIndex[num20];
						ref int ptr8 = ref ptr;
						j = ptr;
						ptr8 = j - 1;
						if (this.faceIndex[num20] <= -1)
						{
							this.faceIndex[num20] = Class1.faceArray.Length - 1;
						}
						maid3.FaceAnime(Class1.faceArray[this.faceIndex[num20]], 1f, 0);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.Minus))
					{
						ref int ptr = ref this.faceIndex[num20];
						ref int ptr9 = ref ptr;
						j = ptr;
						ptr9 = j + 1;
						if (this.faceIndex[num20] == Class1.faceArray.Length)
						{
							this.faceIndex[num20] = 0;
						}
						maid3.FaceAnime(Class1.faceArray[this.faceIndex[num20]], 1f, 0);
						this.idoFlg[num20] = true;
					}
					else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.Quote))
					{
						ref int ptr = ref this.faceBlendIndex[num20];
						ref int ptr10 = ref ptr;
						j = ptr;
						ptr10 = j + 1;
						if (this.faceBlendIndex[num20] == Class1.faceBlendArray.Length)
						{
							this.faceBlendIndex[num20] = 0;
						}
						maid3.FaceBlend(Class1.faceBlendArray[this.faceBlendIndex[num20]]);
						this.idoFlg[num20] = true;
					}
					if (Input.GetKey(key) && Input.GetKey(KeyCode.E))
					{
						this.idoFlg[num20] = true;
						if (num20 >= 7)
						{
							this.idoFlg[num20 - 7] = true;
						}
						maid3.transform.localScale = new Vector3(maid3.transform.localScale.x * 1.005f, maid3.transform.localScale.y * 1.005f, maid3.transform.localScale.z * 1.005f);
						goto IL_16115;
					}
					if (Input.GetKey(key) && Input.GetKey(KeyCode.D))
					{
						this.idoFlg[num20] = true;
						if (num20 >= 7)
						{
							this.idoFlg[num20 - 7] = true;
						}
						maid3.transform.localScale = new Vector3(maid3.transform.localScale.x * 0.995f, maid3.transform.localScale.y * 0.995f, maid3.transform.localScale.z * 0.995f);
						goto IL_16115;
					}
					if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.C))
					{
						this.idoFlg[num20] = true;
						if (num20 >= 7)
						{
							this.idoFlg[num20 - 7] = true;
						}
						maid3.transform.localScale = new Vector3(1f, 1f, 1f);
						goto IL_16115;
					}
					if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.H))
					{
						if (!this.isVR && this.goSlot[(int)this.selectList[num20]] != null)
						{
							this.maidArray[num20].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num20]]);
							for (int num148 = 0; num148 < this.bodyHit[(int)this.selectList[num20]].Count; num148 = j + 1)
							{
								this.maidArray[num20].body0.goSlot[num148].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num20]][num148];
								j = num148;
							}
						}
						maid3.body0.SetMask(TBody.SlotID.wear, true);
						maid3.body0.SetMask(TBody.SlotID.skirt, true);
						maid3.body0.SetMask(TBody.SlotID.bra, true);
						maid3.body0.SetMask(TBody.SlotID.panz, true);
						maid3.body0.SetMask(TBody.SlotID.mizugi, true);
						maid3.body0.SetMask(TBody.SlotID.onepiece, true);
						this.isWear = true;
						this.isSkirt = true;
						this.isBra = true;
						this.isPanz = true;
						System.Random random71 = new System.Random();
						int num149 = random71.Next(2);
						if (num149 == 1)
						{
							maid3.body0.SetMask(TBody.SlotID.wear, false);
						}
						if (num149 == 1)
						{
							this.isWear = false;
						}
						num149 = random71.Next(2);
						if (num149 == 1)
						{
							maid3.body0.SetMask(TBody.SlotID.skirt, false);
						}
						if (num149 == 1)
						{
							this.isSkirt = false;
						}
						num149 = random71.Next(2);
						if (num149 == 1)
						{
							maid3.body0.SetMask(TBody.SlotID.bra, false);
						}
						if (num149 == 1)
						{
							this.isBra = false;
						}
						num149 = random71.Next(2);
						if (num149 == 1)
						{
							maid3.body0.SetMask(TBody.SlotID.panz, false);
						}
						if (num149 == 1)
						{
							this.isPanz = false;
						}
						num149 = random71.Next(2);
						if (num149 == 1)
						{
							maid3.body0.SetMask(TBody.SlotID.mizugi, false);
						}
						num149 = random71.Next(2);
						if (num149 == 1)
						{
							maid3.body0.SetMask(TBody.SlotID.onepiece, false);
						}
						this.hFlg = true;
						this.idoFlg[num20] = true;
						if (num20 >= 7)
						{
							this.idoFlg[num20 - 7] = true;
							goto IL_16115;
						}
						goto IL_16115;
					}
					else if (Input.GetKeyDown(key) && Input.GetKey(KeyCode.LeftShift) && !this.isLock[num20])
					{
						ref int ptr = ref this.poseIndex[num20];
						ref int ptr11 = ref ptr;
						j = ptr;
						ptr11 = j - 1;
						if (this.poseIndex[num20] <= -1)
						{
							this.poseIndex[num20] = this.poseArray.Length - 1;
						}
						if (maid3 && maid3.Visible)
						{
							string[] array5 = this.poseArray[this.poseIndex[num20]].Split(new char[]
							{
								','
							});
							this.isStop[num20] = false;
							this.poseCount[num20] = 20;
							if (array5[0].Contains("_momi") || array5[0].Contains("paizuri_"))
							{
								maid3.body0.MuneYureL(0f);
								maid3.body0.MuneYureR(0f);
							}
							else
							{
								maid3.body0.MuneYureL(1f);
								maid3.body0.MuneYureR(1f);
							}
							int num93;
							if (array5[0].Contains("ManyMaidsPose"))
							{
								string path2 = array5[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array6 = new byte[0];
								try
								{
									using (FileStream fileStream2 = new FileStream(path2, FileMode.Open, FileAccess.Read))
									{
										array6 = new byte[fileStream2.Length];
										fileStream2.Read(array6, 0, array6.Length);
									}
								}
								catch
								{
								}
								if (array6.Length != 0)
								{
									string fileName2 = Path.GetFileName(path2);
									long num150 = (long)fileName2.GetHashCode();
									maid3.body0.CrossFade(num150.ToString(), array6, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array7 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num151 = 0; num151 < array7.Length; num151 = j + 1)
									{
										maid3.SetAutoTwist(array7[num151], true);
										j = num151;
									}
								}
							}
							else if (array5[0].StartsWith("p") && int.TryParse(array5[0].Substring(1), out num93))
							{
								this.loadPose[num20] = array5[0];
							}
							else if (!array5[0].StartsWith("dance_"))
							{
								this.maidArray[num20].CrossFade(array5[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!maid3.body0.m_Bones.GetComponent<Animation>().GetClip(array5[0] + ".anm"))
								{
									maid3.body0.LoadAnime(array5[0] + ".anm", GameUty.FileSystem, array5[0] + ".anm", false, false);
								}
								maid3.body0.m_Bones.GetComponent<Animation>().Play(array5[0] + ".anm");
							}
							if (array5.Length > 1)
							{
								maid3.body0.m_Bones.GetComponent<Animation>()[array5[0] + ".anm"].time = float.Parse(array5[1]);
								this.isStop[num20] = true;
								if (array5.Length > 2)
								{
									Transform transform25 = CMT.SearchObjName(this.maidArray[num20].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[num20] = true;
									this.poseIti[num20] = this.maidArray[num20].transform.position;
									this.maidArray[num20].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
						this.idoFlg[num20] = true;
						if (num20 >= 7)
						{
							this.idoFlg[num20 - 7] = true;
							goto IL_16115;
						}
						goto IL_16115;
					}
					else if (Input.GetKeyDown(key) && Input.GetKey(KeyCode.RightAlt) && !this.isLock[num20])
					{
						int num152 = this.poseIndex[num20];
						for (int num153 = 0; num153 < this.groupList.Count; num153 = j + 1)
						{
							if (this.poseIndex[num20] < (int)this.groupList[num153])
							{
								this.poseIndex[num20] = (int)this.groupList[num153];
								break;
							}
							j = num153;
						}
						if (num152 == this.poseIndex[num20] && this.poseIndex[num20] >= (int)this.groupList[this.groupList.Count - 1])
						{
							this.poseIndex[num20] = 0;
						}
						if (maid3 && maid3.Visible)
						{
							string[] array8 = this.poseArray[this.poseIndex[num20]].Split(new char[]
							{
								','
							});
							this.isStop[num20] = false;
							this.poseCount[num20] = 20;
							if (array8[0].Contains("_momi") || array8[0].Contains("paizuri_"))
							{
								maid3.body0.MuneYureL(0f);
								maid3.body0.MuneYureR(0f);
							}
							else
							{
								maid3.body0.MuneYureL(1f);
								maid3.body0.MuneYureR(1f);
							}
							int num93;
							if (array8[0].Contains("ManyMaidsPose"))
							{
								string path3 = array8[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array9 = new byte[0];
								try
								{
									using (FileStream fileStream3 = new FileStream(path3, FileMode.Open, FileAccess.Read))
									{
										array9 = new byte[fileStream3.Length];
										fileStream3.Read(array9, 0, array9.Length);
									}
								}
								catch
								{
								}
								if (array9.Length != 0)
								{
									string fileName3 = Path.GetFileName(path3);
									long num154 = (long)fileName3.GetHashCode();
									maid3.body0.CrossFade(num154.ToString(), array9, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array10 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num155 = 0; num155 < array10.Length; num155 = j + 1)
									{
										maid3.SetAutoTwist(array10[num155], true);
										j = num155;
									}
								}
							}
							else if (array8[0].StartsWith("p") && int.TryParse(array8[0].Substring(1), out num93))
							{
								this.loadPose[num20] = array8[0];
							}
							else if (!array8[0].StartsWith("dance_"))
							{
								maid3.CrossFade(array8[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!maid3.body0.m_Bones.GetComponent<Animation>().GetClip(array8[0] + ".anm"))
								{
									maid3.body0.LoadAnime(array8[0] + ".anm", GameUty.FileSystem, array8[0] + ".anm", false, false);
								}
								maid3.body0.m_Bones.GetComponent<Animation>().Play(array8[0] + ".anm");
							}
							if (array8.Length > 1)
							{
								maid3.body0.m_Bones.GetComponent<Animation>()[array8[0] + ".anm"].time = float.Parse(array8[1]);
								this.isStop[num20] = true;
								if (array8.Length > 2)
								{
									Transform transform26 = CMT.SearchObjName(this.maidArray[num20].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[num20] = true;
									this.poseIti[num20] = this.maidArray[num20].transform.position;
									this.maidArray[num20].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
						this.idoFlg[num20] = true;
						if (num20 >= 7)
						{
							this.idoFlg[num20 - 7] = true;
							goto IL_16115;
						}
						goto IL_16115;
					}
					else if (Input.GetKeyDown(key) && Input.GetKey(KeyCode.LeftAlt) && !this.isLock[num20])
					{
						int num156 = 0;
						while (num156 < this.groupList.Count)
						{
							if (num156 == 0 && this.poseIndex[num20] <= (int)this.groupList[num156])
							{
								if (this.poseIndex[num20] == 0)
								{
									this.poseIndex[num20] = (int)this.groupList[this.groupList.Count - 1];
									break;
								}
								this.poseIndex[num20] = 0;
								break;
							}
							else
							{
								if (num156 > 0 && this.poseIndex[num20] > (int)this.groupList[num156 - 1] && this.poseIndex[num20] <= (int)this.groupList[num156])
								{
									this.poseIndex[num20] = (int)this.groupList[num156 - 1];
									break;
								}
								j = num156;
								num156 = j + 1;
							}
						}
						if (this.poseIndex[num20] > (int)this.groupList[this.groupList.Count - 1])
						{
							this.poseIndex[num20] = (int)this.groupList[this.groupList.Count - 1];
						}
						if (maid3 && maid3.Visible)
						{
							string[] array11 = this.poseArray[this.poseIndex[num20]].Split(new char[]
							{
								','
							});
							this.isStop[num20] = false;
							this.poseCount[num20] = 20;
							if (array11[0].Contains("_momi") || array11[0].Contains("paizuri_"))
							{
								maid3.body0.MuneYureL(0f);
								maid3.body0.MuneYureR(0f);
							}
							else
							{
								maid3.body0.MuneYureL(1f);
								maid3.body0.MuneYureR(1f);
							}
							int num93;
							if (array11[0].Contains("ManyMaidsPose"))
							{
								string path4 = array11[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array12 = new byte[0];
								try
								{
									using (FileStream fileStream4 = new FileStream(path4, FileMode.Open, FileAccess.Read))
									{
										array12 = new byte[fileStream4.Length];
										fileStream4.Read(array12, 0, array12.Length);
									}
								}
								catch
								{
								}
								if (array12.Length != 0)
								{
									string fileName4 = Path.GetFileName(path4);
									long num157 = (long)fileName4.GetHashCode();
									maid3.body0.CrossFade(num157.ToString(), array12, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array13 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num158 = 0; num158 < array13.Length; num158 = j + 1)
									{
										maid3.SetAutoTwist(array13[num158], true);
										j = num158;
									}
								}
							}
							else if (array11[0].StartsWith("p") && int.TryParse(array11[0].Substring(1), out num93))
							{
								this.loadPose[num20] = array11[0];
							}
							else if (!array11[0].StartsWith("dance_"))
							{
								maid3.CrossFade(array11[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!maid3.body0.m_Bones.GetComponent<Animation>().GetClip(array11[0] + ".anm"))
								{
									maid3.body0.LoadAnime(array11[0] + ".anm", GameUty.FileSystem, array11[0] + ".anm", false, false);
								}
								maid3.body0.m_Bones.GetComponent<Animation>().Play(array11[0] + ".anm");
							}
							if (array11.Length > 1)
							{
								maid3.body0.m_Bones.GetComponent<Animation>()[array11[0] + ".anm"].time = float.Parse(array11[1]);
								this.isStop[num20] = true;
								if (array11.Length > 2)
								{
									Transform transform27 = CMT.SearchObjName(this.maidArray[num20].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[num20] = true;
									this.poseIti[num20] = this.maidArray[num20].transform.position;
									this.maidArray[num20].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
						this.idoFlg[num20] = true;
						if (num20 >= 7)
						{
							this.idoFlg[num20 - 7] = true;
							goto IL_16115;
						}
						goto IL_16115;
					}
					else if (Input.GetKey(key) && Input.GetKeyDown(KeyCode.BackQuote) && !this.atFlg)
					{
						ref int ptr = ref this.headEyeIndex[num20];
						ref int ptr12 = ref ptr;
						j = ptr;
						ptr12 = j + 1;
						if (this.headEyeIndex[num20] == Class1.headEyeArray.Length)
						{
							this.headEyeIndex[num20] = 0;
						}
						maid3.body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
						maid3.body0.boHeadToCam = true;
						maid3.body0.boEyeToCam = true;
						if (this.headEyeIndex[num20] == 0)
						{
							maid3.body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
							maid3.body0.boHeadToCam = true;
							maid3.body0.boEyeToCam = true;
						}
						else
						{
							maid3.body0.trsLookTarget = null;
							CameraMain cameraMain2 = GameMain.Instance.MainCamera;
							if (this.headEyeIndex[num20] == 1)
							{
								maid3.body0.offsetLookTarget = new Vector3(-0.35f, 1f, -0.3f);
							}
							if (this.headEyeIndex[num20] == 2)
							{
								maid3.body0.offsetLookTarget = new Vector3(-0.4f, 1f, 0f);
							}
							if (this.headEyeIndex[num20] == 3)
							{
								maid3.body0.offsetLookTarget = new Vector3(-0.35f, 1f, 0.3f);
							}
							if (this.headEyeIndex[num20] == 4)
							{
								maid3.body0.offsetLookTarget = new Vector3(0f, 1f, -0.4f);
							}
							if (this.headEyeIndex[num20] == 5)
							{
								maid3.body0.offsetLookTarget = new Vector3(0f, 1f, 0f);
							}
							if (this.headEyeIndex[num20] == 6)
							{
								maid3.body0.offsetLookTarget = new Vector3(0f, 1f, 0.4f);
							}
							if (this.headEyeIndex[num20] == 7)
							{
								maid3.body0.offsetLookTarget = new Vector3(0.4f, 1f, -0.4f);
							}
							if (this.headEyeIndex[num20] == 8)
							{
								maid3.body0.offsetLookTarget = new Vector3(0.4f, 1f, 0f);
							}
							if (this.headEyeIndex[num20] == 9)
							{
								maid3.body0.offsetLookTarget = new Vector3(0.4f, 1f, 0.4f);
							}
						}
						this.idoFlg[num20] = true;
						if (num20 >= 7)
						{
							this.idoFlg[num20 - 7] = true;
							goto IL_16115;
						}
						goto IL_16115;
					}
					else if (Input.GetKey(key) && Input.GetKey(KeyCode.Return))
					{
						this.idoFlg[num20] = true;
						if (num20 >= 7)
						{
							this.idoFlg[num20 - 7] = true;
							goto IL_16115;
						}
						goto IL_16115;
					}
					else
					{
						if (!Input.GetKeyUp(key))
						{
							goto IL_16115;
						}
						if (this.idoFlg[num20])
						{
							this.idoFlg[num20] = false;
							goto IL_16115;
						}
						if ((this.getModKeyPressing(ManyMaids.modKey.Ctrl) && num20 < 7) || this.isLock[num20])
						{
							goto IL_16115;
						}
						ref int ptr = ref this.poseIndex[num20];
						ref int ptr13 = ref ptr;
						j = ptr;
						ptr13 = j + 1;
						if (this.poseIndex[num20] == this.poseArray.Length)
						{
							this.poseIndex[num20] = 0;
						}
						if (!maid3 || !maid3.Visible)
						{
							goto IL_16115;
						}
						string[] array14 = this.poseArray[this.poseIndex[num20]].Split(new char[]
						{
							','
						});
						this.isStop[num20] = false;
						this.poseCount[num20] = 20;
						if (array14[0].Contains("_momi") || array14[0].Contains("paizuri_"))
						{
							maid3.body0.MuneYureL(0f);
							maid3.body0.MuneYureR(0f);
						}
						else
						{
							maid3.body0.MuneYureL(1f);
							maid3.body0.MuneYureR(1f);
						}
						int num93;
						if (array14[0].Contains("ManyMaidsPose"))
						{
							string path5 = array14[0].Split(new char[]
							{
								'/'
							})[1];
							byte[] array15 = new byte[0];
							try
							{
								using (FileStream fileStream5 = new FileStream(path5, FileMode.Open, FileAccess.Read))
								{
									array15 = new byte[fileStream5.Length];
									fileStream5.Read(array15, 0, array15.Length);
								}
							}
							catch
							{
							}
							if (array15.Length != 0)
							{
								string fileName5 = Path.GetFileName(path5);
								long num159 = (long)fileName5.GetHashCode();
								maid3.body0.CrossFade(num159.ToString(), array15, false, false, false, 0f, 1f);
								Maid.AutoTwist[] array16 = new Maid.AutoTwist[]
								{
									Maid.AutoTwist.ShoulderL,
									Maid.AutoTwist.ShoulderR,
									Maid.AutoTwist.WristL,
									Maid.AutoTwist.WristR,
									Maid.AutoTwist.ThighL,
									Maid.AutoTwist.ThighR
								};
								for (int num160 = 0; num160 < array16.Length; num160 = j + 1)
								{
									maid3.SetAutoTwist(array16[num160], true);
									j = num160;
								}
							}
						}
						else if (array14[0].StartsWith("p") && int.TryParse(array14[0].Substring(1), out num93))
						{
							this.loadPose[num20] = array14[0];
						}
						else if (!array14[0].StartsWith("dance_"))
						{
							this.maidArray[num20].CrossFade(array14[0] + ".anm", false, true, false, 0f, 1f);
						}
						else
						{
							if (!maid3.body0.m_Bones.GetComponent<Animation>().GetClip(array14[0] + ".anm"))
							{
								maid3.body0.LoadAnime(array14[0] + ".anm", GameUty.FileSystem, array14[0] + ".anm", false, false);
							}
							maid3.body0.m_Bones.GetComponent<Animation>().Play(array14[0] + ".anm");
						}
						if (array14.Length <= 1)
						{
							goto IL_16115;
						}
						maid3.body0.m_Bones.GetComponent<Animation>()[array14[0] + ".anm"].time = float.Parse(array14[1]);
						this.isStop[num20] = true;
						if (array14.Length > 2)
						{
							Transform transform28 = CMT.SearchObjName(this.maidArray[num20].body0.m_Bones.transform, "Bip01", true);
							this.isPoseIti[num20] = true;
							this.poseIti[num20] = this.maidArray[num20].transform.position;
							this.maidArray[num20].transform.position = new Vector3(100f, 100f, 100f);
							goto IL_16115;
						}
						goto IL_16115;
					}
				}
			}
			Input.GetKeyDown(KeyCode.E);
			if (!this.isVR && Input.GetKeyDown(KeyCode.F8) && this.sceneFlg && this.bGui)
			{
				this.bGui = false;
			}
			else if (!this.isVR && Input.GetKeyDown(KeyCode.F8))
			{
				this.sceneFlg = true;
				this.faceFlg = false;
				this.poseFlg = false;
				this.kankyoFlg = false;
				this.kankyo2Flg = false;
				this.bGui = true;
				for (int num161 = 0; num161 < 10; num161 = j + 1)
				{
					this.date[num161] = "未保存";
					this.ninzu[num161] = "";
					IniKey iniKey = base.Preferences["scene"]["s" + (this.page * 10 + num161 + 1)];
					if (iniKey.Value != null && iniKey.Value.ToString() != "")
					{
						string[] array17 = iniKey.Value.Split(new char[]
						{
							'_'
						});
						if (array17.Length >= 2)
						{
							string[] array18 = array17[0].Split(new char[]
							{
								','
							});
							this.date[num161] = array18[0];
							this.ninzu[num161] = array18[1] + "人";
						}
					}
					j = num161;
				}
			}
			if (Input.GetKeyDown(KeyCode.F) && this.getModKeyPressing(ManyMaids.modKey.Shift) && !this.fFlg)
			{
				j = this.bgmIndex;
				this.bgmIndex = j - 1;
				if (this.bgmIndex <= -1)
				{
					this.bgmIndex = this.bgmArray.Length - 1;
				}
				GameMain.Instance.SoundMgr.PlayBGM(this.bgmArray[this.bgmIndex] + ".ogg", 0f, true);
				this.bgmCombo.selectedItemIndex = this.bgmIndex;
			}
			else if (Input.GetKeyDown(KeyCode.F) && !this.fFlg)
			{
				j = this.bgmIndex;
				this.bgmIndex = j + 1;
				if (this.bgmIndex == this.bgmArray.Length)
				{
					this.bgmIndex = 0;
				}
				GameMain.Instance.SoundMgr.PlayBGM(this.bgmArray[this.bgmIndex] + ".ogg", 0f, true);
				this.bgmCombo.selectedItemIndex = this.bgmIndex;
			}
			if (!this.isVR && Input.GetKeyDown(KeyCode.M) && !this.mFlg)
			{
				GameObject gameObject4 = GameObject.Find("__GameMain__/SystemUI Root");
				GameObject gameObject5 = gameObject4.transform.Find("MessageWindowPanel").gameObject;
				MessageWindowMgr messageWindowMgr = GameMain.Instance.ScriptMgr.adv_kag.MessageWindowMgr;
				if (this.isMessage)
				{
					this.isMessage = false;
					messageWindowMgr.CloseMessageWindowPanel();
				}
				else if (!this.bGuiMessage)
				{
					this.bGuiMessage = true;
				}
				else
				{
					this.bGuiMessage = false;
					this.isMessage = false;
					messageWindowMgr.CloseMessageWindowPanel();
				}
			}
			if (this.isDanceChu && Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Escape))
			{
				this.escFlg = true;
				for (int num162 = 0; num162 < this.maidCnt; num162 = j + 1)
				{
					if (this.maidArray[num162] && this.maidArray[num162].Visible)
					{
						this.maidArray[num162].StopKuchipakuPattern();
						if (this.isDanceStart7V)
						{
							this.maidArray[num162].SetPos(this.dancePos[num162]);
							this.maidArray[num162].body0.transform.localRotation = this.danceRot[num162];
						}
						if (this.isDanceStart8V)
						{
							this.maidArray[num162].SetPos(this.dancePos[num162]);
							this.maidArray[num162].body0.transform.localRotation = this.danceRot[num162];
						}
						if (this.isDanceStart11V)
						{
							this.maidArray[num162].SetPos(this.dancePos[num162]);
							this.maidArray[num162].body0.transform.localRotation = this.danceRot[num162];
						}
						if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
						{
							this.maidArray[num162].SetPos(this.dancePos[num162]);
							this.maidArray[num162].body0.transform.localRotation = this.danceRot[num162];
							int num163 = num162;
							if (!this.isVR)
							{
								this.delCount[num163] = 20;
								if (this.goSlot[(int)this.selectList[num163]] != null)
								{
									this.maidArray[num163].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num163]]);
									for (int num164 = 0; num164 < this.bodyHit[(int)this.selectList[num163]].Count; num164 = j + 1)
									{
										this.maidArray[num163].body0.goSlot[num164].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num163]][num164];
										j = num164;
									}
								}
							}
							Maid maid4 = this.maidArray[num162];
							maid4.DelProp(MPN.acckami, true);
							maid4.DelProp(MPN.accha, true);
							maid4.DelProp(MPN.acchead, true);
							maid4.DelProp(MPN.accvag, true);
							maid4.DelProp(MPN.megane, true);
							maid4.AllProcPropSeqStart();
						}
						if (this.isDanceStart14V)
						{
							this.maidArray[num162].SetPos(this.dancePos[num162]);
							this.maidArray[num162].body0.transform.localRotation = this.danceRot[num162];
						}
						if (this.isDanceStart15V)
						{
							this.maidArray[num162].SetPos(this.dancePos[num162]);
							this.maidArray[num162].body0.transform.localRotation = this.danceRot[num162];
						}
					}
					j = num162;
				}
				this.isDanceStart1F = false;
				this.isDanceStart1K = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart3K = false;
				this.isDanceStart4F = false;
				this.isDanceStart4K = false;
				this.isDanceStart5F = false;
				this.isDanceStart5K = false;
				this.isDanceStart6F = false;
				this.isDanceStart6K = false;
				this.isDanceStart7F = false;
				this.isDanceStart7V = false;
				this.isDanceStart8F = false;
				this.isDanceStart8V = false;
				this.isDanceStart8P = false;
				this.isDanceStart9F = false;
				this.isDanceStart9K = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart11V = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart13K = false;
				this.isDanceStart14F = false;
				this.isDanceStart14V = false;
				this.isDanceStart15F = false;
				this.isDanceStart15V = false;
				for (int num165 = 0; num165 < this.maidCnt; num165 = j + 1)
				{
					this.danceFace[num165] = 0f;
					this.maidArray[num165].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
					this.maidArray[num165].SetAutoTwistAll(true);
					j = num165;
				}
				this.danceCheckIndex = 0;
				for (int num166 = 0; num166 < this.danceCheck.Length; num166 = j + 1)
				{
					this.danceCheck[this.danceCheckIndex] = 1f;
					j = num166;
				}
				this.isDance = false;
				this.isDanceChu = false;
				if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				GameMain.Instance.SoundMgr.PlayBGM(this.bgmArray[this.bgmIndex] + ".ogg", 0f, true);
			}
			if (Input.GetKeyDown(KeyCode.Tab) || (!this.escFlg && Input.GetKeyDown(KeyCode.Escape)))
			{
				if (this.isScript)
				{
					GameObject gameObject6 = GameObject.Find("__GameMain__/SystemUI Root");
					GameObject gameObject7 = gameObject6.transform.Find("MessageWindowPanel").gameObject;
					if (this.isPanel)
					{
						this.isPanel = false;
					}
					else
					{
						this.isPanel = true;
					}
					gameObject7.SetActive(this.isPanel);
				}
				else
				{
					this.bGui = !this.bGui;
				}
			}
			if (Input.GetKeyDown(KeyCode.Y) && this.getModKeyPressing(ManyMaids.modKey.Shift))
			{
				this.keyFlg = true;
				j = this.bgIndex;
				this.bgIndex = j - 1;
				if (this.bgIndex <= -1)
				{
					this.bgIndex = this.bgArray.Length - 1;
				}
				if (!this.moveBg)
				{
					this.bg.localScale = new Vector3(1f, 1f, 1f);
					if (this.bgArray[this.bgIndex].Length == 36)
					{
						GameMain.Instance.BgMgr.ChangeBgMyRoom(this.bgArray[this.bgIndex]);
					}
					else
					{
						GameMain.Instance.BgMgr.ChangeBg(this.bgArray[this.bgIndex]);
					}
					this.bgCombo.selectedItemIndex = this.bgIndex;
					if (this.bgArray[this.bgIndex] == "karaokeroom")
					{
						this.bg.transform.position = this.bgObject.transform.position;
						Vector3 vector = Vector3.zero;
						Vector3 zero3 = Vector3.zero;
						zero3.y = 90f;
						vector.z = 4f;
						vector.x = 1f;
						this.bg.transform.localPosition = vector;
						this.bg.transform.localRotation = Quaternion.Euler(zero3);
					}
				}
			}
			else if (Input.GetKey(KeyCode.Y) && Input.GetKey(KeyCode.E))
			{
				this.keyFlg = true;
				this.bg.localScale = new Vector3(this.bg.localScale.x * 1.005f, this.bg.localScale.y * 1.005f, this.bg.localScale.z * 1.005f);
			}
			else if (Input.GetKey(KeyCode.Y) && Input.GetKey(KeyCode.D))
			{
				this.keyFlg = true;
				this.bg.localScale = new Vector3(this.bg.localScale.x * 0.995f, this.bg.localScale.y * 0.995f, this.bg.localScale.z * 0.995f);
			}
			else if (Input.GetKey(KeyCode.Y) && Input.GetKeyDown(KeyCode.C))
			{
				this.keyFlg = true;
				this.bg.localScale = new Vector3(1f, 1f, 1f);
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.J))
			{
				Vector3 vector7 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector8 = this.mainCameraTransform.TransformDirection(Vector3.right);
				Vector3 vector9 = this.mainCameraTransform.TransformDirection(Vector3.up);
				Vector3 vector = this.bg.position;
				vector += new Vector3(vector7.x, 0f, vector7.z) * -0.025f * this.speed;
				vector += new Vector3(vector8.x, 0f, vector8.z) * 0.025f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.L))
			{
				Vector3 vector10 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector11 = this.mainCameraTransform.TransformDirection(Vector3.right);
				Vector3 vector12 = this.mainCameraTransform.TransformDirection(Vector3.up);
				Vector3 vector = this.bg.position;
				vector += new Vector3(vector10.x, 0f, vector10.z) * -0.025f * this.speed;
				vector += new Vector3(vector11.x, 0f, vector11.z) * -0.025f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.J))
			{
				Vector3 vector13 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector14 = this.mainCameraTransform.TransformDirection(Vector3.right);
				Vector3 vector15 = this.mainCameraTransform.TransformDirection(Vector3.up);
				Vector3 vector = this.bg.position;
				vector += new Vector3(vector13.x, 0f, vector13.z) * 0.025f * this.speed;
				vector += new Vector3(vector14.x, 0f, vector14.z) * 0.025f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.L))
			{
				Vector3 vector16 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector17 = this.mainCameraTransform.TransformDirection(Vector3.right);
				Vector3 vector18 = this.mainCameraTransform.TransformDirection(Vector3.up);
				Vector3 vector = this.bg.position;
				vector += new Vector3(vector16.x, 0f, vector16.z) * 0.025f * this.speed;
				vector += new Vector3(vector17.x, 0f, vector17.z) * -0.025f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.I))
			{
				Vector3 vector19 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector20 = this.mainCameraTransform.TransformDirection(Vector3.right);
				Vector3 vector21 = this.mainCameraTransform.TransformDirection(Vector3.up);
				Vector3 vector = this.bg.position;
				vector += new Vector3(vector19.x, 0f, vector19.z) * -0.025f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.K))
			{
				Vector3 vector22 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector23 = this.mainCameraTransform.TransformDirection(Vector3.right);
				Vector3 vector24 = this.mainCameraTransform.TransformDirection(Vector3.up);
				Vector3 vector = this.bg.position;
				vector += new Vector3(vector22.x, 0f, vector22.z) * 0.025f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.J))
			{
				Vector3 vector25 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector26 = this.mainCameraTransform.TransformDirection(Vector3.right);
				Vector3 vector27 = this.mainCameraTransform.TransformDirection(Vector3.up);
				Vector3 vector = this.bg.position;
				vector += new Vector3(vector26.x, 0f, vector26.z) * 0.025f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.L))
			{
				Vector3 vector28 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector29 = this.mainCameraTransform.TransformDirection(Vector3.right);
				Vector3 vector30 = this.mainCameraTransform.TransformDirection(Vector3.up);
				Vector3 vector = this.bg.position;
				vector += new Vector3(vector29.x, 0f, vector29.z) * -0.025f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.Alpha0))
			{
				Vector3 vector = this.bg.position;
				ref float ptr4 = ref vector.y;
				ptr4 -= 0.015f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.P))
			{
				Vector3 vector = this.bg.position;
				ref float ptr4 = ref vector.y;
				ptr4 += 0.015f * this.speed;
				this.bg.localPosition = vector;
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.U))
			{
				this.bg.RotateAround(this.maidArray[0].transform.position, Vector3.up, 0.7f);
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.O))
			{
				this.bg.RotateAround(this.maidArray[0].transform.position, Vector3.up, -0.7f);
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if (Input.GetKeyDown(KeyCode.Y) && Input.GetKey(KeyCode.Return))
			{
				if (Input.GetKey(KeyCode.Y))
				{
					this.keyFlg = true;
				}
			}
			else if (Input.GetKeyUp(KeyCode.Y) && !this.yFlg)
			{
				if (this.keyFlg)
				{
					this.keyFlg = false;
				}
				else
				{
					j = this.bgIndex;
					this.bgIndex = j + 1;
					if (this.bgIndex == this.bgArray.Length)
					{
						this.bgIndex = 0;
					}
					if (!this.moveBg)
					{
						this.bg.localScale = new Vector3(1f, 1f, 1f);
						if (this.bgArray[this.bgIndex].Length == 36)
						{
							GameMain.Instance.BgMgr.ChangeBgMyRoom(this.bgArray[this.bgIndex]);
						}
						else
						{
							GameMain.Instance.BgMgr.ChangeBg(this.bgArray[this.bgIndex]);
						}
						this.bgCombo.selectedItemIndex = this.bgIndex;
						if (this.bgArray[this.bgIndex] == "karaokeroom")
						{
							this.bg.transform.position = this.bgObject.transform.position;
							Vector3 vector = Vector3.zero;
							Vector3 zero3 = Vector3.zero;
							zero3.y = 90f;
							vector.z = 4f;
							vector.x = 1f;
							this.bg.transform.localPosition = vector;
							this.bg.transform.localRotation = Quaternion.Euler(zero3);
						}
					}
				}
			}
			if (this.maidArray[0] != null && this.maidArray[0].Visible)
			{
				if (Input.GetKeyDown(KeyCode.Comma) && this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					int[] array19 = new int[1];
					int[] array20 = array19;
					if (this.maidCnt == 2)
					{
						array20 = new int[]
						{
							0,
							1
						};
					}
					if (this.maidCnt == 3)
					{
						array20 = new int[]
						{
							0,
							1,
							2
						};
					}
					if (this.maidCnt == 4)
					{
						array20 = new int[]
						{
							0,
							1,
							2,
							3
						};
					}
					if (this.maidCnt == 5)
					{
						array20 = new int[]
						{
							0,
							1,
							2,
							3,
							4
						};
					}
					if (this.maidCnt == 6)
					{
						array20 = new int[]
						{
							0,
							1,
							2,
							3,
							4,
							5
						};
					}
					if (this.maidCnt == 7)
					{
						array20 = new int[]
						{
							0,
							1,
							2,
							3,
							4,
							5,
							6
						};
					}
					if (this.maidCnt == 8)
					{
						array20 = new int[]
						{
							0,
							1,
							2,
							3,
							4,
							5,
							6,
							7
						};
					}
					if (this.maidCnt == 9)
					{
						array20 = new int[]
						{
							0,
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8
						};
					}
					if (this.maidCnt == 10)
					{
						array20 = new int[]
						{
							0,
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8,
							9
						};
					}
					if (this.maidCnt == 11)
					{
						array20 = new int[]
						{
							0,
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8,
							9,
							10
						};
					}
					if (this.maidCnt == 12)
					{
						array20 = new int[]
						{
							0,
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8,
							9,
							10,
							11
						};
					}
					System.Random random72 = new System.Random();
					int num167 = array20.Length;
					while (num167 > 1)
					{
						j = num167;
						num167 = j - 1;
						int num168 = random72.Next(num167 + 1);
						int num169 = array20[num168];
						array20[num168] = array20[num167];
						array20[num167] = num169;
					}
					int[] array21 = new int[this.maidCnt];
					Vector3[] array22 = new Vector3[this.maidCnt];
					Vector3[] array23 = new Vector3[this.maidCnt];
					int[] array24 = new int[this.maidCnt];
					for (int num170 = 0; num170 < this.maidCnt; num170 = j + 1)
					{
						array21[array20[num170]] = this.poseIndex[array20[num170]];
						ref Vector3 ptr14 = ref array22[array20[num170]];
						ptr14 = this.maidArray[array20[num170]].transform.localRotation.eulerAngles;
						array23[array20[num170]] = this.maidArray[array20[num170]].transform.position;
						array24[array20[num170]] = this.headEyeIndex[array20[num170]];
						j = num170;
					}
					for (int num171 = 0; num171 < this.maidCnt; num171 = j + 1)
					{
						if (this.maidArray[num171] && this.maidArray[num171].Visible && !this.isLock[num171])
						{
							string[] array25 = this.poseArray[array21[array20[num171]]].Split(new char[]
							{
								','
							});
							this.isStop[num171] = false;
							this.poseCount[num171] = 20;
							Maid maid5 = this.maidArray[num171];
							if (array25[0].Contains("_momi") || array25[0].Contains("paizuri_"))
							{
								maid5.body0.MuneYureL(0f);
								maid5.body0.MuneYureR(0f);
							}
							else
							{
								maid5.body0.MuneYureL(1f);
								maid5.body0.MuneYureR(1f);
							}
							int num93;
							if (array25[0].Contains("ManyMaidsPose"))
							{
								string path6 = array25[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array26 = new byte[0];
								try
								{
									using (FileStream fileStream6 = new FileStream(path6, FileMode.Open, FileAccess.Read))
									{
										array26 = new byte[fileStream6.Length];
										fileStream6.Read(array26, 0, array26.Length);
									}
								}
								catch
								{
								}
								if (array26.Length != 0)
								{
									string fileName6 = Path.GetFileName(path6);
									long num172 = (long)fileName6.GetHashCode();
									maid5.body0.CrossFade(num172.ToString(), array26, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array27 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num173 = 0; num173 < array27.Length; num173 = j + 1)
									{
										maid5.SetAutoTwist(array27[num173], true);
										j = num173;
									}
								}
							}
							else if (array25[0].StartsWith("p") && int.TryParse(array25[0].Substring(1), out num93))
							{
								this.loadPose[num171] = array25[0];
							}
							else if (!array25[0].StartsWith("dance_"))
							{
								this.maidArray[num171].CrossFade(array25[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!this.maidArray[num171].body0.m_Bones.GetComponent<Animation>().GetClip(array25[0] + ".anm"))
								{
									this.maidArray[num171].body0.LoadAnime(array25[0] + ".anm", GameUty.FileSystem, array25[0] + ".anm", false, false);
								}
								this.maidArray[num171].body0.m_Bones.GetComponent<Animation>().Play(array25[0] + ".anm");
							}
							if (array25.Length > 1)
							{
								this.maidArray[num171].body0.m_Bones.GetComponent<Animation>()[array25[0] + ".anm"].time = float.Parse(array25[1]);
								this.isStop[num171] = true;
								if (array25.Length > 2)
								{
									Transform transform29 = CMT.SearchObjName(this.maidArray[num171].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[num171] = true;
									this.poseIti[num171] = this.maidArray[num171].transform.position;
									this.maidArray[num171].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
						this.poseIndex[num171] = array21[array20[num171]];
						this.maidArray[num171].SetRot(array22[array20[num171]]);
						this.maidArray[num171].SetPos(array23[array20[num171]]);
						this.headEyeIndex[num171] = array24[array20[num171]];
						this.maidArray[num171].body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
						this.maidArray[num171].body0.boHeadToCam = true;
						this.maidArray[num171].body0.boEyeToCam = true;
						if (this.headEyeIndex[num171] == 0)
						{
							this.maidArray[num171].body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
							this.maidArray[num171].body0.boHeadToCam = true;
							this.maidArray[num171].body0.boEyeToCam = true;
						}
						else
						{
							this.maidArray[num171].body0.trsLookTarget = null;
							if (this.headEyeIndex[num171] == 1)
							{
								this.maidArray[num171].body0.offsetLookTarget = new Vector3(-0.7f, 1f, -0.6f);
							}
							if (this.headEyeIndex[num171] == 2)
							{
								this.maidArray[num171].body0.offsetLookTarget = new Vector3(-0.6f, 1f, 0f);
							}
							if (this.headEyeIndex[num171] == 3)
							{
								this.maidArray[num171].body0.offsetLookTarget = new Vector3(-0.7f, 1f, 0.6f);
							}
							if (this.headEyeIndex[num171] == 4)
							{
								this.maidArray[num171].body0.offsetLookTarget = new Vector3(-0.1f, 1f, -0.4f);
							}
							if (this.headEyeIndex[num171] == 5)
							{
								this.maidArray[num171].body0.offsetLookTarget = new Vector3(0f, 1f, 0f);
							}
							if (this.headEyeIndex[num171] == 6)
							{
								this.maidArray[num171].body0.offsetLookTarget = new Vector3(-0.1f, 1f, 0.4f);
							}
							if (this.headEyeIndex[num171] == 7)
							{
								this.maidArray[num171].body0.offsetLookTarget = new Vector3(0.4f, 1f, -0.5f);
							}
							if (this.headEyeIndex[num171] == 8)
							{
								this.maidArray[num171].body0.offsetLookTarget = new Vector3(0.3f, 1f, 0f);
							}
							if (this.headEyeIndex[num171] == 9)
							{
								this.maidArray[num171].body0.offsetLookTarget = new Vector3(0.4f, 1f, 0.5f);
							}
						}
						j = num171;
					}
				}
				else if (Input.GetKeyDown(KeyCode.Comma))
				{
					int[] array28 = new int[this.maidCnt];
					Vector3[] array29 = new Vector3[this.maidCnt];
					Vector3[] array30 = new Vector3[this.maidCnt];
					int[] array31 = new int[this.maidCnt];
					for (int num174 = 0; num174 < this.maidCnt; num174 = j + 1)
					{
						array28[num174] = this.poseIndex[num174];
						ref Vector3 ptr15 = ref array29[num174];
						ptr15 = this.maidArray[num174].transform.localRotation.eulerAngles;
						array30[num174] = this.maidArray[num174].transform.position;
						array31[num174] = this.headEyeIndex[num174];
						j = num174;
					}
					for (int num175 = 0; num175 < this.maidCnt; num175 = j + 1)
					{
						if (num175 == 0)
						{
							if (!this.isLock[num175] && this.maidArray[num175] && this.maidArray[num175].Visible)
							{
								string[] array32 = this.poseArray[array28[this.maidCnt - num175 - 1]].Split(new char[]
								{
									','
								});
								this.isStop[num175] = false;
								this.poseCount[num175] = 20;
								Maid maid6 = this.maidArray[num175];
								if (array32[0].Contains("_momi") || array32[0].Contains("paizuri_"))
								{
									maid6.body0.MuneYureL(0f);
									maid6.body0.MuneYureR(0f);
								}
								else
								{
									maid6.body0.MuneYureL(1f);
									maid6.body0.MuneYureR(1f);
								}
								int num93;
								if (array32[0].Contains("ManyMaidsPose"))
								{
									string path7 = array32[0].Split(new char[]
									{
										'/'
									})[1];
									byte[] array33 = new byte[0];
									try
									{
										using (FileStream fileStream7 = new FileStream(path7, FileMode.Open, FileAccess.Read))
										{
											array33 = new byte[fileStream7.Length];
											fileStream7.Read(array33, 0, array33.Length);
										}
									}
									catch
									{
									}
									if (array33.Length != 0)
									{
										string fileName7 = Path.GetFileName(path7);
										long num176 = (long)fileName7.GetHashCode();
										maid6.body0.CrossFade(num176.ToString(), array33, false, false, false, 0f, 1f);
										Maid.AutoTwist[] array34 = new Maid.AutoTwist[]
										{
											Maid.AutoTwist.ShoulderL,
											Maid.AutoTwist.ShoulderR,
											Maid.AutoTwist.WristL,
											Maid.AutoTwist.WristR,
											Maid.AutoTwist.ThighL,
											Maid.AutoTwist.ThighR
										};
										for (int num177 = 0; num177 < array34.Length; num177 = j + 1)
										{
											maid6.SetAutoTwist(array34[num177], true);
											j = num177;
										}
									}
								}
								else if (array32[0].StartsWith("p") && int.TryParse(array32[0].Substring(1), out num93))
								{
									this.loadPose[num175] = array32[0];
								}
								else if (!array32[0].StartsWith("dance_"))
								{
									this.maidArray[num175].CrossFade(array32[0] + ".anm", false, true, false, 0f, 1f);
								}
								else
								{
									if (!this.maidArray[num175].body0.m_Bones.GetComponent<Animation>().GetClip(array32[0] + ".anm"))
									{
										this.maidArray[num175].body0.LoadAnime(array32[0] + ".anm", GameUty.FileSystem, array32[0] + ".anm", false, false);
									}
									this.maidArray[num175].body0.m_Bones.GetComponent<Animation>().Play(array32[0] + ".anm");
								}
								if (array32.Length > 1)
								{
									this.maidArray[num175].body0.m_Bones.GetComponent<Animation>()[array32[0] + ".anm"].time = float.Parse(array32[1]);
									this.isStop[num175] = true;
									if (array32.Length > 2)
									{
										Transform transform30 = CMT.SearchObjName(this.maidArray[num175].body0.m_Bones.transform, "Bip01", true);
										this.isPoseIti[num175] = true;
										this.poseIti[num175] = this.maidArray[num175].transform.position;
										this.maidArray[num175].transform.position = new Vector3(100f, 100f, 100f);
									}
								}
							}
							this.poseIndex[num175] = array28[this.maidCnt - num175 - 1];
							this.headEyeIndex[num175] = array31[this.maidCnt - num175 - 1];
						}
						else
						{
							if (!this.isLock[num175] && this.maidArray[num175] && this.maidArray[num175].Visible)
							{
								string[] array35 = this.poseArray[array28[num175 - 1]].Split(new char[]
								{
									','
								});
								this.isStop[num175] = false;
								this.poseCount[num175] = 20;
								Maid maid7 = this.maidArray[num175];
								if (array35[0].Contains("_momi") || array35[0].Contains("paizuri_"))
								{
									maid7.body0.MuneYureL(0f);
									maid7.body0.MuneYureR(0f);
								}
								else
								{
									maid7.body0.MuneYureL(1f);
									maid7.body0.MuneYureR(1f);
								}
								int num93;
								if (array35[0].Contains("ManyMaidsPose"))
								{
									string path8 = array35[0].Split(new char[]
									{
										'/'
									})[1];
									byte[] array36 = new byte[0];
									try
									{
										using (FileStream fileStream8 = new FileStream(path8, FileMode.Open, FileAccess.Read))
										{
											array36 = new byte[fileStream8.Length];
											fileStream8.Read(array36, 0, array36.Length);
										}
									}
									catch
									{
									}
									if (array36.Length != 0)
									{
										string fileName8 = Path.GetFileName(path8);
										long num178 = (long)fileName8.GetHashCode();
										maid7.body0.CrossFade(num178.ToString(), array36, false, false, false, 0f, 1f);
										Maid.AutoTwist[] array37 = new Maid.AutoTwist[]
										{
											Maid.AutoTwist.ShoulderL,
											Maid.AutoTwist.ShoulderR,
											Maid.AutoTwist.WristL,
											Maid.AutoTwist.WristR,
											Maid.AutoTwist.ThighL,
											Maid.AutoTwist.ThighR
										};
										for (int num179 = 0; num179 < array37.Length; num179 = j + 1)
										{
											maid7.SetAutoTwist(array37[num179], true);
											j = num179;
										}
									}
								}
								else if (array35[0].StartsWith("p") && int.TryParse(array35[0].Substring(1), out num93))
								{
									this.loadPose[num175] = array35[0];
								}
								else if (!array35[0].StartsWith("dance_"))
								{
									this.maidArray[num175].CrossFade(array35[0] + ".anm", false, true, false, 0f, 1f);
								}
								else
								{
									if (!this.maidArray[num175].body0.m_Bones.GetComponent<Animation>().GetClip(array35[0] + ".anm"))
									{
										this.maidArray[num175].body0.LoadAnime(array35[0] + ".anm", GameUty.FileSystem, array35[0] + ".anm", false, false);
									}
									this.maidArray[num175].body0.m_Bones.GetComponent<Animation>().Play(array35[0] + ".anm");
								}
								if (array35.Length > 1)
								{
									this.maidArray[num175].body0.m_Bones.GetComponent<Animation>()[array35[0] + ".anm"].time = float.Parse(array35[1]);
									this.isStop[num175] = true;
									if (array35.Length > 2)
									{
										Transform transform31 = CMT.SearchObjName(this.maidArray[num175].body0.m_Bones.transform, "Bip01", true);
										this.isPoseIti[num175] = true;
										this.poseIti[num175] = this.maidArray[num175].transform.position;
										this.maidArray[num175].transform.position = new Vector3(100f, 100f, 100f);
									}
								}
							}
							this.poseIndex[num175] = array28[num175 - 1];
							this.headEyeIndex[num175] = array31[num175 - 1];
						}
						this.maidArray[num175].body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
						this.maidArray[num175].body0.boHeadToCam = true;
						this.maidArray[num175].body0.boEyeToCam = true;
						if (this.headEyeIndex[num175] == 0)
						{
							this.maidArray[num175].body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
							this.maidArray[num175].body0.boHeadToCam = true;
							this.maidArray[num175].body0.boEyeToCam = true;
						}
						else
						{
							this.maidArray[num175].body0.trsLookTarget = null;
							if (this.headEyeIndex[num175] == 1)
							{
								this.maidArray[num175].body0.offsetLookTarget = new Vector3(-0.7f, 1f, -0.6f);
							}
							if (this.headEyeIndex[num175] == 2)
							{
								this.maidArray[num175].body0.offsetLookTarget = new Vector3(-0.6f, 1f, 0f);
							}
							if (this.headEyeIndex[num175] == 3)
							{
								this.maidArray[num175].body0.offsetLookTarget = new Vector3(-0.7f, 1f, 0.6f);
							}
							if (this.headEyeIndex[num175] == 4)
							{
								this.maidArray[num175].body0.offsetLookTarget = new Vector3(-0.1f, 1f, -0.4f);
							}
							if (this.headEyeIndex[num175] == 5)
							{
								this.maidArray[num175].body0.offsetLookTarget = new Vector3(0f, 1f, 0f);
							}
							if (this.headEyeIndex[num175] == 6)
							{
								this.maidArray[num175].body0.offsetLookTarget = new Vector3(-0.1f, 1f, 0.4f);
							}
							if (this.headEyeIndex[num175] == 7)
							{
								this.maidArray[num175].body0.offsetLookTarget = new Vector3(0.4f, 1f, -0.5f);
							}
							if (this.headEyeIndex[num175] == 8)
							{
								this.maidArray[num175].body0.offsetLookTarget = new Vector3(0.3f, 1f, 0f);
							}
							if (this.headEyeIndex[num175] == 9)
							{
								this.maidArray[num175].body0.offsetLookTarget = new Vector3(0.4f, 1f, 0.5f);
							}
						}
						if (num175 == 0)
						{
							this.maidArray[num175].SetRot(array29[this.maidCnt - num175 - 1]);
							this.maidArray[num175].SetPos(array30[this.maidCnt - num175 - 1]);
						}
						else
						{
							this.maidArray[num175].SetRot(array29[num175 - 1]);
							this.maidArray[num175].SetPos(array30[num175 - 1]);
						}
						j = num175;
					}
				}
				for (int num180 = 0; num180 < this.maidCnt; num180 = j + 1)
				{
					if (Input.GetKey(KeyCode.B) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						if (this.maidArray[num180] && this.maidArray[num180].Visible)
						{
							this.maidArray[num180].body0.transform.localRotation = Quaternion.Euler(this.maidArray[num180].body0.transform.localEulerAngles) * Quaternion.AngleAxis(-1.5f, Vector3.up);
						}
					}
					else if (Input.GetKey(KeyCode.B) && this.maidArray[num180] && this.maidArray[num180].Visible)
					{
						this.maidArray[num180].body0.transform.localRotation = Quaternion.Euler(this.maidArray[num180].body0.transform.localEulerAngles) * Quaternion.AngleAxis(1.5f, Vector3.up);
					}
					if (Input.GetKeyDown(KeyCode.N) && Input.GetKey(KeyCode.LeftAlt) && !this.isLock[num180])
					{
						if (this.maidArray[1] && this.maidArray[1].Visible && (this.maidArray[0].transform.position == this.maidArray[1].transform.position || (this.maidArray[2] && this.maidArray[0].transform.position == this.maidArray[2].transform.position)))
						{
							Vector3 vector = Vector3.zero;
							vector.x = 0.6f;
							this.maidArray[1].SetPos(vector);
							if (this.maidArray[2] && this.maidArray[2].Visible)
							{
								vector.x = -0.6f;
								this.maidArray[2].SetPos(vector);
							}
							if (this.maidArray[3] && this.maidArray[3].Visible)
							{
								vector.x = 1.2f;
								this.maidArray[3].SetPos(vector);
							}
							if (this.maidArray[4] && this.maidArray[4].Visible)
							{
								vector.x = -1.2f;
								this.maidArray[4].SetPos(vector);
							}
							if (this.maidArray[5] && this.maidArray[5].Visible)
							{
								vector.x = 1.8f;
								this.maidArray[5].SetPos(vector);
							}
							if (this.maidArray[6] && this.maidArray[6].Visible)
							{
								vector.x = -1.8f;
								this.maidArray[6].SetPos(vector);
							}
							if (this.maidArray[7] && this.maidArray[7].Visible)
							{
								vector.x = 2.4f;
								this.maidArray[7].SetPos(vector);
							}
							if (this.maidArray[8] && this.maidArray[8].Visible)
							{
								vector.x = -2.4f;
								this.maidArray[8].SetPos(vector);
							}
							if (this.maidArray[9] && this.maidArray[9].Visible)
							{
								vector.x = 3f;
								this.maidArray[9].SetPos(vector);
							}
							if (this.maidArray[10] && this.maidArray[10].Visible)
							{
								vector.x = -3f;
								this.maidArray[10].SetPos(vector);
							}
							if (this.maidArray[11] && this.maidArray[11].Visible)
							{
								vector.x = 3.6f;
								this.maidArray[11].SetPos(vector);
							}
							if (this.maidArray[12] && this.maidArray[12].Visible)
							{
								vector.x = -3.6f;
								this.maidArray[12].SetPos(vector);
							}
							if (this.maidArray[13] && this.maidArray[13].Visible)
							{
								vector.x = 4.2f;
								this.maidArray[13].SetPos(vector);
							}
						}
						int num181 = 0;
						while (num181 < this.groupList.Count)
						{
							if (num181 == 0 && this.poseIndex[num180] <= (int)this.groupList[num181])
							{
								if (this.poseIndex[num180] == 0)
								{
									this.poseIndex[num180] = (int)this.groupList[this.groupList.Count - 1];
									break;
								}
								this.poseIndex[num180] = 0;
								break;
							}
							else
							{
								if (num181 > 0 && this.poseIndex[num180] > (int)this.groupList[num181 - 1] && this.poseIndex[num180] <= (int)this.groupList[num181])
								{
									this.poseIndex[num180] = (int)this.groupList[num181 - 1];
									break;
								}
								j = num181;
								num181 = j + 1;
							}
						}
						if (this.poseIndex[num180] > (int)this.groupList[this.groupList.Count - 1])
						{
							this.poseIndex[num180] = (int)this.groupList[this.groupList.Count - 1];
						}
						if (this.maidArray[num180] && this.maidArray[num180].Visible)
						{
							string[] array38 = this.poseArray[this.poseIndex[num180]].Split(new char[]
							{
								','
							});
							this.isStop[num180] = false;
							this.poseCount[num180] = 20;
							Maid maid8 = this.maidArray[num180];
							if (array38[0].Contains("_momi") || array38[0].Contains("paizuri_"))
							{
								maid8.body0.MuneYureL(0f);
								maid8.body0.MuneYureR(0f);
							}
							else
							{
								maid8.body0.MuneYureL(1f);
								maid8.body0.MuneYureR(1f);
							}
							int num93;
							if (array38[0].Contains("ManyMaidsPose"))
							{
								string path9 = array38[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array39 = new byte[0];
								try
								{
									using (FileStream fileStream9 = new FileStream(path9, FileMode.Open, FileAccess.Read))
									{
										array39 = new byte[fileStream9.Length];
										fileStream9.Read(array39, 0, array39.Length);
									}
								}
								catch
								{
								}
								if (array39.Length != 0)
								{
									string fileName9 = Path.GetFileName(path9);
									long num182 = (long)fileName9.GetHashCode();
									maid8.body0.CrossFade(num182.ToString(), array39, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array40 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num183 = 0; num183 < array40.Length; num183 = j + 1)
									{
										maid8.SetAutoTwist(array40[num183], true);
										j = num183;
									}
								}
							}
							else if (array38[0].StartsWith("p") && int.TryParse(array38[0].Substring(1), out num93))
							{
								this.loadPose[num180] = array38[0];
							}
							else if (!array38[0].StartsWith("dance_"))
							{
								this.maidArray[num180].CrossFade(array38[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!this.maidArray[num180].body0.m_Bones.GetComponent<Animation>().GetClip(array38[0] + ".anm"))
								{
									this.maidArray[num180].body0.LoadAnime(array38[0] + ".anm", GameUty.FileSystem, array38[0] + ".anm", false, false);
								}
								this.maidArray[num180].body0.m_Bones.GetComponent<Animation>().Play(array38[0] + ".anm");
							}
							if (array38.Length > 1)
							{
								this.maidArray[num180].body0.m_Bones.GetComponent<Animation>()[array38[0] + ".anm"].time = float.Parse(array38[1]);
								this.isStop[num180] = true;
								if (array38.Length > 2)
								{
									Transform transform32 = CMT.SearchObjName(this.maidArray[num180].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[num180] = true;
									this.poseIti[num180] = this.maidArray[num180].transform.position;
									this.maidArray[num180].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
					}
					else if (Input.GetKeyDown(KeyCode.N) && Input.GetKey(KeyCode.RightAlt) && !this.isLock[num180])
					{
						if (this.maidArray[1] && this.maidArray[1].Visible && (this.maidArray[0].transform.position == this.maidArray[1].transform.position || (this.maidArray[2] && this.maidArray[0].transform.position == this.maidArray[2].transform.position)))
						{
							Vector3 vector = Vector3.zero;
							vector.x = 0.6f;
							this.maidArray[1].SetPos(vector);
							if (this.maidArray[2] && this.maidArray[2].Visible)
							{
								vector.x = -0.6f;
								this.maidArray[2].SetPos(vector);
							}
							if (this.maidArray[3] && this.maidArray[3].Visible)
							{
								vector.x = 1.2f;
								this.maidArray[3].SetPos(vector);
							}
							if (this.maidArray[4] && this.maidArray[4].Visible)
							{
								vector.x = -1.2f;
								this.maidArray[4].SetPos(vector);
							}
							if (this.maidArray[5] && this.maidArray[5].Visible)
							{
								vector.x = 1.8f;
								this.maidArray[5].SetPos(vector);
							}
							if (this.maidArray[6] && this.maidArray[6].Visible)
							{
								vector.x = -1.8f;
								this.maidArray[6].SetPos(vector);
							}
							if (this.maidArray[7] && this.maidArray[7].Visible)
							{
								vector.x = 2.4f;
								this.maidArray[7].SetPos(vector);
							}
							if (this.maidArray[8] && this.maidArray[8].Visible)
							{
								vector.x = -2.4f;
								this.maidArray[8].SetPos(vector);
							}
							if (this.maidArray[9] && this.maidArray[9].Visible)
							{
								vector.x = 3f;
								this.maidArray[9].SetPos(vector);
							}
							if (this.maidArray[10] && this.maidArray[10].Visible)
							{
								vector.x = -3f;
								this.maidArray[10].SetPos(vector);
							}
							if (this.maidArray[11] && this.maidArray[11].Visible)
							{
								vector.x = 3.6f;
								this.maidArray[11].SetPos(vector);
							}
							if (this.maidArray[12] && this.maidArray[12].Visible)
							{
								vector.x = -3.6f;
								this.maidArray[12].SetPos(vector);
							}
							if (this.maidArray[13] && this.maidArray[13].Visible)
							{
								vector.x = 4.2f;
								this.maidArray[13].SetPos(vector);
							}
						}
						int num184 = this.poseIndex[num180];
						for (int num185 = 0; num185 < this.groupList.Count; num185 = j + 1)
						{
							if (this.poseIndex[num180] < (int)this.groupList[num185])
							{
								this.poseIndex[num180] = (int)this.groupList[num185];
								break;
							}
							j = num185;
						}
						if (num184 == this.poseIndex[num180] && this.poseIndex[num180] >= (int)this.groupList[this.groupList.Count - 1])
						{
							this.poseIndex[num180] = 0;
						}
						if (this.maidArray[num180] && this.maidArray[num180].Visible)
						{
							string[] array41 = this.poseArray[this.poseIndex[num180]].Split(new char[]
							{
								','
							});
							this.isStop[num180] = false;
							this.poseCount[num180] = 20;
							Maid maid9 = this.maidArray[num180];
							if (array41[0].Contains("_momi") || array41[0].Contains("paizuri_"))
							{
								maid9.body0.MuneYureL(0f);
								maid9.body0.MuneYureR(0f);
							}
							else
							{
								maid9.body0.MuneYureL(1f);
								maid9.body0.MuneYureR(1f);
							}
							int num93;
							if (array41[0].Contains("ManyMaidsPose"))
							{
								string path10 = array41[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array42 = new byte[0];
								try
								{
									using (FileStream fileStream10 = new FileStream(path10, FileMode.Open, FileAccess.Read))
									{
										array42 = new byte[fileStream10.Length];
										fileStream10.Read(array42, 0, array42.Length);
									}
								}
								catch
								{
								}
								if (array42.Length != 0)
								{
									string fileName10 = Path.GetFileName(path10);
									long num186 = (long)fileName10.GetHashCode();
									maid9.body0.CrossFade(num186.ToString(), array42, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array43 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num187 = 0; num187 < array43.Length; num187 = j + 1)
									{
										maid9.SetAutoTwist(array43[num187], true);
										j = num187;
									}
								}
							}
							else if (array41[0].StartsWith("p") && int.TryParse(array41[0].Substring(1), out num93))
							{
								this.loadPose[num180] = array41[0];
							}
							else if (!array41[0].StartsWith("dance_"))
							{
								this.maidArray[num180].CrossFade(array41[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!this.maidArray[num180].body0.m_Bones.GetComponent<Animation>().GetClip(array41[0] + ".anm"))
								{
									this.maidArray[num180].body0.LoadAnime(array41[0] + ".anm", GameUty.FileSystem, array41[0] + ".anm", false, false);
								}
								this.maidArray[num180].body0.m_Bones.GetComponent<Animation>().Play(array41[0] + ".anm");
							}
							if (array41.Length > 1)
							{
								this.maidArray[num180].body0.m_Bones.GetComponent<Animation>()[array41[0] + ".anm"].time = float.Parse(array41[1]);
								this.isStop[num180] = true;
								if (array41.Length > 2)
								{
									Transform transform33 = CMT.SearchObjName(this.maidArray[num180].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[num180] = true;
									this.poseIti[num180] = this.maidArray[num180].transform.position;
									this.maidArray[num180].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
					}
					else if (Input.GetKeyDown(KeyCode.N) && this.getModKeyPressing(ManyMaids.modKey.Shift) && !this.isLock[num180])
					{
						if (this.maidArray[1] && this.maidArray[1].Visible && (this.maidArray[0].transform.position == this.maidArray[1].transform.position || (this.maidArray[2] && this.maidArray[0].transform.position == this.maidArray[2].transform.position)))
						{
							Vector3 vector = Vector3.zero;
							vector.x = 0.6f;
							this.maidArray[1].SetPos(vector);
							if (this.maidArray[2] && this.maidArray[2].Visible)
							{
								vector.x = -0.6f;
								this.maidArray[2].SetPos(vector);
							}
							if (this.maidArray[3] && this.maidArray[3].Visible)
							{
								vector.x = 1.2f;
								this.maidArray[3].SetPos(vector);
							}
							if (this.maidArray[4] && this.maidArray[4].Visible)
							{
								vector.x = -1.2f;
								this.maidArray[4].SetPos(vector);
							}
							if (this.maidArray[5] && this.maidArray[5].Visible)
							{
								vector.x = 1.8f;
								this.maidArray[5].SetPos(vector);
							}
							if (this.maidArray[6] && this.maidArray[6].Visible)
							{
								vector.x = -1.8f;
								this.maidArray[6].SetPos(vector);
							}
							if (this.maidArray[7] && this.maidArray[7].Visible)
							{
								vector.x = 2.4f;
								this.maidArray[7].SetPos(vector);
							}
							if (this.maidArray[8] && this.maidArray[8].Visible)
							{
								vector.x = -2.4f;
								this.maidArray[8].SetPos(vector);
							}
							if (this.maidArray[9] && this.maidArray[9].Visible)
							{
								vector.x = 3f;
								this.maidArray[9].SetPos(vector);
							}
							if (this.maidArray[10] && this.maidArray[10].Visible)
							{
								vector.x = -3f;
								this.maidArray[10].SetPos(vector);
							}
							if (this.maidArray[11] && this.maidArray[11].Visible)
							{
								vector.x = 3.6f;
								this.maidArray[11].SetPos(vector);
							}
							if (this.maidArray[12] && this.maidArray[12].Visible)
							{
								vector.x = -3.6f;
								this.maidArray[12].SetPos(vector);
							}
							if (this.maidArray[13] && this.maidArray[13].Visible)
							{
								vector.x = 4.2f;
								this.maidArray[13].SetPos(vector);
							}
						}
						ref int ptr = ref this.poseIndex[num180];
						ref int ptr16 = ref ptr;
						j = ptr;
						ptr16 = j - 1;
						if (this.poseIndex[num180] <= -1)
						{
							this.poseIndex[num180] = this.poseArray.Length - 1;
						}
						if (this.maidArray[num180] && this.maidArray[num180].Visible)
						{
							string[] array44 = this.poseArray[this.poseIndex[num180]].Split(new char[]
							{
								','
							});
							this.isStop[num180] = false;
							this.poseCount[num180] = 20;
							Maid maid10 = this.maidArray[num180];
							if (array44[0].Contains("_momi") || array44[0].Contains("paizuri_"))
							{
								maid10.body0.MuneYureL(0f);
								maid10.body0.MuneYureR(0f);
							}
							else
							{
								maid10.body0.MuneYureL(1f);
								maid10.body0.MuneYureR(1f);
							}
							int num93;
							if (array44[0].Contains("ManyMaidsPose"))
							{
								string path11 = array44[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array45 = new byte[0];
								try
								{
									using (FileStream fileStream11 = new FileStream(path11, FileMode.Open, FileAccess.Read))
									{
										array45 = new byte[fileStream11.Length];
										fileStream11.Read(array45, 0, array45.Length);
									}
								}
								catch
								{
								}
								if (array45.Length != 0)
								{
									string fileName11 = Path.GetFileName(path11);
									long num188 = (long)fileName11.GetHashCode();
									maid10.body0.CrossFade(num188.ToString(), array45, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array46 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num189 = 0; num189 < array46.Length; num189 = j + 1)
									{
										maid10.SetAutoTwist(array46[num189], true);
										j = num189;
									}
								}
							}
							else if (array44[0].StartsWith("p") && int.TryParse(array44[0].Substring(1), out num93))
							{
								this.loadPose[num180] = array44[0];
							}
							else if (!array44[0].StartsWith("dance_"))
							{
								this.maidArray[num180].CrossFade(array44[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!this.maidArray[num180].body0.m_Bones.GetComponent<Animation>().GetClip(array44[0] + ".anm"))
								{
									this.maidArray[num180].body0.LoadAnime(array44[0] + ".anm", GameUty.FileSystem, array44[0] + ".anm", false, false);
								}
								this.maidArray[num180].body0.m_Bones.GetComponent<Animation>().Play(array44[0] + ".anm");
							}
							if (array44.Length > 1)
							{
								this.maidArray[num180].body0.m_Bones.GetComponent<Animation>()[array44[0] + ".anm"].time = float.Parse(array44[1]);
								this.isStop[num180] = true;
								if (array44.Length > 2)
								{
									Transform transform34 = CMT.SearchObjName(this.maidArray[num180].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[num180] = true;
									this.poseIti[num180] = this.maidArray[num180].transform.position;
									this.maidArray[num180].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
					}
					else if (Input.GetKeyDown(KeyCode.N) && !this.isLock[num180])
					{
						if (this.maidArray[1] && this.maidArray[1].Visible && (this.maidArray[0].transform.position == this.maidArray[1].transform.position || (this.maidArray[2] && this.maidArray[0].transform.position == this.maidArray[2].transform.position)))
						{
							Vector3 vector = Vector3.zero;
							vector.x = 0.6f;
							this.maidArray[1].SetPos(vector);
							if (this.maidArray[2] && this.maidArray[2].Visible)
							{
								vector.x = -0.6f;
								this.maidArray[2].SetPos(vector);
							}
							if (this.maidArray[3] && this.maidArray[3].Visible)
							{
								vector.x = 1.2f;
								this.maidArray[3].SetPos(vector);
							}
							if (this.maidArray[4] && this.maidArray[4].Visible)
							{
								vector.x = -1.2f;
								this.maidArray[4].SetPos(vector);
							}
							if (this.maidArray[5] && this.maidArray[5].Visible)
							{
								vector.x = 1.8f;
								this.maidArray[5].SetPos(vector);
							}
							if (this.maidArray[6] && this.maidArray[6].Visible)
							{
								vector.x = -1.8f;
								this.maidArray[6].SetPos(vector);
							}
							if (this.maidArray[7] && this.maidArray[7].Visible)
							{
								vector.x = 2.4f;
								this.maidArray[7].SetPos(vector);
							}
							if (this.maidArray[8] && this.maidArray[8].Visible)
							{
								vector.x = -2.4f;
								this.maidArray[8].SetPos(vector);
							}
							if (this.maidArray[9] && this.maidArray[9].Visible)
							{
								vector.x = 3f;
								this.maidArray[9].SetPos(vector);
							}
							if (this.maidArray[10] && this.maidArray[10].Visible)
							{
								vector.x = -3f;
								this.maidArray[10].SetPos(vector);
							}
							if (this.maidArray[11] && this.maidArray[11].Visible)
							{
								vector.x = 3.6f;
								this.maidArray[11].SetPos(vector);
							}
							if (this.maidArray[12] && this.maidArray[12].Visible)
							{
								vector.x = -3.6f;
								this.maidArray[12].SetPos(vector);
							}
							if (this.maidArray[13] && this.maidArray[13].Visible)
							{
								vector.x = 4.2f;
								this.maidArray[13].SetPos(vector);
							}
						}
						ref int ptr = ref this.poseIndex[num180];
						ref int ptr17 = ref ptr;
						j = ptr;
						ptr17 = j + 1;
						if (this.poseIndex[num180] == this.poseArray.Length)
						{
							this.poseIndex[num180] = 0;
						}
						if (this.maidArray[num180] && this.maidArray[num180].Visible)
						{
							string[] array47 = this.poseArray[this.poseIndex[num180]].Split(new char[]
							{
								','
							});
							this.isStop[num180] = false;
							this.poseCount[num180] = 20;
							Maid maid11 = this.maidArray[num180];
							if (array47[0].Contains("_momi") || array47[0].Contains("paizuri_"))
							{
								maid11.body0.MuneYureL(0f);
								maid11.body0.MuneYureR(0f);
							}
							else
							{
								maid11.body0.MuneYureL(1f);
								maid11.body0.MuneYureR(1f);
							}
							int num93;
							if (array47[0].Contains("ManyMaidsPose"))
							{
								string path12 = array47[0].Split(new char[]
								{
									'/'
								})[1];
								byte[] array48 = new byte[0];
								try
								{
									using (FileStream fileStream12 = new FileStream(path12, FileMode.Open, FileAccess.Read))
									{
										array48 = new byte[fileStream12.Length];
										fileStream12.Read(array48, 0, array48.Length);
									}
								}
								catch
								{
								}
								if (array48.Length != 0)
								{
									string fileName12 = Path.GetFileName(path12);
									long num190 = (long)fileName12.GetHashCode();
									maid11.body0.CrossFade(num190.ToString(), array48, false, false, false, 0f, 1f);
									Maid.AutoTwist[] array49 = new Maid.AutoTwist[]
									{
										Maid.AutoTwist.ShoulderL,
										Maid.AutoTwist.ShoulderR,
										Maid.AutoTwist.WristL,
										Maid.AutoTwist.WristR,
										Maid.AutoTwist.ThighL,
										Maid.AutoTwist.ThighR
									};
									for (int num191 = 0; num191 < array49.Length; num191 = j + 1)
									{
										maid11.SetAutoTwist(array49[num191], true);
										j = num191;
									}
								}
							}
							else if (array47[0].StartsWith("p") && int.TryParse(array47[0].Substring(1), out num93))
							{
								this.loadPose[num180] = array47[0];
							}
							else if (!array47[0].StartsWith("dance_"))
							{
								this.maidArray[num180].CrossFade(array47[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!this.maidArray[num180].body0.m_Bones.GetComponent<Animation>().GetClip(array47[0] + ".anm"))
								{
									this.maidArray[num180].body0.LoadAnime(array47[0] + ".anm", GameUty.FileSystem, array47[0] + ".anm", false, false);
								}
								this.maidArray[num180].body0.m_Bones.GetComponent<Animation>().Play(array47[0] + ".anm");
							}
							if (array47.Length > 1)
							{
								this.maidArray[num180].body0.m_Bones.GetComponent<Animation>()[array47[0] + ".anm"].time = float.Parse(array47[1]);
								this.isStop[num180] = true;
								if (array47.Length > 2)
								{
									Transform transform35 = CMT.SearchObjName(this.maidArray[num180].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[num180] = true;
									this.poseIti[num180] = this.maidArray[num180].transform.position;
									this.maidArray[num180].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
						}
					}
					j = num180;
				}
			}
			if (this.isDanceChu)
			{
				for (int num192 = 0; num192 < this.maidCnt; num192 = j + 1)
				{
					if (this.maidArray[num192] && this.maidArray[num192].Visible)
					{
						string text11 = this.danceName[num192];
						float num193 = 0f;
						if (text11 == "dance_cmo_002_sd_f1.anm" || text11 == "dance_cmo_002_sd_f2.anm" || text11 == "dance_cm3d_004_kano_f1.anm")
						{
							num193 = 0.166666f;
						}
						if (text11 == "dance_cm3d21_kara_001_nmf_f1.anm")
						{
							num193 = -0.35f;
						}
						if (text11 != null)
						{
							if (this.danceCount > 0)
							{
								j = this.danceCount;
								this.danceCount = j - 1;
								this.maidArray[num192].body0.m_Bones.GetComponent<Animation>()[text11].time = this.audioSourceBgm.time - 0.03333f - num193;
							}
							if (this.maidArray[num192].body0.m_Bones.GetComponent<Animation>()[text11].time + num193 < this.audioSourceBgm.time - 0.1f)
							{
								this.danceCount = 20;
							}
						}
					}
					j = num192;
				}
			}
			if (this.isDanceStart1)
			{
				for (int num194 = 0; num194 < this.maidCnt; num194 = j + 1)
				{
					if (this.maidArray[num194] && this.maidArray[num194].Visible)
					{
						this.maidArray[num194].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (!this.isShift)
						{
							int num195;
							switch (num194)
							{
							case 0:
								this.maidArray[num194].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_001_f1.anm");
								this.maidArray[num194].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_001_f1.anm"].time = 0f;
								this.danceName[num194] = "dance_cm3d2_001_f1.anm";
								goto IL_1BFF9;
							case 1:
							case 3:
							case 5:
							case 7:
							case 9:
							case 11:
								num195 = 0;
								break;
							case 2:
							case 4:
							case 6:
							case 8:
							case 10:
								goto IL_1BE92;
							default:
								goto IL_1BE92;
							}
							IL_1BEAF:
							if (num195 == 0)
							{
								this.maidArray[num194].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_001_f2.anm");
								this.maidArray[num194].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_001_f2.anm"].time = 0f;
								this.danceName[num194] = "dance_cm3d2_001_f2.anm";
								goto IL_1BFF9;
							}
							this.maidArray[num194].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_001_f3.anm");
							this.maidArray[num194].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_001_f3.anm"].time = 0f;
							this.danceName[num194] = "dance_cm3d2_001_f3.anm";
							goto IL_1BFF9;
							IL_1BE92:
							num195 = ((num194 != 13) ? 1 : 0);
							goto IL_1BEAF;
						}
						this.maidArray[num194].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_kara_003_ddfl_f1.anm");
						this.maidArray[num194].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_kara_003_ddfl_f1.anm"].time = 0f;
						this.danceName[num194] = "dance_cm3d2_kara_003_ddfl_f1.anm";
					}
					IL_1BFF9:
					j = num194;
				}
				this.isDanceStart1 = false;
				this.isDanceStart1F = true;
				this.isShift = false;
			}
			if (this.isDanceStart2)
			{
				for (int num196 = 0; num196 < this.maidCnt; num196 = j + 1)
				{
					if (this.maidArray[num196] && this.maidArray[num196].Visible)
					{
						this.maidArray[num196].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						this.maidArray[num196].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d_001_f1.anm");
						this.maidArray[num196].body0.m_Bones.GetComponent<Animation>()["dance_cm3d_001_f1.anm"].time = 0f;
						this.danceName[num196] = "dance_cm3d_001_f1.anm";
					}
					j = num196;
				}
				this.isDanceStart2 = false;
				this.isDanceStart2F = true;
			}
			if (this.isDanceStart3)
			{
				for (int num197 = 0; num197 < this.maidCnt; num197 = j + 1)
				{
					if (this.maidArray[num197] && this.maidArray[num197].Visible)
					{
						this.maidArray[num197].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (!this.isShift)
						{
							this.maidArray[num197].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d_002_end_f1.anm");
							this.maidArray[num197].body0.m_Bones.GetComponent<Animation>()["dance_cm3d_002_end_f1.anm"].time = 0f;
							this.danceName[num197] = "dance_cm3d_002_end_f1.anm";
						}
						else
						{
							this.maidArray[num197].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_kara_001_sl_f1.anm");
							this.maidArray[num197].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_kara_001_sl_f1.anm"].time = 0f;
							this.danceName[num197] = "dance_cm3d2_kara_001_sl_f1.anm";
						}
					}
					j = num197;
				}
				this.isDanceStart3 = false;
				this.isDanceStart3F = true;
				this.isShift = false;
			}
			if (this.isDanceStart4)
			{
				for (int num198 = 0; num198 < this.maidCnt; num198 = j + 1)
				{
					if (this.maidArray[num198] && this.maidArray[num198].Visible)
					{
						this.maidArray[num198].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (!this.isShift)
						{
							this.maidArray[num198].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_002_smt_f.anm");
							this.maidArray[num198].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_002_smt_f.anm"].time = 0f;
							this.danceName[num198] = "dance_cm3d2_002_smt_f.anm";
						}
						else
						{
							this.maidArray[num198].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_kara02_001_smt_f1.anm");
							this.maidArray[num198].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_kara02_001_smt_f1.anm"].time = 0f;
							this.danceName[num198] = "dance_cm3d2_kara02_001_smt_f1.anm";
						}
					}
					j = num198;
				}
				this.isDanceStart4 = false;
				this.isDanceStart4F = true;
				this.isShift = false;
			}
			if (this.isDanceStart5)
			{
				for (int num199 = 0; num199 < this.maidCnt; num199 = j + 1)
				{
					if (this.maidArray[num199] && this.maidArray[num199].Visible)
					{
						this.maidArray[num199].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (!this.isShift)
						{
							this.maidArray[num199].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d_003_sp2_f1.anm");
							this.maidArray[num199].body0.m_Bones.GetComponent<Animation>()["dance_cm3d_003_sp2_f1.anm"].time = 0f;
							this.danceName[num199] = "dance_cm3d_003_sp2_f1.anm";
						}
						else
						{
							this.maidArray[num199].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_kara02_002_rty_f1.anm");
							this.maidArray[num199].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_kara02_002_rty_f1.anm"].time = 0f;
							this.danceName[num199] = "dance_cm3d2_kara02_002_rty_f1.anm";
						}
					}
					j = num199;
				}
				this.isDanceStart5 = false;
				this.isDanceStart5F = true;
				this.isShift = false;
			}
			if (this.isDanceStart6)
			{
				for (int num200 = 0; num200 < this.maidCnt; num200 = j + 1)
				{
					if (this.maidArray[num200] && this.maidArray[num200].Visible)
					{
						this.maidArray[num200].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (!this.isShift)
						{
							this.maidArray[num200].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_003_hs_f1.anm");
							this.maidArray[num200].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_003_hs_f1.anm"].time = 0f;
							this.danceName[num200] = "dance_cm3d2_003_hs_f1.anm";
						}
						else
						{
							this.maidArray[num200].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_kara02_003_hs_f1.anm");
							this.maidArray[num200].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_kara02_003_hs_f1.anm"].time = 0f;
							this.danceName[num200] = "dance_cm3d2_kara02_003_hs_f1.anm";
						}
					}
					j = num200;
				}
				this.isDanceStart6 = false;
				this.isDanceStart6F = true;
				this.isShift = false;
			}
			if (this.isDanceStart7)
			{
				for (int num201 = 0; num201 < this.maidCnt; num201 = j + 1)
				{
					if (this.maidArray[num201] && this.maidArray[num201].Visible)
					{
						this.maidArray[num201].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (num201 == 1 || num201 == 3 || num201 == 5 || num201 == 7 || num201 == 9 || num201 == 11 || num201 == 13)
						{
							this.maidArray[num201].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_003_hs_f2.anm");
							this.maidArray[num201].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_003_hs_f2.anm"].time = 0f;
							this.danceName[num201] = "dance_cm3d2_003_hs_f2.anm";
						}
						else
						{
							this.maidArray[num201].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_003_hs_f1.anm");
							this.maidArray[num201].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_003_hs_f1.anm"].time = 0f;
							this.danceName[num201] = "dance_cm3d2_003_hs_f1.anm";
						}
					}
					j = num201;
				}
				this.isDanceStart7 = false;
				this.isDanceStart7V = true;
				this.isDanceStart7F = true;
			}
			if (this.isDanceStart8)
			{
				for (int num202 = 0; num202 < this.maidCnt; num202 = j + 1)
				{
					if (this.maidArray[num202] && this.maidArray[num202].Visible)
					{
						this.maidArray[num202].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (num202 == 0 || num202 == 4 || num202 == 8 || num202 == 12)
						{
							this.maidArray[num202].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_003_hs_f1.anm");
							this.maidArray[num202].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_003_hs_f1.anm"].time = 0f;
							this.danceName[num202] = "dance_cm3d2_003_hs_f1.anm";
						}
						else if (num202 == 1 || num202 == 5 || num202 == 9 || num202 == 13)
						{
							this.maidArray[num202].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_003_hs_f2.anm");
							this.maidArray[num202].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_003_hs_f2.anm"].time = 0f;
							this.danceName[num202] = "dance_cm3d2_003_hs_f2.anm";
						}
						else if (num202 == 2 || num202 == 6 || num202 == 10)
						{
							this.maidArray[num202].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_003_hs_f3.anm");
							this.maidArray[num202].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_003_hs_f3.anm"].time = 0f;
							this.danceName[num202] = "dance_cm3d2_003_hs_f3.anm";
						}
						else
						{
							this.maidArray[num202].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_003_hs_f4.anm");
							this.maidArray[num202].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_003_hs_f4.anm"].time = 0f;
							this.danceName[num202] = "dance_cm3d2_003_hs_f4.anm";
						}
					}
					j = num202;
				}
				this.isDanceStart8 = false;
				this.isDanceStart8V = true;
				this.isDanceStart8F = true;
			}
			if (this.isDanceStart9)
			{
				j = this.isDanceStart9Count;
				this.isDanceStart9Count = j + 1;
				if (this.isShift)
				{
					for (int num203 = 0; num203 < this.maidCnt; num203 = j + 1)
					{
						if (this.maidArray[num203] && this.maidArray[num203].Visible)
						{
							this.maidArray[num203].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
							this.maidArray[num203].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_kara_002_cktc_f1.anm");
							this.maidArray[num203].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_kara_002_cktc_f1.anm"].time = 0f;
							this.danceName[num203] = "dance_cm3d2_kara_002_cktc_f1.anm";
						}
						j = num203;
					}
					this.isDanceStart9 = false;
					this.isDanceStart9F = true;
					this.isDanceStart9Count = 0;
					this.isShift = false;
				}
				if (this.isDanceStart9Count == 10)
				{
					for (int num204 = 0; num204 < this.maidCnt; num204 = j + 1)
					{
						if (this.maidArray[num204] && this.maidArray[num204].Visible)
						{
							this.maidArray[num204].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
							this.maidArray[num204].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d_004_kano_f1.anm");
							this.maidArray[num204].body0.m_Bones.GetComponent<Animation>()["dance_cm3d_004_kano_f1.anm"].time = 0f;
							this.danceName[num204] = "dance_cm3d_004_kano_f1.anm";
						}
						j = num204;
					}
					this.isDanceStart9 = false;
					this.isDanceStart9F = true;
					this.isDanceStart9Count = 0;
				}
			}
			if (this.isDanceStart10)
			{
				for (int num205 = 0; num205 < this.maidCnt; num205 = j + 1)
				{
					if (this.maidArray[num205] && this.maidArray[num205].Visible)
					{
						this.maidArray[num205].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						this.maidArray[num205].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_004_sse_f1.anm");
						this.maidArray[num205].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_004_sse_f1.anm"].time = 0f;
						this.danceName[num205] = "dance_cm3d2_004_sse_f1.anm";
					}
					j = num205;
				}
				this.isDanceStart10 = false;
				this.isDanceStart10F = true;
			}
			if (this.isDanceStart11)
			{
				for (int num206 = 0; num206 < this.maidCnt; num206 = j + 1)
				{
					if (this.maidArray[num206] && this.maidArray[num206].Visible)
					{
						this.maidArray[num206].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (num206 == 1 || num206 == 4 || num206 == 7 || num206 == 10 || num206 == 13)
						{
							this.maidArray[num206].body0.m_Bones.GetComponent<Animation>().Play(this.nameA + this.danceNo2 + ".anm");
							this.maidArray[num206].body0.m_Bones.GetComponent<Animation>()[this.nameA + this.danceNo2 + ".anm"].time = 0f;
							this.danceName[num206] = this.nameA + this.danceNo2 + ".anm";
						}
						else if (num206 == 2 || num206 == 5 || num206 == 8 || num206 == 11)
						{
							this.maidArray[num206].body0.m_Bones.GetComponent<Animation>().Play(this.nameA + this.danceNo3 + ".anm");
							this.maidArray[num206].body0.m_Bones.GetComponent<Animation>()[this.nameA + this.danceNo3 + ".anm"].time = 0f;
							this.danceName[num206] = this.nameA + this.danceNo3 + ".anm";
						}
						else
						{
							this.maidArray[num206].body0.m_Bones.GetComponent<Animation>().Play(this.nameA + this.danceNo1 + ".anm");
							this.maidArray[num206].body0.m_Bones.GetComponent<Animation>()[this.nameA + this.danceNo1 + ".anm"].time = 0f;
							this.danceName[num206] = this.nameA + this.danceNo1 + ".anm";
						}
					}
					j = num206;
				}
				this.isDanceStart11 = false;
				this.isDanceStart11V = true;
				this.isDanceStart11F = true;
			}
			if (this.isDanceStart12)
			{
				for (int num207 = 0; num207 < this.maidCnt; num207 = j + 1)
				{
					if (this.maidArray[num207] && this.maidArray[num207].Visible)
					{
						this.maidArray[num207].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						this.maidArray[num207].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_005_khg_f.anm");
						this.maidArray[num207].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_005_khg_f.anm"].time = 0f;
						this.danceName[num207] = "dance_cm3d2_005_khg_f.anm";
					}
					j = num207;
				}
				this.isDanceStart12 = false;
				this.isDanceStart12F = true;
			}
			if (this.isDanceStart13)
			{
				for (int num208 = 0; num208 < this.maidCnt; num208 = j + 1)
				{
					if (this.maidArray[num208] && this.maidArray[num208].Visible)
					{
						this.maidArray[num208].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (!this.isShift)
						{
							this.maidArray[num208].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_006_ssn_f1.anm");
							this.maidArray[num208].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_006_ssn_f1.anm"].time = 0f;
							this.danceName[num208] = "dance_cm3d2_006_ssn_f1.anm";
						}
						else
						{
							this.maidArray[num208].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d21_kara_001_nmf_f1.anm");
							this.maidArray[num208].body0.m_Bones.GetComponent<Animation>()["dance_cm3d21_kara_001_nmf_f1.anm"].time = 0f;
							this.danceName[num208] = "dance_cm3d21_kara_001_nmf_f1.anm";
						}
					}
					j = num208;
				}
				this.isDanceStart13 = false;
				this.isDanceStart13F = true;
				this.isShift = false;
			}
			if (this.isDanceStart14)
			{
				for (int num209 = 0; num209 < this.maidCnt; num209 = j + 1)
				{
					if (this.maidArray[num209] && this.maidArray[num209].Visible)
					{
						this.maidArray[num209].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (num209 == 1 || num209 == 4 || num209 == 7 || num209 == 10 || num209 == 13)
						{
							this.maidArray[num209].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_006_ssn_f2.anm");
							this.maidArray[num209].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_006_ssn_f2.anm"].time = 0f;
							this.danceName[num209] = "dance_cm3d2_006_ssn_f2.anm";
						}
						else if (num209 == 2 || num209 == 5 || num209 == 8 || num209 == 11)
						{
							this.maidArray[num209].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_006_ssn_f3.anm");
							this.maidArray[num209].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_006_ssn_f3.anm"].time = 0f;
							this.danceName[num209] = "dance_cm3d2_006_ssn_f3.anm";
						}
						else
						{
							this.maidArray[num209].body0.m_Bones.GetComponent<Animation>().Play("dance_cm3d2_006_ssn_f1.anm");
							this.maidArray[num209].body0.m_Bones.GetComponent<Animation>()["dance_cm3d2_006_ssn_f1.anm"].time = 0f;
							this.danceName[num209] = "dance_cm3d2_006_ssn_f1.anm";
						}
					}
					j = num209;
				}
				this.isDanceStart14 = false;
				this.isDanceStart14V = true;
				this.isDanceStart14F = true;
			}
			if (this.isDanceStart15)
			{
				j = this.isDanceStart15Count;
				this.isDanceStart15Count = j + 1;
			}
			if (this.isDanceStart15Count == 10)
			{
				for (int num210 = 0; num210 < this.maidCnt; num210 = j + 1)
				{
					if (this.maidArray[num210] && this.maidArray[num210].Visible)
					{
						this.maidArray[num210].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
						if (num210 == 1 || num210 == 3 || num210 == 5 || num210 == 7 || num210 == 9 || num210 == 11 || num210 == 13)
						{
							this.maidArray[num210].body0.m_Bones.GetComponent<Animation>().Play("dance_cmo_002_sd_f2.anm");
							this.maidArray[num210].body0.m_Bones.GetComponent<Animation>()["dance_cmo_002_sd_f2.anm"].time = 0f;
							this.danceName[num210] = "dance_cmo_002_sd_f2.anm";
						}
						else
						{
							this.maidArray[num210].body0.m_Bones.GetComponent<Animation>().Play("dance_cmo_002_sd_f1.anm");
							this.maidArray[num210].body0.m_Bones.GetComponent<Animation>()["dance_cmo_002_sd_f1.anm"].time = 0f;
							this.danceName[num210] = "dance_cmo_002_sd_f1.anm";
						}
					}
					j = num210;
				}
				this.isDanceStart15 = false;
				this.isDanceStart15V = true;
				this.isDanceStart15F = true;
				this.isDanceStart15Count = 0;
			}
			if (this.isDance)
			{
				for (int num211 = 0; num211 < this.maidCnt; num211 = j + 1)
				{
					if (this.maidArray[num211].Visible)
					{
						if (this.isDanceStart1F)
						{
							if (this.isDanceStart1K)
							{
								string[] dance1KArray = Class1.dance1KArray;
								foreach (string text12 in dance1KArray)
								{
									string[] array51 = text12.Split(new char[]
									{
										','
									});
									float num212 = float.Parse(array51[0]);
									if (this.danceFace[num211] < num212 && num212 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num212;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array51[1];
										this.FaceName3[num211] = array51[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else if (num211 == 0)
							{
								string[] dance1Array = Class1.dance1Array;
								foreach (string text13 in dance1Array)
								{
									string[] array52 = text13.Split(new char[]
									{
										','
									});
									float num213 = float.Parse(array52[0]);
									if (this.danceFace[num211] < num213 && num213 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num213;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array52[1];
										this.FaceName3[num211] = array52[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else if (num211 == 1 || num211 == 3 || num211 == 5 || num211 == 7 || num211 == 9 || num211 == 11 || num211 == 13)
							{
								string[] dance1BArray = Class1.dance1BArray;
								foreach (string text14 in dance1BArray)
								{
									string[] array53 = text14.Split(new char[]
									{
										','
									});
									float num214 = float.Parse(array53[0]);
									if (this.danceFace[num211] < num214 && num214 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num214;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array53[1];
										this.FaceName3[num211] = array53[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance1CArray = Class1.dance1CArray;
								foreach (string text15 in dance1CArray)
								{
									string[] array54 = text15.Split(new char[]
									{
										','
									});
									float num215 = float.Parse(array54[0]);
									if (this.danceFace[num211] < num215 && num215 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num215;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array54[1];
										this.FaceName3[num211] = array54[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart2F)
						{
							string[] dance2Array = Class1.dance2Array;
							foreach (string text16 in dance2Array)
							{
								string[] array55 = text16.Split(new char[]
								{
									','
								});
								float num216 = float.Parse(array55[0]);
								if (this.danceFace[num211] < num216 && num216 < this.audioSourceBgm.time)
								{
									this.danceFace[num211] = num216;
									this.FaceName[num211] = this.FaceName2[num211];
									this.FaceName2[num211] = array55[1];
									this.FaceName3[num211] = array55[2];
									this.FaceTime[num211] = 0.0166666675f;
									break;
								}
							}
						}
						if (this.isDanceStart3F)
						{
							if (this.isDanceStart3K)
							{
								string[] dance3KArray = Class1.dance3KArray;
								foreach (string text17 in dance3KArray)
								{
									string[] array56 = text17.Split(new char[]
									{
										','
									});
									float num217 = float.Parse(array56[0]);
									if (this.danceFace[num211] < num217 && num217 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num217;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array56[1];
										this.FaceName3[num211] = array56[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance3Array = Class1.dance3Array;
								foreach (string text18 in dance3Array)
								{
									string[] array57 = text18.Split(new char[]
									{
										','
									});
									float num218 = float.Parse(array57[0]);
									if (this.danceFace[num211] < num218 && num218 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num218;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array57[1];
										this.FaceName3[num211] = array57[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart4F)
						{
							if (this.isDanceStart4K)
							{
								string[] dance4KArray = Class1.dance4KArray;
								foreach (string text19 in dance4KArray)
								{
									string[] array58 = text19.Split(new char[]
									{
										','
									});
									float num219 = float.Parse(array58[0]);
									if (this.danceFace[num211] < num219 && num219 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num219;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array58[1];
										this.FaceName3[num211] = array58[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance4Array = Class1.dance4Array;
								foreach (string text20 in dance4Array)
								{
									string[] array59 = text20.Split(new char[]
									{
										','
									});
									float num220 = float.Parse(array59[0]);
									if (this.danceFace[num211] < num220 && num220 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num220;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array59[1];
										this.FaceName3[num211] = array59[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart5F)
						{
							if (this.isDanceStart5K)
							{
								string[] dance5KArray = Class1.dance5KArray;
								foreach (string text21 in dance5KArray)
								{
									string[] array60 = text21.Split(new char[]
									{
										','
									});
									float num221 = float.Parse(array60[0]);
									if (this.danceFace[num211] < num221 && num221 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num221;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array60[1];
										this.FaceName3[num211] = array60[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance5Array = Class1.dance5Array;
								foreach (string text22 in dance5Array)
								{
									string[] array61 = text22.Split(new char[]
									{
										','
									});
									float num222 = float.Parse(array61[0]);
									if (this.danceFace[num211] < num222 && num222 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num222;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array61[1];
										this.FaceName3[num211] = array61[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart6F)
						{
							if (this.isDanceStart6K)
							{
								string[] dance6KArray = Class1.dance6KArray;
								foreach (string text23 in dance6KArray)
								{
									string[] array62 = text23.Split(new char[]
									{
										','
									});
									float num223 = float.Parse(array62[0]);
									if (this.danceFace[num211] < num223 && num223 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num223;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array62[1];
										this.FaceName3[num211] = array62[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance6Array = Class1.dance6Array;
								foreach (string text24 in dance6Array)
								{
									string[] array63 = text24.Split(new char[]
									{
										','
									});
									float num224 = float.Parse(array63[0]);
									if (this.danceFace[num211] < num224 && num224 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num224;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array63[1];
										this.FaceName3[num211] = array63[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart7F)
						{
							if (num211 == 1 || num211 == 3 || num211 == 5 || num211 == 7 || num211 == 9 || num211 == 11 || num211 == 13)
							{
								string[] dance6BArray = Class1.dance6BArray;
								foreach (string text25 in dance6BArray)
								{
									string[] array64 = text25.Split(new char[]
									{
										','
									});
									float num225 = float.Parse(array64[0]);
									if (this.danceFace[num211] < num225 && num225 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num225;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array64[1];
										this.FaceName3[num211] = array64[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance6Array2 = Class1.dance6Array;
								foreach (string text26 in dance6Array2)
								{
									string[] array65 = text26.Split(new char[]
									{
										','
									});
									float num226 = float.Parse(array65[0]);
									if (this.danceFace[num211] < num226 && num226 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num226;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array65[1];
										this.FaceName3[num211] = array65[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart7V && (num211 == 1 || num211 == 3 || num211 == 5 || num211 == 7 || num211 == 9 || num211 == 11 || num211 == 13))
						{
							if (this.audioSourceBgm.time > 42f && this.audioSourceBgm.time < 43f)
							{
								this.maidArray[num211].SetPos(this.maidArray[num211 - 1].transform.position);
							}
							if (this.audioSourceBgm.time > 58.17f && this.audioSourceBgm.time < 60f)
							{
								this.maidArray[num211].SetPos(new Vector3(this.maidArray[num211 - 1].transform.position.x, 100f, this.maidArray[num211 - 1].transform.position.z));
							}
						}
						if (this.isDanceStart8F)
						{
							if (num211 == 1 || num211 == 5 || num211 == 9 || num211 == 13)
							{
								string[] dance6BArray2 = Class1.dance6BArray;
								foreach (string text27 in dance6BArray2)
								{
									string[] array66 = text27.Split(new char[]
									{
										','
									});
									float num227 = float.Parse(array66[0]);
									if (this.danceFace[num211] < num227 && num227 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num227;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array66[1];
										this.FaceName3[num211] = array66[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else if (num211 == 2 || num211 == 6 || num211 == 10)
							{
								string[] dance6CArray = Class1.dance6CArray;
								foreach (string text28 in dance6CArray)
								{
									string[] array67 = text28.Split(new char[]
									{
										','
									});
									float num228 = float.Parse(array67[0]);
									if (this.danceFace[num211] < num228 && num228 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num228;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array67[1];
										this.FaceName3[num211] = array67[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else if (num211 == 3 || num211 == 9 || num211 == 11)
							{
								string[] dance6DArray = Class1.dance6DArray;
								foreach (string text29 in dance6DArray)
								{
									string[] array68 = text29.Split(new char[]
									{
										','
									});
									float num229 = float.Parse(array68[0]);
									if (this.danceFace[num211] < num229 && num229 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num229;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array68[1];
										this.FaceName3[num211] = array68[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance6Array3 = Class1.dance6Array;
								foreach (string text30 in dance6Array3)
								{
									string[] array69 = text30.Split(new char[]
									{
										','
									});
									float num230 = float.Parse(array69[0]);
									if (this.danceFace[num211] < num230 && num230 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num230;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array69[1];
										this.FaceName3[num211] = array69[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart8V && (num211 == 1 || num211 == 5 || num211 == 9 || num211 == 13))
						{
							if (this.audioSourceBgm.time > 42f && this.audioSourceBgm.time < 43f)
							{
								this.maidArray[num211].SetPos(this.maidArray[num211 - 1].transform.position);
							}
							if (this.audioSourceBgm.time > 58.17f && this.audioSourceBgm.time < 60f)
							{
								this.maidArray[num211].SetPos(new Vector3(this.maidArray[num211 - 1].transform.position.x, 100f, this.maidArray[num211 - 1].transform.position.z));
							}
						}
						if (this.isDanceStart8V && !this.isDanceStart8P && this.audioSourceBgm.time > 40f && this.audioSourceBgm.time < 41f)
						{
							this.isDanceStart8P = true;
							for (int num231 = 0; num231 < this.maidCnt; num231 = j + 1)
							{
								if (this.maidArray[num231].Visible && (num231 == 0 || num231 == 4 || num231 == 8 || num231 == 12))
								{
									UnityEngine.Object original = Resources.Load("Prefab/Particle/pHeart01");
									GameObject gameObject8 = UnityEngine.Object.Instantiate(original) as GameObject;
									gameObject8.transform.position = CMT.SearchObjName(this.maidArray[num231].body0.m_Bones.transform, "Bip01 Spine", true).position;
								}
								j = num231;
							}
						}
						if (this.isDanceStart9F)
						{
							if (this.isDanceStart9K)
							{
								string[] dance9KArray = Class1.dance9KArray;
								foreach (string text31 in dance9KArray)
								{
									string[] array70 = text31.Split(new char[]
									{
										','
									});
									float num232 = float.Parse(array70[0]);
									if (this.danceFace[num211] < num232 && num232 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num232;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array70[1];
										this.FaceName3[num211] = array70[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance7Array = Class1.dance7Array;
								foreach (string text32 in dance7Array)
								{
									string[] array71 = text32.Split(new char[]
									{
										','
									});
									float num233 = float.Parse(array71[0]);
									if (this.danceFace[num211] < num233 && num233 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num233;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array71[1];
										this.FaceName3[num211] = array71[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart10F)
						{
							string[] danceO1Array = Class1.danceO1Array;
							foreach (string text33 in danceO1Array)
							{
								string[] array72 = text33.Split(new char[]
								{
									','
								});
								float num234 = float.Parse(array72[0]);
								if (this.danceFace[num211] < num234 && num234 < this.audioSourceBgm.time)
								{
									this.danceFace[num211] = num234;
									this.FaceName[num211] = this.FaceName2[num211];
									this.FaceName2[num211] = array72[1];
									this.FaceName3[num211] = array72[2];
									this.FaceTime[num211] = 0.0166666675f;
									break;
								}
							}
						}
						if (this.isDanceStart11F)
						{
							string[] array73 = null;
							string[] array74 = null;
							string[] array75 = null;
							if (this.isSS1)
							{
								array73 = Class1.danceO1Array;
								array74 = Class1.danceO1CArray;
								array75 = Class1.danceO1BArray;
							}
							if (this.isSS2)
							{
								array73 = Class1.danceO2Array;
								array74 = Class1.danceO2BArray;
								array75 = Class1.danceO2CArray;
							}
							if (this.isSS3)
							{
								array73 = Class1.danceO3CArray;
								array74 = Class1.danceO3Array;
								array75 = Class1.danceO3BArray;
							}
							if (this.isSS4)
							{
								array73 = Class1.danceO5BArray;
								array74 = Class1.danceO5Array;
								array75 = Class1.danceO5CArray;
							}
							if (this.isSS5)
							{
								array73 = Class1.danceO4Array;
								array74 = Class1.danceO4BArray;
								array75 = Class1.danceO4CArray;
							}
							if (num211 == 1 || num211 == 4 || num211 == 7 || num211 == 10 || num211 == 13)
							{
								string[] array76 = array74;
								foreach (string text34 in array76)
								{
									string[] array77 = text34.Split(new char[]
									{
										','
									});
									float num235 = float.Parse(array77[0]) - 0.03f;
									if (this.danceFace[num211] < num235 && num235 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num235;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array77[1];
										this.FaceName3[num211] = array77[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else if (num211 == 2 || num211 == 5 || num211 == 8 || num211 == 11)
							{
								string[] array78 = array75;
								foreach (string text35 in array78)
								{
									string[] array79 = text35.Split(new char[]
									{
										','
									});
									float num236 = float.Parse(array79[0]) - 0.03f;
									if (this.danceFace[num211] < num236 && num236 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num236;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array79[1];
										this.FaceName3[num211] = array79[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] array80 = array73;
								foreach (string text36 in array80)
								{
									string[] array81 = text36.Split(new char[]
									{
										','
									});
									float num237 = float.Parse(array81[0]) - 0.03f;
									if (this.danceFace[num211] < num237 && num237 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num237;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array81[1];
										this.FaceName3[num211] = array81[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart12F)
						{
							string[] dance12Array = Class1.dance12Array;
							foreach (string text37 in dance12Array)
							{
								string[] array82 = text37.Split(new char[]
								{
									','
								});
								float num238 = float.Parse(array82[0]);
								if (this.danceFace[num211] < num238 && num238 < this.audioSourceBgm.time)
								{
									this.danceFace[num211] = num238;
									this.FaceName[num211] = this.FaceName2[num211];
									this.FaceName2[num211] = array82[1];
									this.FaceName3[num211] = array82[2];
									this.FaceTime[num211] = 0.0166666675f;
									break;
								}
							}
						}
						if (this.isDanceStart13F && !this.isDanceStart13K)
						{
							string[] dance13Array = Class1.dance13Array;
							foreach (string text38 in dance13Array)
							{
								string[] array83 = text38.Split(new char[]
								{
									','
								});
								float num239 = float.Parse(array83[0]);
								if (this.danceFace[num211] < num239 && num239 < this.audioSourceBgm.time)
								{
									this.danceFace[num211] = num239;
									this.FaceName[num211] = this.FaceName2[num211];
									this.FaceName2[num211] = array83[1];
									this.FaceName3[num211] = array83[2];
									this.FaceTime[num211] = 0.0166666675f;
									break;
								}
							}
						}
						if (this.isDanceStart14F)
						{
							if (num211 == 1 || num211 == 4 || num211 == 7 || num211 == 10 || num211 == 13)
							{
								string[] dance13BArray = Class1.dance13BArray;
								foreach (string text39 in dance13BArray)
								{
									string[] array84 = text39.Split(new char[]
									{
										','
									});
									float num240 = float.Parse(array84[0]);
									if (this.danceFace[num211] < num240 && num240 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num240;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array84[1];
										this.FaceName3[num211] = array84[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else if (num211 == 2 || num211 == 5 || num211 == 8 || num211 == 11)
							{
								string[] dance13CArray = Class1.dance13CArray;
								foreach (string text40 in dance13CArray)
								{
									string[] array85 = text40.Split(new char[]
									{
										','
									});
									float num241 = float.Parse(array85[0]);
									if (this.danceFace[num211] < num241 && num241 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num241;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array85[1];
										this.FaceName3[num211] = array85[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance13Array2 = Class1.dance13Array;
								foreach (string text41 in dance13Array2)
								{
									string[] array86 = text41.Split(new char[]
									{
										','
									});
									float num242 = float.Parse(array86[0]);
									if (this.danceFace[num211] < num242 && num242 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num242;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array86[1];
										this.FaceName3[num211] = array86[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (this.isDanceStart15F)
						{
							if (num211 == 1 || num211 == 3 || num211 == 5 || num211 == 7 || num211 == 9 || num211 == 11 || num211 == 13)
							{
								string[] dance15BArray = Class1.dance15BArray;
								foreach (string text42 in dance15BArray)
								{
									string[] array87 = text42.Split(new char[]
									{
										','
									});
									float num243 = float.Parse(array87[0]);
									if (this.danceFace[num211] < num243 && num243 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num243;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array87[1];
										this.FaceName3[num211] = array87[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
							else
							{
								string[] dance15Array = Class1.dance15Array;
								foreach (string text43 in dance15Array)
								{
									string[] array88 = text43.Split(new char[]
									{
										','
									});
									float num244 = float.Parse(array88[0]);
									if (this.danceFace[num211] < num244 && num244 < this.audioSourceBgm.time)
									{
										this.danceFace[num211] = num244;
										this.FaceName[num211] = this.FaceName2[num211];
										this.FaceName2[num211] = array88[1];
										this.FaceName3[num211] = array88[2];
										this.FaceTime[num211] = 0.0166666675f;
										break;
									}
								}
							}
						}
						if (!this.isFadeOut)
						{
							Maid maid12 = this.maidArray[num211];
							if (maid12 && maid12.Visible && maid12.transform.position.y != 100f)
							{
								ref float ptr4 = ref this.FaceTime[num211];
								ptr4 += Time.deltaTime;
								if (this.FaceTime[num211] < 1f)
								{
									TMorph morph4 = maid12.body0.Face.morph;
									maid12.boMabataki = false;
									maid12.body0.Face.morph.EyeMabataki = 0f;
									if (this.FaceName[num211] != string.Empty)
									{
										maid12.body0.Face.morph.MulBlendValues(this.FaceName[num211], 1f);
									}
									if (this.FaceName2[num211] != "")
									{
										maid12.body0.Face.morph.MulBlendValues(this.FaceName2[num211], UTY.COSS2(Mathf.Pow(this.FaceTime[num211], 0.4f), 4f));
									}
									if (this.FaceName3[num211] != string.Empty)
									{
										maid12.body0.Face.morph.AddBlendValues(this.FaceName3[num211], 1f);
									}
									maid12.body0.Face.morph.FixBlendValues_Face();
								}
								else
								{
									this.FaceName[num211] = this.FaceName2[num211];
								}
								if (this.isHenkou)
								{
									TMorph morph5 = maid12.body0.Face.morph;
									float[] fieldValue11 = ManyMaids.GetFieldValue<TMorph, float[]>(morph5, "BlendValues");
									maid12.boMabataki = false;
									if (this.isNamidaH)
									{
										fieldValue11[(int)morph5.hash["namida"]] = 1f;
									}
									else
									{
										fieldValue11[(int)morph5.hash["namida"]] = 0f;
									}
									if (this.isSekimenH)
									{
										fieldValue11[(int)morph5.hash["hohol"]] = 1f;
									}
									else
									{
										fieldValue11[(int)morph5.hash["hohol"]] = 0f;
									}
									if (this.isHohoH)
									{
										fieldValue11[(int)morph5.hash["hoho2"]] = 1f;
									}
									else
									{
										fieldValue11[(int)morph5.hash["hoho2"]] = 0f;
									}
									maid12.body0.Face.morph.FixBlendValues_Face();
								}
							}
						}
						this.FoceKuchipakuUpdate2(this.audioSourceBgm.time, this.maidArray[num211], num211);
					}
					j = num211;
				}
				if (Input.GetKey(KeyCode.H) || this.isVR)
				{
					if (Input.GetKeyDown(KeyCode.KeypadPeriod))
					{
						this.h2Flg = true;
						this.isNamidaH = !this.isNamidaH;
						this.isHenkou = true;
					}
					if (Input.GetKeyDown(KeyCode.KeypadPlus))
					{
						this.h2Flg = true;
						this.isSekimenH = !this.isSekimenH;
						this.isHenkou = true;
					}
					if (Input.GetKeyDown(KeyCode.KeypadEnter))
					{
						this.h2Flg = true;
						this.isHohoH = !this.isHohoH;
						this.isHenkou = true;
					}
				}
				j = this.danceCheckIndex;
				this.danceCheckIndex = j + 1;
				if (this.danceCheckIndex == 10)
				{
					this.danceCheckIndex = 0;
				}
				this.danceCheck[this.danceCheckIndex] = this.audioSourceBgm.time;
				this.isDanceChu = false;
				for (int num245 = 0; num245 < this.danceCheck.Length; num245 = j + 1)
				{
					if (this.danceCheck[num245] > 0f)
					{
						this.isDanceChu = true;
						break;
					}
					j = num245;
				}
				if (!this.isDanceChu)
				{
					j = this.danceWait;
					this.danceWait = j - 1;
					if (this.danceWait > 0)
					{
						this.isDanceChu = true;
					}
				}
				if (!this.isDanceChu)
				{
					for (int num246 = 0; num246 < this.maidCnt; num246 = j + 1)
					{
						if (this.maidArray[num246] && this.maidArray[num246].Visible)
						{
							this.maidArray[num246].StopKuchipakuPattern();
							if (this.isDanceStart7V)
							{
								this.maidArray[num246].SetPos(this.dancePos[num246]);
								this.maidArray[num246].body0.transform.localRotation = this.danceRot[num246];
							}
							if (this.isDanceStart8V && (num246 == 1 || num246 == 5 || num246 == 9 || num246 == 13))
							{
								this.maidArray[num246].SetPos(this.dancePos[num246]);
								this.maidArray[num246].body0.transform.localRotation = this.danceRot[num246];
							}
							if (this.isDanceStart11V)
							{
								this.maidArray[num246].SetPos(this.dancePos[num246]);
								this.maidArray[num246].body0.transform.localRotation = this.danceRot[num246];
							}
							if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
							{
								this.maidArray[num246].SetPos(this.dancePos[num246]);
								this.maidArray[num246].body0.transform.localRotation = this.danceRot[num246];
								int num247 = num246;
								if (!this.isVR)
								{
									this.delCount[num247] = 20;
									if (this.goSlot[(int)this.selectList[num247]] != null)
									{
										this.maidArray[num247].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num247]]);
										for (int num248 = 0; num248 < this.bodyHit[(int)this.selectList[num247]].Count; num248 = j + 1)
										{
											this.maidArray[num247].body0.goSlot[num248].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num247]][num248];
											j = num248;
										}
									}
								}
								Maid maid13 = this.maidArray[num246];
								maid13.DelProp(MPN.acckami, true);
								maid13.DelProp(MPN.accha, true);
								maid13.DelProp(MPN.acchead, true);
								maid13.DelProp(MPN.accvag, true);
								maid13.DelProp(MPN.megane, true);
								maid13.AllProcPropSeqStart();
								this.isStop[num247] = true;
								Transform transform36 = CMT.SearchObjName(this.maidArray[num247].body0.m_Bones.transform, "Bip01", true);
								this.isPoseIti[num247] = true;
								this.poseIti[num247] = this.maidArray[num247].transform.position;
								this.maidArray[num247].transform.position = new Vector3(100f, 100f, 100f);
							}
							if (this.isDanceStart14V)
							{
								this.maidArray[num246].SetPos(this.dancePos[num246]);
								this.maidArray[num246].body0.transform.localRotation = this.danceRot[num246];
							}
							if (this.isDanceStart15V)
							{
								this.maidArray[num246].SetPos(this.dancePos[num246]);
								this.maidArray[num246].body0.transform.localRotation = this.danceRot[num246];
							}
						}
						j = num246;
					}
					this.isDanceStart1F = false;
					this.isDanceStart1K = false;
					this.isDanceStart2F = false;
					this.isDanceStart3F = false;
					this.isDanceStart3K = false;
					this.isDanceStart4F = false;
					this.isDanceStart4K = false;
					this.isDanceStart5F = false;
					this.isDanceStart5K = false;
					this.isDanceStart6F = false;
					this.isDanceStart6K = false;
					this.isDanceStart7F = false;
					this.isDanceStart7V = false;
					this.isDanceStart8F = false;
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
					this.isDanceStart9F = false;
					this.isDanceStart9K = false;
					this.isDanceStart10F = false;
					this.isDanceStart11F = false;
					this.isDanceStart11V = false;
					this.isDanceStart12F = false;
					this.isDanceStart13F = false;
					this.isDanceStart13K = false;
					this.isDanceStart14F = false;
					this.isDanceStart14V = false;
					this.isDanceStart15F = false;
					this.isDanceStart15V = false;
					for (int num249 = 0; num249 < this.maidCnt; num249 = j + 1)
					{
						this.danceFace[num249] = 0f;
						j = num249;
					}
					this.danceCheckIndex = 0;
					for (int num250 = 0; num250 < this.danceCheck.Length; num250 = j + 1)
					{
						this.danceCheck[this.danceCheckIndex] = 1f;
						j = num250;
					}
					this.isDance = false;
				}
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha1)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Keypad1)))
			{
				if (this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.isShift = true;
				}
				TextAsset textAsset = Resources.Load("SceneDance/dance_kp_m0") as TextAsset;
				string text44 = Regex.Replace(textAsset.text, "(\\r|\\n| )", string.Empty);
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				if (!this.isShift)
				{
					GameMain.Instance.CharacterMgr.ResetCharaPosAll();
				}
				for (int num251 = 0; num251 < this.maidCnt; num251 = j + 1)
				{
					string text45 = "dance_cm3d2_001_f1.anm";
					switch (num251)
					{
					case 1:
					case 3:
					case 5:
					case 7:
					case 9:
					case 11:
					case 13:
						text45 = "dance_cm3d2_001_f2.anm";
						break;
					case 2:
					case 4:
					case 6:
					case 8:
					case 10:
					case 12:
						text45 = "dance_cm3d2_001_f3.anm";
						break;
					}
					if (!this.isShift)
					{
						if (!this.maidArray[num251].body0.m_Bones.GetComponent<Animation>().GetClip(text45))
						{
							this.maidArray[num251].body0.LoadAnime(text45, GameUty.FileSystem, text45, false, false);
						}
					}
					else
					{
						if (!this.maidArray[num251].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_kara_003_ddfl_f1.anm"))
						{
							this.maidArray[num251].body0.LoadAnime("dance_cm3d2_kara_003_ddfl_f1.anm", GameUty.FileSystem, "dance_cm3d2_kara_003_ddfl_f1.anm", false, false);
						}
						textAsset = (Resources.Load("SceneDance/DDF_kara_voice_2") as TextAsset);
						text44 = textAsset.text;
						text44 = Regex.Replace(text44, "(\\r|\\n| )", string.Empty);
						if (!this.isDanceStart1K && !this.isDanceStart3K && !this.isDanceStart4K && !this.isDanceStart5K && !this.isDanceStart6K && !this.isDanceStart9K && !this.isDanceStart13K)
						{
							this.dancePos[num251] = this.maidArray[num251].transform.position;
							this.danceRot[num251] = this.maidArray[num251].transform.localRotation;
						}
					}
					this.m_baKuchipakuPattern[num251] = Convert.FromBase64String(text44);
					j = num251;
				}
				if (!this.isShift)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("dokidokifallinlove_short.ogg", 0f, false);
					this.sw = new Stopwatch();
					this.sw.Start();
				}
				else if (this.getModKeyPressing(ManyMaids.modKey.Ctrl))
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("dokidokifallinlove_short_sasaki_kara.ogg", 0f, false);
				}
				else
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("dokidokifallinlove_short_nao_kara.ogg", 0f, false);
				}
				for (int num252 = 0; num252 < this.maidCnt; num252 = j + 1)
				{
					this.maidArray[num252].StartKuchipakuPattern(0f, text44, true);
					Vector3 vector = Vector3.zero;
					switch (num252)
					{
					case 3:
						vector.x = 1f;
						break;
					case 4:
						vector.x = -1f;
						break;
					case 5:
						vector.x = 2f;
						break;
					case 6:
						vector.x = -2f;
						break;
					case 7:
						vector.x = 3f;
						break;
					case 8:
						vector.x = -3f;
						break;
					case 9:
						vector.x = 4f;
						break;
					case 10:
						vector.x = -4f;
						break;
					case 11:
						vector.x = 5f;
						break;
					case 12:
						vector.x = -5f;
						break;
					case 13:
						vector.x = 6f;
						break;
					}
					if (!this.isShift)
					{
						this.maidArray[num252].SetPos(vector);
					}
					this.isStop[num252] = false;
					this.isLock[num252] = false;
					this.pHandL[num252] = 0;
					this.pHandR[num252] = 0;
					this.muneIKL[num252] = false;
					this.muneIKR[num252] = false;
					if (!this.isVR)
					{
						this.maidArray[num252].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num252]];
						this.maidArray[num252].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num252]];
					}
					j = num252;
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num253 = 0; num253 < this.maidCnt; num253 = j + 1)
				{
					this.danceFace[num253] = 0f;
					j = num253;
				}
				if (this.isDanceStart7V)
				{
					for (int num254 = 0; num254 < this.maidCnt; num254 = j + 1)
					{
						if (this.maidArray[num254] && this.maidArray[num254].Visible && this.isDanceStart7V)
						{
							this.maidArray[num254].SetPos(this.dancePos[num254]);
							this.maidArray[num254].body0.transform.localRotation = this.danceRot[num254];
						}
						j = num254;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num255 = 0; num255 < this.maidCnt; num255 = j + 1)
					{
						if (this.maidArray[num255] && this.maidArray[num255].Visible && this.isDanceStart8V)
						{
							this.maidArray[num255].SetPos(this.dancePos[num255]);
							this.maidArray[num255].body0.transform.localRotation = this.danceRot[num255];
						}
						j = num255;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num256 = 0; num256 < this.maidCnt; num256 = j + 1)
					{
						if (this.maidArray[num256] && this.maidArray[num256].Visible && this.isDanceStart11V)
						{
							this.maidArray[num256].SetPos(this.dancePos[num256]);
							this.maidArray[num256].body0.transform.localRotation = this.danceRot[num256];
						}
						j = num256;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num257 = 0; num257 < this.maidCnt; num257 = j + 1)
					{
						if (this.maidArray[num257] && this.maidArray[num257].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num257].SetPos(this.dancePos[num257]);
							this.maidArray[num257].body0.transform.localRotation = this.danceRot[num257];
							int num258 = num257;
							if (!this.isVR)
							{
								this.delCount[num258] = 20;
								if (this.goSlot[(int)this.selectList[num258]] != null)
								{
									this.maidArray[num258].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num258]]);
									for (int num259 = 0; num259 < this.bodyHit[(int)this.selectList[num258]].Count; num259 = j + 1)
									{
										this.maidArray[num258].body0.goSlot[num259].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num258]][num259];
										j = num259;
									}
								}
							}
							Maid maid14 = this.maidArray[num257];
							maid14.DelProp(MPN.acckami, true);
							maid14.DelProp(MPN.accha, true);
							maid14.DelProp(MPN.acchead, true);
							maid14.DelProp(MPN.accvag, true);
							maid14.DelProp(MPN.megane, true);
							maid14.AllProcPropSeqStart();
						}
						j = num257;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num260 = 0; num260 < this.maidCnt; num260 = j + 1)
					{
						if (this.maidArray[num260] && this.maidArray[num260].Visible && this.isDanceStart14V)
						{
							this.maidArray[num260].SetPos(this.dancePos[num260]);
							this.maidArray[num260].body0.transform.localRotation = this.danceRot[num260];
						}
						j = num260;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num261 = 0; num261 < this.maidCnt; num261 = j + 1)
					{
						if (this.maidArray[num261] && this.maidArray[num261].Visible && this.isDanceStart15V)
						{
							this.maidArray[num261].SetPos(this.dancePos[num261]);
							this.maidArray[num261].body0.transform.localRotation = this.danceRot[num261];
						}
						j = num261;
					}
					this.isDanceStart15V = false;
				}
				if (this.isShift)
				{
					if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
					{
						Vector3 vector = Vector3.zero;
						vector.x = 0.6f;
						this.maidArray[1].SetPos(vector);
						if (this.maidArray[2] && this.maidArray[2].Visible)
						{
							vector.x = -0.6f;
							this.maidArray[2].SetPos(vector);
						}
						if (this.maidArray[3] && this.maidArray[3].Visible)
						{
							vector.x = 1.2f;
							this.maidArray[3].SetPos(vector);
						}
						if (this.maidArray[4] && this.maidArray[4].Visible)
						{
							vector.x = -1.2f;
							this.maidArray[4].SetPos(vector);
						}
						if (this.maidArray[5] && this.maidArray[5].Visible)
						{
							vector.x = 1.8f;
							this.maidArray[5].SetPos(vector);
						}
						if (this.maidArray[6] && this.maidArray[6].Visible)
						{
							vector.x = -1.8f;
							this.maidArray[6].SetPos(vector);
						}
						if (this.maidArray[7] && this.maidArray[7].Visible)
						{
							vector.x = 2.4f;
							this.maidArray[7].SetPos(vector);
						}
						if (this.maidArray[8] && this.maidArray[8].Visible)
						{
							vector.x = -2.4f;
							this.maidArray[8].SetPos(vector);
						}
						if (this.maidArray[9] && this.maidArray[9].Visible)
						{
							vector.x = 3f;
							this.maidArray[9].SetPos(vector);
						}
						if (this.maidArray[10] && this.maidArray[10].Visible)
						{
							vector.x = -3f;
							this.maidArray[10].SetPos(vector);
						}
						if (this.maidArray[11] && this.maidArray[11].Visible)
						{
							vector.x = 3.6f;
							this.maidArray[11].SetPos(vector);
						}
						if (this.maidArray[12] && this.maidArray[12].Visible)
						{
							vector.x = -3.6f;
							this.maidArray[12].SetPos(vector);
						}
						if (this.maidArray[13] && this.maidArray[13].Visible)
						{
							vector.x = 4.2f;
							this.maidArray[13].SetPos(vector);
						}
					}
					this.isDanceStart1K = true;
					for (int num262 = 0; num262 < this.maidCnt; num262 = j + 1)
					{
						this.maidArray[num262].SetRot(new Vector3(this.maidArray[num262].body0.transform.localRotation.x, this.maidArray[num262].body0.transform.localRotation.y + 90f, this.maidArray[num262].body0.transform.localRotation.z));
						this.maidArray[num262].SetPos(new Vector3(this.maidArray[num262].body0.transform.position.x + 1f, this.maidArray[num262].body0.transform.position.y, this.maidArray[num262].body0.transform.position.z + 4f));
						string text46 = "handitem,HanditemL_Karaoke_Mike_I_.menu";
						int num263 = num262;
						Maid maid15 = this.maidArray[num262];
						if (!this.isVR)
						{
							this.delCount[num263] = 20;
							if (this.goSlot[(int)this.selectList[num263]] != null)
							{
								this.maidArray[num263].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num263]]);
								for (int num264 = 0; num264 < this.bodyHit[(int)this.selectList[num263]].Count; num264 = j + 1)
								{
									this.maidArray[num263].body0.goSlot[num264].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num263]][num264];
									j = num264;
								}
							}
						}
						string[] array89 = new string[2];
						array89 = text46.Split(new char[]
						{
							','
						});
						maid15.DelProp(MPN.acckami, true);
						maid15.DelProp(MPN.accha, true);
						maid15.DelProp(MPN.acchead, true);
						maid15.DelProp(MPN.accvag, true);
						maid15.DelProp(MPN.megane, true);
						if (array89[0] != "")
						{
							maid15.SetProp(array89[0], array89[1], 0, true, false);
						}
						maid15.AllProcPropSeqStart();
						j = num262;
					}
				}
				this.isDance = true;
				this.isDanceStart1 = true;
			}
			if (this.isF2)
			{
				TextAsset textAsset2 = Resources.Load("SceneDance/dance_EtY_m0") as TextAsset;
				string text47 = textAsset2.text;
				text47 = Regex.Replace(text47, "(\\r|\\n| )", string.Empty);
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num265 = 0; num265 < this.maidCnt; num265 = j + 1)
				{
					if (!this.maidArray[num265].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d_001_f1.anm"))
					{
						this.maidArray[num265].body0.LoadAnime("dance_cm3d_001_f1.anm", GameUty.FileSystem, "dance_cm3d_001_f1.anm", false, false);
					}
					this.m_baKuchipakuPattern[num265] = Convert.FromBase64String(text47);
					j = num265;
				}
				GameMain.Instance.SoundMgr.PlayDanceBGM("entrancetoyou_short.ogg", 0f, false);
				for (int num266 = 0; num266 < this.maidCnt; num266 = j + 1)
				{
					this.maidArray[num266].StartKuchipakuPattern(0f, text47, true);
					this.isStop[num266] = false;
					this.isLock[num266] = false;
					this.pHandL[num266] = 0;
					this.pHandR[num266] = 0;
					this.muneIKL[num266] = false;
					this.muneIKR[num266] = false;
					if (!this.isVR)
					{
						this.maidArray[num266].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num266]];
						this.maidArray[num266].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num266]];
					}
					j = num266;
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num267 = 0; num267 < this.maidCnt; num267 = j + 1)
				{
					this.danceFace[num267] = 0f;
					j = num267;
				}
				if (this.isDanceStart7V)
				{
					for (int num268 = 0; num268 < this.maidCnt; num268 = j + 1)
					{
						if (this.maidArray[num268] && this.maidArray[num268].Visible && this.isDanceStart7V)
						{
							this.maidArray[num268].SetPos(this.dancePos[num268]);
							this.maidArray[num268].body0.transform.localRotation = this.danceRot[num268];
						}
						j = num268;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num269 = 0; num269 < this.maidCnt; num269 = j + 1)
					{
						if (this.maidArray[num269] && this.maidArray[num269].Visible && this.isDanceStart8V)
						{
							this.maidArray[num269].SetPos(this.dancePos[num269]);
							this.maidArray[num269].body0.transform.localRotation = this.danceRot[num269];
						}
						j = num269;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num270 = 0; num270 < this.maidCnt; num270 = j + 1)
					{
						if (this.maidArray[num270] && this.maidArray[num270].Visible && this.isDanceStart11V)
						{
							this.maidArray[num270].SetPos(this.dancePos[num270]);
							this.maidArray[num270].body0.transform.localRotation = this.danceRot[num270];
						}
						j = num270;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num271 = 0; num271 < this.maidCnt; num271 = j + 1)
					{
						if (this.maidArray[num271] && this.maidArray[num271].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num271].SetPos(this.dancePos[num271]);
							this.maidArray[num271].body0.transform.localRotation = this.danceRot[num271];
							int num272 = num271;
							if (!this.isVR)
							{
								this.delCount[num272] = 20;
								if (this.goSlot[(int)this.selectList[num272]] != null)
								{
									this.maidArray[num272].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num272]]);
									for (int num273 = 0; num273 < this.bodyHit[(int)this.selectList[num272]].Count; num273 = j + 1)
									{
										this.maidArray[num272].body0.goSlot[num273].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num272]][num273];
										j = num273;
									}
								}
							}
							Maid maid16 = this.maidArray[num271];
							maid16.DelProp(MPN.acckami, true);
							maid16.DelProp(MPN.accha, true);
							maid16.DelProp(MPN.acchead, true);
							maid16.DelProp(MPN.accvag, true);
							maid16.DelProp(MPN.megane, true);
							maid16.AllProcPropSeqStart();
						}
						j = num271;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num274 = 0; num274 < this.maidCnt; num274 = j + 1)
					{
						if (this.maidArray[num274] && this.maidArray[num274].Visible && this.isDanceStart14V)
						{
							this.maidArray[num274].SetPos(this.dancePos[num274]);
							this.maidArray[num274].body0.transform.localRotation = this.danceRot[num274];
						}
						j = num274;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num275 = 0; num275 < this.maidCnt; num275 = j + 1)
					{
						if (this.maidArray[num275] && this.maidArray[num275].Visible && this.isDanceStart15V)
						{
							this.maidArray[num275].SetPos(this.dancePos[num275]);
							this.maidArray[num275].body0.transform.localRotation = this.danceRot[num275];
						}
						j = num275;
					}
					this.isDanceStart15V = false;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				this.isDance = true;
				this.isDanceStart2 = true;
				this.isF2 = false;
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha2)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Keypad2)))
			{
				GameMain.Instance.SoundMgr.StopBGM(0f);
				this.isF2 = true;
			}
			if (this.isF3)
			{
				TextAsset textAsset3 = Resources.Load("SceneDance/dance_Scl_m0") as TextAsset;
				string text48 = textAsset3.text;
				text48 = Regex.Replace(text48, "(\\r|\\n| )", string.Empty);
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num276 = 0; num276 < this.maidCnt; num276 = j + 1)
				{
					if (!this.isShift)
					{
						if (!this.maidArray[num276].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d_002_end_f1.anm"))
						{
							this.maidArray[num276].body0.LoadAnime("dance_cm3d_002_end_f1.anm", GameUty.FileSystem, "dance_cm3d_002_end_f1.anm", false, false);
						}
					}
					else
					{
						if (!this.maidArray[num276].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_kara_001_sl_f1.anm"))
						{
							this.maidArray[num276].body0.LoadAnime("dance_cm3d2_kara_001_sl_f1.anm", GameUty.FileSystem, "dance_cm3d2_kara_001_sl_f1.anm", false, false);
						}
						textAsset3 = (Resources.Load("SceneDance/scaret_kara_voice_2") as TextAsset);
						text48 = textAsset3.text;
						text48 = Regex.Replace(text48, "(\\r|\\n| )", string.Empty);
						if (!this.isDanceStart1K && !this.isDanceStart3K && !this.isDanceStart4K && !this.isDanceStart5K && !this.isDanceStart6K && !this.isDanceStart9K && !this.isDanceStart13K)
						{
							this.dancePos[num276] = this.maidArray[num276].transform.position;
							this.danceRot[num276] = this.maidArray[num276].transform.localRotation;
						}
					}
					this.m_baKuchipakuPattern[num276] = Convert.FromBase64String(text48);
					j = num276;
				}
				if (!this.isShift)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("scarlet leap_short.ogg", 0f, false);
				}
				else
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("scarlet leap_short_kara_1.ogg", 0f, false);
				}
				for (int num277 = 0; num277 < this.maidCnt; num277 = j + 1)
				{
					this.maidArray[num277].StartKuchipakuPattern(0f, text48, true);
					this.isStop[num277] = false;
					this.isLock[num277] = false;
					this.pHandL[num277] = 0;
					this.pHandR[num277] = 0;
					this.muneIKL[num277] = false;
					this.muneIKR[num277] = false;
					if (!this.isVR)
					{
						this.maidArray[num277].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num277]];
						this.maidArray[num277].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num277]];
					}
					j = num277;
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num278 = 0; num278 < this.maidCnt; num278 = j + 1)
				{
					this.danceFace[num278] = 0f;
					j = num278;
				}
				if (this.isDanceStart7V)
				{
					for (int num279 = 0; num279 < this.maidCnt; num279 = j + 1)
					{
						if (this.maidArray[num279] && this.maidArray[num279].Visible && this.isDanceStart7V)
						{
							this.maidArray[num279].SetPos(this.dancePos[num279]);
							this.maidArray[num279].body0.transform.localRotation = this.danceRot[num279];
						}
						j = num279;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num280 = 0; num280 < this.maidCnt; num280 = j + 1)
					{
						if (this.maidArray[num280] && this.maidArray[num280].Visible && this.isDanceStart8V)
						{
							this.maidArray[num280].SetPos(this.dancePos[num280]);
							this.maidArray[num280].body0.transform.localRotation = this.danceRot[num280];
						}
						j = num280;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num281 = 0; num281 < this.maidCnt; num281 = j + 1)
					{
						if (this.maidArray[num281] && this.maidArray[num281].Visible && this.isDanceStart11V)
						{
							this.maidArray[num281].SetPos(this.dancePos[num281]);
							this.maidArray[num281].body0.transform.localRotation = this.danceRot[num281];
						}
						j = num281;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num282 = 0; num282 < this.maidCnt; num282 = j + 1)
					{
						if (this.maidArray[num282] && this.maidArray[num282].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num282].SetPos(this.dancePos[num282]);
							this.maidArray[num282].body0.transform.localRotation = this.danceRot[num282];
							int num283 = num282;
							if (!this.isVR)
							{
								this.delCount[num283] = 20;
								if (this.goSlot[(int)this.selectList[num283]] != null)
								{
									this.maidArray[num283].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num283]]);
									for (int num284 = 0; num284 < this.bodyHit[(int)this.selectList[num283]].Count; num284 = j + 1)
									{
										this.maidArray[num283].body0.goSlot[num284].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num283]][num284];
										j = num284;
									}
								}
							}
							Maid maid17 = this.maidArray[num282];
							maid17.DelProp(MPN.acckami, true);
							maid17.DelProp(MPN.accha, true);
							maid17.DelProp(MPN.acchead, true);
							maid17.DelProp(MPN.accvag, true);
							maid17.DelProp(MPN.megane, true);
							maid17.AllProcPropSeqStart();
						}
						j = num282;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num285 = 0; num285 < this.maidCnt; num285 = j + 1)
					{
						if (this.maidArray[num285] && this.maidArray[num285].Visible && this.isDanceStart14V)
						{
							this.maidArray[num285].SetPos(this.dancePos[num285]);
							this.maidArray[num285].body0.transform.localRotation = this.danceRot[num285];
						}
						j = num285;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num286 = 0; num286 < this.maidCnt; num286 = j + 1)
					{
						if (this.maidArray[num286] && this.maidArray[num286].Visible && this.isDanceStart15V)
						{
							this.maidArray[num286].SetPos(this.dancePos[num286]);
							this.maidArray[num286].body0.transform.localRotation = this.danceRot[num286];
						}
						j = num286;
					}
					this.isDanceStart15V = false;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				if (this.isShift)
				{
					this.isDanceStart3K = true;
					for (int num287 = 0; num287 < this.maidCnt; num287 = j + 1)
					{
						this.maidArray[num287].SetRot(new Vector3(this.maidArray[num287].body0.transform.localRotation.x, this.maidArray[num287].body0.transform.localRotation.y + 90f, this.maidArray[num287].body0.transform.localRotation.z));
						this.maidArray[num287].SetPos(new Vector3(this.maidArray[num287].body0.transform.position.x + 1f, this.maidArray[num287].body0.transform.position.y, this.maidArray[num287].body0.transform.position.z + 4f));
						string text49 = "handitem,HanditemL_Karaoke_Mike_I_.menu";
						int num288 = num287;
						Maid maid18 = this.maidArray[num287];
						if (!this.isVR)
						{
							this.delCount[num288] = 20;
							if (this.goSlot[(int)this.selectList[num288]] != null)
							{
								this.maidArray[num288].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num288]]);
								for (int num289 = 0; num289 < this.bodyHit[(int)this.selectList[num288]].Count; num289 = j + 1)
								{
									this.maidArray[num288].body0.goSlot[num289].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num288]][num289];
									j = num289;
								}
							}
						}
						string[] array90 = new string[2];
						array90 = text49.Split(new char[]
						{
							','
						});
						maid18.DelProp(MPN.acckami, true);
						maid18.DelProp(MPN.accha, true);
						maid18.DelProp(MPN.acchead, true);
						maid18.DelProp(MPN.accvag, true);
						maid18.DelProp(MPN.megane, true);
						if (array90[0] != "")
						{
							maid18.SetProp(array90[0], array90[1], 0, true, false);
						}
						maid18.AllProcPropSeqStart();
						j = num287;
					}
				}
				this.isDance = true;
				this.isDanceStart3 = true;
				this.isF3 = false;
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha3)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Keypad3)))
			{
				GameMain.Instance.SoundMgr.StopBGM(0f);
				this.isF3 = true;
				if (this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.isShift = true;
				}
			}
			if (this.isSF1 || this.isSF2 || this.isSF3)
			{
				TextAsset textAsset4 = Resources.Load("SceneDance/dance_SmT_m0") as TextAsset;
				string text50 = textAsset4.text;
				text50 = Regex.Replace(text50, "(\\r|\\n| )", string.Empty);
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num290 = 0; num290 < this.maidCnt; num290 = j + 1)
				{
					if (!this.isShift)
					{
						if (!this.maidArray[num290].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_002_smt_f.anm"))
						{
							this.maidArray[num290].body0.LoadAnime("dance_cm3d2_002_smt_f.anm", GameUty.FileSystem, "dance_cm3d2_002_smt_f.anm", false, false);
						}
					}
					else
					{
						if (!this.maidArray[num290].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_kara02_001_smt_f1.anm"))
						{
							this.maidArray[num290].body0.LoadAnime("dance_cm3d2_kara02_001_smt_f1.anm", GameUty.FileSystem, "dance_cm3d2_kara02_001_smt_f1.anm", false, false);
						}
						textAsset4 = (Resources.Load("SceneDance/stellar my tears_kara_voice") as TextAsset);
						text50 = textAsset4.text;
						text50 = Regex.Replace(text50, "(\\r|\\n| )", string.Empty);
						if (!this.isDanceStart1K && !this.isDanceStart3K && !this.isDanceStart4K && !this.isDanceStart5K && !this.isDanceStart6K && !this.isDanceStart9K && !this.isDanceStart13K)
						{
							this.dancePos[num290] = this.maidArray[num290].transform.position;
							this.danceRot[num290] = this.maidArray[num290].transform.localRotation;
						}
					}
					this.m_baKuchipakuPattern[num290] = Convert.FromBase64String(text50);
					j = num290;
				}
				if (!this.isShift)
				{
					if (this.isSF1)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("stellarmytears_short.ogg", 0f, false);
					}
					if (this.isSF2)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("stellarmytears_short2.ogg", 0f, false);
					}
					if (this.isSF3)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("stellarmytears_short3.ogg", 0f, false);
					}
				}
				else
				{
					if (this.isSF1)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("stellarmytears_short_nao_kara.ogg", 0f, false);
					}
					if (this.isSF2)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("stellarmytears_short_sasaki_kara.ogg", 0f, false);
					}
					if (this.isSF3)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("stellarmytears_short_misato_kara.ogg", 0f, false);
					}
				}
				for (int num291 = 0; num291 < this.maidCnt; num291 = j + 1)
				{
					this.maidArray[num291].StartKuchipakuPattern(0f, text50, true);
					this.isStop[num291] = false;
					this.isLock[num291] = false;
					this.pHandL[num291] = 0;
					this.pHandR[num291] = 0;
					this.muneIKL[num291] = false;
					this.muneIKR[num291] = false;
					if (!this.isVR)
					{
						this.maidArray[num291].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num291]];
						this.maidArray[num291].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num291]];
					}
					j = num291;
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num292 = 0; num292 < this.maidCnt; num292 = j + 1)
				{
					this.danceFace[num292] = 0f;
					j = num292;
				}
				if (this.isDanceStart7V)
				{
					for (int num293 = 0; num293 < this.maidCnt; num293 = j + 1)
					{
						if (this.maidArray[num293] && this.maidArray[num293].Visible && this.isDanceStart7V)
						{
							this.maidArray[num293].SetPos(this.dancePos[num293]);
							this.maidArray[num293].body0.transform.localRotation = this.danceRot[num293];
						}
						j = num293;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num294 = 0; num294 < this.maidCnt; num294 = j + 1)
					{
						if (this.maidArray[num294] && this.maidArray[num294].Visible && this.isDanceStart8V)
						{
							this.maidArray[num294].SetPos(this.dancePos[num294]);
							this.maidArray[num294].body0.transform.localRotation = this.danceRot[num294];
						}
						j = num294;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num295 = 0; num295 < this.maidCnt; num295 = j + 1)
					{
						if (this.maidArray[num295] && this.maidArray[num295].Visible && this.isDanceStart11V)
						{
							this.maidArray[num295].SetPos(this.dancePos[num295]);
							this.maidArray[num295].body0.transform.localRotation = this.danceRot[num295];
						}
						j = num295;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num296 = 0; num296 < this.maidCnt; num296 = j + 1)
					{
						if (this.maidArray[num296] && this.maidArray[num296].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num296].SetPos(this.dancePos[num296]);
							this.maidArray[num296].body0.transform.localRotation = this.danceRot[num296];
							int num297 = num296;
							if (!this.isVR)
							{
								this.delCount[num297] = 20;
								if (this.goSlot[(int)this.selectList[num297]] != null)
								{
									this.maidArray[num297].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num297]]);
									for (int num298 = 0; num298 < this.bodyHit[(int)this.selectList[num297]].Count; num298 = j + 1)
									{
										this.maidArray[num297].body0.goSlot[num298].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num297]][num298];
										j = num298;
									}
								}
							}
							Maid maid19 = this.maidArray[num296];
							maid19.DelProp(MPN.acckami, true);
							maid19.DelProp(MPN.accha, true);
							maid19.DelProp(MPN.acchead, true);
							maid19.DelProp(MPN.accvag, true);
							maid19.DelProp(MPN.megane, true);
							maid19.AllProcPropSeqStart();
						}
						j = num296;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num299 = 0; num299 < this.maidCnt; num299 = j + 1)
					{
						if (this.maidArray[num299] && this.maidArray[num299].Visible && this.isDanceStart14V)
						{
							this.maidArray[num299].SetPos(this.dancePos[num299]);
							this.maidArray[num299].body0.transform.localRotation = this.danceRot[num299];
						}
						j = num299;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num300 = 0; num300 < this.maidCnt; num300 = j + 1)
					{
						if (this.maidArray[num300] && this.maidArray[num300].Visible && this.isDanceStart15V)
						{
							this.maidArray[num300].SetPos(this.dancePos[num300]);
							this.maidArray[num300].body0.transform.localRotation = this.danceRot[num300];
						}
						j = num300;
					}
					this.isDanceStart15V = false;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				if (this.isShift)
				{
					this.isDanceStart4K = true;
					for (int num301 = 0; num301 < this.maidCnt; num301 = j + 1)
					{
						this.maidArray[num301].SetRot(new Vector3(this.maidArray[num301].body0.transform.localRotation.x, this.maidArray[num301].body0.transform.localRotation.y + 90f, this.maidArray[num301].body0.transform.localRotation.z));
						this.maidArray[num301].SetPos(new Vector3(this.maidArray[num301].body0.transform.position.x + 1f, this.maidArray[num301].body0.transform.position.y, this.maidArray[num301].body0.transform.position.z + 4f));
						string text51 = "handitem,HanditemL_Karaoke_Mike_I_.menu";
						int num302 = num301;
						Maid maid20 = this.maidArray[num301];
						if (!this.isVR)
						{
							this.delCount[num302] = 20;
							if (this.goSlot[(int)this.selectList[num302]] != null)
							{
								this.maidArray[num302].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num302]]);
								for (int num303 = 0; num303 < this.bodyHit[(int)this.selectList[num302]].Count; num303 = j + 1)
								{
									this.maidArray[num302].body0.goSlot[num303].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num302]][num303];
									j = num303;
								}
							}
						}
						string[] array91 = new string[2];
						array91 = text51.Split(new char[]
						{
							','
						});
						maid20.DelProp(MPN.acckami, true);
						maid20.DelProp(MPN.accha, true);
						maid20.DelProp(MPN.acchead, true);
						maid20.DelProp(MPN.accvag, true);
						maid20.DelProp(MPN.megane, true);
						if (array91[0] != "")
						{
							maid20.SetProp(array91[0], array91[1], 0, true, false);
						}
						maid20.AllProcPropSeqStart();
						j = num301;
					}
				}
				this.isDance = true;
				this.isDanceStart4 = true;
				this.isSF1 = false;
				this.isSF2 = false;
				this.isSF3 = false;
			}
			if (this.isHS1 || this.isHS2 || this.isHS3)
			{
				TextAsset textAsset5 = Resources.Load("SceneDance/dance_Hhs_m0") as TextAsset;
				string text52 = textAsset5.text;
				text52 = Regex.Replace(text52, "(\\r|\\n| )", string.Empty);
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num304 = 0; num304 < this.maidCnt; num304 = j + 1)
				{
					if (!this.isShift)
					{
						if (!this.maidArray[num304].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_003_hs_f1.anm"))
						{
							this.maidArray[num304].body0.LoadAnime("dance_cm3d2_003_hs_f1.anm", GameUty.FileSystem, "dance_cm3d2_003_hs_f1.anm", false, false);
						}
					}
					else
					{
						if (!this.maidArray[num304].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_kara02_003_hs_f1.anm"))
						{
							this.maidArray[num304].body0.LoadAnime("dance_cm3d2_kara02_003_hs_f1.anm", GameUty.FileSystem, "dance_cm3d2_kara02_003_hs_f1.anm", false, false);
						}
						textAsset5 = (Resources.Load("SceneDance/happy_happy_scandal_kara_voice") as TextAsset);
						text52 = textAsset5.text;
						text52 = Regex.Replace(text52, "(\\r|\\n| )", string.Empty);
						if (!this.isDanceStart1K && !this.isDanceStart3K && !this.isDanceStart4K && !this.isDanceStart5K && !this.isDanceStart6K && !this.isDanceStart9K && !this.isDanceStart13K)
						{
							this.dancePos[num304] = this.maidArray[num304].transform.position;
							this.danceRot[num304] = this.maidArray[num304].transform.localRotation;
						}
					}
					this.m_baKuchipakuPattern[num304] = Convert.FromBase64String(text52);
					j = num304;
				}
				if (!this.isShift)
				{
					if (this.isHS1)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal1.ogg", 0f, false);
					}
					if (this.isHS2)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal2.ogg", 0f, false);
					}
					if (this.isHS3)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal3.ogg", 0f, false);
					}
				}
				else
				{
					if (this.isHS1)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("happyhappyscandal_short_nao_kara.ogg", 0f, false);
					}
					if (this.isHS2)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal_sasaki_kara.ogg", 0f, false);
					}
					if (this.isHS3)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal_misato_kara.ogg", 0f, false);
					}
				}
				for (int num305 = 0; num305 < this.maidCnt; num305 = j + 1)
				{
					this.maidArray[num305].StartKuchipakuPattern(0f, text52, true);
					this.isStop[num305] = false;
					this.isLock[num305] = false;
					this.pHandL[num305] = 0;
					this.pHandR[num305] = 0;
					this.muneIKL[num305] = false;
					this.muneIKR[num305] = false;
					if (!this.isVR)
					{
						this.maidArray[num305].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num305]];
						this.maidArray[num305].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num305]];
					}
					j = num305;
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num306 = 0; num306 < this.maidCnt; num306 = j + 1)
				{
					this.danceFace[num306] = 0f;
					j = num306;
				}
				if (this.isDanceStart7V)
				{
					for (int num307 = 0; num307 < this.maidCnt; num307 = j + 1)
					{
						if (this.maidArray[num307] && this.maidArray[num307].Visible && this.isDanceStart7V)
						{
							this.maidArray[num307].SetPos(this.dancePos[num307]);
							this.maidArray[num307].body0.transform.localRotation = this.danceRot[num307];
						}
						j = num307;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num308 = 0; num308 < this.maidCnt; num308 = j + 1)
					{
						if (this.maidArray[num308] && this.maidArray[num308].Visible && this.isDanceStart8V)
						{
							this.maidArray[num308].SetPos(this.dancePos[num308]);
							this.maidArray[num308].body0.transform.localRotation = this.danceRot[num308];
						}
						j = num308;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num309 = 0; num309 < this.maidCnt; num309 = j + 1)
					{
						if (this.maidArray[num309] && this.maidArray[num309].Visible && this.isDanceStart11V)
						{
							this.maidArray[num309].SetPos(this.dancePos[num309]);
							this.maidArray[num309].body0.transform.localRotation = this.danceRot[num309];
						}
						j = num309;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num310 = 0; num310 < this.maidCnt; num310 = j + 1)
					{
						if (this.maidArray[num310] && this.maidArray[num310].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num310].SetPos(this.dancePos[num310]);
							this.maidArray[num310].body0.transform.localRotation = this.danceRot[num310];
							int num311 = num310;
							if (!this.isVR)
							{
								this.delCount[num311] = 20;
								if (this.goSlot[(int)this.selectList[num311]] != null)
								{
									this.maidArray[num311].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num311]]);
									for (int num312 = 0; num312 < this.bodyHit[(int)this.selectList[num311]].Count; num312 = j + 1)
									{
										this.maidArray[num311].body0.goSlot[num312].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num311]][num312];
										j = num312;
									}
								}
							}
							Maid maid21 = this.maidArray[num310];
							maid21.DelProp(MPN.acckami, true);
							maid21.DelProp(MPN.accha, true);
							maid21.DelProp(MPN.acchead, true);
							maid21.DelProp(MPN.accvag, true);
							maid21.DelProp(MPN.megane, true);
							maid21.AllProcPropSeqStart();
						}
						j = num310;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num313 = 0; num313 < this.maidCnt; num313 = j + 1)
					{
						if (this.maidArray[num313] && this.maidArray[num313].Visible && this.isDanceStart14V)
						{
							this.maidArray[num313].SetPos(this.dancePos[num313]);
							this.maidArray[num313].body0.transform.localRotation = this.danceRot[num313];
						}
						j = num313;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num314 = 0; num314 < this.maidCnt; num314 = j + 1)
					{
						if (this.maidArray[num314] && this.maidArray[num314].Visible && this.isDanceStart15V)
						{
							this.maidArray[num314].SetPos(this.dancePos[num314]);
							this.maidArray[num314].body0.transform.localRotation = this.danceRot[num314];
						}
						j = num314;
					}
					this.isDanceStart15V = false;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				if (this.isShift)
				{
					this.isDanceStart6K = true;
					for (int num315 = 0; num315 < this.maidCnt; num315 = j + 1)
					{
						this.maidArray[num315].SetRot(new Vector3(this.maidArray[num315].body0.transform.localRotation.x, this.maidArray[num315].body0.transform.localRotation.y + 90f, this.maidArray[num315].body0.transform.localRotation.z));
						this.maidArray[num315].SetPos(new Vector3(this.maidArray[num315].body0.transform.position.x + 1f, this.maidArray[num315].body0.transform.position.y, this.maidArray[num315].body0.transform.position.z + 4f));
						string text53 = "handitem,HanditemL_Karaoke_Mike_I_.menu";
						int num316 = num315;
						Maid maid22 = this.maidArray[num315];
						if (!this.isVR)
						{
							this.delCount[num316] = 20;
							if (this.goSlot[(int)this.selectList[num316]] != null)
							{
								this.maidArray[num316].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num316]]);
								for (int num317 = 0; num317 < this.bodyHit[(int)this.selectList[num316]].Count; num317 = j + 1)
								{
									this.maidArray[num316].body0.goSlot[num317].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num316]][num317];
									j = num317;
								}
							}
						}
						string[] array92 = new string[2];
						array92 = text53.Split(new char[]
						{
							','
						});
						maid22.DelProp(MPN.acckami, true);
						maid22.DelProp(MPN.accha, true);
						maid22.DelProp(MPN.acchead, true);
						maid22.DelProp(MPN.accvag, true);
						maid22.DelProp(MPN.megane, true);
						if (array92[0] != "")
						{
							maid22.SetProp(array92[0], array92[1], 0, true, false);
						}
						maid22.AllProcPropSeqStart();
						j = num315;
					}
				}
				this.isDance = true;
				this.isDanceStart6 = true;
				this.isHS1 = false;
				this.isHS2 = false;
				this.isHS3 = false;
			}
			if (this.isHS4 || this.isHS5 || this.isHS6)
			{
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num318 = 0; num318 < this.maidCnt; num318 = j + 1)
				{
					TextAsset textAsset6 = Resources.Load("SceneDance/dance_Hhs_m0") as TextAsset;
					string text54 = "dance_cm3d2_003_hs_f1.anm";
					switch (num318)
					{
					case 1:
					case 3:
					case 5:
					case 7:
					case 9:
					case 11:
					case 13:
						text54 = "dance_cm3d2_003_hs_f2.anm";
						textAsset6 = (Resources.Load("SceneDance/dance_Hhs_m1") as TextAsset);
						break;
					}
					if (this.maidArray[num318] && this.maidArray[num318].Visible)
					{
						if (!this.maidArray[num318].body0.m_Bones.GetComponent<Animation>().GetClip(text54))
						{
							this.maidArray[num318].body0.LoadAnime(text54, GameUty.FileSystem, text54, false, false);
						}
						string text55 = textAsset6.text;
						text55 = Regex.Replace(text55, "(\\r|\\n| )", string.Empty);
						this.maidArray[num318].StartKuchipakuPattern(0f, text55, true);
						this.m_baKuchipakuPattern[num318] = Convert.FromBase64String(text55);
					}
					j = num318;
				}
				if (this.isHS4)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal1.ogg", 0f, false);
				}
				if (this.isHS5)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal2.ogg", 0f, false);
				}
				if (this.isHS6)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal3.ogg", 0f, false);
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num319 = 0; num319 < this.maidCnt; num319 = j + 1)
				{
					this.danceFace[num319] = 0f;
					j = num319;
				}
				if (this.isDanceStart7V)
				{
					for (int num320 = 0; num320 < this.maidCnt; num320 = j + 1)
					{
						if (this.maidArray[num320] && this.maidArray[num320].Visible && this.isDanceStart7V)
						{
							this.maidArray[num320].SetPos(this.dancePos[num320]);
							this.maidArray[num320].body0.transform.localRotation = this.danceRot[num320];
						}
						j = num320;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num321 = 0; num321 < this.maidCnt; num321 = j + 1)
					{
						if (this.maidArray[num321] && this.maidArray[num321].Visible && this.isDanceStart8V)
						{
							this.maidArray[num321].SetPos(this.dancePos[num321]);
							this.maidArray[num321].body0.transform.localRotation = this.danceRot[num321];
						}
						j = num321;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num322 = 0; num322 < this.maidCnt; num322 = j + 1)
					{
						if (this.maidArray[num322] && this.maidArray[num322].Visible && this.isDanceStart11V)
						{
							this.maidArray[num322].SetPos(this.dancePos[num322]);
							this.maidArray[num322].body0.transform.localRotation = this.danceRot[num322];
						}
						j = num322;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num323 = 0; num323 < this.maidCnt; num323 = j + 1)
					{
						if (this.maidArray[num323] && this.maidArray[num323].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num323].SetPos(this.dancePos[num323]);
							this.maidArray[num323].body0.transform.localRotation = this.danceRot[num323];
							int num324 = num323;
							if (!this.isVR)
							{
								this.delCount[num324] = 20;
								if (this.goSlot[(int)this.selectList[num324]] != null)
								{
									this.maidArray[num324].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num324]]);
									for (int num325 = 0; num325 < this.bodyHit[(int)this.selectList[num324]].Count; num325 = j + 1)
									{
										this.maidArray[num324].body0.goSlot[num325].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num324]][num325];
										j = num325;
									}
								}
							}
							Maid maid23 = this.maidArray[num323];
							maid23.DelProp(MPN.acckami, true);
							maid23.DelProp(MPN.accha, true);
							maid23.DelProp(MPN.acchead, true);
							maid23.DelProp(MPN.accvag, true);
							maid23.DelProp(MPN.megane, true);
							maid23.AllProcPropSeqStart();
						}
						j = num323;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num326 = 0; num326 < this.maidCnt; num326 = j + 1)
					{
						if (this.maidArray[num326] && this.maidArray[num326].Visible && this.isDanceStart14V)
						{
							this.maidArray[num326].SetPos(this.dancePos[num326]);
							this.maidArray[num326].body0.transform.localRotation = this.danceRot[num326];
						}
						j = num326;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num327 = 0; num327 < this.maidCnt; num327 = j + 1)
					{
						if (this.maidArray[num327] && this.maidArray[num327].Visible && this.isDanceStart15V)
						{
							this.maidArray[num327].SetPos(this.dancePos[num327]);
							this.maidArray[num327].body0.transform.localRotation = this.danceRot[num327];
						}
						j = num327;
					}
					this.isDanceStart15V = false;
				}
				for (int num328 = 0; num328 < this.maidCnt; num328 = j + 1)
				{
					this.isStop[num328] = false;
					this.isLock[num328] = false;
					this.pHandL[num328] = 0;
					this.pHandR[num328] = 0;
					this.muneIKL[num328] = false;
					this.muneIKR[num328] = false;
					if (!this.isVR)
					{
						this.maidArray[num328].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num328]];
						this.maidArray[num328].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num328]];
					}
					if (this.maidArray[num328].transform.position.y != 100f)
					{
						this.dancePos[num328] = this.maidArray[num328].transform.position;
					}
					else
					{
						this.dancePos[num328] = new Vector3(this.maidArray[num328].transform.position.x, 0f, this.maidArray[num328].transform.position.z);
					}
					this.danceRot[num328] = this.maidArray[num328].transform.localRotation;
					j = num328;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible)
				{
					this.maidArray[1].SetPos(new Vector3(this.maidArray[0].transform.position.x, 100f, this.maidArray[0].transform.position.z));
					this.maidArray[1].body0.transform.localRotation = this.maidArray[0].body0.transform.localRotation;
				}
				if (this.maidArray[3] && this.maidArray[3].Visible)
				{
					this.maidArray[3].SetPos(new Vector3(this.maidArray[2].transform.position.x, 100f, this.maidArray[2].transform.position.z));
					this.maidArray[3].body0.transform.localRotation = this.maidArray[2].body0.transform.localRotation;
				}
				if (this.maidArray[5] && this.maidArray[5].Visible)
				{
					this.maidArray[5].SetPos(new Vector3(this.maidArray[4].transform.position.x, 100f, this.maidArray[4].transform.position.z));
					this.maidArray[5].body0.transform.localRotation = this.maidArray[4].body0.transform.localRotation;
				}
				if (this.maidArray[7] && this.maidArray[7].Visible)
				{
					this.maidArray[7].SetPos(new Vector3(this.maidArray[6].transform.position.x, 100f, this.maidArray[6].transform.position.z));
					this.maidArray[7].body0.transform.localRotation = this.maidArray[6].body0.transform.localRotation;
				}
				if (this.maidArray[9] && this.maidArray[9].Visible)
				{
					this.maidArray[9].SetPos(new Vector3(this.maidArray[8].transform.position.x, 100f, this.maidArray[8].transform.position.z));
					this.maidArray[9].body0.transform.localRotation = this.maidArray[8].body0.transform.localRotation;
				}
				if (this.maidArray[11] && this.maidArray[11].Visible)
				{
					this.maidArray[11].SetPos(new Vector3(this.maidArray[10].transform.position.x, 100f, this.maidArray[10].transform.position.z));
					this.maidArray[11].body0.transform.localRotation = this.maidArray[10].body0.transform.localRotation;
				}
				if (this.maidArray[13] && this.maidArray[13].Visible)
				{
					this.maidArray[13].SetPos(new Vector3(this.maidArray[12].transform.position.x, 100f, this.maidArray[12].transform.position.z));
					this.maidArray[13].body0.transform.localRotation = this.maidArray[12].body0.transform.localRotation;
				}
				if (this.maidArray[2] && this.maidArray[2].Visible && this.maidArray[0].transform.position == this.maidArray[2].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				this.isDance = true;
				this.isDanceStart7 = true;
				this.isHS4 = false;
				this.isHS5 = false;
				this.isHS6 = false;
			}
			if (this.isHS7 || this.isHS8 || this.isHS9)
			{
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num329 = 0; num329 < this.maidCnt; num329 = j + 1)
				{
					string text56 = "dance_cm3d2_003_hs_f1.anm";
					TextAsset textAsset7 = Resources.Load("SceneDance/dance_Hhs_m0") as TextAsset;
					switch (num329)
					{
					case 1:
					case 5:
					case 9:
					case 13:
						text56 = "dance_cm3d2_003_hs_f2.anm";
						textAsset7 = (Resources.Load("SceneDance/dance_Hhs_m1") as TextAsset);
						break;
					case 2:
					case 6:
					case 10:
						text56 = "dance_cm3d2_003_hs_f3.anm";
						textAsset7 = (Resources.Load("SceneDance/dance_Hhs_m2") as TextAsset);
						break;
					case 3:
					case 7:
					case 11:
						text56 = "dance_cm3d2_003_hs_f4.anm";
						textAsset7 = (Resources.Load("SceneDance/dance_Hhs_m2") as TextAsset);
						break;
					}
					if (this.maidArray[num329] && this.maidArray[num329].Visible && !this.maidArray[num329].body0.m_Bones.GetComponent<Animation>().GetClip(text56))
					{
						this.maidArray[num329].body0.LoadAnime(text56, GameUty.FileSystem, text56, false, false);
					}
					string text57 = textAsset7.text;
					text57 = Regex.Replace(text57, "(\\r|\\n| )", string.Empty);
					this.maidArray[num329].StartKuchipakuPattern(0f, text57, true);
					this.m_baKuchipakuPattern[num329] = Convert.FromBase64String(text57);
					j = num329;
				}
				if (this.isHS7)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal1.ogg", 0f, false);
				}
				if (this.isHS8)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal2.ogg", 0f, false);
				}
				if (this.isHS9)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("happy_happy_scandal3.ogg", 0f, false);
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num330 = 0; num330 < this.maidCnt; num330 = j + 1)
				{
					this.danceFace[num330] = 0f;
					j = num330;
				}
				if (this.isDanceStart8V)
				{
					for (int num331 = 0; num331 < this.maidCnt; num331 = j + 1)
					{
						if (this.maidArray[num331] && this.maidArray[num331].Visible && this.isDanceStart8V)
						{
							this.maidArray[num331].SetPos(this.dancePos[num331]);
							this.maidArray[num331].body0.transform.localRotation = this.danceRot[num331];
						}
						j = num331;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				for (int num332 = 0; num332 < this.maidCnt; num332 = j + 1)
				{
					this.isStop[num332] = false;
					this.isLock[num332] = false;
					this.pHandL[num332] = 0;
					this.pHandR[num332] = 0;
					this.muneIKL[num332] = false;
					this.muneIKR[num332] = false;
					if (!this.isVR)
					{
						this.maidArray[num332].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num332]];
						this.maidArray[num332].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num332]];
					}
					if (this.maidArray[num332].transform.position.y != 100f)
					{
						this.dancePos[num332] = this.maidArray[num332].transform.position;
					}
					else
					{
						this.dancePos[num332] = new Vector3(this.maidArray[num332].transform.position.x, 0f, this.maidArray[num332].transform.position.z);
					}
					this.danceRot[num332] = this.maidArray[num332].transform.localRotation;
					j = num332;
				}
				if ((this.maidArray[0].transform.position.x == 0.3f || this.maidArray[0].transform.position.x == -0.3f) && this.maidArray[0].transform.position.y == 0f && this.maidArray[0].transform.position.z == 0f)
				{
					this.maidArray[0].SetPos(Vector3.zero);
					this.maidArray[0].SetRot(Vector3.zero);
				}
				if (this.maidArray[1] && this.maidArray[1].Visible)
				{
					this.maidArray[1].SetPos(new Vector3(this.maidArray[0].transform.position.x, 100f, this.maidArray[0].transform.position.z));
					this.maidArray[1].body0.transform.localRotation = this.maidArray[0].body0.transform.localRotation;
				}
				if (this.maidArray[2] && this.maidArray[2].Visible)
				{
					this.maidArray[2].SetPos(this.maidArray[0].transform.position);
					this.maidArray[2].body0.transform.localRotation = this.maidArray[0].body0.transform.localRotation;
				}
				if (this.maidArray[3] && this.maidArray[3].Visible)
				{
					this.maidArray[3].SetPos(this.maidArray[0].transform.position);
					this.maidArray[3].body0.transform.localRotation = this.maidArray[0].body0.transform.localRotation;
				}
				if (this.maidArray[5] && this.maidArray[5].Visible)
				{
					this.maidArray[5].SetPos(new Vector3(this.maidArray[4].transform.position.x, 100f, this.maidArray[4].transform.position.z));
					this.maidArray[5].body0.transform.localRotation = this.maidArray[4].body0.transform.localRotation;
				}
				if (this.maidArray[6] && this.maidArray[6].Visible)
				{
					this.maidArray[6].SetPos(this.maidArray[4].transform.position);
					this.maidArray[6].body0.transform.localRotation = this.maidArray[4].body0.transform.localRotation;
				}
				if (this.maidArray[7] && this.maidArray[7].Visible)
				{
					this.maidArray[7].SetPos(this.maidArray[4].transform.position);
					this.maidArray[7].body0.transform.localRotation = this.maidArray[4].body0.transform.localRotation;
				}
				if (this.maidArray[9] && this.maidArray[9].Visible)
				{
					this.maidArray[9].SetPos(new Vector3(this.maidArray[8].transform.position.x, 100f, this.maidArray[8].transform.position.z));
					this.maidArray[9].body0.transform.localRotation = this.maidArray[8].body0.transform.localRotation;
				}
				if (this.maidArray[10] && this.maidArray[10].Visible)
				{
					this.maidArray[10].SetPos(this.maidArray[8].transform.position);
					this.maidArray[10].body0.transform.localRotation = this.maidArray[8].body0.transform.localRotation;
				}
				if (this.maidArray[11] && this.maidArray[11].Visible)
				{
					this.maidArray[11].SetPos(this.maidArray[8].transform.position);
					this.maidArray[11].body0.transform.localRotation = this.maidArray[8].body0.transform.localRotation;
				}
				if (this.maidArray[13] && this.maidArray[13].Visible)
				{
					this.maidArray[13].SetPos(new Vector3(this.maidArray[12].transform.position.x, 100f, this.maidArray[12].transform.position.z));
					this.maidArray[13].body0.transform.localRotation = this.maidArray[12].body0.transform.localRotation;
				}
				if (this.maidArray[4] && this.maidArray[4].Visible && this.maidArray[0].transform.position == this.maidArray[4].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				this.isDance = true;
				this.isDanceStart8 = true;
				this.isHS7 = false;
				this.isHS8 = false;
				this.isHS9 = false;
			}
			if (this.isCF1)
			{
				TextAsset textAsset8 = Resources.Load("SceneDance/dance_RtY_m0") as TextAsset;
				string text58 = textAsset8.text;
				text58 = Regex.Replace(text58, "(\\r|\\n| )", string.Empty);
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num333 = 0; num333 < this.maidCnt; num333 = j + 1)
				{
					if (!this.isShift)
					{
						if (!this.maidArray[num333].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d_003_sp2_f1.anm"))
						{
							this.maidArray[num333].body0.LoadAnime("dance_cm3d_003_sp2_f1.anm", GameUty.FileSystem, "dance_cm3d_003_sp2_f1.anm", false, false);
						}
					}
					else
					{
						if (!this.maidArray[num333].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_kara02_002_rty_f1.anm"))
						{
							this.maidArray[num333].body0.LoadAnime("dance_cm3d2_kara02_002_rty_f1.anm", GameUty.FileSystem, "dance_cm3d2_kara02_002_rty_f1.anm", false, false);
						}
						textAsset8 = (Resources.Load("SceneDance/rhythmix to you_kara_voice") as TextAsset);
						text58 = textAsset8.text;
						text58 = Regex.Replace(text58, "(\\r|\\n| )", string.Empty);
						if (!this.isDanceStart1K && !this.isDanceStart3K && !this.isDanceStart4K && !this.isDanceStart5K && !this.isDanceStart6K && !this.isDanceStart9K && !this.isDanceStart13K)
						{
							this.dancePos[num333] = this.maidArray[num333].transform.position;
							this.danceRot[num333] = this.maidArray[num333].transform.localRotation;
						}
					}
					this.m_baKuchipakuPattern[num333] = Convert.FromBase64String(text58);
					j = num333;
				}
				if (!this.isShift)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("RhythmixToYou.ogg", 0f, false);
				}
				else
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("rhythmixtoyou_kara.ogg", 0f, false);
				}
				for (int num334 = 0; num334 < this.maidCnt; num334 = j + 1)
				{
					this.maidArray[num334].StartKuchipakuPattern(0f, text58, true);
					this.isStop[num334] = false;
					this.isLock[num334] = false;
					this.pHandL[num334] = 0;
					this.pHandR[num334] = 0;
					this.muneIKL[num334] = false;
					this.muneIKR[num334] = false;
					if (!this.isVR)
					{
						this.maidArray[num334].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num334]];
						this.maidArray[num334].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num334]];
					}
					j = num334;
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num335 = 0; num335 < this.maidCnt; num335 = j + 1)
				{
					this.danceFace[num335] = 0f;
					j = num335;
				}
				if (this.isDanceStart7V)
				{
					for (int num336 = 0; num336 < this.maidCnt; num336 = j + 1)
					{
						if (this.maidArray[num336] && this.maidArray[num336].Visible && this.isDanceStart7V)
						{
							this.maidArray[num336].SetPos(this.dancePos[num336]);
							this.maidArray[num336].body0.transform.localRotation = this.danceRot[num336];
						}
						j = num336;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num337 = 0; num337 < this.maidCnt; num337 = j + 1)
					{
						if (this.maidArray[num337] && this.maidArray[num337].Visible && this.isDanceStart8V)
						{
							this.maidArray[num337].SetPos(this.dancePos[num337]);
							this.maidArray[num337].body0.transform.localRotation = this.danceRot[num337];
						}
						j = num337;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num338 = 0; num338 < this.maidCnt; num338 = j + 1)
					{
						if (this.maidArray[num338] && this.maidArray[num338].Visible && this.isDanceStart11V)
						{
							this.maidArray[num338].SetPos(this.dancePos[num338]);
							this.maidArray[num338].body0.transform.localRotation = this.danceRot[num338];
						}
						j = num338;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num339 = 0; num339 < this.maidCnt; num339 = j + 1)
					{
						if (this.maidArray[num339] && this.maidArray[num339].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num339].SetPos(this.dancePos[num339]);
							this.maidArray[num339].body0.transform.localRotation = this.danceRot[num339];
							int num340 = num339;
							if (!this.isVR)
							{
								this.delCount[num340] = 20;
								if (this.goSlot[(int)this.selectList[num340]] != null)
								{
									this.maidArray[num340].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num340]]);
									for (int num341 = 0; num341 < this.bodyHit[(int)this.selectList[num340]].Count; num341 = j + 1)
									{
										this.maidArray[num340].body0.goSlot[num341].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num340]][num341];
										j = num341;
									}
								}
							}
							Maid maid24 = this.maidArray[num339];
							maid24.DelProp(MPN.acckami, true);
							maid24.DelProp(MPN.accha, true);
							maid24.DelProp(MPN.acchead, true);
							maid24.DelProp(MPN.accvag, true);
							maid24.DelProp(MPN.megane, true);
							maid24.AllProcPropSeqStart();
						}
						j = num339;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num342 = 0; num342 < this.maidCnt; num342 = j + 1)
					{
						if (this.maidArray[num342] && this.maidArray[num342].Visible && this.isDanceStart14V)
						{
							this.maidArray[num342].SetPos(this.dancePos[num342]);
							this.maidArray[num342].body0.transform.localRotation = this.danceRot[num342];
						}
						j = num342;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num343 = 0; num343 < this.maidCnt; num343 = j + 1)
					{
						if (this.maidArray[num343] && this.maidArray[num343].Visible && this.isDanceStart15V)
						{
							this.maidArray[num343].SetPos(this.dancePos[num343]);
							this.maidArray[num343].body0.transform.localRotation = this.danceRot[num343];
						}
						j = num343;
					}
					this.isDanceStart15V = false;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				if (this.isShift)
				{
					this.isDanceStart5K = true;
					for (int num344 = 0; num344 < this.maidCnt; num344 = j + 1)
					{
						this.maidArray[num344].SetRot(new Vector3(this.maidArray[num344].body0.transform.localRotation.x, this.maidArray[num344].body0.transform.localRotation.y + 90f, this.maidArray[num344].body0.transform.localRotation.z));
						this.maidArray[num344].SetPos(new Vector3(this.maidArray[num344].body0.transform.position.x + 1f, this.maidArray[num344].body0.transform.position.y, this.maidArray[num344].body0.transform.position.z + 4f));
						string text59 = "handitem,HanditemL_Karaoke_Mike_I_.menu";
						int num345 = num344;
						Maid maid25 = this.maidArray[num344];
						if (!this.isVR)
						{
							this.delCount[num345] = 20;
							if (this.goSlot[(int)this.selectList[num345]] != null)
							{
								this.maidArray[num345].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num345]]);
								for (int num346 = 0; num346 < this.bodyHit[(int)this.selectList[num345]].Count; num346 = j + 1)
								{
									this.maidArray[num345].body0.goSlot[num346].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num345]][num346];
									j = num346;
								}
							}
						}
						string[] array93 = new string[2];
						array93 = text59.Split(new char[]
						{
							','
						});
						maid25.DelProp(MPN.acckami, true);
						maid25.DelProp(MPN.accha, true);
						maid25.DelProp(MPN.acchead, true);
						maid25.DelProp(MPN.accvag, true);
						maid25.DelProp(MPN.megane, true);
						if (array93[0] != "")
						{
							maid25.SetProp(array93[0], array93[1], 0, true, false);
						}
						maid25.AllProcPropSeqStart();
						j = num344;
					}
				}
				this.isDance = true;
				this.isDanceStart5 = true;
				this.isCF1 = false;
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha4)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Keypad4)))
			{
				GameMain.Instance.SoundMgr.StopBGM(0f);
				this.isCF1 = true;
				if (this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.isShift = true;
				}
			}
			if (this.isKT1)
			{
				TextAsset textAsset9 = Resources.Load("SceneDance/dance_cktc_1_m0") as TextAsset;
				string text60 = textAsset9.text;
				text60 = Regex.Replace(text60, "(\\r|\\n| )", string.Empty);
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num347 = 0; num347 < this.maidCnt; num347 = j + 1)
				{
					if (!this.isShift)
					{
						if (!this.maidArray[num347].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d_004_kano_f1.anm"))
						{
							this.maidArray[num347].body0.LoadAnime("dance_cm3d_004_kano_f1.anm", GameUty.FileSystem, "dance_cm3d_004_kano_f1.anm", false, false);
						}
						this.danceName[num347] = "dance_cm3d_004_kano_f1.anm";
					}
					else
					{
						if (!this.maidArray[num347].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_kara_002_cktc_f1.anm"))
						{
							this.maidArray[num347].body0.LoadAnime("dance_cm3d2_kara_002_cktc_f1.anm", GameUty.FileSystem, "dance_cm3d2_kara_002_cktc_f1.anm", false, false);
						}
						textAsset9 = (Resources.Load("SceneDance/cktc_kara_voice_2") as TextAsset);
						text60 = textAsset9.text;
						text60 = Regex.Replace(text60, "(\\r|\\n| )", string.Empty);
						if (!this.isDanceStart1K && !this.isDanceStart3K && !this.isDanceStart4K && !this.isDanceStart5K && !this.isDanceStart6K && !this.isDanceStart9K && !this.isDanceStart13K)
						{
							this.dancePos[num347] = this.maidArray[num347].transform.position;
							this.danceRot[num347] = this.maidArray[num347].transform.localRotation;
						}
					}
					this.m_baKuchipakuPattern[num347] = Convert.FromBase64String(text60);
					j = num347;
				}
				if (!this.isShift)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("can_know_two_close.ogg", 0f, false);
				}
				else
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("canknowtwoclose_short_kara.ogg", 0f, false);
				}
				for (int num348 = 0; num348 < this.maidCnt; num348 = j + 1)
				{
					this.maidArray[num348].StartKuchipakuPattern(0f, text60, true);
					this.isStop[num348] = false;
					this.isLock[num348] = false;
					this.pHandL[num348] = 0;
					this.pHandR[num348] = 0;
					this.muneIKL[num348] = false;
					this.muneIKR[num348] = false;
					if (!this.isVR)
					{
						this.maidArray[num348].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num348]];
						this.maidArray[num348].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num348]];
					}
					j = num348;
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num349 = 0; num349 < this.maidCnt; num349 = j + 1)
				{
					this.danceFace[num349] = 0f;
					j = num349;
				}
				if (this.isDanceStart7V)
				{
					for (int num350 = 0; num350 < this.maidCnt; num350 = j + 1)
					{
						if (this.maidArray[num350] && this.maidArray[num350].Visible && this.isDanceStart7V)
						{
							this.maidArray[num350].SetPos(this.dancePos[num350]);
							this.maidArray[num350].body0.transform.localRotation = this.danceRot[num350];
						}
						j = num350;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num351 = 0; num351 < this.maidCnt; num351 = j + 1)
					{
						if (this.maidArray[num351] && this.maidArray[num351].Visible && this.isDanceStart8V)
						{
							this.maidArray[num351].SetPos(this.dancePos[num351]);
							this.maidArray[num351].body0.transform.localRotation = this.danceRot[num351];
						}
						j = num351;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num352 = 0; num352 < this.maidCnt; num352 = j + 1)
					{
						if (this.maidArray[num352] && this.maidArray[num352].Visible && this.isDanceStart11V)
						{
							this.maidArray[num352].SetPos(this.dancePos[num352]);
							this.maidArray[num352].body0.transform.localRotation = this.danceRot[num352];
						}
						j = num352;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num353 = 0; num353 < this.maidCnt; num353 = j + 1)
					{
						if (this.maidArray[num353] && this.maidArray[num353].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num353].SetPos(this.dancePos[num353]);
							this.maidArray[num353].body0.transform.localRotation = this.danceRot[num353];
							int num354 = num353;
							if (!this.isVR)
							{
								this.delCount[num354] = 20;
								if (this.goSlot[(int)this.selectList[num354]] != null)
								{
									this.maidArray[num354].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num354]]);
									for (int num355 = 0; num355 < this.bodyHit[(int)this.selectList[num354]].Count; num355 = j + 1)
									{
										this.maidArray[num354].body0.goSlot[num355].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num354]][num355];
										j = num355;
									}
								}
							}
							Maid maid26 = this.maidArray[num353];
							maid26.DelProp(MPN.acckami, true);
							maid26.DelProp(MPN.accha, true);
							maid26.DelProp(MPN.acchead, true);
							maid26.DelProp(MPN.accvag, true);
							maid26.DelProp(MPN.megane, true);
							maid26.AllProcPropSeqStart();
						}
						j = num353;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num356 = 0; num356 < this.maidCnt; num356 = j + 1)
					{
						if (this.maidArray[num356] && this.maidArray[num356].Visible && this.isDanceStart14V)
						{
							this.maidArray[num356].SetPos(this.dancePos[num356]);
							this.maidArray[num356].body0.transform.localRotation = this.danceRot[num356];
						}
						j = num356;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num357 = 0; num357 < this.maidCnt; num357 = j + 1)
					{
						if (this.maidArray[num357] && this.maidArray[num357].Visible && this.isDanceStart15V)
						{
							this.maidArray[num357].SetPos(this.dancePos[num357]);
							this.maidArray[num357].body0.transform.localRotation = this.danceRot[num357];
						}
						j = num357;
					}
					this.isDanceStart15V = false;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				if (this.maidArray[2] && this.maidArray[2].Visible && this.maidArray[0].transform.position == this.maidArray[2].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				if (this.isShift)
				{
					this.isDanceStart9K = true;
					for (int num358 = 0; num358 < this.maidCnt; num358 = j + 1)
					{
						this.maidArray[num358].SetRot(new Vector3(this.maidArray[num358].body0.transform.localRotation.x, this.maidArray[num358].body0.transform.localRotation.y + 90f, this.maidArray[num358].body0.transform.localRotation.z));
						this.maidArray[num358].SetPos(new Vector3(this.maidArray[num358].body0.transform.position.x + 1f, this.maidArray[num358].body0.transform.position.y, this.maidArray[num358].body0.transform.position.z + 4f));
						string text61 = "handitem,HanditemL_Karaoke_Mike_I_.menu";
						int num359 = num358;
						Maid maid27 = this.maidArray[num358];
						if (!this.isVR)
						{
							this.delCount[num359] = 20;
							if (this.goSlot[(int)this.selectList[num359]] != null)
							{
								this.maidArray[num359].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num359]]);
								for (int num360 = 0; num360 < this.bodyHit[(int)this.selectList[num359]].Count; num360 = j + 1)
								{
									this.maidArray[num359].body0.goSlot[num360].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num359]][num360];
									j = num360;
								}
							}
						}
						string[] array94 = new string[2];
						array94 = text61.Split(new char[]
						{
							','
						});
						maid27.DelProp(MPN.acckami, true);
						maid27.DelProp(MPN.accha, true);
						maid27.DelProp(MPN.acchead, true);
						maid27.DelProp(MPN.accvag, true);
						maid27.DelProp(MPN.megane, true);
						if (array94[0] != "")
						{
							maid27.SetProp(array94[0], array94[1], 0, true, false);
						}
						maid27.AllProcPropSeqStart();
						j = num358;
					}
				}
				this.isDance = true;
				this.isDanceStart9 = true;
				this.isKT1 = false;
			}
			if (this.isSS && (this.isSS1 || this.isSS2 || this.isSS3 || this.isSS4 || this.isSS5 || this.isSS6))
			{
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				if (this.isSS1)
				{
					this.nameK = "dance_BlD_m";
					this.nameA = "dance_cm3d21_002_bid_f";
					this.nameS = "bloomingdreaming_short";
					this.danceNo1 = 1;
					this.danceNo2 = 3;
					this.danceNo3 = 2;
				}
				if (this.isSS2)
				{
					this.nameK = "dance_KAD_m";
					this.nameA = "dance_cm3d21_003_kad_f";
					this.nameS = "kiminiaijodelicious_short";
					this.danceNo1 = 1;
					this.danceNo2 = 2;
					this.danceNo3 = 3;
				}
				if (this.isSS3)
				{
					this.nameK = "dance_LUM_m";
					this.nameA = "dance_cm3d21_004_lm_f";
					this.nameS = "luminousmoment_short";
					this.danceNo1 = 3;
					this.danceNo2 = 1;
					this.danceNo3 = 2;
				}
				if (this.isSS4)
				{
					this.nameK = "dance_NmF_m";
					this.nameA = "dance_cm3d21_001_nmf_f";
					this.nameS = "nightmagicfire_short";
					this.danceNo1 = 2;
					this.danceNo2 = 1;
					this.danceNo3 = 3;
				}
				if (this.isSS5)
				{
					this.nameK = "dance_MoE_m";
					this.nameA = "dance_cm3d21_005_moe_f";
					this.nameS = "melodyofempire_short";
					this.danceNo1 = 1;
					this.danceNo2 = 3;
					this.danceNo3 = 2;
				}
				if (this.isSS6)
				{
					this.nameK = "dance_NmF_m";
					this.nameA = "dance_cm3d21_kara_001_nmf_f";
					this.nameS = "nightmagicfire_short";
					this.danceNo1 = 1;
					this.danceNo2 = 1;
					this.danceNo3 = 1;
				}
				for (int num361 = 0; num361 < this.maidCnt; num361 = j + 1)
				{
					TextAsset textAsset10 = Resources.Load("SceneDance/" + this.nameK + (this.danceNo1 - 1)) as TextAsset;
					string text62 = this.nameA + this.danceNo1 + ".anm";
					switch (num361)
					{
					case 1:
					case 4:
					case 7:
					case 10:
					case 13:
						text62 = this.nameA + this.danceNo2 + ".anm";
						textAsset10 = (Resources.Load("SceneDance/" + this.nameK + (this.danceNo2 - 1)) as TextAsset);
						break;
					case 2:
					case 5:
					case 8:
					case 11:
						text62 = this.nameA + this.danceNo3 + ".anm";
						textAsset10 = (Resources.Load("SceneDance/" + this.nameK + (this.danceNo3 - 1)) as TextAsset);
						break;
					}
					if (this.maidArray[num361] && this.maidArray[num361].Visible)
					{
						if (!this.maidArray[num361].body0.m_Bones.GetComponent<Animation>().GetClip(text62))
						{
							this.maidArray[num361].body0.LoadAnime(text62, GameUty.FileSystem, text62, false, false);
						}
						string text63 = textAsset10.text;
						text63 = Regex.Replace(text63, "(\\r|\\n| )", string.Empty);
						this.maidArray[num361].StartKuchipakuPattern(0f, text63, true);
						this.m_baKuchipakuPattern[num361] = Convert.FromBase64String(text63);
					}
					j = num361;
				}
				GameMain.Instance.SoundMgr.PlayDanceBGM(this.nameS + ".ogg", 0f, false);
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num362 = 0; num362 < this.maidCnt; num362 = j + 1)
				{
					this.danceFace[num362] = 0f;
					j = num362;
				}
				if (this.isDanceStart7V)
				{
					for (int num363 = 0; num363 < this.maidCnt; num363 = j + 1)
					{
						if (this.maidArray[num363] && this.maidArray[num363].Visible && this.isDanceStart7V)
						{
							this.maidArray[num363].SetPos(this.dancePos[num363]);
							this.maidArray[num363].body0.transform.localRotation = this.danceRot[num363];
						}
						j = num363;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num364 = 0; num364 < this.maidCnt; num364 = j + 1)
					{
						if (this.maidArray[num364] && this.maidArray[num364].Visible && this.isDanceStart8V)
						{
							this.maidArray[num364].SetPos(this.dancePos[num364]);
							this.maidArray[num364].body0.transform.localRotation = this.danceRot[num364];
						}
						j = num364;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num365 = 0; num365 < this.maidCnt; num365 = j + 1)
					{
						if (this.maidArray[num365] && this.maidArray[num365].Visible && this.isDanceStart11V)
						{
							this.maidArray[num365].SetPos(this.dancePos[num365]);
							this.maidArray[num365].body0.transform.localRotation = this.danceRot[num365];
						}
						j = num365;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num366 = 0; num366 < this.maidCnt; num366 = j + 1)
					{
						if (this.maidArray[num366] && this.maidArray[num366].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num366].SetPos(this.dancePos[num366]);
							this.maidArray[num366].body0.transform.localRotation = this.danceRot[num366];
							int num367 = num366;
							if (!this.isVR)
							{
								this.delCount[num367] = 20;
								if (this.goSlot[(int)this.selectList[num367]] != null)
								{
									this.maidArray[num367].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num367]]);
									for (int num368 = 0; num368 < this.bodyHit[(int)this.selectList[num367]].Count; num368 = j + 1)
									{
										this.maidArray[num367].body0.goSlot[num368].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num367]][num368];
										j = num368;
									}
								}
							}
							Maid maid28 = this.maidArray[num366];
							maid28.DelProp(MPN.acckami, true);
							maid28.DelProp(MPN.accha, true);
							maid28.DelProp(MPN.acchead, true);
							maid28.DelProp(MPN.accvag, true);
							maid28.DelProp(MPN.megane, true);
							maid28.AllProcPropSeqStart();
						}
						j = num366;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num369 = 0; num369 < this.maidCnt; num369 = j + 1)
					{
						if (this.maidArray[num369] && this.maidArray[num369].Visible && this.isDanceStart14V)
						{
							this.maidArray[num369].SetPos(this.dancePos[num369]);
							this.maidArray[num369].body0.transform.localRotation = this.danceRot[num369];
						}
						j = num369;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num370 = 0; num370 < this.maidCnt; num370 = j + 1)
					{
						if (this.maidArray[num370] && this.maidArray[num370].Visible && this.isDanceStart15V)
						{
							this.maidArray[num370].SetPos(this.dancePos[num370]);
							this.maidArray[num370].body0.transform.localRotation = this.danceRot[num370];
						}
						j = num370;
					}
					this.isDanceStart15V = false;
				}
				for (int num371 = 0; num371 < this.maidCnt; num371 = j + 1)
				{
					this.isStop[num371] = false;
					this.isLock[num371] = false;
					this.pHandL[num371] = 0;
					this.pHandR[num371] = 0;
					this.muneIKL[num371] = false;
					this.muneIKR[num371] = false;
					if (!this.isVR)
					{
						this.maidArray[num371].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num371]];
						this.maidArray[num371].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num371]];
					}
					if (this.maidArray[num371].transform.position.y != 100f)
					{
						this.dancePos[num371] = this.maidArray[num371].transform.position;
					}
					else
					{
						this.dancePos[num371] = new Vector3(this.maidArray[num371].transform.position.x, 0f, this.maidArray[num371].transform.position.z);
					}
					this.danceRot[num371] = this.maidArray[num371].transform.localRotation;
					j = num371;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible)
				{
					this.maidArray[1].SetPos(new Vector3(this.maidArray[0].transform.position.x, this.maidArray[0].transform.position.y, this.maidArray[0].transform.position.z));
					this.maidArray[1].body0.transform.localRotation = this.maidArray[0].body0.transform.localRotation;
				}
				if (this.maidArray[2] && this.maidArray[2].Visible)
				{
					this.maidArray[2].SetPos(new Vector3(this.maidArray[0].transform.position.x, this.maidArray[0].transform.position.y, this.maidArray[0].transform.position.z));
					this.maidArray[2].body0.transform.localRotation = this.maidArray[0].body0.transform.localRotation;
				}
				if (this.maidArray[4] && this.maidArray[4].Visible)
				{
					this.maidArray[4].SetPos(new Vector3(this.maidArray[3].transform.position.x, this.maidArray[3].transform.position.y, this.maidArray[3].transform.position.z));
					this.maidArray[4].body0.transform.localRotation = this.maidArray[3].body0.transform.localRotation;
				}
				if (this.maidArray[5] && this.maidArray[5].Visible)
				{
					this.maidArray[5].SetPos(new Vector3(this.maidArray[3].transform.position.x, this.maidArray[3].transform.position.y, this.maidArray[3].transform.position.z));
					this.maidArray[5].body0.transform.localRotation = this.maidArray[3].body0.transform.localRotation;
				}
				if (this.maidArray[7] && this.maidArray[7].Visible)
				{
					this.maidArray[7].SetPos(new Vector3(this.maidArray[6].transform.position.x, this.maidArray[6].transform.position.y, this.maidArray[6].transform.position.z));
					this.maidArray[7].body0.transform.localRotation = this.maidArray[6].body0.transform.localRotation;
				}
				if (this.maidArray[8] && this.maidArray[8].Visible)
				{
					this.maidArray[8].SetPos(new Vector3(this.maidArray[6].transform.position.x, this.maidArray[6].transform.position.y, this.maidArray[6].transform.position.z));
					this.maidArray[8].body0.transform.localRotation = this.maidArray[6].body0.transform.localRotation;
				}
				if (this.maidArray[10] && this.maidArray[10].Visible)
				{
					this.maidArray[10].SetPos(new Vector3(this.maidArray[9].transform.position.x, this.maidArray[9].transform.position.y, this.maidArray[9].transform.position.z));
					this.maidArray[10].body0.transform.localRotation = this.maidArray[9].body0.transform.localRotation;
				}
				if (this.maidArray[11] && this.maidArray[11].Visible)
				{
					this.maidArray[11].SetPos(new Vector3(this.maidArray[9].transform.position.x, this.maidArray[9].transform.position.y, this.maidArray[9].transform.position.z));
					this.maidArray[11].body0.transform.localRotation = this.maidArray[9].body0.transform.localRotation;
				}
				if (this.maidArray[13] && this.maidArray[13].Visible)
				{
					this.maidArray[13].SetPos(new Vector3(this.maidArray[12].transform.position.x, this.maidArray[12].transform.position.y, this.maidArray[12].transform.position.z));
					this.maidArray[13].body0.transform.localRotation = this.maidArray[12].body0.transform.localRotation;
				}
				this.isSS = false;
				this.isDance = true;
				this.isDanceStart11 = true;
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha5)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Alpha5)))
			{
				GameMain.Instance.SoundMgr.StopBGM(0f);
				this.isSS1 = true;
				this.isSS2 = false;
				this.isSS3 = false;
				this.isSS4 = false;
				this.isSS5 = false;
				this.isSS6 = false;
				this.isSS = true;
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha6)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Alpha6)))
			{
				GameMain.Instance.SoundMgr.StopBGM(0f);
				this.isSS1 = false;
				this.isSS2 = true;
				this.isSS3 = false;
				this.isSS4 = false;
				this.isSS5 = false;
				this.isSS6 = false;
				this.isSS = true;
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha7)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Alpha7)))
			{
				GameMain.Instance.SoundMgr.StopBGM(0f);
				this.isSS1 = false;
				this.isSS2 = false;
				this.isSS3 = true;
				this.isSS4 = false;
				this.isSS5 = false;
				this.isSS6 = false;
				this.isSS = true;
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha8)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Alpha8)))
			{
				GameMain.Instance.SoundMgr.StopBGM(0f);
				this.isSS1 = false;
				this.isSS2 = false;
				this.isSS3 = false;
				this.isSS4 = true;
				this.isSS5 = false;
				this.isSS6 = false;
				this.isSS = true;
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha9)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Alpha9)))
			{
				GameMain.Instance.SoundMgr.StopBGM(0f);
				this.isSS1 = false;
				this.isSS2 = false;
				this.isSS3 = false;
				this.isSS4 = false;
				this.isSS5 = true;
				this.isSS6 = false;
				this.isSS = true;
			}
			if (this.isKHG1 || this.isKHG2)
			{
				TextAsset textAsset11 = Resources.Load("SceneDance/dance_KhG_m0") as TextAsset;
				string text64 = textAsset11.text;
				text64 = Regex.Replace(text64, "(\\r|\\n| )", string.Empty);
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num372 = 0; num372 < this.maidCnt; num372 = j + 1)
				{
					if (!this.maidArray[num372].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_005_khg_f.anm"))
					{
						this.maidArray[num372].body0.LoadAnime("dance_cm3d2_005_khg_f.anm", GameUty.FileSystem, "dance_cm3d2_005_khg_f.anm", false, false);
					}
					this.m_baKuchipakuPattern[num372] = Convert.FromBase64String(text64);
					j = num372;
				}
				if (this.isKHG1)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("kaikaku_short1.ogg", 0f, false);
				}
				if (this.isKHG2)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("kaikaku_short2.ogg", 0f, false);
				}
				for (int num373 = 0; num373 < this.maidCnt; num373 = j + 1)
				{
					this.maidArray[num373].StartKuchipakuPattern(0f, text64, true);
					this.isStop[num373] = false;
					this.isLock[num373] = false;
					this.pHandL[num373] = 0;
					this.pHandR[num373] = 0;
					this.muneIKL[num373] = false;
					this.muneIKR[num373] = false;
					if (!this.isVR)
					{
						this.maidArray[num373].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num373]];
						this.maidArray[num373].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num373]];
					}
					j = num373;
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num374 = 0; num374 < this.maidCnt; num374 = j + 1)
				{
					this.danceFace[num374] = 0f;
					j = num374;
				}
				if (this.isDanceStart7V)
				{
					for (int num375 = 0; num375 < this.maidCnt; num375 = j + 1)
					{
						if (this.maidArray[num375] && this.maidArray[num375].Visible && this.isDanceStart7V)
						{
							this.maidArray[num375].SetPos(this.dancePos[num375]);
							this.maidArray[num375].body0.transform.localRotation = this.danceRot[num375];
						}
						j = num375;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num376 = 0; num376 < this.maidCnt; num376 = j + 1)
					{
						if (this.maidArray[num376] && this.maidArray[num376].Visible && this.isDanceStart8V)
						{
							this.maidArray[num376].SetPos(this.dancePos[num376]);
							this.maidArray[num376].body0.transform.localRotation = this.danceRot[num376];
						}
						j = num376;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num377 = 0; num377 < this.maidCnt; num377 = j + 1)
					{
						if (this.maidArray[num377] && this.maidArray[num377].Visible && this.isDanceStart11V)
						{
							this.maidArray[num377].SetPos(this.dancePos[num377]);
							this.maidArray[num377].body0.transform.localRotation = this.danceRot[num377];
						}
						j = num377;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num378 = 0; num378 < this.maidCnt; num378 = j + 1)
					{
						if (this.maidArray[num378] && this.maidArray[num378].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num378].SetPos(this.dancePos[num378]);
							this.maidArray[num378].body0.transform.localRotation = this.danceRot[num378];
							int num379 = num378;
							if (!this.isVR)
							{
								this.delCount[num379] = 20;
								if (this.goSlot[(int)this.selectList[num379]] != null)
								{
									this.maidArray[num379].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num379]]);
									for (int num380 = 0; num380 < this.bodyHit[(int)this.selectList[num379]].Count; num380 = j + 1)
									{
										this.maidArray[num379].body0.goSlot[num380].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num379]][num380];
										j = num380;
									}
								}
							}
							Maid maid29 = this.maidArray[num378];
							maid29.DelProp(MPN.acckami, true);
							maid29.DelProp(MPN.accha, true);
							maid29.DelProp(MPN.acchead, true);
							maid29.DelProp(MPN.accvag, true);
							maid29.DelProp(MPN.megane, true);
							maid29.AllProcPropSeqStart();
						}
						j = num378;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num381 = 0; num381 < this.maidCnt; num381 = j + 1)
					{
						if (this.maidArray[num381] && this.maidArray[num381].Visible && this.isDanceStart14V)
						{
							this.maidArray[num381].SetPos(this.dancePos[num381]);
							this.maidArray[num381].body0.transform.localRotation = this.danceRot[num381];
						}
						j = num381;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num382 = 0; num382 < this.maidCnt; num382 = j + 1)
					{
						if (this.maidArray[num382] && this.maidArray[num382].Visible && this.isDanceStart15V)
						{
							this.maidArray[num382].SetPos(this.dancePos[num382]);
							this.maidArray[num382].body0.transform.localRotation = this.danceRot[num382];
						}
						j = num382;
					}
					this.isDanceStart15V = false;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				this.isDance = true;
				this.isDanceStart12 = true;
				this.isKHG1 = false;
				this.isKHG2 = false;
			}
			if (this.isDanceStart13Count > 0)
			{
				j = this.isDanceStart13Count;
				this.isDanceStart13Count = j + 1;
			}
			if (this.isDanceStart13Count == 1)
			{
				GameMain.Instance.SoundMgr.PlayDanceBGM("nightmagicfire_short.ogg", 0f, false);
				this.isDanceStart13Count = 0;
				TextAsset textAsset12 = Resources.Load("SceneDance/dance_SsN_m0") as TextAsset;
				string text65 = textAsset12.text;
				text65 = Regex.Replace(text65, "(\\r|\\n| )", string.Empty);
				for (int num383 = 0; num383 < this.maidCnt; num383 = j + 1)
				{
					this.maidArray[num383].StartKuchipakuPattern(0f, text65, true);
					j = num383;
				}
			}
			if ((this.isSN1 || this.isSN2 || this.isSN3) && this.isShift)
			{
				TextAsset textAsset13 = Resources.Load("SceneDance/dance_SsN_m0") as TextAsset;
				string text66 = textAsset13.text;
				text66 = Regex.Replace(text66, "(\\r|\\n| )", string.Empty);
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num384 = 0; num384 < this.maidCnt; num384 = j + 1)
				{
					if (!this.isShift)
					{
						if (!this.maidArray[num384].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d2_006_ssn_f1.anm"))
						{
							this.maidArray[num384].body0.LoadAnime("dance_cm3d2_006_ssn_f1.anm", GameUty.FileSystem, "dance_cm3d2_006_ssn_f1.anm", false, false);
						}
					}
					else
					{
						if (!this.maidArray[num384].body0.m_Bones.GetComponent<Animation>().GetClip("dance_cm3d21_kara_001_nmf_f1.anm"))
						{
							this.maidArray[num384].body0.LoadAnime("dance_cm3d21_kara_001_nmf_f1.anm", GameUty.FileSystem, "dance_cm3d21_kara_001_nmf_f1.anm", false, false);
						}
						textAsset13 = (Resources.Load("SceneDance/dance_NmF_m1") as TextAsset);
						string text67 = this.nameA + this.danceNo1 + ".anm";
						switch (num384)
						{
						case 1:
						case 4:
						case 7:
						case 10:
						case 13:
							textAsset13 = (Resources.Load("SceneDance/dance_NmF_m0") as TextAsset);
							break;
						case 2:
						case 5:
						case 8:
						case 11:
							textAsset13 = (Resources.Load("SceneDance/dance_NmF_m2") as TextAsset);
							break;
						}
						text66 = textAsset13.text;
						text66 = Regex.Replace(text66, "(\\r|\\n| )", string.Empty);
						if (!this.isDanceStart1K && !this.isDanceStart3K && !this.isDanceStart4K && !this.isDanceStart5K && !this.isDanceStart6K && !this.isDanceStart9K && !this.isDanceStart13K)
						{
							this.dancePos[num384] = this.maidArray[num384].transform.position;
							this.danceRot[num384] = this.maidArray[num384].transform.localRotation;
						}
					}
					this.m_baKuchipakuPattern[num384] = Convert.FromBase64String(text66);
					j = num384;
				}
				if (!this.isShift)
				{
					if (this.isSN1)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("nightmagicfire_short.ogg", 0f, false);
					}
					if (this.isSN2)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("sunshinenatsu2.ogg", 0f, false);
					}
					if (this.isSN3)
					{
						GameMain.Instance.SoundMgr.PlayDanceBGM("sunshinenatsu3.ogg", 0f, false);
					}
				}
				else
				{
					this.danceWait = 400;
					j = this.isDanceStart13Count;
					this.isDanceStart13Count = j + 1;
					GameMain.Instance.SoundMgr.PlayDanceBGM("nightmagicfire_short.ogg", 0f, false);
				}
				for (int num385 = 0; num385 < this.maidCnt; num385 = j + 1)
				{
					this.maidArray[num385].StartKuchipakuPattern(0f, text66, true);
					this.isStop[num385] = false;
					this.isLock[num385] = false;
					this.pHandL[num385] = 0;
					this.pHandR[num385] = 0;
					this.muneIKL[num385] = false;
					this.muneIKR[num385] = false;
					if (!this.isVR)
					{
						this.maidArray[num385].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num385]];
						this.maidArray[num385].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num385]];
					}
					j = num385;
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num386 = 0; num386 < this.maidCnt; num386 = j + 1)
				{
					this.danceFace[num386] = 0f;
					j = num386;
				}
				if (this.isDanceStart7V)
				{
					for (int num387 = 0; num387 < this.maidCnt; num387 = j + 1)
					{
						if (this.maidArray[num387] && this.maidArray[num387].Visible && this.isDanceStart7V)
						{
							this.maidArray[num387].SetPos(this.dancePos[num387]);
							this.maidArray[num387].body0.transform.localRotation = this.danceRot[num387];
						}
						j = num387;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num388 = 0; num388 < this.maidCnt; num388 = j + 1)
					{
						if (this.maidArray[num388] && this.maidArray[num388].Visible && this.isDanceStart8V)
						{
							this.maidArray[num388].SetPos(this.dancePos[num388]);
							this.maidArray[num388].body0.transform.localRotation = this.danceRot[num388];
						}
						j = num388;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num389 = 0; num389 < this.maidCnt; num389 = j + 1)
					{
						if (this.maidArray[num389] && this.maidArray[num389].Visible && this.isDanceStart11V)
						{
							this.maidArray[num389].SetPos(this.dancePos[num389]);
							this.maidArray[num389].body0.transform.localRotation = this.danceRot[num389];
						}
						j = num389;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num390 = 0; num390 < this.maidCnt; num390 = j + 1)
					{
						if (this.maidArray[num390] && this.maidArray[num390].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num390].SetPos(this.dancePos[num390]);
							this.maidArray[num390].body0.transform.localRotation = this.danceRot[num390];
							int num391 = num390;
							if (!this.isVR)
							{
								this.delCount[num391] = 20;
								if (this.goSlot[(int)this.selectList[num391]] != null)
								{
									this.maidArray[num391].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num391]]);
									for (int num392 = 0; num392 < this.bodyHit[(int)this.selectList[num391]].Count; num392 = j + 1)
									{
										this.maidArray[num391].body0.goSlot[num392].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num391]][num392];
										j = num392;
									}
								}
							}
							Maid maid30 = this.maidArray[num390];
							maid30.DelProp(MPN.acckami, true);
							maid30.DelProp(MPN.accha, true);
							maid30.DelProp(MPN.acchead, true);
							maid30.DelProp(MPN.accvag, true);
							maid30.DelProp(MPN.megane, true);
							maid30.AllProcPropSeqStart();
						}
						j = num390;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num393 = 0; num393 < this.maidCnt; num393 = j + 1)
					{
						if (this.maidArray[num393] && this.maidArray[num393].Visible && this.isDanceStart14V)
						{
							this.maidArray[num393].SetPos(this.dancePos[num393]);
							this.maidArray[num393].body0.transform.localRotation = this.danceRot[num393];
						}
						j = num393;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num394 = 0; num394 < this.maidCnt; num394 = j + 1)
					{
						if (this.maidArray[num394] && this.maidArray[num394].Visible && this.isDanceStart15V)
						{
							this.maidArray[num394].SetPos(this.dancePos[num394]);
							this.maidArray[num394].body0.transform.localRotation = this.danceRot[num394];
						}
						j = num394;
					}
					this.isDanceStart15V = false;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible && this.maidArray[0].transform.position == this.maidArray[1].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				if (this.isShift)
				{
					this.isDanceStart13K = true;
					for (int num395 = 0; num395 < this.maidCnt; num395 = j + 1)
					{
						this.maidArray[num395].SetRot(new Vector3(this.maidArray[num395].body0.transform.localRotation.x, this.maidArray[num395].body0.transform.localRotation.y + 90f, this.maidArray[num395].body0.transform.localRotation.z));
						this.maidArray[num395].SetPos(new Vector3(this.maidArray[num395].body0.transform.position.x + 1f, this.maidArray[num395].body0.transform.position.y, this.maidArray[num395].body0.transform.position.z + 4f));
						string text68 = "handitem,HanditemL_Karaoke_Mike_I_.menu";
						int num396 = num395;
						Maid maid31 = this.maidArray[num395];
						if (!this.isVR)
						{
							this.delCount[num396] = 20;
							if (this.goSlot[(int)this.selectList[num396]] != null)
							{
								this.maidArray[num396].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num396]]);
								for (int num397 = 0; num397 < this.bodyHit[(int)this.selectList[num396]].Count; num397 = j + 1)
								{
									this.maidArray[num396].body0.goSlot[num397].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num396]][num397];
									j = num397;
								}
							}
						}
						string[] array95 = new string[2];
						array95 = text68.Split(new char[]
						{
							','
						});
						maid31.DelProp(MPN.acckami, true);
						maid31.DelProp(MPN.accha, true);
						maid31.DelProp(MPN.acchead, true);
						maid31.DelProp(MPN.accvag, true);
						maid31.DelProp(MPN.megane, true);
						if (array95[0] != "")
						{
							maid31.SetProp(array95[0], array95[1], 0, true, false);
						}
						maid31.AllProcPropSeqStart();
						j = num395;
					}
				}
				this.isDance = true;
				this.isDanceStart13 = true;
				this.isSN1 = false;
				this.isSN2 = false;
				this.isSN3 = false;
			}
			if ((Input.GetKey(KeyCode.Return) && Input.GetKeyDown(KeyCode.Alpha8)) || (Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Alpha8)))
			{
				GameMain.Instance.SoundMgr.StopBGM(0f);
				this.isSN1 = true;
				this.hFlg = true;
				if (this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.isShift = true;
				}
			}
			if (this.isSN4 || this.isSN5 || this.isSN6)
			{
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num398 = 0; num398 < this.maidCnt; num398 = j + 1)
				{
					TextAsset textAsset14 = Resources.Load("SceneDance/dance_SsN_m0") as TextAsset;
					string text69 = "dance_cm3d2_006_ssn_f1.anm";
					switch (num398)
					{
					case 1:
					case 4:
					case 7:
					case 10:
					case 13:
						text69 = "dance_cm3d2_006_ssn_f2.anm";
						textAsset14 = (Resources.Load("SceneDance/dance_SsN_m1") as TextAsset);
						break;
					case 2:
					case 5:
					case 8:
					case 11:
						text69 = "dance_cm3d2_006_ssn_f3.anm";
						textAsset14 = (Resources.Load("SceneDance/dance_SsN_m1") as TextAsset);
						break;
					}
					if (this.maidArray[num398] && this.maidArray[num398].Visible)
					{
						if (!this.maidArray[num398].body0.m_Bones.GetComponent<Animation>().GetClip(text69))
						{
							this.maidArray[num398].body0.LoadAnime(text69, GameUty.FileSystem, text69, false, false);
						}
						string text70 = textAsset14.text;
						text70 = Regex.Replace(text70, "(\\r|\\n| )", string.Empty);
						this.maidArray[num398].StartKuchipakuPattern(0f, text70, true);
						this.m_baKuchipakuPattern[num398] = Convert.FromBase64String(text70);
					}
					j = num398;
				}
				if (this.isSN4)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("sunshinenatsu1.ogg", 0f, false);
				}
				if (this.isSN5)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("sunshinenatsu2.ogg", 0f, false);
				}
				if (this.isSN6)
				{
					GameMain.Instance.SoundMgr.PlayDanceBGM("sunshinenatsu3.ogg", 0f, false);
				}
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num399 = 0; num399 < this.maidCnt; num399 = j + 1)
				{
					this.danceFace[num399] = 0f;
					j = num399;
				}
				if (this.isDanceStart7V)
				{
					for (int num400 = 0; num400 < this.maidCnt; num400 = j + 1)
					{
						if (this.maidArray[num400] && this.maidArray[num400].Visible && this.isDanceStart7V)
						{
							this.maidArray[num400].SetPos(this.dancePos[num400]);
							this.maidArray[num400].body0.transform.localRotation = this.danceRot[num400];
						}
						j = num400;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num401 = 0; num401 < this.maidCnt; num401 = j + 1)
					{
						if (this.maidArray[num401] && this.maidArray[num401].Visible && this.isDanceStart8V)
						{
							this.maidArray[num401].SetPos(this.dancePos[num401]);
							this.maidArray[num401].body0.transform.localRotation = this.danceRot[num401];
						}
						j = num401;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num402 = 0; num402 < this.maidCnt; num402 = j + 1)
					{
						if (this.maidArray[num402] && this.maidArray[num402].Visible && this.isDanceStart11V)
						{
							this.maidArray[num402].SetPos(this.dancePos[num402]);
							this.maidArray[num402].body0.transform.localRotation = this.danceRot[num402];
						}
						j = num402;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num403 = 0; num403 < this.maidCnt; num403 = j + 1)
					{
						if (this.maidArray[num403] && this.maidArray[num403].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num403].SetPos(this.dancePos[num403]);
							this.maidArray[num403].body0.transform.localRotation = this.danceRot[num403];
							int num404 = num403;
							if (!this.isVR)
							{
								this.delCount[num404] = 20;
								if (this.goSlot[(int)this.selectList[num404]] != null)
								{
									this.maidArray[num404].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num404]]);
									for (int num405 = 0; num405 < this.bodyHit[(int)this.selectList[num404]].Count; num405 = j + 1)
									{
										this.maidArray[num404].body0.goSlot[num405].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num404]][num405];
										j = num405;
									}
								}
							}
							Maid maid32 = this.maidArray[num403];
							maid32.DelProp(MPN.acckami, true);
							maid32.DelProp(MPN.accha, true);
							maid32.DelProp(MPN.acchead, true);
							maid32.DelProp(MPN.accvag, true);
							maid32.DelProp(MPN.megane, true);
							maid32.AllProcPropSeqStart();
						}
						j = num403;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num406 = 0; num406 < this.maidCnt; num406 = j + 1)
					{
						if (this.maidArray[num406] && this.maidArray[num406].Visible && this.isDanceStart14V)
						{
							this.maidArray[num406].SetPos(this.dancePos[num406]);
							this.maidArray[num406].body0.transform.localRotation = this.danceRot[num406];
						}
						j = num406;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num407 = 0; num407 < this.maidCnt; num407 = j + 1)
					{
						if (this.maidArray[num407] && this.maidArray[num407].Visible && this.isDanceStart15V)
						{
							this.maidArray[num407].SetPos(this.dancePos[num407]);
							this.maidArray[num407].body0.transform.localRotation = this.danceRot[num407];
						}
						j = num407;
					}
					this.isDanceStart15V = false;
				}
				for (int num408 = 0; num408 < this.maidCnt; num408 = j + 1)
				{
					this.isStop[num408] = false;
					this.isLock[num408] = false;
					this.pHandL[num408] = 0;
					this.pHandR[num408] = 0;
					this.muneIKL[num408] = false;
					this.muneIKR[num408] = false;
					if (!this.isVR)
					{
						this.maidArray[num408].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num408]];
						this.maidArray[num408].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num408]];
					}
					if (this.maidArray[num408].transform.position.y != 100f)
					{
						this.dancePos[num408] = this.maidArray[num408].transform.position;
					}
					else
					{
						this.dancePos[num408] = new Vector3(this.maidArray[num408].transform.position.x, 0f, this.maidArray[num408].transform.position.z);
					}
					this.danceRot[num408] = this.maidArray[num408].transform.localRotation;
					j = num408;
				}
				if (this.maidArray[1] && this.maidArray[1].Visible)
				{
					this.maidArray[1].SetPos(new Vector3(this.maidArray[0].transform.position.x, this.maidArray[0].transform.position.y, this.maidArray[0].transform.position.z));
					this.maidArray[1].body0.transform.localRotation = this.maidArray[0].body0.transform.localRotation;
				}
				if (this.maidArray[2] && this.maidArray[2].Visible)
				{
					this.maidArray[2].SetPos(new Vector3(this.maidArray[0].transform.position.x, this.maidArray[0].transform.position.y, this.maidArray[0].transform.position.z));
					this.maidArray[2].body0.transform.localRotation = this.maidArray[0].body0.transform.localRotation;
				}
				if (this.maidArray[4] && this.maidArray[4].Visible)
				{
					this.maidArray[4].SetPos(new Vector3(this.maidArray[3].transform.position.x, this.maidArray[3].transform.position.y, this.maidArray[3].transform.position.z));
					this.maidArray[4].body0.transform.localRotation = this.maidArray[3].body0.transform.localRotation;
				}
				if (this.maidArray[5] && this.maidArray[5].Visible)
				{
					this.maidArray[5].SetPos(new Vector3(this.maidArray[3].transform.position.x, this.maidArray[3].transform.position.y, this.maidArray[3].transform.position.z));
					this.maidArray[5].body0.transform.localRotation = this.maidArray[3].body0.transform.localRotation;
				}
				if (this.maidArray[7] && this.maidArray[7].Visible)
				{
					this.maidArray[7].SetPos(new Vector3(this.maidArray[6].transform.position.x, this.maidArray[6].transform.position.y, this.maidArray[6].transform.position.z));
					this.maidArray[7].body0.transform.localRotation = this.maidArray[6].body0.transform.localRotation;
				}
				if (this.maidArray[8] && this.maidArray[8].Visible)
				{
					this.maidArray[8].SetPos(new Vector3(this.maidArray[6].transform.position.x, this.maidArray[6].transform.position.y, this.maidArray[6].transform.position.z));
					this.maidArray[8].body0.transform.localRotation = this.maidArray[6].body0.transform.localRotation;
				}
				if (this.maidArray[10] && this.maidArray[10].Visible)
				{
					this.maidArray[10].SetPos(new Vector3(this.maidArray[9].transform.position.x, this.maidArray[9].transform.position.y, this.maidArray[9].transform.position.z));
					this.maidArray[10].body0.transform.localRotation = this.maidArray[9].body0.transform.localRotation;
				}
				if (this.maidArray[11] && this.maidArray[11].Visible)
				{
					this.maidArray[11].SetPos(new Vector3(this.maidArray[9].transform.position.x, this.maidArray[9].transform.position.y, this.maidArray[9].transform.position.z));
					this.maidArray[11].body0.transform.localRotation = this.maidArray[9].body0.transform.localRotation;
				}
				if (this.maidArray[13] && this.maidArray[13].Visible)
				{
					this.maidArray[13].SetPos(new Vector3(this.maidArray[12].transform.position.x, this.maidArray[12].transform.position.y, this.maidArray[12].transform.position.z));
					this.maidArray[13].body0.transform.localRotation = this.maidArray[12].body0.transform.localRotation;
				}
				this.isDance = true;
				this.isDanceStart14 = true;
				this.isSN4 = false;
				this.isSN5 = false;
				this.isSN6 = false;
			}
			if (this.isSD1)
			{
				this.audioSourceBgm = GameMain.Instance.SoundMgr.GetAudioSourceBgm();
				GameMain.Instance.SoundMgr.PlayBGM("se002.ogg", 0f, false);
				for (int num409 = 0; num409 < this.maidCnt; num409 = j + 1)
				{
					TextAsset textAsset15 = Resources.Load("SceneDance/uta_mmlop_mix_Bok") as TextAsset;
					string text71 = "dance_cmo_002_sd_f1.anm";
					switch (num409)
					{
					case 1:
					case 3:
					case 5:
					case 7:
					case 9:
					case 11:
					case 13:
						text71 = "dance_cmo_002_sd_f2.anm";
						textAsset15 = (Resources.Load("SceneDance/uta_mmlop_mix_Aok") as TextAsset);
						break;
					}
					this.danceName[num409] = text71;
					if (this.maidArray[num409] && this.maidArray[num409].Visible)
					{
						if (!this.maidArray[num409].body0.m_Bones.GetComponent<Animation>().GetClip(text71))
						{
							this.maidArray[num409].body0.LoadAnime(text71, GameUty.FileSystem, text71, false, false);
						}
						string text72 = textAsset15.text;
						text72 = Regex.Replace(text72, "(\\r|\\n| )", string.Empty);
						this.maidArray[num409].StartKuchipakuPattern(0f, text72, true);
						this.m_baKuchipakuPattern[num409] = Convert.FromBase64String(text72);
					}
					j = num409;
				}
				GameMain.Instance.SoundMgr.PlayDanceBGM("selfishdestiny_due_short_1.ogg", 0f, false);
				this.ikBui = 5;
				this.isDanceStart1F = false;
				this.isDanceStart2F = false;
				this.isDanceStart3F = false;
				this.isDanceStart4F = false;
				this.isDanceStart5F = false;
				this.isDanceStart6F = false;
				this.isDanceStart7F = false;
				this.isDanceStart8F = false;
				this.isDanceStart9F = false;
				this.isDanceStart10F = false;
				this.isDanceStart11F = false;
				this.isDanceStart12F = false;
				this.isDanceStart13F = false;
				this.isDanceStart14F = false;
				this.isDanceStart15F = false;
				for (int num410 = 0; num410 < this.maidCnt; num410 = j + 1)
				{
					this.danceFace[num410] = 0f;
					j = num410;
				}
				if (this.isDanceStart7V)
				{
					for (int num411 = 0; num411 < this.maidCnt; num411 = j + 1)
					{
						if (this.maidArray[num411] && this.maidArray[num411].Visible && this.isDanceStart7V)
						{
							this.maidArray[num411].SetPos(this.dancePos[num411]);
							this.maidArray[num411].body0.transform.localRotation = this.danceRot[num411];
						}
						j = num411;
					}
					this.isDanceStart7V = false;
				}
				if (this.isDanceStart8V)
				{
					for (int num412 = 0; num412 < this.maidCnt; num412 = j + 1)
					{
						if (this.maidArray[num412] && this.maidArray[num412].Visible && this.isDanceStart8V)
						{
							this.maidArray[num412].SetPos(this.dancePos[num412]);
							this.maidArray[num412].body0.transform.localRotation = this.danceRot[num412];
						}
						j = num412;
					}
					this.isDanceStart8V = false;
					this.isDanceStart8P = false;
				}
				if (this.isDanceStart11V)
				{
					for (int num413 = 0; num413 < this.maidCnt; num413 = j + 1)
					{
						if (this.maidArray[num413] && this.maidArray[num413].Visible && this.isDanceStart11V)
						{
							this.maidArray[num413].SetPos(this.dancePos[num413]);
							this.maidArray[num413].body0.transform.localRotation = this.danceRot[num413];
						}
						j = num413;
					}
					this.isDanceStart11V = false;
				}
				if (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K)
				{
					for (int num414 = 0; num414 < this.maidCnt; num414 = j + 1)
					{
						if (this.maidArray[num414] && this.maidArray[num414].Visible && (this.isDanceStart1K || this.isDanceStart3K || this.isDanceStart4K || this.isDanceStart5K || this.isDanceStart6K || this.isDanceStart9K || this.isDanceStart13K))
						{
							this.maidArray[num414].SetPos(this.dancePos[num414]);
							this.maidArray[num414].body0.transform.localRotation = this.danceRot[num414];
							int num415 = num414;
							if (!this.isVR)
							{
								this.delCount[num415] = 20;
								if (this.goSlot[(int)this.selectList[num415]] != null)
								{
									this.maidArray[num415].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num415]]);
									for (int num416 = 0; num416 < this.bodyHit[(int)this.selectList[num415]].Count; num416 = j + 1)
									{
										this.maidArray[num415].body0.goSlot[num416].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num415]][num416];
										j = num416;
									}
								}
							}
							Maid maid33 = this.maidArray[num414];
							maid33.DelProp(MPN.acckami, true);
							maid33.DelProp(MPN.accha, true);
							maid33.DelProp(MPN.acchead, true);
							maid33.DelProp(MPN.accvag, true);
							maid33.DelProp(MPN.megane, true);
							maid33.AllProcPropSeqStart();
						}
						j = num414;
					}
					this.isDanceStart1K = false;
					this.isDanceStart3K = false;
					this.isDanceStart4K = false;
					this.isDanceStart5K = false;
					this.isDanceStart6K = false;
					this.isDanceStart9K = false;
					this.isDanceStart13K = false;
				}
				if (this.isDanceStart14V)
				{
					for (int num417 = 0; num417 < this.maidCnt; num417 = j + 1)
					{
						if (this.maidArray[num417] && this.maidArray[num417].Visible && this.isDanceStart14V)
						{
							this.maidArray[num417].SetPos(this.dancePos[num417]);
							this.maidArray[num417].body0.transform.localRotation = this.danceRot[num417];
						}
						j = num417;
					}
					this.isDanceStart14V = false;
				}
				if (this.isDanceStart15V)
				{
					for (int num418 = 0; num418 < this.maidCnt; num418 = j + 1)
					{
						if (this.maidArray[num418] && this.maidArray[num418].Visible && this.isDanceStart15V)
						{
							this.maidArray[num418].SetPos(this.dancePos[num418]);
							this.maidArray[num418].body0.transform.localRotation = this.danceRot[num418];
						}
						j = num418;
					}
					this.isDanceStart15V = false;
				}
				for (int num419 = 0; num419 < this.maidCnt; num419 = j + 1)
				{
					this.isStop[num419] = false;
					this.isLock[num419] = false;
					this.pHandL[num419] = 0;
					this.pHandR[num419] = 0;
					this.muneIKL[num419] = false;
					this.muneIKR[num419] = false;
					if (!this.isVR)
					{
						this.maidArray[num419].body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num419]];
						this.maidArray[num419].body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num419]];
					}
					if (this.maidArray[num419].transform.position.y != 100f)
					{
						this.dancePos[num419] = this.maidArray[num419].transform.position;
					}
					else
					{
						this.dancePos[num419] = new Vector3(this.maidArray[num419].transform.position.x, 0f, this.maidArray[num419].transform.position.z);
					}
					this.danceRot[num419] = this.maidArray[num419].transform.localRotation;
					j = num419;
				}
				if (this.maidArray[0] && this.maidArray[0].Visible && this.maidArray[1] && this.maidArray[1].Visible)
				{
					this.maidArray[0].SetPos(new Vector3((this.maidArray[0].transform.position.x + this.maidArray[1].transform.position.x) / 2f, (this.maidArray[0].transform.position.y + this.maidArray[1].transform.position.y) / 2f, (this.maidArray[0].transform.position.z + this.maidArray[1].transform.position.z) / 2f));
					this.maidArray[0].body0.transform.localRotation = Quaternion.Lerp(this.maidArray[0].transform.localRotation, this.maidArray[1].transform.localRotation, 0.5f);
				}
				if (this.maidArray[2] && this.maidArray[2].Visible && this.maidArray[3] && this.maidArray[3].Visible)
				{
					this.maidArray[2].SetPos(new Vector3((this.maidArray[2].transform.position.x + this.maidArray[3].transform.position.x) / 2f, (this.maidArray[2].transform.position.y + this.maidArray[3].transform.position.y) / 2f, (this.maidArray[2].transform.position.z + this.maidArray[3].transform.position.z) / 2f));
					this.maidArray[2].body0.transform.localRotation = Quaternion.Lerp(this.maidArray[2].transform.localRotation, this.maidArray[3].transform.localRotation, 0.5f);
				}
				if (this.maidArray[4] && this.maidArray[4].Visible && this.maidArray[5] && this.maidArray[5].Visible)
				{
					this.maidArray[4].SetPos(new Vector3((this.maidArray[4].transform.position.x + this.maidArray[5].transform.position.x) / 2f, (this.maidArray[4].transform.position.y + this.maidArray[5].transform.position.y) / 2f, (this.maidArray[4].transform.position.z + this.maidArray[5].transform.position.z) / 2f));
					this.maidArray[4].body0.transform.localRotation = Quaternion.Lerp(this.maidArray[4].transform.localRotation, this.maidArray[5].transform.localRotation, 0.5f);
				}
				if (this.maidArray[6] && this.maidArray[6].Visible && this.maidArray[7] && this.maidArray[7].Visible)
				{
					this.maidArray[6].SetPos(new Vector3((this.maidArray[6].transform.position.x + this.maidArray[7].transform.position.x) / 2f, (this.maidArray[6].transform.position.y + this.maidArray[7].transform.position.y) / 2f, (this.maidArray[6].transform.position.z + this.maidArray[7].transform.position.z) / 2f));
					this.maidArray[6].body0.transform.localRotation = Quaternion.Lerp(this.maidArray[6].transform.localRotation, this.maidArray[7].transform.localRotation, 0.5f);
				}
				if (this.maidArray[8] && this.maidArray[8].Visible && this.maidArray[9] && this.maidArray[9].Visible)
				{
					this.maidArray[8].SetPos(new Vector3((this.maidArray[8].transform.position.x + this.maidArray[9].transform.position.x) / 2f, (this.maidArray[8].transform.position.y + this.maidArray[9].transform.position.y) / 2f, (this.maidArray[8].transform.position.z + this.maidArray[9].transform.position.z) / 2f));
					this.maidArray[8].body0.transform.localRotation = Quaternion.Lerp(this.maidArray[8].transform.localRotation, this.maidArray[9].transform.localRotation, 0.5f);
				}
				if (this.maidArray[10] && this.maidArray[10].Visible && this.maidArray[11] && this.maidArray[11].Visible)
				{
					this.maidArray[10].SetPos(new Vector3((this.maidArray[10].transform.position.x + this.maidArray[11].transform.position.x) / 2f, (this.maidArray[10].transform.position.y + this.maidArray[11].transform.position.y) / 2f, (this.maidArray[10].transform.position.z + this.maidArray[11].transform.position.z) / 2f));
					this.maidArray[10].body0.transform.localRotation = Quaternion.Lerp(this.maidArray[10].transform.localRotation, this.maidArray[11].transform.localRotation, 0.5f);
				}
				if (this.maidArray[12] && this.maidArray[12].Visible && this.maidArray[13] && this.maidArray[13].Visible)
				{
					this.maidArray[12].SetPos(new Vector3((this.maidArray[12].transform.position.x + this.maidArray[13].transform.position.x) / 2f, (this.maidArray[12].transform.position.y + this.maidArray[13].transform.position.y) / 2f, (this.maidArray[12].transform.position.z + this.maidArray[13].transform.position.z) / 2f));
					this.maidArray[12].body0.transform.localRotation = Quaternion.Lerp(this.maidArray[12].transform.localRotation, this.maidArray[13].transform.localRotation, 0.5f);
				}
				if (this.maidArray[1] && this.maidArray[1].Visible)
				{
					this.maidArray[1].SetPos(new Vector3(this.maidArray[0].transform.position.x, this.maidArray[0].transform.position.y, this.maidArray[0].transform.position.z));
					this.maidArray[1].body0.transform.localRotation = this.maidArray[0].body0.transform.localRotation;
				}
				if (this.maidArray[3] && this.maidArray[3].Visible)
				{
					this.maidArray[3].SetPos(new Vector3(this.maidArray[2].transform.position.x, this.maidArray[2].transform.position.y, this.maidArray[2].transform.position.z));
					this.maidArray[3].body0.transform.localRotation = this.maidArray[2].body0.transform.localRotation;
				}
				if (this.maidArray[5] && this.maidArray[5].Visible)
				{
					this.maidArray[5].SetPos(new Vector3(this.maidArray[4].transform.position.x, this.maidArray[4].transform.position.y, this.maidArray[4].transform.position.z));
					this.maidArray[5].body0.transform.localRotation = this.maidArray[4].body0.transform.localRotation;
				}
				if (this.maidArray[7] && this.maidArray[7].Visible)
				{
					this.maidArray[7].SetPos(new Vector3(this.maidArray[6].transform.position.x, this.maidArray[6].transform.position.y, this.maidArray[6].transform.position.z));
					this.maidArray[7].body0.transform.localRotation = this.maidArray[6].body0.transform.localRotation;
				}
				if (this.maidArray[9] && this.maidArray[9].Visible)
				{
					this.maidArray[9].SetPos(new Vector3(this.maidArray[8].transform.position.x, this.maidArray[8].transform.position.y, this.maidArray[8].transform.position.z));
					this.maidArray[9].body0.transform.localRotation = this.maidArray[8].body0.transform.localRotation;
				}
				if (this.maidArray[11] && this.maidArray[11].Visible)
				{
					this.maidArray[11].SetPos(new Vector3(this.maidArray[10].transform.position.x, this.maidArray[10].transform.position.y, this.maidArray[10].transform.position.z));
					this.maidArray[11].body0.transform.localRotation = this.maidArray[10].body0.transform.localRotation;
				}
				if (this.maidArray[13] && this.maidArray[13].Visible)
				{
					this.maidArray[13].SetPos(new Vector3(this.maidArray[12].transform.position.x, this.maidArray[12].transform.position.y, this.maidArray[12].transform.position.z));
					this.maidArray[13].body0.transform.localRotation = this.maidArray[12].body0.transform.localRotation;
				}
				if (this.maidArray[2] && this.maidArray[2].Visible && this.maidArray[0].transform.position == this.maidArray[2].transform.position)
				{
					Vector3 vector = Vector3.zero;
					vector.x = 0.6f;
					this.maidArray[1].SetPos(vector);
					if (this.maidArray[2] && this.maidArray[2].Visible)
					{
						vector.x = -0.6f;
						this.maidArray[2].SetPos(vector);
					}
					if (this.maidArray[3] && this.maidArray[3].Visible)
					{
						vector.x = 1.2f;
						this.maidArray[3].SetPos(vector);
					}
					if (this.maidArray[4] && this.maidArray[4].Visible)
					{
						vector.x = -1.2f;
						this.maidArray[4].SetPos(vector);
					}
					if (this.maidArray[5] && this.maidArray[5].Visible)
					{
						vector.x = 1.8f;
						this.maidArray[5].SetPos(vector);
					}
					if (this.maidArray[6] && this.maidArray[6].Visible)
					{
						vector.x = -1.8f;
						this.maidArray[6].SetPos(vector);
					}
					if (this.maidArray[7] && this.maidArray[7].Visible)
					{
						vector.x = 2.4f;
						this.maidArray[7].SetPos(vector);
					}
					if (this.maidArray[8] && this.maidArray[8].Visible)
					{
						vector.x = -2.4f;
						this.maidArray[8].SetPos(vector);
					}
					if (this.maidArray[9] && this.maidArray[9].Visible)
					{
						vector.x = 3f;
						this.maidArray[9].SetPos(vector);
					}
					if (this.maidArray[10] && this.maidArray[10].Visible)
					{
						vector.x = -3f;
						this.maidArray[10].SetPos(vector);
					}
					if (this.maidArray[11] && this.maidArray[11].Visible)
					{
						vector.x = 3.6f;
						this.maidArray[11].SetPos(vector);
					}
					if (this.maidArray[12] && this.maidArray[12].Visible)
					{
						vector.x = -3.6f;
						this.maidArray[12].SetPos(vector);
					}
					if (this.maidArray[13] && this.maidArray[13].Visible)
					{
						vector.x = 4.2f;
						this.maidArray[13].SetPos(vector);
					}
				}
				this.isDance = true;
				this.isDanceStart15 = true;
				this.isSD1 = false;
			}
			if (Input.GetKeyDown(KeyCode.Keypad1) || Input.GetKeyDown(KeyCode.Keypad2) || Input.GetKeyDown(KeyCode.Keypad3) || Input.GetKeyDown(KeyCode.Keypad4) || Input.GetKeyDown(KeyCode.Keypad5) || Input.GetKeyDown(KeyCode.Keypad6) || Input.GetKeyDown(KeyCode.Keypad7) || Input.GetKeyDown(KeyCode.Keypad8) || Input.GetKeyDown(KeyCode.Keypad9) || Input.GetKeyDown(KeyCode.Keypad0))
			{
				for (int num420 = 0; num420 < this.maidCnt; num420 = j + 1)
				{
					if (this.maidArray[num420] && this.maidArray[num420].Visible && !this.isVR && this.goSlot[(int)this.selectList[num420]] != null)
					{
						this.maidArray[num420].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num420]]);
						for (int num421 = 0; num421 < this.bodyHit[(int)this.selectList[num420]].Count; num421 = j + 1)
						{
							this.maidArray[num420].body0.goSlot[num421].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num420]][num421];
							j = num421;
						}
					}
					j = num420;
				}
			}
			if (!Input.GetKeyUp(KeyCode.Return) && Input.GetKeyUp(KeyCode.H) && !this.hFlg)
			{
				if (this.h2Flg)
				{
					this.h2Flg = false;
				}
				else
				{
					string value = "";
					if (this.wearIndex == 0)
					{
						value = "Underwear";
						this.wearIndex = 1;
						this.isWear = false;
						this.isSkirt = false;
						this.isBra = true;
						this.isPanz = true;
						this.isHeadset = false;
						this.isGlove = false;
						this.isStkg = true;
						this.isShoes = false;
					}
					else if (this.wearIndex == 1)
					{
						value = "Nude";
						this.wearIndex = 2;
						this.isWear = false;
						this.isSkirt = false;
						this.isBra = false;
						this.isPanz = false;
						this.isHeadset = false;
						this.isGlove = false;
						this.isStkg = false;
						this.isShoes = false;
					}
					else if (this.wearIndex == 2)
					{
						value = "None";
						this.wearIndex = 0;
						this.isWear = true;
						this.isSkirt = true;
						this.isBra = true;
						this.isPanz = true;
						this.isHeadset = true;
						this.isGlove = true;
						this.isStkg = true;
						this.isShoes = true;
					}
					TBody.MaskMode maskMode = (TBody.MaskMode)Enum.Parse(typeof(TBody.MaskMode), value);
					for (int num422 = 0; num422 < this.maidCnt; num422 = j + 1)
					{
						if (this.maidArray[num422] && this.maidArray[num422].Visible)
						{
							if (!this.isVR && this.goSlot[(int)this.selectList[num422]] != null)
							{
								this.maidArray[num422].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num422]]);
								for (int num423 = 0; num423 < this.bodyHit[(int)this.selectList[num422]].Count; num423 = j + 1)
								{
									this.maidArray[num422].body0.goSlot[num423].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num422]][num423];
									j = num423;
								}
							}
							this.maidArray[num422].body0.SetMaskMode(maskMode);
						}
						j = num422;
					}
				}
			}
			if (this.getModKeyPressing(ManyMaids.modKey.Ctrl) && Input.GetKeyDown(KeyCode.S) && !this.sFlg)
			{
				this.saveScene = 9999;
				this.saveScene2 = this.saveScene;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				try
				{
					this.thum_byte_to_base64_ = string.Empty;
					this.thum_file_path_ = Path.Combine(Path.GetTempPath(), "cm3d2_" + Guid.NewGuid().ToString() + ".png");
					GameMain.Instance.MainCamera.ScreenShot(this.thum_file_path_, 1, false);
				}
				catch
				{
				}
			}
			if (this.getModKeyPressing(ManyMaids.modKey.Ctrl) && Input.GetKeyDown(KeyCode.A))
			{
				this.loadScene = 9999;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (this.isScreen)
			{
				this.isScreen = false;
				this.bGui = this.isGui;
				this.isGui = false;
				if (!this.isMessage)
				{
					foreach (UICamera uicamera in this.ui_cam_hide_list_)
					{
						uicamera.GetComponent<Camera>().enabled = true;
					}
					this.ui_cam_hide_list_.Clear();
				}
				else
				{
					if (this.editUI != null)
					{
						this.editUI.SetActive(true);
					}
					if (GameMain.Instance.CMSystem.ViewFps)
					{
						GameObject childObject = UTY.GetChildObject(GameMain.Instance.gameObject, "SystemUI Root/FpsCounter", false);
						childObject.SetActive(true);
					}
					GameObject childObject2 = UTY.GetChildObject(GameMain.Instance.gameObject, "SystemUI Root/SystemDialog", false);
					GameObject childObject3 = UTY.GetChildObject(GameMain.Instance.gameObject, "SystemUI Root/SystemShortcut", false);
					childObject2.SetActive(true);
					childObject3.SetActive(true);
				}
				for (int num424 = 0; num424 < this.maidCnt; num424 = j + 1)
				{
					if (this.maidArray[num424] && this.maidArray[num424].Visible)
					{
						this.isBone[num424] = this.isBoneN[num424];
						if (this.isBone[num424])
						{
							this.gNeck[num424].SetActive(true);
							this.gSpine[num424].SetActive(true);
							this.gSpine0a[num424].SetActive(true);
							this.gSpine1a[num424].SetActive(true);
							this.gSpine1[num424].SetActive(true);
							this.gPelvis[num424].SetActive(true);
							this.gHandL[num424].SetActive(true);
							this.gArmL[num424].SetActive(true);
							this.gFootL[num424].SetActive(true);
							this.gHizaL[num424].SetActive(true);
							this.gHandR[num424].SetActive(true);
							this.gArmR[num424].SetActive(true);
							this.gFootR[num424].SetActive(true);
							this.gHizaR[num424].SetActive(true);
							this.gClavicleL[num424].SetActive(true);
							this.gClavicleR[num424].SetActive(true);
						}
					}
					j = num424;
				}
			}
			if (this.isScreen2)
			{
				this.isScreen = true;
				this.isScreen2 = false;
			}
			if (!this.isVR && Input.GetKeyDown(KeyCode.S) && !this.sFlg && !Input.GetKey(KeyCode.KeypadEnter) && !Input.GetKey(KeyCode.Return) && !Input.GetKey(KeyCode.Q) && !Input.GetKey(KeyCode.LeftShift) && !Input.GetKey(KeyCode.LeftAlt) && !this.getModKeyPressing(ManyMaids.modKey.Ctrl))
			{
				this.isScreen = true;
				for (int num425 = 0; num425 < this.maidCnt; num425 = j + 1)
				{
					if (this.maidArray[num425] && this.maidArray[num425].Visible)
					{
						if (this.isBone[num425])
						{
							this.gNeck[num425].SetActive(false);
							this.gSpine[num425].SetActive(false);
							this.gSpine0a[num425].SetActive(false);
							this.gSpine1a[num425].SetActive(false);
							this.gSpine1[num425].SetActive(false);
							this.gPelvis[num425].SetActive(false);
							this.gHandL[num425].SetActive(false);
							this.gArmL[num425].SetActive(false);
							this.gFootL[num425].SetActive(false);
							this.gHizaL[num425].SetActive(false);
							this.gHandR[num425].SetActive(false);
							this.gArmR[num425].SetActive(false);
							this.gFootR[num425].SetActive(false);
							this.gHizaR[num425].SetActive(false);
							this.gClavicleL[num425].SetActive(false);
							this.gClavicleR[num425].SetActive(false);
						}
						this.isBoneN[num425] = this.isBone[num425];
						this.isBone[num425] = false;
					}
					j = num425;
				}
				if (!this.isMessage)
				{
					this.ui_cam_hide_list_.Clear();
					UICamera[] array96 = NGUITools.FindActive<UICamera>();
					UICamera[] array97 = array96;
					foreach (UICamera uicamera2 in array97)
					{
						if (uicamera2.GetComponent<Camera>().enabled)
						{
							uicamera2.GetComponent<Camera>().enabled = false;
							this.ui_cam_hide_list_.Add(uicamera2);
						}
					}
				}
				else
				{
					this.editUI = GameObject.Find("/UI Root/Camera");
					if (this.editUI != null)
					{
						this.editUI.SetActive(false);
					}
					if (GameMain.Instance.CMSystem.ViewFps)
					{
						GameObject childObject4 = UTY.GetChildObject(GameMain.Instance.gameObject, "SystemUI Root/FpsCounter", false);
						childObject4.SetActive(false);
					}
					GameObject childObject5 = UTY.GetChildObject(GameMain.Instance.gameObject, "SystemUI Root/SystemDialog", false);
					GameObject childObject6 = UTY.GetChildObject(GameMain.Instance.gameObject, "SystemUI Root/SystemShortcut", false);
					childObject5.SetActive(false);
					childObject6.SetActive(false);
				}
				this.isGui = this.bGui;
				this.bGui = false;
				GameMain.Instance.MainCamera.ScreenShot(false);
				GameMain.Instance.SoundMgr.PlaySe("se022.ogg", false);
			}
			if (!this.isVR && Input.GetKey(KeyCode.Q) && Input.GetKey(KeyCode.U) && !this.qFlg)
			{
				this.mainCameraTransform.Rotate(0f, 0f, -0.15f);
				this.keyFlg2 = true;
			}
			else if (!this.isVR && Input.GetKey(KeyCode.Q) && Input.GetKey(KeyCode.O) && !this.qFlg)
			{
				this.mainCameraTransform.Rotate(0f, 0f, 0.15f);
				this.keyFlg2 = true;
			}
			else if (!this.isVR && Input.GetKey(KeyCode.Q) && Input.GetKeyDown(KeyCode.BackQuote) && !this.qFlg)
			{
				Transform transform37 = this.mainCameraTransform;
				float x = this.mainCameraTransform.rotation.eulerAngles.x;
				transform37.eulerAngles = new Vector3(x, this.mainCameraTransform.rotation.eulerAngles.y, 0f);
				this.keyFlg2 = true;
			}
			else if (!this.isVR && Input.GetKey(KeyCode.Q) && Input.GetKeyDown(KeyCode.R) && !this.qFlg)
			{
				GameMain.Instance.MainCamera.Reset(CameraMain.CameraType.Target, true);
				this.mainCamera.SetTargetPos(new Vector3(0f, 0.9f, 0f), true);
				this.mainCamera.SetDistance(3f, true);
				this.keyFlg2 = true;
			}
			else if (!this.isVR && Input.GetKey(KeyCode.Q) && Input.GetKeyDown(KeyCode.S) && !this.qFlg)
			{
				this.cameraIti = this.mainCamera.GetTargetPos();
				this.cameraIti2 = this.mainCamera.GetPos();
				this.cameraItiAngle = this.mainCamera.GetAroundAngle();
				this.cameraItiDistance = this.mainCamera.GetDistance();
				this.keyFlg2 = true;
			}
			else if (!this.isVR && Input.GetKey(KeyCode.Q) && Input.GetKeyDown(KeyCode.A) && !this.qFlg)
			{
				this.mainCamera.SetTargetPos(this.cameraIti, true);
				this.mainCamera.SetPos(this.cameraIti2);
				this.mainCamera.SetAroundAngle(this.cameraItiAngle, true);
				this.mainCamera.SetDistance(this.cameraItiDistance, true);
				this.keyFlg2 = true;
			}
			else if (!this.isVR && Input.GetKeyUp(KeyCode.Q) && !this.qFlg)
			{
				if (this.keyFlg2)
				{
					this.keyFlg2 = false;
				}
				else
				{
					j = this.effectIndex;
					this.effectIndex = j + 1;
					if (this.effectIndex == 9)
					{
						this.kami.SetActive(false);
						this.effectIndex = 0;
					}
					Vignetting component19 = GameMain.Instance.MainCamera.gameObject.GetComponent<Vignetting>();
					if (!this.isBlur)
					{
						component19.mode = 0;
						component19.intensity = -3.98f;
						component19.chromaticAberration = -0.75f;
						component19.axialAberration = 1.18f;
						component19.blurSpread = 4.19f;
						component19.luminanceDependency = 0.494f;
						component19.blurDistance = 1.71f;
						component19.enabled = false;
					}
					this.kami;
					if (this.effectIndex == 0)
					{
						component19.enabled = false;
					}
					if (this.effectIndex == 1)
					{
						component19.mode = 0;
						component19.intensity = -1f;
						component19.chromaticAberration = 0f;
						component19.axialAberration = 0f;
						component19.blurSpread = 5f;
						component19.luminanceDependency = 0f;
						component19.blurDistance = 0f;
						component19.enabled = true;
					}
					if (this.effectIndex == 2)
					{
						component19.enabled = true;
					}
					if (this.effectIndex == 3)
					{
						component19.mode = 0;
						component19.intensity = 9f;
						component19.chromaticAberration = 0f;
						component19.axialAberration = 0f;
						component19.blurSpread = 5f;
						component19.luminanceDependency = 0f;
						component19.blurDistance = 0f;
						component19.enabled = true;
					}
					if (this.effectIndex == 4)
					{
						UnityEngine.Object original2 = Resources.Load("Prefab/p_kamihubuki_photo_ver");
						this.kami = (UnityEngine.Object.Instantiate(original2) as GameObject);
						Vector3 localPosition = this.kami.transform.localPosition;
						localPosition.y = 3.5f;
						this.kami.transform.localPosition = localPosition;
					}
					if (this.effectIndex == 5)
					{
						component19.enabled = true;
						component19.mode = 0;
						component19.intensity = -2.5f;
						component19.chromaticAberration = -0.3f;
						component19.axialAberration = 0.5f;
						component19.blurSpread = 4.5f;
						component19.luminanceDependency = 0.2f;
						component19.blurDistance = 0.8f;
						component19.enabled = true;
					}
					if (this.effectIndex == 6)
					{
						this.kami.SetActive(false);
						UnityEngine.Object original3 = Resources.Load("Prefab/p_powder_snow_photo_ver");
						this.kami = (UnityEngine.Object.Instantiate(original3) as GameObject);
						Vector3 localPosition = this.kami.transform.localPosition;
						localPosition.y = 3.5f;
						this.kami.transform.localPosition = localPosition;
					}
					if (this.effectIndex == 7)
					{
						component19.enabled = true;
						component19.mode = 0;
						component19.intensity = -2.5f;
						component19.chromaticAberration = -0.3f;
						component19.axialAberration = 0.5f;
						component19.blurSpread = 4.5f;
						component19.luminanceDependency = 0.2f;
						component19.blurDistance = 0.8f;
						component19.enabled = true;
					}
					if (this.effectIndex == 8)
					{
						component19.mode = 0;
						component19.intensity = 8f;
						component19.chromaticAberration = 0f;
						component19.axialAberration = 0f;
						component19.blurSpread = 5f;
						component19.luminanceDependency = 0f;
						component19.blurDistance = 0f;
						component19.enabled = true;
					}
				}
			}
			if (!this.isVR && Input.GetKeyUp(KeyCode.Q) && this.qFlg)
			{
				this.qFlg = false;
			}
			if (Input.GetKey(KeyCode.A) && !Input.GetKey(KeyCode.Space))
			{
				bool flag53 = false;
				for (int num426 = 0; num426 < this.keyArray.Length; num426 = j + 1)
				{
					if (Input.GetKey(this.keyArray[num426]))
					{
						flag53 = true;
						break;
					}
					j = num426;
				}
				if (!this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					if (!flag53)
					{
						Vector3 vector31 = this.mainCameraTransform.TransformDirection(Vector3.forward);
						Vector3 vector32 = this.mainCameraTransform.TransformDirection(Vector3.right);
						Vector3 vector33 = this.mainCameraTransform.TransformDirection(Vector3.up);
						if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.J))
						{
							Vector3 vector = this.softG;
							vector += new Vector3(vector31.x, 0f, vector31.z) * 6E-05f * this.speed;
							Vector3 vector6 = this.softG = vector + new Vector3(vector32.x, 0f, vector32.z) * -6E-05f * this.speed;
							vector = vector6;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.L))
						{
							Vector3 vector = this.softG;
							vector += new Vector3(vector31.x, 0f, vector31.z) * 6E-05f * this.speed;
							Vector3 vector6 = this.softG = vector + new Vector3(vector32.x, 0f, vector32.z) * 6E-05f * this.speed;
							vector = vector6;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.J))
						{
							Vector3 vector = this.softG;
							vector += new Vector3(vector31.x, 0f, vector31.z) * -6E-05f * this.speed;
							Vector3 vector6 = this.softG = vector + new Vector3(vector32.x, 0f, vector32.z) * -6E-05f * this.speed;
							vector = vector6;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.L))
						{
							Vector3 vector = this.softG;
							vector += new Vector3(vector31.x, 0f, vector31.z) * -6E-05f * this.speed;
							Vector3 vector6 = this.softG = vector + new Vector3(vector32.x, 0f, vector32.z) * 6E-05f * this.speed;
							vector = vector6;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.I))
						{
							Vector3 vector = this.softG;
							Vector3 vector6 = this.softG = vector + new Vector3(vector31.x, 0f, vector31.z) * 6E-05f * this.speed;
							vector = vector6;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.K))
						{
							Vector3 vector = this.softG;
							Vector3 vector6 = this.softG = vector + new Vector3(vector31.x, 0f, vector31.z) * -6E-05f * this.speed;
							vector = vector6;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.J))
						{
							Vector3 vector = this.softG;
							Vector3 vector6 = this.softG = vector + new Vector3(vector32.x, 0f, vector32.z) * -6E-05f * this.speed;
							vector = vector6;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.L))
						{
							Vector3 vector = this.softG;
							Vector3 vector6 = this.softG = vector + new Vector3(vector32.x, 0f, vector32.z) * 6E-05f * this.speed;
							vector = vector6;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.Alpha0))
						{
							Vector3 vector = this.softG;
							ref float ptr4 = ref vector.y;
							ptr4 += 6E-05f * this.speed;
							this.softG = vector;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.P))
						{
							Vector3 vector = this.softG;
							ref float ptr4 = ref vector.y;
							ptr4 -= 6E-05f * this.speed;
							this.softG = vector;
						}
						else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.BackQuote) && !this.atFlg)
						{
							this.softG = new Vector3(0f, -0.003f, 0f);
						}
						for (int num427 = 0; num427 < this.maidCnt; num427 = j + 1)
						{
							Maid maid34 = this.maidArray[num427];
							for (int num428 = 0; num428 < maid34.body0.goSlot.Count; num428 = j + 1)
							{
								if (maid34.body0.goSlot[num428].obj != null)
								{
									DynamicBone component20 = maid34.body0.goSlot[num428].obj.GetComponent<DynamicBone>();
									if (component20 != null && component20.enabled)
									{
										component20.m_Gravity = new Vector3(this.softG.x * 5f, (this.softG.y + 0.003f) * 5f, this.softG.z * 5f);
									}
								}
								List<THair1> fieldValue12 = ManyMaids.GetFieldValue<TBoneHair_, List<THair1>>(maid34.body0.goSlot[num428].bonehair, "hair1list");
								for (int num429 = 0; num429 < fieldValue12.Count; num429 = j + 1)
								{
									fieldValue12[num429].SoftG = new Vector3(this.softG.x, this.softG.y + this.kamiyure, this.softG.z);
									j = num429;
								}
								j = num428;
							}
							j = num427;
						}
					}
				}
				else if (!flag53)
				{
					Vector3 vector34 = this.mainCameraTransform.TransformDirection(Vector3.forward);
					Vector3 vector35 = this.mainCameraTransform.TransformDirection(Vector3.right);
					Vector3 vector36 = this.mainCameraTransform.TransformDirection(Vector3.up);
					if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.J))
					{
						Vector3 vector = this.softG2;
						vector += new Vector3(vector34.x, 0f, vector34.z) * 4E-05f * this.speed;
						Vector3 vector6 = this.softG2 = vector + new Vector3(vector35.x, 0f, vector35.z) * -4E-05f * this.speed;
						vector = vector6;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.L))
					{
						Vector3 vector = this.softG2;
						vector += new Vector3(vector34.x, 0f, vector34.z) * 4E-05f * this.speed;
						Vector3 vector6 = this.softG2 = vector + new Vector3(vector35.x, 0f, vector35.z) * 4E-05f * this.speed;
						vector = vector6;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.J))
					{
						Vector3 vector = this.softG2;
						vector += new Vector3(vector34.x, 0f, vector34.z) * -4E-05f * this.speed;
						Vector3 vector6 = this.softG2 = vector + new Vector3(vector35.x, 0f, vector35.z) * -4E-05f * this.speed;
						vector = vector6;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.L))
					{
						Vector3 vector = this.softG2;
						vector += new Vector3(vector34.x, 0f, vector34.z) * -4E-05f * this.speed;
						Vector3 vector6 = this.softG2 = vector + new Vector3(vector35.x, 0f, vector35.z) * 4E-05f * this.speed;
						vector = vector6;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.I))
					{
						Vector3 vector = this.softG2;
						Vector3 vector6 = this.softG2 = vector + new Vector3(vector34.x, 0f, vector34.z) * 4E-05f * this.speed;
						vector = vector6;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.K))
					{
						Vector3 vector = this.softG2;
						Vector3 vector6 = this.softG2 = vector + new Vector3(vector34.x, 0f, vector34.z) * -4E-05f * this.speed;
						vector = vector6;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.J))
					{
						Vector3 vector = this.softG2;
						Vector3 vector6 = this.softG2 = vector + new Vector3(vector35.x, 0f, vector35.z) * -4E-05f * this.speed;
						vector = vector6;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.L))
					{
						Vector3 vector = this.softG2;
						Vector3 vector6 = this.softG2 = vector + new Vector3(vector35.x, 0f, vector35.z) * 4E-05f * this.speed;
						vector = vector6;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.Alpha0))
					{
						Vector3 vector = this.softG2;
						ref float ptr4 = ref vector.y;
						ptr4 += 2E-05f * this.speed;
						this.softG2 = vector;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.P))
					{
						Vector3 vector = this.softG2;
						ref float ptr4 = ref vector.y;
						ptr4 -= 2E-05f * this.speed;
						this.softG2 = vector;
					}
					else if (Input.GetKey(KeyCode.A) && Input.GetKey(KeyCode.BackQuote) && !this.atFlg)
					{
						this.softG2 = new Vector3(0f, -0.005f, 0f);
					}
					for (int num430 = 0; num430 < this.maidCnt; num430 = j + 1)
					{
						Maid maid35 = this.maidArray[num430];
						for (int num431 = 0; num431 < maid35.body0.goSlot.Count; num431 = j + 1)
						{
							if (maid35.body0.goSlot[num431].obj != null)
							{
								DynamicSkirtBone fieldValue13 = ManyMaids.GetFieldValue<BoneHair3, DynamicSkirtBone>(this.maidArray[num430].body0.goSlot[num431].bonehair3, "m_SkirtBone");
								if (fieldValue13 != null)
								{
									fieldValue13.m_vGravity = new Vector3(this.softG2.x, this.softG2.y, this.softG2.z);
									fieldValue13.UpdateParameters();
								}
							}
							j = num431;
						}
						j = num430;
					}
				}
			}
			if (!this.isVR)
			{
				if (this.doguObject.Count > 0)
				{
					Vector3 vector37 = this.mainCameraTransform.TransformDirection(Vector3.forward);
					Vector3 vector38 = this.mainCameraTransform.TransformDirection(Vector3.right);
					Vector3 vector39 = this.mainCameraTransform.TransformDirection(Vector3.up);
					if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.E))
					{
						this.idoFlg2 = true;
						this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(this.doguObject[this.doguSelectIndex].transform.localScale.x * 1.005f, this.doguObject[this.doguSelectIndex].transform.localScale.y * 1.005f, this.doguObject[this.doguSelectIndex].transform.localScale.z * 1.005f);
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.D))
					{
						this.idoFlg2 = true;
						this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(this.doguObject[this.doguSelectIndex].transform.localScale.x * 0.995f, this.doguObject[this.doguSelectIndex].transform.localScale.y * 0.995f, this.doguObject[this.doguSelectIndex].transform.localScale.z * 0.995f);
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKeyDown(KeyCode.C))
					{
						this.idoFlg2 = true;
						this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(1f, 1f, 1f);
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.U))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, Vector3.up, -0.7f);
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.O))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, Vector3.up, 0.7f);
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKeyDown(KeyCode.BackQuote) && this.getModKeyPressing(ManyMaids.modKey.Alt))
					{
						for (int num432 = 0; num432 < 10; num432 = j + 1)
						{
							Transform transform38 = this.doguObject[this.doguSelectIndex].transform;
							Vector3 position5 = this.doguObject[this.doguSelectIndex].transform.position;
							Vector3 right3 = Vector3.right;
							transform38.RotateAround(position5, right3, 0f - this.doguObject[this.doguSelectIndex].transform.rotation.eulerAngles.x);
							Transform transform39 = this.doguObject[this.doguSelectIndex].transform;
							Vector3 position6 = this.doguObject[this.doguSelectIndex].transform.position;
							Vector3 forward3 = Vector3.forward;
							transform39.RotateAround(position6, forward3, 0f - this.doguObject[this.doguSelectIndex].transform.rotation.eulerAngles.z);
							j = num432;
						}
						this.idoFlg2 = true;
						Vector3 vector = Vector3.zero;
						Vector3 zero3 = Vector3.zero;
						zero3.x = -90f;
						j = this.doguIndex[this.doguSelectIndex];
						switch (j)
						{
						case 3:
							vector.z = 0.5f;
							zero3.z = 90f;
							break;
						case 4:
						case 5:
						case 7:
						case 10:
						case 11:
							break;
						case 6:
							vector.z = 0.6f;
							zero3.x = 0f;
							break;
						case 8:
							vector.z = 0.5f;
							zero3.x = 0f;
							break;
						case 9:
							vector.z = 0.32f;
							zero3.z = 180f;
							break;
						case 12:
							vector.z = 0.5f;
							zero3.z = 180f;
							break;
						case 13:
							vector.z = 0.7f;
							zero3.z = 180f;
							break;
						default:
							if (j != 16)
							{
								switch (j)
								{
								case 23:
									vector.z = 2.7f;
									vector.x = 0.77f;
									zero3.z = 90f;
									break;
								case 25:
									vector.z = 0.5f;
									vector.y = 0.9f;
									zero3.z = 180f;
									break;
								case 26:
									vector.z = 0.5f;
									vector.y = 0.9f;
									zero3.z = 180f;
									break;
								case 30:
									vector.z = 0f;
									zero3.z = 0f;
									break;
								case 31:
									vector.z = -0.6f;
									vector.y = 0.96f;
									zero3.z = 180f;
									break;
								case 32:
									vector.z = -0.6f;
									vector.y = 0.96f;
									zero3.z = 180f;
									break;
								case 33:
									vector.z = -0.6f;
									vector.y = 0.85f;
									zero3.z = 180f;
									break;
								}
							}
							else
							{
								vector.z = -0.4f;
								zero3.z = 180f;
							}
							break;
						}
						this.doguObject[this.doguSelectIndex].transform.localRotation = Quaternion.Euler(zero3);
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.J))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector38.x, 0f, vector38.z), 0.3f);
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector37.x, 0f, vector37.z), 0.3f);
						this.idoFlg2 = true;
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.L))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector38.x, 0f, vector38.z), 0.3f);
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector37.x, 0f, vector37.z), -0.3f);
						this.idoFlg2 = true;
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.J))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector38.x, 0f, vector38.z), -0.3f);
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector37.x, 0f, vector37.z), 0.3f);
						this.idoFlg2 = true;
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.L))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector38.x, 0f, vector38.z), -0.3f);
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector37.x, 0f, vector37.z), -0.3f);
						this.idoFlg2 = true;
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.I))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector38.x, 0f, vector38.z), 0.4f);
						this.idoFlg2 = true;
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.K))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector38.x, 0f, vector38.z), -0.4f);
						this.idoFlg2 = true;
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.J))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector37.x, 0f, vector37.z), 0.4f);
						this.idoFlg2 = true;
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.L))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector37.x, 0f, vector37.z), -0.4f);
						this.idoFlg2 = true;
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.U))
					{
						this.doguObject[this.doguSelectIndex].transform.localRotation = Quaternion.Euler(this.doguObject[this.doguSelectIndex].transform.localEulerAngles) * Quaternion.AngleAxis(-1.5f, Vector3.up);
						this.idoFlg2 = true;
					}
					else if (Input.GetKey(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Alt) && Input.GetKey(KeyCode.O))
					{
						this.doguObject[this.doguSelectIndex].transform.localRotation = Quaternion.Euler(this.doguObject[this.doguSelectIndex].transform.localEulerAngles) * Quaternion.AngleAxis(1.5f, Vector3.up);
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && ((Input.GetKey(KeyCode.Minus) && this.getModKeyPressing(ManyMaids.modKey.Shift)) || (Input.GetKey(KeyCode.K) && this.getModKeyPressing(ManyMaids.modKey.Alt))))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector38.x, 0f, vector38.z), -0.7f);
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && ((Input.GetKey(KeyCode.Quote) && this.getModKeyPressing(ManyMaids.modKey.Shift)) || (Input.GetKey(KeyCode.I) && this.getModKeyPressing(ManyMaids.modKey.Alt))))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector38.x, 0f, vector38.z), 0.7f);
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && (Input.GetKey(KeyCode.Minus) || (Input.GetKey(KeyCode.J) && this.getModKeyPressing(ManyMaids.modKey.Alt))))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector37.x, 0f, vector37.z), 0.7f);
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && (Input.GetKey(KeyCode.Quote) || (Input.GetKey(KeyCode.L) && this.getModKeyPressing(ManyMaids.modKey.Alt))))
					{
						this.doguObject[this.doguSelectIndex].transform.RotateAround(this.doguObject[this.doguSelectIndex].transform.position, new Vector3(vector37.x, 0f, vector37.z), -0.7f);
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.J))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						vector += new Vector3(vector37.x, 0f, vector37.z) * 0.0075f * this.speed;
						vector += new Vector3(vector38.x, 0f, vector38.z) * -0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.L))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						vector += new Vector3(vector37.x, 0f, vector37.z) * 0.0075f * this.speed;
						vector += new Vector3(vector38.x, 0f, vector38.z) * 0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.J))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						vector += new Vector3(vector37.x, 0f, vector37.z) * -0.0075f * this.speed;
						vector += new Vector3(vector38.x, 0f, vector38.z) * -0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.L))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						vector += new Vector3(vector37.x, 0f, vector37.z) * -0.0075f * this.speed;
						vector += new Vector3(vector38.x, 0f, vector38.z) * 0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.I))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						vector += new Vector3(vector37.x, 0f, vector37.z) * 0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.K))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						vector += new Vector3(vector37.x, 0f, vector37.z) * -0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.J))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						vector += new Vector3(vector38.x, 0f, vector38.z) * -0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.L))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						vector += new Vector3(vector38.x, 0f, vector38.z) * 0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.Alpha0))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						ref float ptr4 = ref vector.y;
						ptr4 += 0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKey(KeyCode.P))
					{
						Vector3 vector = this.doguObject[this.doguSelectIndex].transform.position;
						ref float ptr4 = ref vector.y;
						ptr4 -= 0.0075f * this.speed;
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.idoFlg2 = true;
					}
					else if (this.doguObject[this.doguSelectIndex] && Input.GetKey(KeyCode.W) && Input.GetKeyDown(KeyCode.BackQuote) && !this.atFlg)
					{
						this.idoFlg2 = true;
						if (this.doguObject.Count > 0 && this.doguObject[this.doguSelectIndex] != null)
						{
							UnityEngine.Object.Destroy(this.doguObject[this.doguSelectIndex]);
							this.doguObject.RemoveAt(this.doguSelectIndex);
						}
						this.doguIndex.RemoveAt(this.doguSelectIndex);
						this.doguSelectIndex = 0;
					}
				}
				if (Input.GetKeyDown(KeyCode.W) && this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.idoFlg2 = true;
					if (this.doguSelectIndex == this.doguObject.Count)
					{
						this.doguIndex.Add(0);
					}
					else if (this.doguObject.Count > 0 && this.doguObject[this.doguSelectIndex] != null)
					{
						UnityEngine.Object.Destroy(this.doguObject[this.doguSelectIndex]);
						this.doguObject.RemoveAt(this.doguSelectIndex);
					}
					else
					{
						this.doguIndex.Add(0);
						this.doguSelectIndex = this.doguIndex.Count - 1;
					}
					List<int> list9;
					int index;
					(list9 = this.doguIndex)[index = this.doguSelectIndex] = list9[index] - 1;
					if (this.doguIndex[this.doguSelectIndex] <= -1)
					{
						this.doguIndex[this.doguSelectIndex] = Class1.doguArray.Length - 1;
					}
					if (this.doguIndex[this.doguSelectIndex] > 0)
					{
						if (!Class1.doguArray[this.doguIndex[this.doguSelectIndex]].StartsWith("mirror"))
						{
							UnityEngine.Object @object = null;
							for (int num433 = 0; num433 < 5; num433 = j + 1)
							{
								@object = Resources.Load("Prefab/" + Class1.doguArray[this.doguIndex[this.doguSelectIndex]]);
								if (@object != null)
								{
									break;
								}
								(list9 = this.doguIndex)[index = this.doguSelectIndex] = list9[index] - 1;
								j = num433;
							}
							this.doguObject.Add(UnityEngine.Object.Instantiate(@object) as GameObject);
						}
						else
						{
							Material material = new Material(Shader.Find("Mirror"));
							GameObject gameObject9 = GameObject.CreatePrimitive(PrimitiveType.Plane);
							gameObject9.transform.localScale = new Vector3(0.3f, 1f, 0.3f);
							gameObject9.GetComponent<Renderer>().material = material;
							gameObject9.AddComponent<MirrorReflection2>();
							MirrorReflection2 component21 = gameObject9.GetComponent<MirrorReflection2>();
							component21.m_TextureSize = 2048;
							component21.m_ClipPlaneOffset = 0f;
							gameObject9.GetComponent<Renderer>().enabled = true;
							this.doguObject.Add(gameObject9);
						}
						Vector3 vector = Vector3.zero;
						Vector3 zero3 = Vector3.zero;
						zero3.x = -90f;
						switch (this.doguIndex[this.doguSelectIndex])
						{
						case 1:
							vector.z = -0.5f;
							goto IL_352E9;
						case 2:
							vector.z = -0.5f;
							goto IL_352E9;
						case 3:
							vector.z = 0.5f;
							zero3.z = 90f;
							goto IL_352E9;
						case 4:
							vector.z = 0.9f;
							goto IL_352E9;
						case 5:
							vector.z = 0.9f;
							goto IL_352E9;
						case 6:
							vector.z = 0.6f;
							zero3.x = 0f;
							this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(4.5f, 4.5f, 4.5f);
							goto IL_352E9;
						case 7:
							vector.z = 0.6f;
							this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(3.5f, 3.5f, 3.5f);
							goto IL_352E9;
						case 8:
							vector.z = 0.5f;
							zero3.x = 0f;
							goto IL_352E9;
						case 9:
							vector.z = 0.32f;
							zero3.z = 180f;
							goto IL_352E9;
						case 10:
							vector.z = 0.6f;
							goto IL_352E9;
						case 11:
							vector.z = 0.6f;
							goto IL_352E9;
						case 12:
							vector.z = 0.5f;
							zero3.z = 180f;
							goto IL_352E9;
						case 13:
							vector.z = 0.7f;
							zero3.z = 180f;
							goto IL_352E9;
						case 14:
							vector.z = -0.4f;
							goto IL_352E9;
						case 15:
							vector.z = -0.4f;
							goto IL_352E9;
						case 16:
							vector.z = -0.4f;
							zero3.z = 180f;
							goto IL_352E9;
						case 17:
							vector.z = -0.4f;
							goto IL_352E9;
						case 18:
							vector.z = -0.2f;
							goto IL_352E9;
						case 19:
							vector.z = 0f;
							goto IL_352E9;
						case 20:
							vector.z = 3.4f;
							vector.x = -1f;
							goto IL_352E9;
						case 21:
							vector.z = 3.4f;
							vector.x = -1f;
							goto IL_352E9;
						case 22:
							vector.z = 3.4f;
							vector.y = 0.3f;
							vector.x = -1f;
							goto IL_352E9;
						case 23:
							vector.z = 2.7f;
							vector.x = 0.77f;
							zero3.z = 90f;
							goto IL_352E9;
						case 25:
							vector.z = 0.5f;
							vector.y = 0.9f;
							zero3.z = 180f;
							goto IL_352E9;
						case 26:
							vector.z = 0.5f;
							vector.y = 0.9f;
							zero3.z = 180f;
							goto IL_352E9;
						case 29:
							vector.z = 0.5f;
							vector.x = -1.05f;
							goto IL_352E9;
						case 30:
							vector.z = -2.8f;
							zero3.z = 0f;
							zero3.x = 0f;
							this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.75f, 0.75f, 0.75f);
							goto IL_352E9;
						case 31:
							vector.z = -0.6f;
							vector.y = 0.96f;
							zero3.z = 180f;
							this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.2f, 0.4f, 0.2f);
							goto IL_352E9;
						case 32:
							vector.z = -0.6f;
							vector.y = 0.96f;
							zero3.z = 180f;
							this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.1f, 0.4f, 0.2f);
							goto IL_352E9;
						case 33:
							vector.z = -0.6f;
							vector.y = 0.85f;
							zero3.z = 180f;
							this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.03f, 0.18f, 0.124f);
							goto IL_352E9;
						}
						vector.z = 0.5f;
						IL_352E9:
						this.doguObject[this.doguSelectIndex].transform.localPosition = vector;
						this.doguObject[this.doguSelectIndex].transform.localRotation = Quaternion.Euler(zero3);
					}
					if (this.doguIndex[this.doguSelectIndex] == 0)
					{
						this.doguIndex.RemoveAt(this.doguSelectIndex);
					}
				}
				else if (Input.GetKeyDown(KeyCode.W))
				{
					for (int num434 = 0; num434 < this.keyArray.Length; num434 = j + 1)
					{
						if (Input.GetKey(this.keyArray[num434]))
						{
							this.wFlg = true;
							break;
						}
						j = num434;
					}
				}
				else if (Input.GetKeyUp(KeyCode.W))
				{
					if (this.wFlg)
					{
						this.wFlg = false;
					}
					else if (this.idoFlg2)
					{
						this.idoFlg2 = false;
					}
					else
					{
						if (this.doguObject.Count > 0 && this.doguObject[this.doguSelectIndex] != null)
						{
							UnityEngine.Object.Destroy(this.doguObject[this.doguSelectIndex]);
							this.doguObject.RemoveAt(this.doguSelectIndex);
						}
						else
						{
							this.doguIndex.Add(0);
							this.doguSelectIndex = this.doguIndex.Count - 1;
						}
						List<int> list10;
						int index2;
						(list10 = this.doguIndex)[index2 = this.doguSelectIndex] = list10[index2] + 1;
						if (this.doguIndex[this.doguSelectIndex] == Class1.doguArray.Length)
						{
							this.doguIndex[this.doguSelectIndex] = 0;
						}
						if (this.doguIndex[this.doguSelectIndex] > 0)
						{
							if (!Class1.doguArray[this.doguIndex[this.doguSelectIndex]].StartsWith("mirror"))
							{
								UnityEngine.Object object2 = null;
								for (int num435 = 0; num435 < 5; num435 = j + 1)
								{
									object2 = Resources.Load("Prefab/" + Class1.doguArray[this.doguIndex[this.doguSelectIndex]]);
									if (object2 != null)
									{
										break;
									}
									(list10 = this.doguIndex)[index2 = this.doguSelectIndex] = list10[index2] + 1;
									j = num435;
								}
								this.doguObject.Add(UnityEngine.Object.Instantiate(object2) as GameObject);
							}
							else
							{
								Material material2 = new Material(Shader.Find("Mirror"));
								GameObject gameObject10 = GameObject.CreatePrimitive(PrimitiveType.Plane);
								gameObject10.transform.localScale = new Vector3(0.3f, 1f, 0.3f);
								gameObject10.GetComponent<Renderer>().material = material2;
								gameObject10.AddComponent<MirrorReflection2>();
								MirrorReflection2 component22 = gameObject10.GetComponent<MirrorReflection2>();
								component22.m_TextureSize = 2048;
								component22.m_ClipPlaneOffset = 0f;
								gameObject10.GetComponent<Renderer>().enabled = true;
								this.doguObject.Add(gameObject10);
							}
							Vector3 vector = Vector3.zero;
							Vector3 zero3 = Vector3.zero;
							zero3.x = -90f;
							switch (this.doguIndex[this.doguSelectIndex])
							{
							case 1:
								vector.z = -0.5f;
								goto IL_35B70;
							case 2:
								vector.z = -0.5f;
								goto IL_35B70;
							case 3:
								vector.z = 0.5f;
								zero3.z = 90f;
								goto IL_35B70;
							case 4:
								vector.z = 0.9f;
								goto IL_35B70;
							case 5:
								vector.z = 0.9f;
								goto IL_35B70;
							case 6:
								vector.z = 0.6f;
								zero3.x = 0f;
								this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(4.5f, 4.5f, 4.5f);
								goto IL_35B70;
							case 7:
								vector.z = 0.6f;
								this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(3.5f, 3.5f, 3.5f);
								goto IL_35B70;
							case 8:
								vector.z = 0.5f;
								zero3.x = 0f;
								goto IL_35B70;
							case 9:
								vector.z = 0.32f;
								zero3.z = 180f;
								goto IL_35B70;
							case 10:
								vector.z = 0.6f;
								goto IL_35B70;
							case 11:
								vector.z = 0.6f;
								goto IL_35B70;
							case 12:
								vector.z = 0.5f;
								zero3.z = 180f;
								goto IL_35B70;
							case 13:
								vector.z = 0.7f;
								zero3.z = 180f;
								goto IL_35B70;
							case 14:
								vector.z = -0.4f;
								goto IL_35B70;
							case 15:
								vector.z = -0.4f;
								goto IL_35B70;
							case 16:
								vector.z = -0.4f;
								zero3.z = 180f;
								goto IL_35B70;
							case 17:
								vector.z = -0.4f;
								goto IL_35B70;
							case 18:
								vector.z = -0.2f;
								goto IL_35B70;
							case 19:
								vector.z = 0f;
								goto IL_35B70;
							case 20:
								vector.z = 3.4f;
								vector.x = -1f;
								goto IL_35B70;
							case 21:
								vector.z = 3.4f;
								vector.x = -1f;
								goto IL_35B70;
							case 22:
								vector.z = 3.4f;
								vector.y = 0.3f;
								vector.x = -1f;
								goto IL_35B70;
							case 23:
								vector.z = 2.7f;
								vector.x = 0.77f;
								zero3.z = 90f;
								goto IL_35B70;
							case 25:
								vector.z = 0.5f;
								vector.y = 0.9f;
								zero3.z = 180f;
								goto IL_35B70;
							case 26:
								vector.z = 0.5f;
								vector.y = 0.9f;
								zero3.z = 180f;
								goto IL_35B70;
							case 29:
								vector.z = 0.5f;
								vector.x = -1.05f;
								goto IL_35B70;
							case 30:
								vector.z = -2.8f;
								zero3.z = 0f;
								zero3.x = 0f;
								this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.75f, 0.75f, 0.75f);
								goto IL_35B70;
							case 31:
								vector.z = -0.6f;
								vector.y = 0.96f;
								zero3.z = 180f;
								this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.2f, 0.4f, 0.2f);
								goto IL_35B70;
							case 32:
								vector.z = -0.6f;
								vector.y = 0.96f;
								zero3.z = 180f;
								this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.1f, 0.4f, 0.2f);
								goto IL_35B70;
							case 33:
								vector.z = -0.6f;
								vector.y = 0.85f;
								zero3.z = 180f;
								this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.03f, 0.18f, 0.124f);
								goto IL_35B70;
							}
							vector.z = 0.5f;
						}
						IL_35B70:
						if (this.doguIndex[this.doguSelectIndex] == 0)
						{
							this.doguIndex.RemoveAt(this.doguSelectIndex);
						}
					}
				}
			}
			if (!this.isVR)
			{
				for (int num436 = 0; num436 < 999; num436 = j + 1)
				{
					if (this.gDogu[num436] != null)
					{
						this.gDogu[num436].GetComponent<Renderer>().enabled = false;
						this.gDogu[num436].SetActive(false);
						if (this.mDogu[num436].del)
						{
							this.mDogu[num436].del = false;
							UnityEngine.Object.Destroy(this.doguBObject[num436]);
							this.doguBObject.RemoveAt(num436);
						}
						else if (this.mDogu[num436].count > 0)
						{
							MouseDrag6 mouseDrag = this.mDogu[num436];
							MouseDrag6 mouseDrag2 = mouseDrag;
							j = mouseDrag.count;
							mouseDrag2.count = j - 1;
							if (this.doguBObject.Count > num436 && this.doguBObject[num436] != null && this.doguBObject[num436].name.StartsWith("Particle/p"))
							{
								if (this.mDogu[num436].count == 1)
								{
									this.doguBObject[num436].SetActive(false);
								}
								if (this.mDogu[num436].count == 0)
								{
									this.doguBObject[num436].SetActive(true);
									string name = this.doguBObject[num436].name;
									if (!(name == "Particle/pLineY"))
									{
										if (!(name == "Particle/pLineP02"))
										{
											if (!(name == "Particle/pLine_act2"))
											{
												if (name == "Particle/pHeart01")
												{
													this.mDogu[num436].count = 77;
												}
											}
											else
											{
												this.mDogu[num436].count = 90;
											}
										}
										else
										{
											this.mDogu[num436].count = 115;
										}
									}
									else
									{
										this.mDogu[num436].count = 180;
									}
								}
							}
						}
					}
					j = num436;
				}
				if (Input.GetKey(KeyCode.Z) && this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.ikMode2 = 11;
				}
				else if (Input.GetKey(KeyCode.Z) && this.getModKeyPressing(ManyMaids.modKey.Ctrl))
				{
					this.ikMode2 = 12;
				}
				else if (Input.GetKey(KeyCode.X) && this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.ikMode2 = 14;
				}
				else if (Input.GetKey(KeyCode.X))
				{
					this.ikMode2 = 9;
				}
				else if (Input.GetKey(KeyCode.Z))
				{
					this.ikMode2 = 10;
				}
				else if (Input.GetKey(KeyCode.C))
				{
					this.ikMode2 = 13;
				}
				else if (Input.GetKey(KeyCode.D))
				{
					this.ikMode2 = 15;
				}
				else
				{
					this.ikMode2 = 0;
				}
				if (this.gBg != null)
				{
					if (!this.isCube3)
					{
						this.gBg.GetComponent<Renderer>().enabled = false;
						this.gBg.SetActive(false);
					}
					else
					{
						if (this.ikMode2 > 0 && this.ikMode2 != 15)
						{
							this.gBg.GetComponent<Renderer>().enabled = true;
							this.gBg.SetActive(true);
						}
						else
						{
							this.gBg.GetComponent<Renderer>().enabled = false;
							this.gBg.SetActive(false);
						}
						if (this.ikMode2 == 10 || this.ikMode2 == 11 || this.ikMode2 == 12)
						{
							this.gBg.GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
						}
						if (this.ikMode2 == 9 || this.ikMode2 == 14)
						{
							this.gBg.GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f, 0.5f);
							this.mBg.Update();
						}
						if (this.ikMode2 == 13)
						{
							this.gBg.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.3f, 0.5f);
							this.mBg.Update();
						}
						if (this.ikMode2 == 13)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 13 && this.gBg)
							{
								this.mBg.ido = 5;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 5;
							}
						}
						else if (this.ikMode2 == 11)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 11 && this.gBg)
							{
								this.mBg.ido = 3;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 3;
							}
						}
						else if (this.ikMode2 == 12)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 12 && this.gBg)
							{
								this.mBg.ido = 2;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 2;
							}
						}
						else if (this.ikMode2 == 10)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 10 && this.gBg)
							{
								this.mBg.ido = 1;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 1;
							}
						}
						else if (this.ikMode2 == 9)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 9 && this.gBg)
							{
								this.mBg.ido = 4;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 4;
							}
						}
						else if (this.ikMode2 == 14)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 14 && this.gBg)
							{
								this.mBg.ido = 6;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 6;
							}
						}
					}
				}
				for (int num437 = 0; num437 < this.lightIndex.Count; num437 = j + 1)
				{
					if (this.gLight[0] == null)
					{
						this.gLight[0] = GameObject.CreatePrimitive(PrimitiveType.Cube);
						Material material3 = new Material(Shader.Find("Transparent/Diffuse"));
						material3.color = new Color(0.5f, 0.5f, 1f, 0.8f);
						this.gLight[0].GetComponent<Renderer>().material = material3;
						this.gLight[0].layer = 8;
						this.gLight[0].GetComponent<Renderer>().enabled = false;
						this.gLight[0].SetActive(false);
						this.gLight[0].transform.position = GameMain.Instance.MainLight.transform.position;
						this.mLight[0] = this.gLight[0].AddComponent<MouseDrag6>();
						this.mLight[0].obj = this.gLight[0];
						this.mLight[0].maid = GameMain.Instance.MainLight.gameObject;
						this.mLight[0].angles = GameMain.Instance.MainLight.gameObject.transform.eulerAngles;
						this.gLight[0].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
						this.mLight[0].ido = 1;
						this.mLight[0].isScale = false;
					}
					if (this.gLight[num437] != null)
					{
						if (!this.isCube4)
						{
							this.gLight[num437].GetComponent<Renderer>().enabled = false;
							this.gLight[num437].SetActive(false);
						}
						else if (this.lightList[num437].GetComponent<Light>().type == LightType.Spot || this.lightList[num437].GetComponent<Light>().type == LightType.Point)
						{
							if (this.ikMode2 > 0 && this.ikMode2 != 15)
							{
								this.gLight[num437].GetComponent<Renderer>().enabled = true;
								this.gLight[num437].SetActive(true);
							}
							else
							{
								this.gLight[num437].GetComponent<Renderer>().enabled = false;
								this.gLight[num437].SetActive(false);
								this.mLight[num437].isAlt = false;
							}
							if (this.ikMode2 == 10 || this.ikMode2 == 11 || this.ikMode2 == 12)
							{
								this.gLight[num437].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
								if (this.mLight[num437].isAlt)
								{
									this.gLight[num437].GetComponent<Renderer>().material.color = new Color(0.6f, 0.6f, 1f, 0.5f);
								}
							}
							if (this.ikMode2 == 9 || this.ikMode2 == 14)
							{
								this.gLight[num437].GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f, 0.5f);
								this.mLight[num437].Update();
							}
							if (this.ikMode2 == 13)
							{
								this.gLight[num437].GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.3f, 0.5f);
								this.mLight[num437].Update();
							}
							if (this.ikMode2 == 13)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 13 && this.gLight[num437])
								{
									this.mLight[num437].ido = 15;
									this.mLight[num437].reset = true;
								}
								else
								{
									if (this.lightList[num437].transform.localScale.x == 1f)
									{
										this.lightList[num437].transform.localScale = new Vector3(this.lightRange[num437], this.lightRange[num437], this.lightRange[num437]);
									}
									this.lightRange[num437] = this.lightList[num437].transform.localScale.x;
									this.gLight[num437].transform.position = this.lightList[num437].transform.position;
									this.gLight[num437].transform.eulerAngles = this.lightList[num437].transform.eulerAngles;
									this.mLight[num437].maid = this.lightList[num437];
									this.mLight[num437].ido = 15;
								}
							}
							else if (this.ikMode2 == 11)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 11 && this.gLight[num437])
								{
									this.mLight[num437].ido = 3;
									this.mLight[num437].reset = true;
								}
								else
								{
									this.gLight[num437].transform.position = this.lightList[num437].transform.position;
									this.gLight[num437].transform.eulerAngles = this.lightList[num437].transform.eulerAngles;
									this.lightX[num437] = this.gLight[num437].transform.eulerAngles.x;
									this.lightY[num437] = this.gLight[num437].transform.eulerAngles.y;
									this.mLight[num437].maid = this.lightList[num437];
									this.mLight[num437].ido = 3;
								}
							}
							else if (this.ikMode2 == 12)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 12 && this.gLight[num437])
								{
									this.mLight[num437].ido = 2;
									this.mLight[num437].reset = true;
								}
								else
								{
									this.gLight[num437].transform.position = this.lightList[num437].transform.position;
									this.gLight[num437].transform.eulerAngles = this.lightList[num437].transform.eulerAngles;
									this.mLight[num437].maid = this.lightList[num437];
									this.mLight[num437].ido = 2;
								}
							}
							else if (this.ikMode2 == 10)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 10 && this.gLight[num437])
								{
									this.mLight[num437].ido = 1;
									this.mLight[num437].reset = true;
								}
								else
								{
									this.gLight[num437].transform.position = this.lightList[num437].transform.position;
									this.gLight[num437].transform.eulerAngles = this.lightList[num437].transform.eulerAngles;
									this.mLight[num437].maid = this.lightList[num437];
									this.mLight[num437].maidArray = this.lightList.ToArray();
									this.mLight[num437].mArray = this.mLight.ToArray<MouseDrag6>();
									this.mLight[num437].ido = 1;
								}
							}
							else if (this.ikMode2 == 9)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 9 && this.gLight[num437])
								{
									this.mLight[num437].ido = 4;
									this.mLight[num437].reset = true;
								}
								else
								{
									this.gLight[num437].transform.position = this.lightList[num437].transform.position;
									this.gLight[num437].transform.eulerAngles = this.lightList[num437].transform.eulerAngles;
									this.lightX[num437] = this.gLight[num437].transform.eulerAngles.x;
									this.lightY[num437] = this.gLight[num437].transform.eulerAngles.y;
									this.mLight[num437].maid = this.lightList[num437];
									this.mLight[num437].ido = 4;
								}
							}
							else if (this.ikMode2 == 14)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 14 && this.gLight[num437])
								{
									this.mLight[num437].ido = 6;
									this.mLight[num437].reset = true;
								}
								else
								{
									this.gLight[num437].transform.position = this.lightList[num437].transform.position;
									this.gLight[num437].transform.eulerAngles = this.lightList[num437].transform.eulerAngles;
									this.lightX[num437] = this.gLight[num437].transform.eulerAngles.x;
									this.lightY[num437] = this.gLight[num437].transform.eulerAngles.y;
									this.mLight[num437].maid = this.lightList[num437];
									this.mLight[num437].ido = 6;
								}
							}
						}
					}
					j = num437;
				}
				for (int num438 = 0; num438 < this.doguBObject.Count; num438 = j + 1)
				{
					if (!this.isCube2)
					{
						this.gDogu[num438].GetComponent<Renderer>().enabled = false;
						this.gDogu[num438].SetActive(false);
					}
					else
					{
						if (this.ikMode2 > 0)
						{
							this.gDogu[num438].GetComponent<Renderer>().enabled = true;
							this.gDogu[num438].SetActive(true);
						}
						else
						{
							this.gDogu[num438].GetComponent<Renderer>().enabled = false;
							this.gDogu[num438].SetActive(false);
							this.mDogu[num438].isAlt = false;
						}
						if (this.ikMode2 == 10 || this.ikMode2 == 11 || this.ikMode2 == 12)
						{
							this.gDogu[num438].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
							if (this.mDogu[num438].isAlt)
							{
								this.gDogu[num438].GetComponent<Renderer>().material.color = new Color(0.6f, 0.6f, 1f, 0.5f);
							}
						}
						if (this.ikMode2 == 9 || this.ikMode2 == 14)
						{
							this.gDogu[num438].GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f, 0.5f);
							this.mDogu[num438].Update();
						}
						if (this.ikMode2 == 15)
						{
							this.gDogu[num438].GetComponent<Renderer>().material.color = new Color(1f, 0.3f, 0.3f, 0.5f);
						}
						if (this.ikMode2 == 13)
						{
							this.gDogu[num438].GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.3f, 0.5f);
							this.mDogu[num438].Update();
						}
						if (this.ikMode2 == 13)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 13 && this.gDogu[num438])
							{
								this.mDogu[num438].ido = 5;
								this.mDogu[num438].reset = true;
							}
							else
							{
								this.gDogu[num438].transform.position = this.doguBObject[num438].transform.position;
								this.gDogu[num438].transform.eulerAngles = this.doguBObject[num438].transform.eulerAngles;
								this.mDogu[num438].maid = this.doguBObject[num438];
								this.mDogu[num438].ido = 5;
							}
						}
						else if (this.ikMode2 == 11)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 11 && this.gDogu[num438])
							{
								this.mDogu[num438].ido = 3;
								this.mDogu[num438].reset = true;
							}
							else
							{
								this.gDogu[num438].transform.position = this.doguBObject[num438].transform.position;
								this.gDogu[num438].transform.eulerAngles = this.doguBObject[num438].transform.eulerAngles;
								this.mDogu[num438].maid = this.doguBObject[num438];
								this.mDogu[num438].ido = 3;
							}
						}
						else if (this.ikMode2 == 12)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 12 && this.gDogu[num438])
							{
								this.mDogu[num438].ido = 2;
								this.mDogu[num438].reset = true;
							}
							else
							{
								this.gDogu[num438].transform.position = this.doguBObject[num438].transform.position;
								this.gDogu[num438].transform.eulerAngles = this.doguBObject[num438].transform.eulerAngles;
								this.mDogu[num438].maid = this.doguBObject[num438];
								this.mDogu[num438].ido = 2;
							}
						}
						else if (this.ikMode2 == 10)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 10 && this.gDogu[num438])
							{
								this.mDogu[num438].ido = 1;
								this.mDogu[num438].reset = true;
							}
							else
							{
								this.gDogu[num438].transform.position = this.doguBObject[num438].transform.position;
								this.gDogu[num438].transform.eulerAngles = this.doguBObject[num438].transform.eulerAngles;
								this.mDogu[num438].maid = this.doguBObject[num438];
								this.mDogu[num438].maidArray = this.doguBObject.ToArray();
								this.mDogu[num438].mArray = this.mDogu.ToArray<MouseDrag6>();
								this.mDogu[num438].ido = 1;
							}
						}
						else if (this.ikMode2 == 9)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 9 && this.gDogu[num438])
							{
								this.mDogu[num438].ido = 4;
								this.mDogu[num438].reset = true;
							}
							else
							{
								this.gDogu[num438].transform.position = this.doguBObject[num438].transform.position;
								this.gDogu[num438].transform.eulerAngles = this.doguBObject[num438].transform.eulerAngles;
								this.mDogu[num438].maid = this.doguBObject[num438];
								this.mDogu[num438].ido = 4;
							}
						}
						else if (this.ikMode2 == 14)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 14 && this.gDogu[num438])
							{
								this.mDogu[num438].ido = 6;
								this.mDogu[num438].reset = true;
							}
							else
							{
								this.gDogu[num438].transform.position = this.doguBObject[num438].transform.position;
								this.gDogu[num438].transform.eulerAngles = this.doguBObject[num438].transform.eulerAngles;
								this.mDogu[num438].maid = this.doguBObject[num438];
								this.mDogu[num438].ido = 6;
							}
						}
						else if (this.ikMode2 == 15)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 15 && this.gDogu[num438])
							{
								this.mDogu[num438].ido = 7;
								this.mDogu[num438].reset = true;
							}
							else
							{
								this.gDogu[num438].transform.position = this.doguBObject[num438].transform.position;
								this.gDogu[num438].transform.eulerAngles = this.doguBObject[num438].transform.eulerAngles;
								this.mDogu[num438].maid = this.doguBObject[num438];
								this.mDogu[num438].ido = 7;
							}
						}
					}
					j = num438;
				}
				this.ikModeOld2 = this.ikMode2;
			}
			if (!this.isVR)
			{
				return;
			}
			if (Input.GetKeyDown(KeyCode.F8) && this.getModKeyPressing(ManyMaids.modKey.Shift))
			{
				if (!this.isVR2)
				{
					this.isVR2 = true;
					base.Preferences["config"]["shift_f8"].Value = "true";
					base.SaveConfig();
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				else
				{
					this.isVR2 = false;
					base.Preferences["config"]["shift_f8"].Value = "false";
					base.SaveConfig();
					GameMain.Instance.SoundMgr.PlaySe("se003.ogg", false);
				}
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha1))
			{
				this.loadScene = 1;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha2))
			{
				this.loadScene = 2;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha3))
			{
				this.loadScene = 3;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha4))
			{
				this.loadScene = 4;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha5))
			{
				this.loadScene = 5;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha6))
			{
				this.loadScene = 6;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha7))
			{
				this.loadScene = 7;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha8))
			{
				this.loadScene = 8;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha9))
			{
				this.loadScene = 9;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			if (Input.GetKey(KeyCode.F8) && Input.GetKeyDown(KeyCode.Alpha0))
			{
				this.loadScene = 10;
				GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
			}
			for (int num439 = 0; num439 < 7; num439 = j + 1)
			{
				if (!this.maidArray[num439])
				{
					this.maidArray[num439] = GameMain.Instance.CharacterMgr.GetMaid(num439);
				}
				j = num439;
			}
		}

		// Token: 0x06000056 RID: 86 RVA: 0x00080250 File Offset: 0x0007E450
		private static string[] ProcScriptBin(Maid maid, byte[] cd, string filename, bool f_bTemp)
		{
			TBody body = maid.body0;
			List<ManyMaids.LastParam> list = new List<ManyMaids.LastParam>();
			BinaryReader binaryReader = new BinaryReader(new MemoryStream(cd), Encoding.UTF8);
			string text = binaryReader.ReadString();
			NDebug.Assert(text == "CM3D2_MENU", "ProcScriptBin 例外 : ヘッダーファイルが不正です。" + text);
			binaryReader.ReadInt32();
			string path = binaryReader.ReadString();
			binaryReader.ReadString();
			binaryReader.ReadString();
			binaryReader.ReadString();
			binaryReader.ReadInt32();
			string text2 = string.Empty;
			string empty = string.Empty;
			string empty2 = string.Empty;
			string empty3 = string.Empty;
			string[] array = new string[100];
			int num = 0;
			try
			{
				for (;;)
				{
					int num2 = (int)binaryReader.ReadByte();
					text2 = string.Empty;
					if (num2 == 0)
					{
						break;
					}
					for (int i = 0; i < num2; i++)
					{
						text2 = text2 + "\"" + binaryReader.ReadString() + "\" ";
					}
					if (!(text2 == string.Empty))
					{
						string stringCom = UTY.GetStringCom(text2);
						string[] stringList = UTY.GetStringList(text2);
						if (stringCom == "end")
						{
							break;
						}
						if (!(stringCom == "name") && !(stringCom == "set") && !(stringCom == "setname"))
						{
							if (stringCom == "マテリアル変更")
							{
								int num3 = int.Parse(stringList[2]);
								if (stringList.Length == 4)
								{
									array[1 + num3] = stringList[3];
								}
								else
								{
									for (int j = 3; j < stringList.Length; j++)
									{
										if (stringList[j].Contains(".mate"))
										{
											array[1 + num] = stringList[j];
											num++;
										}
									}
								}
							}
							else if (stringCom == "additem")
							{
								array[0] = stringList[1];
							}
						}
					}
				}
				list.Sort((ManyMaids.LastParam a, ManyMaids.LastParam b) => a.nOrder - a.nOrder);
				for (int k = 0; k < list.Count; k++)
				{
					ManyMaids.LastParam lastParam = list[k];
					if (lastParam.strComm == "アイテムパラメータ")
					{
						body.GetSlot(lastParam.aryArgs[0]).SetParam(lastParam.aryArgs[1], lastParam.aryArgs[2]);
					}
				}
			}
			catch (Exception ex)
			{
				NDebug.Assert("メニューファイル処理中にエラーが発生しました。" + Path.GetFileName(path), false);
				throw ex;
			}
			binaryReader.Close();
			binaryReader = null;
			return array;
		}

		// Token: 0x06000057 RID: 87 RVA: 0x000804D8 File Offset: 0x0007E6D8
		public void Update()
		{
			PluginBase[] array = UnityEngine.Object.FindObjectsOfType<PluginBase>();
			if (array != null && this.chkMu)
			{
				try
				{
					for (int i2 = 0; i2 < array.Length; i2++)
					{
						if (array[i2].Name.Contains("StudioItemPlace") || array[i2].Name.Contains("StudioQuickMenu") || array[i2].Name.Contains("ChangeSkirtMotion") || array[i2].Name.Contains("DressDamage") || array[i2].Name.Contains("AutoEraseOutline") || array[i2].Name.Contains("LookAtOneMaidDance") || array[i2].Name.Contains("multiple maid"))
						{
							array[i2].enabled = false;
						}
					}
					if (!this.verval)
					{
						this.verval = true;
						string[] array94 = File.ReadAllLines(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\..\\..\\update.lst");
						int j = 0;
						while (j < array94.Length)
						{
							string text = array94[j];
							if (text.StartsWith("COM3D2x64.exe,"))
							{
								string text2 = text.Replace("COM3D2x64.exe,", "");
								while (text2.Length < 4)
								{
									text2 += "0";
								}
								int num = int.Parse(text2);
								if (num > 1330)
								{
									if (num > 0)
									{
										NDebug.Assert("", false);
									}
									this.overver = true;
									break;
								}
								break;
							}
							else
							{
								j++;
							}
						}
					}
				}
				catch (Exception)
				{
				}
			}
			if (!this.isInit)
			{
				return;
			}
			if (Input.GetKeyDown(KeyCode.G))
			{
				this.helpView = !this.helpView;
			}
			if (this.allowUpdate)
			{
				this.MaidUpdate();
				if (this.isFadeOut)
				{
					bool flag = false;
					for (int k = 0; k < this.maxMaidCnt; k++)
					{
						if (this.maidArray[k] && this.maidArray[k].Visible && this.maidArray[k].IsAllProcPropBusy)
						{
							flag = true;
						}
					}
					if (!flag)
					{
						if (!this.isBusyInit)
						{
							this.isBusyInit = true;
						}
						else
						{
							for (int l = 0; l < this.maxMaidCnt; l++)
							{
								if (!this.isLock[l] && this.maidArray[l] != null)
								{
									this.maidArray[l].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
									this.maidArray[l].SetAutoTwistAll(true);
								}
								this.poseCount[l] = 30;
								if (this.maidArray[l] && this.maidArray[l].Visible)
								{
									this.maidArray[l].body0.BoneHitHeightY = -10f;
									if (this.selectList.Count > l && this.goSlot[(int)this.selectList[l]] == null)
									{
										this.maidArray[l].CrossFade(this.poseArray[0] + ".anm", false, true, false, 0f, 1f);
										this.maidArray[l].SetAutoTwistAll(true);
										this.goSlot[(int)this.selectList[l]] = new List<TBodySkin>(this.maidArray[l].body0.goSlot);
										this.bodyHit[(int)this.selectList[l]] = new List<TBodyHit>();
										for (int m = 0; m < this.goSlot[(int)this.selectList[l]].Count; m++)
										{
											TBodyHit tbodyHit = new TBodyHit();
											TBodyHit bodyhit = this.maidArray[l].body0.goSlot[m].bonehair.bodyhit;
											if (bodyhit != null)
											{
												tbodyHit.spherelist = new List<THitSphere>(bodyhit.spherelist);
												tbodyHit.m_listHandHitL = new List<THitSphere>(bodyhit.m_listHandHitL);
												tbodyHit.m_listHandHitR = new List<THitSphere>(bodyhit.m_listHandHitR);
												tbodyHit.RotOffset = bodyhit.RotOffset;
												tbodyHit.tRoot = bodyhit.tRoot;
												tbodyHit.skrt_R1 = bodyhit.skrt_R1;
												tbodyHit.skrt_R2 = bodyhit.skrt_R2;
												tbodyHit.skrt_R3 = bodyhit.skrt_R3;
												tbodyHit.skrt_L1 = bodyhit.skrt_L1;
												tbodyHit.skrt_L2 = bodyhit.skrt_L2;
												tbodyHit.skrt_L3 = bodyhit.skrt_L3;
												tbodyHit.MOMO_FUTO = bodyhit.MOMO_FUTO;
												tbodyHit.HARA_FUTO = bodyhit.HARA_FUTO;
												tbodyHit.KOSHI_SCL = bodyhit.KOSHI_SCL;
												tbodyHit.KOSHI_SVAL = bodyhit.KOSHI_SVAL;
												tbodyHit.BodySkinTAG = bodyhit.BodySkinTAG;
												tbodyHit.SkirtFT = bodyhit.SkirtFT;
												tbodyHit.MST = bodyhit.MST;
												tbodyHit.MST_v = bodyhit.MST_v;
											}
											this.bodyHit[(int)this.selectList[l]].Add(tbodyHit);
										}
										if (!this.isVR)
										{
											try
											{
												this.shodaiFlg[(int)this.selectList[l]] = false;
												TMorph morph = this.maidArray[l].body0.Face.morph;
												float num2 = ManyMaids.GetFieldValue<TMorph, float[]>(morph, "BlendValues")[(int)morph.hash["tangopen"]];
											}
											catch
											{
												this.shodaiFlg[(int)this.selectList[l]] = true;
											}
											if (!this.isVR)
											{
												this.eyeL[(int)this.selectList[l]] = this.maidArray[l].body0.quaDefEyeL.eulerAngles;
												this.eyeR[(int)this.selectList[l]] = this.maidArray[l].body0.quaDefEyeR.eulerAngles;
											}
										}
										if (this.isKamiyure)
										{
											for (int n = 0; n < this.maidArray[l].body0.goSlot.Count; n++)
											{
												if (n >= 3 && n <= 6 && this.maidArray[l].body0.goSlot[n].obj != null)
												{
													DynamicBone component = this.maidArray[l].body0.goSlot[n].obj.GetComponent<DynamicBone>();
													if (component != null)
													{
														component.m_Damping = this.kamiyure2;
														component.m_Elasticity = this.kamiyure3;
														if (n == 5)
														{
															component.m_Elasticity = this.kamiyure3 / 20f;
														}
														component.m_Radius = this.kamiyure4;
														component.UpdateParameters();
													}
												}
											}
										}
									}
								}
							}
							this.isBusyInit = false;
							GameMain.Instance.MainCamera.FadeIn(1f, false, null, true, true, default(Color));
							this.isFadeOut = false;
							this.bGui = true;
						}
					}
				}
			}
			if (this.isVR && this.isVRScroll && !this.getModKeyPressing(ManyMaids.modKey.Ctrl) && !this.getModKeyPressing(ManyMaids.modKey.Alt) && !Input.GetKey(KeyCode.Space) && !Input.GetKey(KeyCode.Z) && !Input.GetKey(KeyCode.X) && !Input.GetKey(KeyCode.W) && !Input.GetKey(KeyCode.Q) && !Input.GetKey(KeyCode.R) && !Input.GetKey(KeyCode.E) && !Input.GetKey(KeyCode.Y) && !Input.GetKey(KeyCode.V) && !Input.GetKey(KeyCode.C) && !Input.GetKey(KeyCode.D) && !Input.GetKey(KeyCode.S))
			{
				Vector3 vector = ManyMaids.GetFieldValue<OvrCamera, Vector3>(GameMain.Instance.OvrMgr.OvrCamera, "v");
				string f_strObjName = "TrackingSpace/CenterEyeAnchor";
				if (GameMain.Instance.VRFamily == GameMain.VRFamilyType.HTC)
				{
					f_strObjName = "Main Camera (eye)";
				}
				Vector3 a = UTY.GetChildObject(this.mainCamera.gameObject, f_strObjName, false).transform.rotation * Vector3.forward;
				vector += a * (Input.GetAxis("Mouse ScrollWheel") * (5f * Time.deltaTime * 2f * 5f));
				ManyMaids.SetFieldValue3<OvrCamera, Vector3>(GameMain.Instance.OvrMgr.OvrCamera, "v", vector);
				Transform fieldValue = ManyMaids.GetFieldValue<OvrCamera, Transform>(GameMain.Instance.OvrMgr.OvrCamera, "m_trBaseHead");
				fieldValue.position = vector;
				ManyMaids.SetFieldValue4<OvrCamera, Transform>(GameMain.Instance.OvrMgr.OvrCamera, "m_trBaseHead", fieldValue);
			}
			if (this.isMekure1a || this.isMekure2a || this.isZurasia)
			{
				this.mekureCount = 10;
				for (int num3 = 0; num3 < this.maidCnt; num3++)
				{
					if (this.maidArray[num3] && this.maidArray[num3].Visible)
					{
						if (this.isMekure1a)
						{
							if (this.isMekure1)
							{
								this.maidArray[num3].ItemChangeTemp("skirt", "めくれスカート");
								this.maidArray[num3].ItemChangeTemp("onepiece", "めくれスカート");
							}
							else
							{
								this.ResetProp(this.maidArray[num3], MPN.accnail);
								this.ResetProp(this.maidArray[num3], MPN.accnip);
							}
							this.maidArray[num3].AllProcPropSeqStart();
						}
						if (this.isMekure2a)
						{
							if (this.isMekure2)
							{
								this.maidArray[num3].ItemChangeTemp("skirt", "めくれスカート後ろ");
								this.maidArray[num3].ItemChangeTemp("onepiece", "めくれスカート後ろ");
							}
							else
							{
								this.ResetProp(this.maidArray[num3], MPN.accnail);
								this.ResetProp(this.maidArray[num3], MPN.accnip);
							}
							this.maidArray[num3].AllProcPropSeqStart();
						}
						if (this.isZurasia)
						{
							if (this.isZurasi)
							{
								this.maidArray[num3].ItemChangeTemp("panz", "パンツずらし");
								this.maidArray[num3].ItemChangeTemp("mizugi", "パンツずらし");
							}
							else
							{
								this.ResetProp(this.maidArray[num3], MPN.mayu);
								this.ResetProp(this.maidArray[num3], MPN.underhair);
							}
							this.maidArray[num3].AllProcPropSeqStart();
						}
					}
				}
				this.isMekure1a = false;
				this.isMekure2a = false;
				this.isZurasia = false;
			}
			if (this.mekureCount > 0)
			{
				this.mekureCount--;
				for (int num4 = 0; num4 < this.maidCnt; num4++)
				{
					if (this.maidArray[num4] && this.maidArray[num4].Visible && this.goSlot[(int)this.selectList[num4]] != null)
					{
						this.maidArray[num4].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num4]]);
						for (int num5 = 0; num5 < this.bodyHit[(int)this.selectList[num4]].Count; num5++)
						{
							this.maidArray[num4].body0.goSlot[num5].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num4]][num5];
						}
					}
				}
			}
			if (this.isKamiyure)
			{
				int num6 = this.maidCnt;
				if (num6 == 0)
				{
					num6 = 3;
				}
				for (int num7 = 0; num7 < num6; num7++)
				{
					if (this.maidArray[num7] && this.maidArray[num7].Visible)
					{
						Maid maid = this.maidArray[num7];
						for (int num8 = 0; num8 < maid.body0.goSlot.Count; num8++)
						{
							if (num8 >= 3 && num8 <= 6 && maid.body0.goSlot[num8].obj != null)
							{
								DynamicBone component2 = maid.body0.goSlot[num8].obj.GetComponent<DynamicBone>();
								if (component2 != null && (component2.m_Damping != this.kamiyure2 || component2.m_Elasticity != this.kamiyure3 || component2.m_Radius != this.kamiyure4) && (num8 != 5 || component2.m_Damping != this.kamiyure2 || component2.m_Elasticity != this.kamiyure3 / 20f || component2.m_Radius != this.kamiyure4))
								{
									component2.m_Damping = this.kamiyure2;
									component2.m_Elasticity = this.kamiyure3;
									if (num8 == 5)
									{
										component2.m_Elasticity = this.kamiyure3 / 20f;
									}
									component2.m_Radius = this.kamiyure4;
									component2.UpdateParameters();
								}
							}
						}
					}
				}
			}
			if (this.isSkirtyure)
			{
				int num9 = this.maidCnt;
				if (num9 == 0)
				{
					num9 = 3;
				}
				for (int num10 = 0; num10 < num9; num10++)
				{
					if (this.maidArray[num10] && this.maidArray[num10].Visible)
					{
						for (int num11 = 0; num11 < this.maidArray[num10].body0.goSlot.Count; num11++)
						{
							if (this.maidArray[num10].body0.goSlot[num11].obj != null)
							{
								DynamicSkirtBone fieldValue2 = ManyMaids.GetFieldValue<BoneHair3, DynamicSkirtBone>(this.maidArray[num10].body0.goSlot[num11].bonehair3, "m_SkirtBone");
								if (fieldValue2 != null)
								{
									fieldValue2.m_vGravity = new Vector3(0.5f, 0.5f, 0.5f);
									if (fieldValue2.m_fPanierForce != this.skirtyure3 || fieldValue2.m_fPanierForceDistanceThreshold != this.skirtyure2 || fieldValue2.m_fRegDefaultRadius != this.skirtyure4)
									{
										fieldValue2.m_fPanierForce = this.skirtyure3;
										fieldValue2.m_fPanierForceDistanceThreshold = this.skirtyure2;
										fieldValue2.m_fRegDefaultRadius = this.skirtyure4;
									}
								}
							}
						}
					}
				}
			}
			if (((!Input.GetKey(KeyCode.KeypadEnter) && Input.GetKeyDown(KeyCode.Keypad1)) || Input.GetKeyDown(KeyCode.Keypad2) || Input.GetKeyDown(KeyCode.Keypad3) || Input.GetKeyDown(KeyCode.Keypad4) || Input.GetKeyDown(KeyCode.Keypad5) || Input.GetKeyDown(KeyCode.Keypad6) || Input.GetKeyDown(KeyCode.Keypad7) || Input.GetKeyDown(KeyCode.Keypad8) || Input.GetKeyDown(KeyCode.Keypad9) || Input.GetKeyDown(KeyCode.Keypad0) || Input.GetKeyDown(KeyCode.KeypadDivide) || Input.GetKeyDown(KeyCode.KeypadMultiply) || Input.GetKeyDown(KeyCode.KeypadMinus)) && (Input.GetKey(KeyCode.H) || this.isVR))
			{
				if (Input.GetKeyDown(KeyCode.Keypad1))
				{
					this.isWear = !this.isWear;
				}
				if (Input.GetKeyDown(KeyCode.Keypad2))
				{
					this.isSkirt = !this.isSkirt;
				}
				if (Input.GetKeyDown(KeyCode.Keypad3))
				{
					this.isBra = !this.isBra;
				}
				if (Input.GetKeyDown(KeyCode.Keypad4))
				{
					this.isPanz = !this.isPanz;
				}
				if (Input.GetKeyDown(KeyCode.Keypad5))
				{
					this.isHeadset = !this.isHeadset;
				}
				if (Input.GetKeyDown(KeyCode.Keypad6))
				{
					this.isAccUde = !this.isAccUde;
				}
				if (Input.GetKeyDown(KeyCode.Keypad7))
				{
					this.isGlove = !this.isGlove;
				}
				if (Input.GetKeyDown(KeyCode.Keypad8))
				{
					this.isStkg = !this.isStkg;
				}
				if (Input.GetKeyDown(KeyCode.Keypad9))
				{
					this.isShoes = !this.isShoes;
				}
				if (Input.GetKeyDown(KeyCode.Keypad0))
				{
					this.isAccSenaka = !this.isAccSenaka;
				}
				if (Input.GetKeyDown(KeyCode.KeypadDivide))
				{
					this.isMekure1 = !this.isMekure1;
				}
				if (Input.GetKeyDown(KeyCode.KeypadMultiply))
				{
					this.isMekure2 = !this.isMekure2;
				}
				if (Input.GetKeyDown(KeyCode.KeypadMinus))
				{
					this.isZurasi = !this.isZurasi;
				}
				this.h2Flg = true;
				if (this.sceneLevel != 3 && this.sceneLevel != 5)
				{
					this.maidArray[0] = GameMain.Instance.CharacterMgr.GetMaid(0);
					this.maidArray[1] = GameMain.Instance.CharacterMgr.GetMaid(1);
					this.maidArray[2] = GameMain.Instance.CharacterMgr.GetMaid(2);
					this.maidArray[3] = GameMain.Instance.CharacterMgr.GetMaid(3);
					this.maidCnt = 4;
				}
				for (int num12 = 0; num12 < this.maidCnt; num12++)
				{
					if (this.maidArray[num12] && this.maidArray[num12].Visible)
					{
						if (Input.GetKeyDown(KeyCode.KeypadDivide) || Input.GetKeyDown(KeyCode.KeypadMultiply) || Input.GetKeyDown(KeyCode.KeypadMinus))
						{
							if (this.sceneLevel == 3 || this.sceneLevel == 5)
							{
								if (!this.isVR && this.goSlot[(int)this.selectList[num12]] != null)
								{
									this.maidArray[num12].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num12]]);
									for (int num13 = 0; num13 < this.bodyHit[(int)this.selectList[num12]].Count; num13++)
									{
										this.maidArray[num12].body0.goSlot[num13].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num12]][num13];
									}
								}
								if (Input.GetKeyDown(KeyCode.KeypadDivide))
								{
									this.isMekure1a = true;
								}
								if (Input.GetKeyDown(KeyCode.KeypadMultiply))
								{
									this.isMekure2a = true;
								}
								if (Input.GetKeyDown(KeyCode.KeypadMinus))
								{
									this.isZurasia = true;
								}
							}
							else
							{
								if (Input.GetKeyDown(KeyCode.KeypadDivide))
								{
									if (this.isMekure1)
									{
										this.maidArray[num12].ItemChangeTemp("skirt", "めくれスカート");
										this.maidArray[num12].ItemChangeTemp("onepiece", "めくれスカート");
									}
									else
									{
										this.ResetProp(this.maidArray[num12], MPN.accnail);
										this.ResetProp(this.maidArray[num12], MPN.accnip);
									}
									this.maidArray[num12].AllProcPropSeqStart();
								}
								if (Input.GetKeyDown(KeyCode.KeypadMultiply))
								{
									if (this.isMekure2)
									{
										this.maidArray[num12].ItemChangeTemp("skirt", "めくれスカート後ろ");
										this.maidArray[num12].ItemChangeTemp("onepiece", "めくれスカート後ろ");
									}
									else
									{
										this.ResetProp(this.maidArray[num12], MPN.accnail);
										this.ResetProp(this.maidArray[num12], MPN.accnip);
									}
									this.maidArray[num12].AllProcPropSeqStart();
								}
								if (Input.GetKeyDown(KeyCode.KeypadMinus))
								{
									if (this.isZurasi)
									{
										this.maidArray[num12].ItemChangeTemp("panz", "パンツずらし");
										this.maidArray[num12].ItemChangeTemp("mizugi", "パンツずらし");
									}
									else
									{
										this.ResetProp(this.maidArray[num12], MPN.mayu);
										this.ResetProp(this.maidArray[num12], MPN.underhair);
									}
									this.maidArray[num12].AllProcPropSeqStart();
								}
							}
						}
						else
						{
							Hashtable fieldValue3 = ManyMaids.GetFieldValue<TBody, Hashtable>(this.maidArray[num12].body0, "m_hFoceHide");
							if (Input.GetKeyDown(KeyCode.Keypad1))
							{
								fieldValue3[7] = this.isWear;
								fieldValue3[9] = this.isWear;
								fieldValue3[10] = this.isWear;
							}
							if (Input.GetKeyDown(KeyCode.Keypad2))
							{
								fieldValue3[8] = this.isSkirt;
							}
							if (Input.GetKeyDown(KeyCode.Keypad3))
							{
								fieldValue3[12] = this.isBra;
							}
							if (Input.GetKeyDown(KeyCode.Keypad4))
							{
								fieldValue3[11] = this.isPanz;
							}
							if (Input.GetKeyDown(KeyCode.Keypad5))
							{
								fieldValue3[15] = this.isHeadset;
								fieldValue3[40] = this.isHeadset;
							}
							if (Input.GetKeyDown(KeyCode.Keypad6))
							{
								fieldValue3[29] = this.isAccUde;
							}
							if (Input.GetKeyDown(KeyCode.Keypad7))
							{
								fieldValue3[16] = this.isGlove;
							}
							if (Input.GetKeyDown(KeyCode.Keypad8))
							{
								fieldValue3[13] = this.isStkg;
							}
							if (Input.GetKeyDown(KeyCode.Keypad9))
							{
								fieldValue3[14] = this.isShoes;
							}
							if (Input.GetKeyDown(KeyCode.Keypad0))
							{
								fieldValue3[31] = this.isAccSenaka;
							}
							ManyMaids.SetFieldValue6<TBody, Hashtable>(this.maidArray[num12].body0, "m_hFoceHide", fieldValue3);
							this.maidArray[num12].body0.FixMaskFlag();
							this.maidArray[num12].body0.FixVisibleFlag(false);
						}
					}
				}
			}
			if (!this.yotogiFlg && (this.sceneLevel == 14 || this.sceneLevel == 24))
			{
				Maid maid2 = this.maidArray[0];
				Vector3 vector2 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector3 = this.mainCameraTransform.TransformDirection(Vector3.right);
				this.mainCameraTransform.TransformDirection(Vector3.up);
				if (Input.GetKeyDown(KeyCode.LeftBracket) || (Input.GetKeyDown(KeyCode.BackQuote) && this.getModKeyPressing(ManyMaids.modKey.Alt)))
				{
					for (int num14 = 0; num14 < 10; num14++)
					{
						Transform transform = maid2.transform;
						Vector3 position = maid2.transform.position;
						Vector3 right = Vector3.right;
						transform.RotateAround(position, right, 0f - maid2.transform.rotation.eulerAngles.x);
						Transform transform2 = maid2.transform;
						Vector3 position2 = maid2.transform.position;
						Vector3 forward = Vector3.forward;
						transform2.RotateAround(position2, forward, 0f - maid2.transform.rotation.eulerAngles.z);
					}
				}
				else if ((Input.GetKey(KeyCode.Minus) && this.getModKeyPressing(ManyMaids.modKey.Shift)) || (Input.GetKey(KeyCode.I) && this.getModKeyPressing(ManyMaids.modKey.Alt)))
				{
					maid2.transform.RotateAround(maid2.transform.position, new Vector3(vector3.x, 0f, vector3.z), 0.4f);
				}
				else if ((Input.GetKey(KeyCode.Quote) && this.getModKeyPressing(ManyMaids.modKey.Shift)) || (Input.GetKey(KeyCode.K) && this.getModKeyPressing(ManyMaids.modKey.Alt)))
				{
					maid2.transform.RotateAround(maid2.transform.position, new Vector3(vector3.x, 0f, vector3.z), -0.4f);
				}
				else if (Input.GetKey(KeyCode.Minus) || (Input.GetKey(KeyCode.J) && this.getModKeyPressing(ManyMaids.modKey.Alt)))
				{
					maid2.transform.RotateAround(maid2.transform.position, new Vector3(vector2.x, 0f, vector2.z), 0.4f);
				}
				else if (Input.GetKey(KeyCode.Quote) || (Input.GetKey(KeyCode.L) && this.getModKeyPressing(ManyMaids.modKey.Alt)))
				{
					maid2.transform.RotateAround(maid2.transform.position, new Vector3(vector2.x, 0f, vector2.z), -0.4f);
				}
				if (Input.GetKeyUp(KeyCode.H) && !this.hFlg)
				{
					if (this.h2Flg)
					{
						this.h2Flg = false;
					}
					else
					{
						if (this.isVR)
						{
							this.isF6 = true;
						}
						if (!this.maidArray[0])
						{
							this.maidArray[0] = GameMain.Instance.CharacterMgr.GetMaid(0);
						}
						string value = "";
						if (this.wearIndex == 0)
						{
							value = "Underwear";
							this.wearIndex = 1;
							this.isWear = false;
							this.isSkirt = false;
							this.isBra = true;
							this.isPanz = true;
							this.isHeadset = false;
							this.isGlove = false;
							this.isStkg = true;
							this.isShoes = false;
						}
						else if (this.wearIndex == 1)
						{
							value = "Nude";
							this.wearIndex = 2;
							this.isWear = false;
							this.isSkirt = false;
							this.isBra = false;
							this.isPanz = false;
							this.isHeadset = false;
							this.isGlove = false;
							this.isStkg = false;
							this.isShoes = false;
						}
						else if (this.wearIndex == 2)
						{
							value = "None";
							this.wearIndex = 0;
							this.isWear = true;
							this.isSkirt = true;
							this.isBra = true;
							this.isPanz = true;
							this.isHeadset = true;
							this.isGlove = true;
							this.isStkg = true;
							this.isShoes = true;
						}
						TBody.MaskMode maskMode = (TBody.MaskMode)Enum.Parse(typeof(TBody.MaskMode), value);
						for (int num15 = 0; num15 < this.maidCnt; num15++)
						{
							if (this.maidArray[num15] && this.maidArray[num15].Visible)
							{
								if (!this.isVR && this.goSlot[(int)this.selectList[num15]] != null)
								{
									this.maidArray[num15].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num15]]);
									for (int num16 = 0; num16 < this.bodyHit[(int)this.selectList[num15]].Count; num16++)
									{
										this.maidArray[num15].body0.goSlot[num16].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num15]][num16];
									}
								}
								this.maidArray[num15].body0.SetMaskMode(maskMode);
							}
						}
					}
				}
			}
			if (this.isVR)
			{
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha1))
				{
					string bgname = GameMain.Instance.BgMgr.GetBGName();
					int num17 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname)
						{
							this.bgIndex = num17;
							this.bgIndex6 = num17;
							break;
						}
						num17++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10000;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha2))
				{
					string bgname2 = GameMain.Instance.BgMgr.GetBGName();
					int num18 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname2)
						{
							this.bgIndex = num18;
							this.bgIndex6 = num18;
							break;
						}
						num18++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10001;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha3))
				{
					string bgname3 = GameMain.Instance.BgMgr.GetBGName();
					int num19 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname3)
						{
							this.bgIndex = num19;
							this.bgIndex6 = num19;
							break;
						}
						num19++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10002;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha4))
				{
					string bgname4 = GameMain.Instance.BgMgr.GetBGName();
					int num20 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname4)
						{
							this.bgIndex = num20;
							this.bgIndex6 = num20;
							break;
						}
						num20++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10003;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha5))
				{
					string bgname5 = GameMain.Instance.BgMgr.GetBGName();
					int num21 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname5)
						{
							this.bgIndex = num21;
							this.bgIndex6 = num21;
							break;
						}
						num21++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10004;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha6))
				{
					string bgname6 = GameMain.Instance.BgMgr.GetBGName();
					int num22 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname6)
						{
							this.bgIndex = num22;
							this.bgIndex6 = num22;
							break;
						}
						num22++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10005;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha7))
				{
					string bgname7 = GameMain.Instance.BgMgr.GetBGName();
					int num23 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname7)
						{
							this.bgIndex = num23;
							this.bgIndex6 = num23;
							break;
						}
						num23++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10006;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha8))
				{
					string bgname8 = GameMain.Instance.BgMgr.GetBGName();
					int num24 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname8)
						{
							this.bgIndex = num24;
							this.bgIndex6 = num24;
							break;
						}
						num24++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10007;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha9))
				{
					string bgname9 = GameMain.Instance.BgMgr.GetBGName();
					int num25 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname9)
						{
							this.bgIndex = num25;
							this.bgIndex6 = num25;
							break;
						}
						num25++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10008;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
				if (Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.Alpha0))
				{
					string bgname10 = GameMain.Instance.BgMgr.GetBGName();
					int num26 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname10)
						{
							this.bgIndex = num26;
							this.bgIndex6 = num26;
							break;
						}
						num26++;
					}
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
					this.loadScene = 10009;
					this.kankyoLoadFlg = true;
					GameMain.Instance.SoundMgr.PlaySe("se002.ogg", false);
				}
			}
			if (this.isSavePose4)
			{
				this.isSavePose4 = false;
				Maid maid3 = this.maidArray[this.selectMaidIndex];
				Vector3 localEulerAngles = maid3.transform.localEulerAngles;
				maid3.transform.localEulerAngles = new Vector3(0f, 0f, 0f);
				Vector3 position3 = maid3.transform.position;
				maid3.transform.position = new Vector3(0f, 0f, 0f);
				Transform transform3 = CMT.SearchObjName(maid3.body0.m_Bones.transform, "Bip01", true);
				transform3.eulerAngles = this.bipRotation;
				transform3.position = this.bipPosition;
				maid3.transform.localEulerAngles = localEulerAngles;
				maid3.transform.position = position3;
				CacheBoneDataArray cacheBoneDataArray = maid3.gameObject.AddComponent<CacheBoneDataArray>();
				cacheBoneDataArray.CreateCache(maid3.body0.GetBone("Bip01"));
				byte[] anmBinary = cacheBoneDataArray.GetAnmBinary(true, true);
				string path4 = Path.GetFullPath(".\\") + "Mod\\ManyMaidsPose\\" + this.inName3 + ".anm";
				int num27 = 0;
				while (num27 < 100 && File.Exists(path4))
				{
					this.inName3 += "_";
					path4 = Path.GetFullPath(".\\") + "Mod\\ManyMaidsPose\\" + this.inName3 + ".anm";
					num27++;
				}
				File.WriteAllBytes(path4, anmBinary);
				this.strList2 = new List<string>();
				this.strListE = new List<string>();
				this.strListE2 = new List<string>();
				this.strListS = new List<string>();
				this.strListD = new List<string>();
				this.strS = "";
				List<string> list = new List<string>(350 + Class1.poseArray2.Length);
				list.AddRange(Class1.poseArray2);
				List<string> list2 = new List<string>();
				int num28 = 11;
				while (num28 < 200)
				{
					if (num28 < 100)
					{
						AFileBase afileBase = GameUty.FileSystem.FileOpen("edit_pose_0" + num28 + "_f.anm");
						try
						{
							if (afileBase.IsValid())
							{
								list2.Add("edit_pose_0" + num28 + "_f");
							}
							goto IL_285A;
						}
						finally
						{
							AFileBase afileBase2 = afileBase;
							if (afileBase2 != null)
							{
								afileBase2.Dispose();
							}
						}
						goto IL_2802;
					}
					goto IL_2802;
					IL_285A:
					num28++;
					continue;
					IL_2802:
					AFileBase afileBase3 = GameUty.FileSystem.FileOpen("edit_pose_" + num28 + "_f.anm");
					try
					{
						if (afileBase3.IsValid())
						{
							list2.Add("edit_pose_" + num28 + "_f");
						}
					}
					finally
					{
						AFileBase afileBase4 = afileBase3;
						if (afileBase4 != null)
						{
							afileBase4.Dispose();
						}
					}
					goto IL_285A;
				}
				for (int num29 = 15; num29 < 25; num29++)
				{
					for (int num30 = 0; num30 < 2; num30++)
					{
						string text3 = "s";
						if (num30 == 1)
						{
							text3 = "w";
						}
						int num31 = 1;
						while (num31 < 20)
						{
							if (num31 < 10)
							{
								AFileBase afileBase5 = GameUty.FileSystem.FileOpen(string.Concat(new object[]
								{
									"edit_pose_dg",
									num29,
									text3,
									"_00",
									num31,
									"_f.anm"
								}));
								try
								{
									if (afileBase5.IsValid())
									{
										list2.Add(string.Concat(new object[]
										{
											"edit_pose_dg",
											num29,
											text3,
											"_00",
											num31,
											"_f"
										}));
									}
									goto IL_29EC;
								}
								finally
								{
									AFileBase afileBase6 = afileBase5;
									if (afileBase6 != null)
									{
										afileBase6.Dispose();
									}
								}
								goto IL_2948;
							}
							goto IL_2948;
							IL_29EC:
							num31++;
							continue;
							IL_2948:
							AFileBase afileBase7 = GameUty.FileSystem.FileOpen(string.Concat(new object[]
							{
								"edit_pose_dg",
								num29,
								text3,
								"_0",
								num31,
								"_f.anm"
							}));
							try
							{
								if (afileBase7.IsValid())
								{
									list2.Add(string.Concat(new object[]
									{
										"edit_pose_dg",
										num29,
										text3,
										"_0",
										num31,
										"_f"
									}));
								}
							}
							finally
							{
								AFileBase afileBase8 = afileBase7;
								if (afileBase8 != null)
								{
									afileBase8.Dispose();
								}
							}
							goto IL_29EC;
						}
					}
				}
				if (list2.Count > 0)
				{
					list.AddRange(list2.ToArray());
				}
				list.AddRange(Class1.poseArrayVP2);
				list.AddRange(Class1.poseArrayFB);
				list.AddRange(Class1.poseArray4);
				list.AddRange(Class1.poseArray5);
				list.AddRange(Class1.poseArray6);
				this.poseArray = list.ToArray();
				Action<string, List<string>> action = delegate(string path, List<string> result_list)
				{
					string[] files = Directory.GetFiles(path);
					this.countS = 0;
					for (int num110 = 0; num110 < files.Length; num110++)
					{
						if (Path.GetExtension(files[num110]) == ".anm")
						{
							string text25 = files[num110].Split(new char[]
							{
								'\\'
							})[files[num110].Split(new char[]
							{
								'\\'
							}).Length - 1];
							text25 = text25.Split(new char[]
							{
								'.'
							})[0];
							this.strListS.Add(text25 + "\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000/" + files[num110]);
							this.countS++;
						}
					}
				};
				List<string> arg = new List<string>();
				action(Path.GetFullPath(".\\") + "Mod\\ManyMaidsPose", arg);
				string[] list3 = GameUty.FileSystem.GetList("motion", 3);
				int num32 = 0;
				List<string> list4 = new List<string>();
				foreach (string path2 in list3)
				{
					string fileNameWithoutExtension = Path.GetFileNameWithoutExtension(path2);
					string directoryName = Path.GetDirectoryName(path2);
					if (!fileNameWithoutExtension.StartsWith("maid_motion_") && !fileNameWithoutExtension.StartsWith("work_00") && !fileNameWithoutExtension.EndsWith("_3_") && !fileNameWithoutExtension.EndsWith("_5_") && !fileNameWithoutExtension.StartsWith("ck_") && !fileNameWithoutExtension.StartsWith("vr_") && !fileNameWithoutExtension.StartsWith("dance_mc") && !fileNameWithoutExtension.Contains("a01_") && !fileNameWithoutExtension.StartsWith("j_") && !fileNameWithoutExtension.StartsWith("k_") && !fileNameWithoutExtension.StartsWith("t_") && !fileNameWithoutExtension.StartsWith("cbl_") && !fileNameWithoutExtension.Contains("b01_") && !fileNameWithoutExtension.Contains("b02_") && !fileNameWithoutExtension.Contains("_kubi_") && !fileNameWithoutExtension.EndsWith("_m2") && !fileNameWithoutExtension.EndsWith("_m3") && !fileNameWithoutExtension.Contains("_m2_once") && !fileNameWithoutExtension.Contains("_m3_once") && !fileNameWithoutExtension.StartsWith("h_") && !fileNameWithoutExtension.StartsWith("event_") && !fileNameWithoutExtension.StartsWith("man_") && !fileNameWithoutExtension.EndsWith("_m") && !fileNameWithoutExtension.Contains("_m_") && !fileNameWithoutExtension.Contains("_man") && !(fileNameWithoutExtension == "dance_cm3d2_001_zoukin") && !(fileNameWithoutExtension == "dance_cm3d2_001_mop") && !(fileNameWithoutExtension == "maid_motion") && !(fileNameWithoutExtension == "aruki_1_idougo_f") && !(fileNameWithoutExtension == "sleep2") && !(fileNameWithoutExtension == "stand_akire2") && !(fileNameWithoutExtension == "ero_scene_001") && !(fileNameWithoutExtension == "ero_scenefm_001") && !(fileNameWithoutExtension == "training_001") && !(fileNameWithoutExtension == "workff_001") && !(fileNameWithoutExtension == "workfm_001") && !(fileNameWithoutExtension == "dance_cm3d21_005_moe_mset") && !(fileNameWithoutExtension == "hinpyoukai_001"))
					{
						if (!directoryName.Contains("\\sex\\"))
						{
							if (!fileNameWithoutExtension.StartsWith("sex_"))
							{
								if (fileNameWithoutExtension.StartsWith("dance_test"))
								{
									this.strListD.Add(fileNameWithoutExtension);
								}
								else
								{
									bool flag2 = false;
									foreach (string text4 in this.strListS)
									{
										string b = text4.Split(new char[]
										{
											'/'
										})[0].Replace("\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000", "");
										if (fileNameWithoutExtension == b)
										{
											flag2 = true;
											break;
										}
									}
									if (!flag2)
									{
										list4.Add(fileNameWithoutExtension);
									}
								}
							}
						}
						else if (!fileNameWithoutExtension.StartsWith("pose_"))
						{
							this.strListE.Add(fileNameWithoutExtension);
						}
					}
				}
				foreach (string text5 in list4)
				{
					bool flag3 = false;
					for (int num33 = 0; num33 < this.poseArray.Length; num33++)
					{
						if (text5 == this.poseArray[num33])
						{
							flag3 = true;
						}
					}
					if (!flag3 && text5.StartsWith("edit_"))
					{
						this.strList2.Add(text5);
					}
				}
				foreach (string text6 in list4)
				{
					bool flag4 = false;
					for (int num34 = 0; num34 < this.poseArray.Length; num34++)
					{
						if (text6 == this.poseArray[num34])
						{
							flag4 = true;
						}
					}
					if (!flag4 && text6.StartsWith("pose_"))
					{
						this.strList2.Add(text6);
					}
				}
				foreach (string text7 in list4)
				{
					bool flag5 = false;
					for (int num35 = 0; num35 < this.poseArray.Length; num35++)
					{
						if (text7 == this.poseArray[num35])
						{
							flag5 = true;
						}
					}
					if (!flag5 && !text7.StartsWith("edit_") && !text7.StartsWith("pose_"))
					{
						this.strList2.Add(text7);
					}
				}
				foreach (string text8 in this.strListE)
				{
					bool flag6 = false;
					for (int num36 = 0; num36 < this.poseArray.Length; num36++)
					{
						if (text8 == this.poseArray[num36])
						{
							flag6 = true;
						}
					}
					if (!flag6)
					{
						this.strListE2.Add(text8);
						num32++;
					}
				}
				list.AddRange(this.strList2.ToArray());
				list.AddRange(this.strListE2.ToArray());
				this.existPose = false;
				this.poseIniStr = "";
				foreach (IniKey iniKey in base.Preferences["pose"].Keys)
				{
					IniKey iniKey2 = base.Preferences["pose"][iniKey.Key];
					if (iniKey2.Value != null && iniKey2.Value.ToString() != "" && iniKey2.Value.ToString() != "del")
					{
						list.AddRange(new string[]
						{
							iniKey.Key
						});
						this.existPose = true;
						if (this.poseIniStr == "")
						{
							this.poseIniStr = iniKey.Key;
						}
					}
				}
				list.AddRange(this.strListS.ToArray());
				this.poseArray = list.ToArray();
				List<string> list5 = new List<string>(50 + Class1.poseGroupArray2.Length);
				list5.AddRange(Class1.poseGroupArray2);
				list5.AddRange(Class1.poseGroupArrayVP);
				list5.AddRange(Class1.poseGroupArrayFB);
				list5.AddRange(Class1.poseGroupArray3);
				list5.Add(Class1.poseArray5[0]);
				list5.Add(Class1.poseArray6[0]);
				list5.Add(this.strList2[0]);
				list5.Add(this.strListE2[0]);
				this.existPose = true;
				if (this.strListS.Count > 0 && this.poseIniStr == "")
				{
					list5.Add(this.strListS[0]);
				}
				if (this.poseIniStr != "")
				{
					list5.Add(this.poseIniStr);
				}
				this.poseGroupArray = list5.ToArray();
				this.groupList = new ArrayList();
				for (int num37 = 0; num37 < this.poseArray.Length; num37++)
				{
					for (int num38 = 0; num38 < this.poseGroupArray.Length; num38++)
					{
						if (this.poseGroupArray[num38] == this.poseArray[num37])
						{
							this.groupList.Add(num37);
							if (this.poseGroupArray[num38] == this.strList2[0])
							{
								this.sPoseCount = num37;
							}
						}
					}
				}
				this.poseGroupComboList = new GUIContent[this.poseGroupArray.Length + 1];
				this.poseGroupComboList[0] = new GUIContent("1:通常");
				for (int num39 = 0; num39 < this.poseGroupArray.Length; num39++)
				{
					if (this.poseGroupArray[num39] == "maid_dressroom01")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":立ち");
					}
					if (this.poseGroupArray[num39] == "tennis_kamae_f")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":中腰");
					}
					if (this.poseGroupArray[num39] == "senakanagasi_f")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":膝をつく");
					}
					if (this.poseGroupArray[num39] == "work_hansei")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":座り");
					}
					if (this.poseGroupArray[num39] == "inu_taiki_f")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":四つん這い");
					}
					if (this.poseGroupArray[num39] == "syagami_pose_f")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":床座り");
					}
					if (this.poseGroupArray[num39] == "densyasuwari_taiki_f")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":椅子座り");
					}
					if (this.poseGroupArray[num39] == "work_kaiwa")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":ソファー座り");
					}
					if (this.poseGroupArray[num39] == "dance_cm3d2_001_f1,14.14")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":ドキドキ☆Fallin' Love");
					}
					if (this.poseGroupArray[num39] == "dance_cm3d_001_f1,39.25")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":entrance to you");
					}
					if (this.poseGroupArray[num39] == "dance_cm3d_002_end_f1,50.71")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":scarlet leap");
					}
					if (this.poseGroupArray[num39] == "dance_cm3d2_002_smt_f,7.76,")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":stellar my tears");
					}
					if (this.poseGroupArray[num39] == "dance_cm3d_003_sp2_f1,90.15")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":rhythmix to you");
					}
					if (this.poseGroupArray[num39] == "dance_cm3d2_003_hs_f1,0.01,")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":happy!happy!スキャンダル!!");
					}
					if (this.poseGroupArray[num39] == "dance_cm3d_004_kano_f1,124.93")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":Can Know Two Close");
					}
					if (this.poseGroupArray[num39] == "dance_cm3d2_004_sse_f1,0.01")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":sweet sweet everyday");
					}
					if (this.poseGroupArray[num39] == "turusi_sex_in_taiki_f")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":拘束");
					}
					if (this.poseGroupArray[num39] == "rosyutu_pose01_f")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":エロ");
					}
					if (this.poseGroupArray[num39] == "rosyutu_aruki_f_once_,1.37")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":歩き");
					}
					if (this.poseGroupArray[num39] == "stand_desk1")
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":その他");
					}
					if (this.poseGroupArray[num39] == Class1.poseArray5[0])
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":ダンスMC");
					}
					if (this.poseGroupArray[num39] == Class1.poseArray6[0])
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":ダンス");
					}
					if (num39 == this.poseGroupArray.Length - 3)
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":通常2");
					}
					if (num39 == this.poseGroupArray.Length - 2)
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent(num39 + 2 + ":エロ2");
					}
					if (num39 == this.poseGroupArray.Length - 1)
					{
						this.poseGroupComboList[num39 + 1] = new GUIContent("99:登録ポーズ");
					}
				}
				int num40 = -1;
				for (int num41 = 0; num41 < this.groupList.Count; num41++)
				{
					if (this.poseIndex[this.selectMaidIndex] < (int)this.groupList[num41])
					{
						num40 = num41;
						break;
					}
				}
				int num42 = (int)this.groupList[0];
				int num43 = 0;
				if (num40 > 0)
				{
					num42 = (int)this.groupList[num40] - (int)this.groupList[num40 - 1];
					num43 = (int)this.groupList[num40 - 1];
				}
				if (num40 < 0)
				{
					num40 = this.groupList.Count;
					num42 = this.poseArray.Length - (int)this.groupList[num40 - 1];
					num43 = (int)this.groupList[num40 - 1];
				}
				this.poseComboList = new GUIContent[num42];
				int num44 = 0;
				for (int num45 = num43; num45 < num43 + num42; num45++)
				{
					bool flag7 = false;
					foreach (IniKey iniKey3 in base.Preferences["pose"].Keys)
					{
						if (this.poseArray[num45] == iniKey3.Key)
						{
							IniKey iniKey4 = base.Preferences["pose"][iniKey3.Key];
							if (iniKey4.Value != null && iniKey4.Value.ToString() != "" && iniKey4.Value.ToString() != "del")
							{
								this.poseComboList[num44] = new GUIContent(string.Concat(new object[]
								{
									num44 + 1,
									":",
									iniKey4.Value.Split(new char[]
									{
										'_'
									})[0],
									"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000",
									iniKey3.Key
								}));
								flag7 = true;
							}
						}
					}
					if (!flag7)
					{
						this.poseComboList[num44] = new GUIContent(num44 + 1 + ":" + this.poseArray[num45]);
					}
					num44++;
				}
				this.poseGroupCombo.selectedItemIndex = num40;
				this.poseGroupIndex = num40;
				this.poseCombo.selectedItemIndex = 0;
				int num46 = (int)this.groupList[this.groupList.Count - 1];
				while (num46 < this.poseArray.Length)
				{
					if (this.poseArray[num46].Split(new char[]
					{
						'/'
					})[0].Replace("\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000", "") == this.inName3)
					{
						this.poseIndex[this.selectMaidIndex] = num46;
						string path3 = this.poseArray[num46].Split(new char[]
						{
							'/'
						})[1];
						byte[] array3 = new byte[0];
						try
						{
							using (FileStream fileStream = new FileStream(path3, FileMode.Open, FileAccess.Read))
							{
								array3 = new byte[fileStream.Length];
								fileStream.Read(array3, 0, array3.Length);
							}
						}
						catch
						{
						}
						if (array3.Length != 0)
						{
							long num47 = (long)Path.GetFileName(path3).GetHashCode();
							maid3.body0.CrossFade(num47.ToString(), array3, false, false, false, 0f, 1f);
							Maid.AutoTwist[] array4 = new Maid.AutoTwist[]
							{
								Maid.AutoTwist.ShoulderL,
								Maid.AutoTwist.ShoulderR,
								Maid.AutoTwist.WristL,
								Maid.AutoTwist.WristR,
								Maid.AutoTwist.ThighL,
								Maid.AutoTwist.ThighR
							};
							for (int num48 = 0; num48 < array4.Length; num48++)
							{
								maid3.SetAutoTwist(array4[num48], true);
							}
							break;
						}
						break;
					}
					else
					{
						num46++;
					}
				}
				this.isLock[this.selectMaidIndex] = false;
				this.inName3 = "";
				this.isSavePose = false;
			}
			if (this.isSavePose3)
			{
				Maid maid4 = this.maidArray[this.selectMaidIndex];
				this.isSavePose3 = false;
				this.isSavePose4 = true;
				Transform transform4 = CMT.SearchObjName(maid4.body0.m_Bones.transform, "Bip01", true);
				transform4.eulerAngles = this.bipRotation;
				transform4.position = this.bipPosition;
			}
			if (this.isSavePose2)
			{
				Maid maid5 = this.maidArray[this.selectMaidIndex];
				this.isSavePose2 = false;
				this.isSavePose3 = true;
				Transform transform5 = CMT.SearchObjName(maid5.body0.m_Bones.transform, "Bip01", true);
				transform5.eulerAngles = this.bipRotation;
				transform5.position = this.bipPosition;
			}
			if (this.isSavePose)
			{
				Maid maid6 = this.maidArray[this.selectMaidIndex];
				Transform transform6 = CMT.SearchObjName(maid6.body0.m_Bones.transform, "Bip01", true);
				this.bipPosition = new Vector3(transform6.position.x - maid6.transform.position.x, transform6.position.y, transform6.position.z - maid6.transform.position.z);
				this.bipRotation = transform6.eulerAngles;
				maid6.transform.localEulerAngles = new Vector3(0f, 0f, 0f);
				maid6.transform.position = new Vector3(maid6.transform.position.x, 0f, maid6.transform.position.z);
				this.isSavePose = false;
				this.isSavePose2 = true;
				this.isStop[this.selectMaidIndex] = true;
			}
			if (this.saveScene > 0)
			{
				string text9 = "";
				string text10 = "";
				DateTime now = DateTime.Now;
				int year = now.Year;
				int month = now.Month;
				int day = now.Day;
				int hour = now.Hour;
				int minute = now.Minute;
				string text11 = string.Concat(new object[]
				{
					year,
					"/",
					month.ToString("00"),
					"/",
					day.ToString("00"),
					" ",
					hour.ToString("00"),
					":",
					minute.ToString("00")
				});
				if (this.saveScene < 9999)
				{
					this.date[this.saveScene - 1 - this.page * 10] = text11;
					this.ninzu[this.saveScene - 1 - this.page * 10] = this.maidCnt + "人";
				}
				text10 = text10 + text11 + ",";
				text10 = text10 + this.maidCnt + ",";
				text10 = text10 + this.bgArray[this.bgIndex].Replace("_", " ") + ",";
				string text12 = text10;
				string[] array5 = new string[7];
				array5[0] = text12;
				float num49 = this.bg.localEulerAngles.x;
				array5[1] = num49.ToString("0.###");
				array5[2] = ",";
				num49 = this.bg.localEulerAngles.y;
				array5[3] = num49.ToString("0.###");
				array5[4] = ",";
				num49 = this.bg.localEulerAngles.z;
				array5[5] = num49.ToString("0.###");
				array5[6] = ",";
				text10 = string.Concat(array5);
				text12 = text10;
				string[] array6 = new string[7];
				array6[0] = text12;
				num49 = this.bg.position.x;
				array6[1] = num49.ToString("0.###");
				array6[2] = ",";
				num49 = this.bg.position.y;
				array6[3] = num49.ToString("0.###");
				array6[4] = ",";
				num49 = this.bg.position.z;
				array6[5] = num49.ToString("0.###");
				array6[6] = ",";
				text10 = string.Concat(array6);
				text12 = text10;
				string[] array7 = new string[7];
				array7[0] = text12;
				num49 = this.bg.localScale.x;
				array7[1] = num49.ToString("0.###");
				array7[2] = ",";
				num49 = this.bg.localScale.y;
				array7[3] = num49.ToString("0.###");
				array7[4] = ",";
				num49 = this.bg.localScale.z;
				array7[5] = num49.ToString("0.###");
				array7[6] = ",";
				text10 = string.Concat(array7);
				text12 = text10;
				text10 = string.Concat(new string[]
				{
					text12,
					this.softG.x.ToString("0.###"),
					",",
					this.softG.y.ToString("0.###"),
					",",
					this.softG.z.ToString("0.###"),
					","
				});
				text10 = text10 + this.bgmIndex + ",";
				text10 = text10 + this.effectIndex + ",";
				text10 = text10 + this.lightIndex[0] + ",";
				text10 = text10 + this.lightColorR[0] + ",";
				text10 = text10 + this.lightColorG[0] + ",";
				text10 = text10 + this.lightColorB[0] + ",";
				text12 = text10;
				string[] array8 = new string[7];
				array8[0] = text12;
				num49 = GameMain.Instance.MainLight.transform.eulerAngles.x;
				array8[1] = num49.ToString("0.###");
				array8[2] = ",";
				num49 = GameMain.Instance.MainLight.transform.eulerAngles.y;
				array8[3] = num49.ToString("0.###");
				array8[4] = ",";
				num49 = GameMain.Instance.MainLight.transform.eulerAngles.z;
				array8[5] = num49.ToString("0.###");
				array8[6] = ",";
				text10 = string.Concat(array8);
				text10 = text10 + GameMain.Instance.MainLight.GetComponent<Light>().intensity + ",";
				text10 = text10 + GameMain.Instance.MainLight.GetComponent<Light>().spotAngle + ",";
				text10 = text10 + GameMain.Instance.MainLight.GetComponent<Light>().range + ",";
				text10 = text10 + this.mainCamera.GetTargetPos().x + ",";
				text10 = text10 + this.mainCamera.GetTargetPos().y + ",";
				text10 = text10 + this.mainCamera.GetTargetPos().z + ",";
				text10 = text10 + this.mainCamera.GetDistance() + ",";
				text12 = text10;
				string[] array9 = new string[7];
				array9[0] = text12;
				num49 = this.mainCamera.transform.eulerAngles.x;
				array9[1] = num49.ToString("0.###");
				array9[2] = ",";
				num49 = this.mainCamera.transform.eulerAngles.y;
				array9[3] = num49.ToString("0.###");
				array9[4] = ",";
				num49 = this.mainCamera.transform.eulerAngles.z;
				array9[5] = num49.ToString("0.###");
				array9[6] = ",";
				text10 = string.Concat(array9);
				this.inName = this.inName.Replace("_", " ").Replace(",", " ");
				this.inText = this.inText.Replace("_", " ").Replace(",", " ");
				if (this.isMessage)
				{
					text12 = text10;
					text10 = string.Concat(new string[]
					{
						text12,
						"1,",
						this.inName,
						",",
						this.inText.Replace("\n", "&kaigyo")
					});
				}
				else
				{
					text10 += "0,,";
				}
				if (this.doguObject.Count > 0)
				{
					text10 = text10 + "," + Class1.doguArray[this.doguIndex[this.doguSelectIndex]].Replace("_", " ") + ",";
					text12 = text10;
					string[] array10 = new string[7];
					array10[0] = text12;
					num49 = this.doguObject[this.doguSelectIndex].transform.localEulerAngles.x;
					array10[1] = num49.ToString("0.###");
					array10[2] = ",";
					num49 = this.doguObject[this.doguSelectIndex].transform.localEulerAngles.y;
					array10[3] = num49.ToString("0.###");
					array10[4] = ",";
					num49 = this.doguObject[this.doguSelectIndex].transform.localEulerAngles.z;
					array10[5] = num49.ToString("0.###");
					array10[6] = ",";
					text10 = string.Concat(array10);
					text12 = text10;
					string[] array11 = new string[7];
					array11[0] = text12;
					num49 = this.doguObject[this.doguSelectIndex].transform.position.x;
					array11[1] = num49.ToString("0.###");
					array11[2] = ",";
					num49 = this.doguObject[this.doguSelectIndex].transform.position.y;
					array11[3] = num49.ToString("0.###");
					array11[4] = ",";
					num49 = this.doguObject[this.doguSelectIndex].transform.position.z;
					array11[5] = num49.ToString("0.###");
					array11[6] = ",";
					text10 = string.Concat(array11);
					text12 = text10;
					string[] array12 = new string[6];
					array12[0] = text12;
					num49 = this.doguObject[this.doguSelectIndex].transform.localScale.x;
					array12[1] = num49.ToString("0.###");
					array12[2] = ",";
					num49 = this.doguObject[this.doguSelectIndex].transform.localScale.y;
					array12[3] = num49.ToString("0.###");
					array12[4] = ",";
					num49 = this.doguObject[this.doguSelectIndex].transform.localScale.z;
					array12[5] = num49.ToString("0.###");
					text10 = string.Concat(array12);
				}
				text10 += "_";
				for (int num50 = 0; num50 < this.maidCnt; num50++)
				{
					Maid maid7 = this.maidArray[num50];
					string text13 = "";
					string text14 = "";
					this.SetIK(maid7, num50);
					for (int num51 = 0; num51 < 20; num51++)
					{
						text12 = text13;
						string[] array13 = new string[7];
						array13[0] = text12;
						num49 = this.Finger[num50, num51].localEulerAngles.x;
						array13[1] = num49.ToString("0.###");
						array13[2] = ",";
						num49 = this.Finger[num50, num51].localEulerAngles.y;
						array13[3] = num49.ToString("0.###");
						array13[4] = ",";
						num49 = this.Finger[num50, num51].localEulerAngles.z;
						array13[5] = num49.ToString("0.###");
						array13[6] = ":";
						text13 = string.Concat(array13);
					}
					for (int num52 = 20; num52 < 40; num52++)
					{
						text12 = text14;
						string[] array14 = new string[7];
						array14[0] = text12;
						num49 = this.Finger[num50, num52].localEulerAngles.x;
						array14[1] = num49.ToString("0.###");
						array14[2] = ",";
						num49 = this.Finger[num50, num52].localEulerAngles.y;
						array14[3] = num49.ToString("0.###");
						array14[4] = ",";
						num49 = this.Finger[num50, num52].localEulerAngles.z;
						array14[5] = num49.ToString("0.###");
						array14[6] = ":";
						text14 = string.Concat(array14);
					}
					string text15 = "";
					text12 = text15;
					string[] array15 = new string[7];
					array15[0] = text12;
					num49 = this.Spine.eulerAngles.x;
					array15[1] = num49.ToString("0.###");
					array15[2] = ",";
					num49 = this.Spine.eulerAngles.y;
					array15[3] = num49.ToString("0.###");
					array15[4] = ",";
					num49 = this.Spine.eulerAngles.z;
					array15[5] = num49.ToString("0.###");
					array15[6] = ":";
					text15 = string.Concat(array15);
					text12 = text15;
					string[] array16 = new string[7];
					array16[0] = text12;
					num49 = this.Spine0a.eulerAngles.x;
					array16[1] = num49.ToString("0.###");
					array16[2] = ",";
					num49 = this.Spine0a.eulerAngles.y;
					array16[3] = num49.ToString("0.###");
					array16[4] = ",";
					num49 = this.Spine0a.eulerAngles.z;
					array16[5] = num49.ToString("0.###");
					array16[6] = ":";
					text15 = string.Concat(array16);
					text12 = text15;
					string[] array17 = new string[7];
					array17[0] = text12;
					num49 = this.Spine1.eulerAngles.x;
					array17[1] = num49.ToString("0.###");
					array17[2] = ",";
					num49 = this.Spine1.eulerAngles.y;
					array17[3] = num49.ToString("0.###");
					array17[4] = ",";
					num49 = this.Spine1.eulerAngles.z;
					array17[5] = num49.ToString("0.###");
					array17[6] = ":";
					text15 = string.Concat(array17);
					text12 = text15;
					string[] array18 = new string[7];
					array18[0] = text12;
					num49 = this.Spine1a.eulerAngles.x;
					array18[1] = num49.ToString("0.###");
					array18[2] = ",";
					num49 = this.Spine1a.eulerAngles.y;
					array18[3] = num49.ToString("0.###");
					array18[4] = ",";
					num49 = this.Spine1a.eulerAngles.z;
					array18[5] = num49.ToString("0.###");
					array18[6] = ":";
					text15 = string.Concat(array18);
					text12 = text15;
					string[] array19 = new string[7];
					array19[0] = text12;
					num49 = this.Pelvis.eulerAngles.x;
					array19[1] = num49.ToString("0.###");
					array19[2] = ",";
					num49 = this.Pelvis.eulerAngles.y;
					array19[3] = num49.ToString("0.###");
					array19[4] = ",";
					num49 = this.Pelvis.eulerAngles.z;
					array19[5] = num49.ToString("0.###");
					array19[6] = ":";
					text15 = string.Concat(array19);
					text12 = text15;
					string[] array20 = new string[7];
					array20[0] = text12;
					num49 = this.HandL1[num50].localEulerAngles.x;
					array20[1] = num49.ToString("0.###");
					array20[2] = ",";
					num49 = this.HandL1[num50].localEulerAngles.y;
					array20[3] = num49.ToString("0.###");
					array20[4] = ",";
					num49 = this.HandL1[num50].localEulerAngles.z;
					array20[5] = num49.ToString("0.###");
					array20[6] = ":";
					text15 = string.Concat(array20);
					text12 = text15;
					string[] array21 = new string[7];
					array21[0] = text12;
					num49 = this.UpperArmL1[num50].eulerAngles.x;
					array21[1] = num49.ToString("0.###");
					array21[2] = ",";
					num49 = this.UpperArmL1[num50].eulerAngles.y;
					array21[3] = num49.ToString("0.###");
					array21[4] = ",";
					num49 = this.UpperArmL1[num50].eulerAngles.z;
					array21[5] = num49.ToString("0.###");
					array21[6] = ":";
					text15 = string.Concat(array21);
					text12 = text15;
					string[] array22 = new string[7];
					array22[0] = text12;
					num49 = this.ForearmL1[num50].eulerAngles.x;
					array22[1] = num49.ToString("0.###");
					array22[2] = ",";
					num49 = this.ForearmL1[num50].eulerAngles.y;
					array22[3] = num49.ToString("0.###");
					array22[4] = ",";
					num49 = this.ForearmL1[num50].eulerAngles.z;
					array22[5] = num49.ToString("0.###");
					array22[6] = ":";
					text15 = string.Concat(array22);
					text12 = text15;
					string[] array23 = new string[7];
					array23[0] = text12;
					num49 = this.HandR1[num50].localEulerAngles.x;
					array23[1] = num49.ToString("0.###");
					array23[2] = ",";
					num49 = this.HandR1[num50].localEulerAngles.y;
					array23[3] = num49.ToString("0.###");
					array23[4] = ",";
					num49 = this.HandR1[num50].localEulerAngles.z;
					array23[5] = num49.ToString("0.###");
					array23[6] = ":";
					text15 = string.Concat(array23);
					text12 = text15;
					string[] array24 = new string[7];
					array24[0] = text12;
					num49 = this.UpperArmR1[num50].eulerAngles.x;
					array24[1] = num49.ToString("0.###");
					array24[2] = ",";
					num49 = this.UpperArmR1[num50].eulerAngles.y;
					array24[3] = num49.ToString("0.###");
					array24[4] = ",";
					num49 = this.UpperArmR1[num50].eulerAngles.z;
					array24[5] = num49.ToString("0.###");
					array24[6] = ":";
					text15 = string.Concat(array24);
					text12 = text15;
					string[] array25 = new string[7];
					array25[0] = text12;
					num49 = this.ForearmR1[num50].eulerAngles.x;
					array25[1] = num49.ToString("0.###");
					array25[2] = ",";
					num49 = this.ForearmR1[num50].eulerAngles.y;
					array25[3] = num49.ToString("0.###");
					array25[4] = ",";
					num49 = this.ForearmR1[num50].eulerAngles.z;
					array25[5] = num49.ToString("0.###");
					array25[6] = ":";
					text15 = string.Concat(array25);
					text12 = text15;
					string[] array26 = new string[7];
					array26[0] = text12;
					num49 = this.HandL2[num50].localEulerAngles.x;
					array26[1] = num49.ToString("0.###");
					array26[2] = ",";
					num49 = this.HandL2[num50].localEulerAngles.y;
					array26[3] = num49.ToString("0.###");
					array26[4] = ",";
					num49 = this.HandL2[num50].localEulerAngles.z;
					array26[5] = num49.ToString("0.###");
					array26[6] = ":";
					text15 = string.Concat(array26);
					text12 = text15;
					string[] array27 = new string[7];
					array27[0] = text12;
					num49 = this.UpperArmL2[num50].eulerAngles.x;
					array27[1] = num49.ToString("0.###");
					array27[2] = ",";
					num49 = this.UpperArmL2[num50].eulerAngles.y;
					array27[3] = num49.ToString("0.###");
					array27[4] = ",";
					num49 = this.UpperArmL2[num50].eulerAngles.z;
					array27[5] = num49.ToString("0.###");
					array27[6] = ":";
					text15 = string.Concat(array27);
					text12 = text15;
					string[] array28 = new string[7];
					array28[0] = text12;
					num49 = this.ForearmL2[num50].eulerAngles.x;
					array28[1] = num49.ToString("0.###");
					array28[2] = ",";
					num49 = this.ForearmL2[num50].eulerAngles.y;
					array28[3] = num49.ToString("0.###");
					array28[4] = ",";
					num49 = this.ForearmL2[num50].eulerAngles.z;
					array28[5] = num49.ToString("0.###");
					array28[6] = ":";
					text15 = string.Concat(array28);
					text12 = text15;
					string[] array29 = new string[7];
					array29[0] = text12;
					num49 = this.HandR2[num50].localEulerAngles.x;
					array29[1] = num49.ToString("0.###");
					array29[2] = ",";
					num49 = this.HandR2[num50].localEulerAngles.y;
					array29[3] = num49.ToString("0.###");
					array29[4] = ",";
					num49 = this.HandR2[num50].localEulerAngles.z;
					array29[5] = num49.ToString("0.###");
					array29[6] = ":";
					text15 = string.Concat(array29);
					text12 = text15;
					string[] array30 = new string[7];
					array30[0] = text12;
					num49 = this.UpperArmR2[num50].eulerAngles.x;
					array30[1] = num49.ToString("0.###");
					array30[2] = ",";
					num49 = this.UpperArmR2[num50].eulerAngles.y;
					array30[3] = num49.ToString("0.###");
					array30[4] = ",";
					num49 = this.UpperArmR2[num50].eulerAngles.z;
					array30[5] = num49.ToString("0.###");
					array30[6] = ":";
					text15 = string.Concat(array30);
					text12 = text15;
					string[] array31 = new string[7];
					array31[0] = text12;
					num49 = this.ForearmR2[num50].eulerAngles.x;
					array31[1] = num49.ToString("0.###");
					array31[2] = ",";
					num49 = this.ForearmR2[num50].eulerAngles.y;
					array31[3] = num49.ToString("0.###");
					array31[4] = ",";
					num49 = this.ForearmR2[num50].eulerAngles.z;
					array31[5] = num49.ToString("0.###");
					array31[6] = ":";
					text15 = string.Concat(array31);
					text12 = text15;
					string[] array32 = new string[7];
					array32[0] = text12;
					num49 = this.Head.eulerAngles.x;
					array32[1] = num49.ToString("0.###");
					array32[2] = ",";
					num49 = this.Head.eulerAngles.y;
					array32[3] = num49.ToString("0.###");
					array32[4] = ",";
					num49 = this.Head.eulerAngles.z;
					array32[5] = num49.ToString("0.###");
					array32[6] = ":";
					text15 = string.Concat(array32);
					text12 = text15;
					string[] array33 = new string[7];
					array33[0] = text12;
					num49 = maid7.transform.localEulerAngles.x;
					array33[1] = num49.ToString("0.###");
					array33[2] = ",";
					num49 = maid7.transform.localEulerAngles.y;
					array33[3] = num49.ToString("0.###");
					array33[4] = ",";
					num49 = maid7.transform.localEulerAngles.z;
					array33[5] = num49.ToString("0.###");
					array33[6] = ":";
					text15 = string.Concat(array33);
					text12 = text15;
					string[] array34 = new string[7];
					array34[0] = text12;
					num49 = maid7.transform.position.x;
					array34[1] = num49.ToString("0.###");
					array34[2] = ",";
					num49 = maid7.transform.position.y;
					array34[3] = num49.ToString("0.###");
					array34[4] = ",";
					num49 = maid7.transform.position.z;
					array34[5] = num49.ToString("0.###");
					array34[6] = ":";
					text15 = string.Concat(array34);
					text12 = text15;
					string[] array35 = new string[7];
					array35[0] = text12;
					num49 = maid7.transform.localScale.x;
					array35[1] = num49.ToString("0.###");
					array35[2] = ",";
					num49 = maid7.transform.localScale.y;
					array35[3] = num49.ToString("0.###");
					array35[4] = ",";
					num49 = maid7.transform.localScale.z;
					array35[5] = num49.ToString("0.###");
					array35[6] = ":";
					text15 = string.Concat(array35);
					if (this.poseArray[this.poseIndex[num50]].Contains("ManyMaidsPose"))
					{
						string text16 = this.poseArray[this.poseIndex[num50]].Replace("\u3000", "").Split(new char[]
						{
							'/'
						})[0];
						text15 = text15 + "ManyMaidsPose" + text16.Replace("_", " ").Replace(",", "|") + ":";
					}
					else
					{
						text15 = text15 + this.poseArray[this.poseIndex[num50]].Replace("_", " ").Replace(",", "|") + ":";
					}
					text15 = text15 + this.faceIndex[num50] + ":";
					TMorph morph2 = maid7.body0.Face.morph;
					float[] fieldValue4 = ManyMaids.GetFieldValue<TMorph, float[]>(morph2, "BlendValues");
					float[] fieldValue5 = ManyMaids.GetFieldValue<TMorph, float[]>(morph2, "BlendValuesBackup");
					text15 = text15 + fieldValue5[(int)morph2.hash["eyeclose"]] + ",";
					text15 = text15 + fieldValue5[(int)morph2.hash["eyeclose2"]] + ",";
					text15 = text15 + fieldValue5[(int)morph2.hash["eyeclose3"]] + ",";
					text15 = text15 + fieldValue5[(int)morph2.hash["eyeclose6"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["hitomih"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["hitomis"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mayuha"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mayuup"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mayuv"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mayuvhalf"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["moutha"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mouths"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mouthdw"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mouthup"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["tangout"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["tangup"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["eyebig"]] + ",";
					text15 = text15 + fieldValue5[(int)morph2.hash["eyeclose5"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mayuw"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mouthhe"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mouthc"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mouthi"]] + ",";
					text15 = text15 + fieldValue4[(int)morph2.hash["mouthuphalf"]] + ",";
					try
					{
						text15 = text15 + fieldValue4[(int)morph2.hash["tangopen"]] + ",";
					}
					catch
					{
						text15 += "0,";
					}
					text15 = ((fieldValue4[(int)morph2.hash["namida"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["tear1"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["tear2"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["tear3"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["shock"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["yodare"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["hoho"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["hoho2"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["hohos"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["hohol"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["toothoff"]] <= 0f) ? (text15 + 0 + ",") : (text15 + 1 + ","));
					text15 = ((fieldValue4[(int)morph2.hash["nosefook"]] <= 0f) ? (text15 + 0 + ":") : (text15 + 1 + ":"));
					string text17 = "";
					if (this.isLook[num50])
					{
						text17 = text17 + 1 + ",";
						text17 = text17 + this.lookX[num50].ToString("0.###") + ",";
						text17 = text17 + this.lookY[num50].ToString("0.###") + ":";
					}
					else
					{
						text17 = text17 + 0 + ",0,0:";
					}
					text17 = text17 + this.itemIndex[num50] + ":";
					Transform transform7 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "_IK_handL", true);
					Transform transform8 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "_IK_handR", true);
					text12 = text17;
					string[] array36 = new string[7];
					array36[0] = text12;
					num49 = transform7.localEulerAngles.x;
					array36[1] = num49.ToString("0.###");
					array36[2] = ",";
					num49 = transform7.localEulerAngles.y;
					array36[3] = num49.ToString("0.###");
					array36[4] = ",";
					num49 = transform7.localEulerAngles.z;
					array36[5] = num49.ToString("0.###");
					array36[6] = ":";
					text17 = string.Concat(array36);
					text12 = text17;
					string[] array37 = new string[7];
					array37[0] = text12;
					num49 = transform8.localEulerAngles.x;
					array37[1] = num49.ToString("0.###");
					array37[2] = ",";
					num49 = transform8.localEulerAngles.y;
					array37[3] = num49.ToString("0.###");
					array37[4] = ",";
					num49 = transform8.localEulerAngles.z;
					array37[5] = num49.ToString("0.###");
					array37[6] = ":";
					text17 = string.Concat(array37);
					text12 = text17;
					string[] array38 = new string[7];
					array38[0] = text12;
					num49 = this.ClavicleL1[num50].eulerAngles.x;
					array38[1] = num49.ToString("0.###");
					array38[2] = ",";
					num49 = this.ClavicleL1[num50].eulerAngles.y;
					array38[3] = num49.ToString("0.###");
					array38[4] = ",";
					num49 = this.ClavicleL1[num50].eulerAngles.z;
					array38[5] = num49.ToString("0.###");
					array38[6] = ":";
					text17 = string.Concat(array38);
					text12 = text17;
					string[] array39 = new string[7];
					array39[0] = text12;
					num49 = this.ClavicleR1[num50].eulerAngles.x;
					array39[1] = num49.ToString("0.###");
					array39[2] = ",";
					num49 = this.ClavicleR1[num50].eulerAngles.y;
					array39[3] = num49.ToString("0.###");
					array39[4] = ",";
					num49 = this.ClavicleR1[num50].eulerAngles.z;
					array39[5] = num49.ToString("0.###");
					array39[6] = ":";
					text17 = string.Concat(array39);
					text17 = ((!this.hanten[num50]) ? (text17 + "0:") : (text17 + "1:"));
					Transform transform9 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01", true);
					Transform transform10 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 L Toe0", true);
					Transform transform11 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 R Toe0", true);
					Transform transform12 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 L Toe01", true);
					Transform transform13 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 R Toe01", true);
					Transform transform14 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 L Toe0Nub", true);
					Transform transform15 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 R Toe0Nub", true);
					Transform transform16 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 L Toe1", true);
					Transform transform17 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 R Toe1", true);
					Transform transform18 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 L Toe11", true);
					Transform transform19 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 R Toe11", true);
					Transform transform20 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 L Toe1Nub", true);
					Transform transform21 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 R Toe1Nub", true);
					Transform transform22 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 L Toe2", true);
					Transform transform23 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 R Toe2", true);
					Transform transform24 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 L Toe21", true);
					Transform transform25 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 R Toe21", true);
					Transform transform26 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 L Toe2Nub", true);
					Transform transform27 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Bip01 R Toe2Nub", true);
					text12 = text17;
					string[] array40 = new string[7];
					array40[0] = text12;
					num49 = transform9.eulerAngles.x;
					array40[1] = num49.ToString("0.###");
					array40[2] = ",";
					num49 = transform9.eulerAngles.y;
					array40[3] = num49.ToString("0.###");
					array40[4] = ",";
					num49 = transform9.eulerAngles.z;
					array40[5] = num49.ToString("0.###");
					array40[6] = ":";
					text17 = string.Concat(array40);
					text12 = text17;
					string[] array41 = new string[7];
					array41[0] = text12;
					num49 = transform10.localEulerAngles.x;
					array41[1] = num49.ToString("0.###");
					array41[2] = ",";
					num49 = transform10.localEulerAngles.y;
					array41[3] = num49.ToString("0.###");
					array41[4] = ",";
					num49 = transform10.localEulerAngles.z;
					array41[5] = num49.ToString("0.###");
					array41[6] = ":";
					text17 = string.Concat(array41);
					text12 = text17;
					string[] array42 = new string[7];
					array42[0] = text12;
					num49 = transform11.localEulerAngles.x;
					array42[1] = num49.ToString("0.###");
					array42[2] = ",";
					num49 = transform11.localEulerAngles.y;
					array42[3] = num49.ToString("0.###");
					array42[4] = ",";
					num49 = transform11.localEulerAngles.z;
					array42[5] = num49.ToString("0.###");
					array42[6] = ":";
					text17 = string.Concat(array42);
					text12 = text17;
					string[] array43 = new string[7];
					array43[0] = text12;
					num49 = transform12.localEulerAngles.x;
					array43[1] = num49.ToString("0.###");
					array43[2] = ",";
					num49 = transform12.localEulerAngles.y;
					array43[3] = num49.ToString("0.###");
					array43[4] = ",";
					num49 = transform12.localEulerAngles.z;
					array43[5] = num49.ToString("0.###");
					array43[6] = ":";
					text17 = string.Concat(array43);
					text12 = text17;
					string[] array44 = new string[7];
					array44[0] = text12;
					num49 = transform13.localEulerAngles.x;
					array44[1] = num49.ToString("0.###");
					array44[2] = ",";
					num49 = transform13.localEulerAngles.y;
					array44[3] = num49.ToString("0.###");
					array44[4] = ",";
					num49 = transform13.localEulerAngles.z;
					array44[5] = num49.ToString("0.###");
					array44[6] = ":";
					text17 = string.Concat(array44);
					text12 = text17;
					string[] array45 = new string[7];
					array45[0] = text12;
					num49 = transform14.localEulerAngles.x;
					array45[1] = num49.ToString("0.###");
					array45[2] = ",";
					num49 = transform14.localEulerAngles.y;
					array45[3] = num49.ToString("0.###");
					array45[4] = ",";
					num49 = transform14.localEulerAngles.z;
					array45[5] = num49.ToString("0.###");
					array45[6] = ":";
					text17 = string.Concat(array45);
					text12 = text17;
					string[] array46 = new string[7];
					array46[0] = text12;
					num49 = transform15.localEulerAngles.x;
					array46[1] = num49.ToString("0.###");
					array46[2] = ",";
					num49 = transform15.localEulerAngles.y;
					array46[3] = num49.ToString("0.###");
					array46[4] = ",";
					num49 = transform15.localEulerAngles.z;
					array46[5] = num49.ToString("0.###");
					array46[6] = ":";
					text17 = string.Concat(array46);
					text12 = text17;
					string[] array47 = new string[7];
					array47[0] = text12;
					num49 = transform16.localEulerAngles.x;
					array47[1] = num49.ToString("0.###");
					array47[2] = ",";
					num49 = transform16.localEulerAngles.y;
					array47[3] = num49.ToString("0.###");
					array47[4] = ",";
					num49 = transform16.localEulerAngles.z;
					array47[5] = num49.ToString("0.###");
					array47[6] = ":";
					text17 = string.Concat(array47);
					text12 = text17;
					string[] array48 = new string[7];
					array48[0] = text12;
					num49 = transform17.localEulerAngles.x;
					array48[1] = num49.ToString("0.###");
					array48[2] = ",";
					num49 = transform17.localEulerAngles.y;
					array48[3] = num49.ToString("0.###");
					array48[4] = ",";
					num49 = transform17.localEulerAngles.z;
					array48[5] = num49.ToString("0.###");
					array48[6] = ":";
					text17 = string.Concat(array48);
					text12 = text17;
					string[] array49 = new string[7];
					array49[0] = text12;
					num49 = transform18.localEulerAngles.x;
					array49[1] = num49.ToString("0.###");
					array49[2] = ",";
					num49 = transform18.localEulerAngles.y;
					array49[3] = num49.ToString("0.###");
					array49[4] = ",";
					num49 = transform18.localEulerAngles.z;
					array49[5] = num49.ToString("0.###");
					array49[6] = ":";
					text17 = string.Concat(array49);
					text12 = text17;
					string[] array50 = new string[7];
					array50[0] = text12;
					num49 = transform19.localEulerAngles.x;
					array50[1] = num49.ToString("0.###");
					array50[2] = ",";
					num49 = transform19.localEulerAngles.y;
					array50[3] = num49.ToString("0.###");
					array50[4] = ",";
					num49 = transform19.localEulerAngles.z;
					array50[5] = num49.ToString("0.###");
					array50[6] = ":";
					text17 = string.Concat(array50);
					text12 = text17;
					string[] array51 = new string[7];
					array51[0] = text12;
					num49 = transform20.localEulerAngles.x;
					array51[1] = num49.ToString("0.###");
					array51[2] = ",";
					num49 = transform20.localEulerAngles.y;
					array51[3] = num49.ToString("0.###");
					array51[4] = ",";
					num49 = transform20.localEulerAngles.z;
					array51[5] = num49.ToString("0.###");
					array51[6] = ":";
					text17 = string.Concat(array51);
					text12 = text17;
					string[] array52 = new string[7];
					array52[0] = text12;
					num49 = transform21.localEulerAngles.x;
					array52[1] = num49.ToString("0.###");
					array52[2] = ",";
					num49 = transform21.localEulerAngles.y;
					array52[3] = num49.ToString("0.###");
					array52[4] = ",";
					num49 = transform21.localEulerAngles.z;
					array52[5] = num49.ToString("0.###");
					array52[6] = ":";
					text17 = string.Concat(array52);
					text12 = text17;
					string[] array53 = new string[7];
					array53[0] = text12;
					num49 = transform22.localEulerAngles.x;
					array53[1] = num49.ToString("0.###");
					array53[2] = ",";
					num49 = transform22.localEulerAngles.y;
					array53[3] = num49.ToString("0.###");
					array53[4] = ",";
					num49 = transform22.localEulerAngles.z;
					array53[5] = num49.ToString("0.###");
					array53[6] = ":";
					text17 = string.Concat(array53);
					text12 = text17;
					string[] array54 = new string[7];
					array54[0] = text12;
					num49 = transform23.localEulerAngles.x;
					array54[1] = num49.ToString("0.###");
					array54[2] = ",";
					num49 = transform23.localEulerAngles.y;
					array54[3] = num49.ToString("0.###");
					array54[4] = ",";
					num49 = transform23.localEulerAngles.z;
					array54[5] = num49.ToString("0.###");
					array54[6] = ":";
					text17 = string.Concat(array54);
					text12 = text17;
					string[] array55 = new string[7];
					array55[0] = text12;
					num49 = transform24.localEulerAngles.x;
					array55[1] = num49.ToString("0.###");
					array55[2] = ",";
					num49 = transform24.localEulerAngles.y;
					array55[3] = num49.ToString("0.###");
					array55[4] = ",";
					num49 = transform24.localEulerAngles.z;
					array55[5] = num49.ToString("0.###");
					array55[6] = ":";
					text17 = string.Concat(array55);
					text12 = text17;
					string[] array56 = new string[7];
					array56[0] = text12;
					num49 = transform25.localEulerAngles.x;
					array56[1] = num49.ToString("0.###");
					array56[2] = ",";
					num49 = transform25.localEulerAngles.y;
					array56[3] = num49.ToString("0.###");
					array56[4] = ",";
					num49 = transform25.localEulerAngles.z;
					array56[5] = num49.ToString("0.###");
					array56[6] = ":";
					text17 = string.Concat(array56);
					text12 = text17;
					string[] array57 = new string[7];
					array57[0] = text12;
					num49 = transform26.localEulerAngles.x;
					array57[1] = num49.ToString("0.###");
					array57[2] = ",";
					num49 = transform26.localEulerAngles.y;
					array57[3] = num49.ToString("0.###");
					array57[4] = ",";
					num49 = transform26.localEulerAngles.z;
					array57[5] = num49.ToString("0.###");
					array57[6] = ":";
					text17 = string.Concat(array57);
					text12 = text17;
					string[] array58 = new string[7];
					array58[0] = text12;
					num49 = transform27.localEulerAngles.x;
					array58[1] = num49.ToString("0.###");
					array58[2] = ",";
					num49 = transform27.localEulerAngles.y;
					array58[3] = num49.ToString("0.###");
					array58[4] = ",";
					num49 = transform27.localEulerAngles.z;
					array58[5] = num49.ToString("0.###");
					array58[6] = ":";
					text17 = string.Concat(array58);
					text12 = text17;
					string[] array59 = new string[7];
					array59[0] = text12;
					num49 = maid7.body0.quaDefEyeL.eulerAngles.x;
					array59[1] = num49.ToString("0.###");
					array59[2] = ",";
					num49 = maid7.body0.quaDefEyeL.eulerAngles.y;
					array59[3] = num49.ToString("0.###");
					array59[4] = ",";
					num49 = maid7.body0.quaDefEyeL.eulerAngles.z;
					array59[5] = num49.ToString("0.###");
					array59[6] = ":";
					text17 = string.Concat(array59);
					text12 = text17;
					string[] array60 = new string[7];
					array60[0] = text12;
					num49 = maid7.body0.quaDefEyeR.eulerAngles.x;
					array60[1] = num49.ToString("0.###");
					array60[2] = ",";
					num49 = maid7.body0.quaDefEyeR.eulerAngles.y;
					array60[3] = num49.ToString("0.###");
					array60[4] = ",";
					num49 = maid7.body0.quaDefEyeR.eulerAngles.z;
					array60[5] = num49.ToString("0.###");
					array60[6] = ":";
					text17 = string.Concat(array60);
					Transform transform28 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Mune_L", true);
					Transform transform29 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Mune_L_sub", true);
					Transform transform30 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Mune_R", true);
					Transform transform31 = CMT.SearchObjName(maid7.body0.m_Bones.transform, "Mune_R_sub", true);
					text12 = text17;
					string[] array61 = new string[7];
					array61[0] = text12;
					num49 = transform28.localEulerAngles.x;
					array61[1] = num49.ToString("0.###");
					array61[2] = ",";
					num49 = transform28.localEulerAngles.y;
					array61[3] = num49.ToString("0.###");
					array61[4] = ",";
					num49 = transform28.localEulerAngles.z;
					array61[5] = num49.ToString("0.###");
					array61[6] = ":";
					text17 = string.Concat(array61);
					text12 = text17;
					string[] array62 = new string[7];
					array62[0] = text12;
					num49 = transform29.localEulerAngles.x;
					array62[1] = num49.ToString("0.###");
					array62[2] = ",";
					num49 = transform29.localEulerAngles.y;
					array62[3] = num49.ToString("0.###");
					array62[4] = ",";
					num49 = transform29.localEulerAngles.z;
					array62[5] = num49.ToString("0.###");
					array62[6] = ":";
					text17 = string.Concat(array62);
					text12 = text17;
					string[] array63 = new string[7];
					array63[0] = text12;
					num49 = transform30.localEulerAngles.x;
					array63[1] = num49.ToString("0.###");
					array63[2] = ",";
					num49 = transform30.localEulerAngles.y;
					array63[3] = num49.ToString("0.###");
					array63[4] = ",";
					num49 = transform30.localEulerAngles.z;
					array63[5] = num49.ToString("0.###");
					array63[6] = ":";
					text17 = string.Concat(array63);
					text12 = text17;
					string[] array64 = new string[7];
					array64[0] = text12;
					num49 = transform31.localEulerAngles.x;
					array64[1] = num49.ToString("0.###");
					array64[2] = ",";
					num49 = transform31.localEulerAngles.y;
					array64[3] = num49.ToString("0.###");
					array64[4] = ",";
					num49 = transform31.localEulerAngles.z;
					array64[5] = num49.ToString("0.###");
					array64[6] = ":";
					text17 = string.Concat(array64);
					text12 = text17;
					string[] array65 = new string[6];
					array65[0] = text12;
					num49 = transform9.position.x;
					array65[1] = num49.ToString("0.###");
					array65[2] = ",";
					num49 = transform9.position.y;
					array65[3] = num49.ToString("0.###");
					array65[4] = ",";
					num49 = transform9.position.z;
					array65[5] = num49.ToString("0.###");
					text17 = string.Concat(array65);
					text12 = text9;
					text9 = string.Concat(new string[]
					{
						text12,
						text13,
						text14,
						text15,
						text17
					});
					if (num50 + 1 != this.maidCnt)
					{
						text9 += ";";
					}
				}
				string text18 = "_";
				text18 = text18 + this.lightKage[0] + ",";
				if (this.isBloom)
				{
					text18 += "1,";
					text18 = text18 + this.bloom1 + ",";
					text18 = text18 + this.bloom2 + ",";
					text18 = text18 + this.bloom3 + ",";
					text18 = text18 + this.bloom4 + ",";
					text18 = text18 + this.bloom5 + ",";
					text18 = ((!this.isBloomA) ? (text18 + "0,") : (text18 + "1,"));
				}
				else
				{
					text18 += "0,0,0,0,0,0,0,";
				}
				if (this.isBlur)
				{
					text18 += "1,";
					text18 = text18 + this.blur1 + ",";
					text18 = text18 + this.blur2 + ",";
					text18 = text18 + this.blur3 + ",";
					text18 = text18 + this.blur4 + ",";
				}
				else
				{
					text18 += "0,0,0,0,0,";
				}
				text18 = text18 + this.bokashi + ",";
				text18 = text18 + this.kamiyure + ",";
				if (this.isDepth)
				{
					text18 += "1,";
					text18 = text18 + this.depth1 + ",";
					text18 = text18 + this.depth2 + ",";
					text18 = text18 + this.depth3 + ",";
					text18 = text18 + this.depth4 + ",";
					text18 = ((!this.isDepthA) ? (text18 + "0,") : (text18 + "1,"));
				}
				else
				{
					text18 += "0,0,0,0,0,0,";
				}
				if (this.isFog)
				{
					text18 += "1,";
					text18 = text18 + this.fog1 + ",";
					text18 = text18 + this.fog2 + ",";
					text18 = text18 + this.fog3 + ",";
					text18 = text18 + this.fog4 + ",";
					text18 = text18 + this.fog5 + ",";
					text18 = text18 + this.fog6 + ",";
					text18 = text18 + this.fog7 + ",";
				}
				else
				{
					text18 += "0,0,0,0,0,0,0,0,";
				}
				text18 = ((!this.isSepia) ? (text18 + "0") : (text18 + "1"));
				string text19 = "_";
				for (int num53 = 1; num53 < this.lightList.Count; num53++)
				{
					text19 = text19 + this.lightIndex[num53] + ",";
					text19 = text19 + this.lightColorR[num53] + ",";
					text19 = text19 + this.lightColorG[num53] + ",";
					text19 = text19 + this.lightColorB[num53] + ",";
					text19 = text19 + this.lightX[num53] + ",";
					text19 = text19 + this.lightY[num53] + ",";
					text19 = text19 + this.lightAkarusa[num53] + ",";
					text19 = text19 + this.lightRange[num53] + ";";
				}
				string text20 = "_";
				for (int num54 = 0; num54 < this.doguBObject.Count; num54++)
				{
					text20 = text20 + this.doguBObject[num54].name.Replace("_", " ") + ",";
					text12 = text20;
					string[] array66 = new string[7];
					array66[0] = text12;
					num49 = this.doguBObject[num54].transform.localEulerAngles.x;
					array66[1] = num49.ToString("0.###");
					array66[2] = ",";
					num49 = this.doguBObject[num54].transform.localEulerAngles.y;
					array66[3] = num49.ToString("0.###");
					array66[4] = ",";
					num49 = this.doguBObject[num54].transform.localEulerAngles.z;
					array66[5] = num49.ToString("0.###");
					array66[6] = ",";
					text20 = string.Concat(array66);
					text12 = text20;
					string[] array67 = new string[7];
					array67[0] = text12;
					num49 = this.doguBObject[num54].transform.position.x;
					array67[1] = num49.ToString("0.###");
					array67[2] = ",";
					num49 = this.doguBObject[num54].transform.position.y;
					array67[3] = num49.ToString("0.###");
					array67[4] = ",";
					num49 = this.doguBObject[num54].transform.position.z;
					array67[5] = num49.ToString("0.###");
					array67[6] = ",";
					text20 = string.Concat(array67);
					text12 = text20;
					string[] array68 = new string[6];
					array68[0] = text12;
					num49 = this.doguBObject[num54].transform.localScale.x;
					array68[1] = num49.ToString("0.###");
					array68[2] = ",";
					num49 = this.doguBObject[num54].transform.localScale.y;
					array68[3] = num49.ToString("0.###");
					array68[4] = ",";
					num49 = this.doguBObject[num54].transform.localScale.z;
					array68[5] = num49.ToString("0.###");
					text20 = string.Concat(array68);
					text20 += ";";
				}
				string text21 = "_";
				for (int num55 = 0; num55 < this.lightList.Count; num55++)
				{
					text21 = text21 + this.lightList[num55].transform.position.x + ",";
					text21 = text21 + this.lightList[num55].transform.position.y + ",";
					text21 = text21 + this.lightList[num55].transform.position.z + ";";
				}
				base.Preferences["scene"]["s" + this.saveScene].Value = string.Concat(new string[]
				{
					text10,
					text9,
					text18,
					text19,
					text20,
					text21
				});
				base.SaveConfig();
				this.saveScene = 0;
			}
			for (int num56 = 0; num56 < this.maidCnt; num56++)
			{
				if (this.haraCount[num56] > 0)
				{
					this.haraCount[num56]--;
					CMT.SearchObjName(this.maidArray[num56].body0.m_Bones.transform, "Bip01", true).position = this.haraPosition[num56];
				}
				if (this.isLoadFace[num56])
				{
					this.isLoadFace[num56] = false;
					TMorph morph3 = this.maidArray[num56].body0.Face.morph;
					float[] fieldValue6 = ManyMaids.GetFieldValue<TMorph, float[]>(morph3, "BlendValues");
					fieldValue6[(int)morph3.hash["mouthuphalf"]] = fieldValue6[(int)morph3.hash["mouthuphalf"]] - 0.01f;
					this.maidArray[num56].body0.Face.morph.FixBlendValues_Face();
				}
			}
			if (this.isScene)
			{
				this.isScene = false;
				string[] array69 = base.Preferences["scene"]["s" + this.loadScene].Value.Split(new char[]
				{
					'_'
				});
				string[] array70 = array69[1].Split(new char[]
				{
					';'
				});
				string[] array71 = array69[0].Split(new char[]
				{
					','
				});
				string[] array72 = null;
				string[] array73 = null;
				string[] array74 = null;
				string[] array75 = null;
				if (array69.Length >= 5)
				{
					array72 = array69[2].Split(new char[]
					{
						','
					});
					array73 = array69[3].Split(new char[]
					{
						';'
					});
					array74 = array69[4].Split(new char[]
					{
						';'
					});
				}
				if (array69.Length >= 6)
				{
					array75 = array69[5].Split(new char[]
					{
						';'
					});
				}
				if (!int.TryParse(array71[2], out this.bgIndex))
				{
					string a2 = array71[2].Replace(" ", "_");
					for (int num57 = 0; num57 < this.bgArray.Length; num57++)
					{
						if (a2 == this.bgArray[num57])
						{
							this.bgIndex = num57;
							break;
						}
					}
				}
				if (this.bgArray[this.bgIndex].Length == 36)
				{
					GameMain.Instance.BgMgr.ChangeBgMyRoom(this.bgArray[this.bgIndex]);
				}
				else
				{
					GameMain.Instance.BgMgr.ChangeBg(this.bgArray[this.bgIndex]);
				}
				this.bgCombo.selectedItemIndex = this.bgIndex;
				this.bg.localEulerAngles = new Vector3(float.Parse(array71[3]), float.Parse(array71[4]), float.Parse(array71[5]));
				this.bg.position = new Vector3(float.Parse(array71[6]), float.Parse(array71[7]), float.Parse(array71[8]));
				this.bg.localScale = new Vector3(float.Parse(array71[9]), float.Parse(array71[10]), float.Parse(array71[11]));
				this.softG = new Vector3(float.Parse(array71[12]), float.Parse(array71[13]), float.Parse(array71[14]));
				for (int num58 = 0; num58 < this.maidCnt; num58++)
				{
					Maid maid8 = this.maidArray[num58];
					this.delCount[num58] = 20;
					if (!this.isVR && this.goSlot[(int)this.selectList[num58]] != null)
					{
						this.maidArray[num58].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[num58]]);
						for (int num59 = 0; num59 < this.bodyHit[(int)this.selectList[num58]].Count; num59++)
						{
							this.maidArray[num58].body0.goSlot[num59].bonehair.bodyhit = this.bodyHit[(int)this.selectList[num58]][num59];
						}
					}
					for (int num60 = 0; num60 < maid8.body0.goSlot.Count; num60++)
					{
						if (maid8.body0.goSlot[num60].obj != null)
						{
							DynamicBone component3 = maid8.body0.goSlot[num60].obj.GetComponent<DynamicBone>();
							if (component3 != null && component3.enabled)
							{
								component3.m_Gravity = new Vector3(this.softG.x * 5f, this.softG.y * 5f + this.kamiyure, this.softG.z * 5f);
							}
						}
						List<THair1> fieldValue7 = ManyMaids.GetFieldValue<TBoneHair_, List<THair1>>(maid8.body0.goSlot[num60].bonehair, "hair1list");
						for (int num61 = 0; num61 < fieldValue7.Count; num61++)
						{
							fieldValue7[num61].SoftG = new Vector3(this.softG.x, this.softG.y + this.kamiyure, this.softG.z);
						}
					}
				}
				if (!this.kankyoLoadFlg)
				{
					int num62 = this.bgmIndex;
					this.bgmIndex = int.Parse(array71[15]);
					if (num62 != this.bgmIndex)
					{
						GameMain.Instance.SoundMgr.PlayBGM(this.bgmArray[this.bgmIndex] + ".ogg", 0f, true);
						this.bgmCombo.selectedItemIndex = this.bgmIndex;
					}
				}
				if (this.doguObject.Count > 0 && this.doguObject[this.doguSelectIndex] != null)
				{
					UnityEngine.Object.Destroy(this.doguObject[this.doguSelectIndex]);
					this.doguObject.RemoveAt(this.doguSelectIndex);
					this.doguIndex.RemoveAt(this.doguSelectIndex);
				}
				this.doguSelectIndex = 0;
				if (array71.Length > 16)
				{
					this.effectIndex = int.Parse(array71[16]);
					if (!this.isVR)
					{
						Vignetting component4 = GameMain.Instance.MainCamera.gameObject.GetComponent<Vignetting>();
						component4.mode = 0;
						component4.intensity = -3.98f;
						component4.chromaticAberration = -0.75f;
						component4.axialAberration = 1.18f;
						component4.blurSpread = 4.19f;
						component4.luminanceDependency = 0.494f;
						component4.blurDistance = 1.71f;
						component4.enabled = false;
						if (this.kami)
						{
							this.kami.SetActive(false);
						}
						if (this.effectIndex == 0)
						{
							component4.enabled = false;
						}
						if (this.effectIndex == 1)
						{
							component4.mode = 0;
							component4.intensity = -1f;
							component4.chromaticAberration = 0f;
							component4.axialAberration = 0f;
							component4.blurSpread = 5f;
							component4.luminanceDependency = 0f;
							component4.blurDistance = 0f;
							component4.enabled = true;
						}
						if (this.effectIndex == 2)
						{
							component4.enabled = true;
						}
						if (this.effectIndex == 3)
						{
							component4.mode = 0;
							component4.intensity = 9f;
							component4.chromaticAberration = 0f;
							component4.axialAberration = 0f;
							component4.blurSpread = 5f;
							component4.luminanceDependency = 0f;
							component4.blurDistance = 0f;
							component4.enabled = true;
						}
						if (this.effectIndex == 4)
						{
							UnityEngine.Object original = Resources.Load("Prefab/p_kamihubuki_photo_ver");
							this.kami = (UnityEngine.Object.Instantiate(original) as GameObject);
							Vector3 localPosition = this.kami.transform.localPosition;
							localPosition.y = 3.5f;
							this.kami.transform.localPosition = localPosition;
						}
						if (this.effectIndex == 5)
						{
							UnityEngine.Object original2 = Resources.Load("Prefab/p_kamihubuki_photo_ver");
							this.kami = (UnityEngine.Object.Instantiate(original2) as GameObject);
							Vector3 localPosition = this.kami.transform.localPosition;
							localPosition.y = 3.5f;
							this.kami.transform.localPosition = localPosition;
							component4.enabled = true;
							component4.mode = 0;
							component4.intensity = -2.5f;
							component4.chromaticAberration = -0.3f;
							component4.axialAberration = 0.5f;
							component4.blurSpread = 4.5f;
							component4.luminanceDependency = 0.2f;
							component4.blurDistance = 0.8f;
							component4.enabled = true;
						}
						if (this.effectIndex == 6)
						{
							this.kami.SetActive(false);
							UnityEngine.Object original3 = Resources.Load("Prefab/p_powder_snow_photo_ver");
							this.kami = (UnityEngine.Object.Instantiate(original3) as GameObject);
							Vector3 localPosition = this.kami.transform.localPosition;
							localPosition.y = 3.5f;
							this.kami.transform.localPosition = localPosition;
						}
						if (this.effectIndex == 7)
						{
							this.kami.SetActive(false);
							UnityEngine.Object original4 = Resources.Load("Prefab/p_powder_snow_photo_ver");
							this.kami = (UnityEngine.Object.Instantiate(original4) as GameObject);
							Vector3 localPosition = this.kami.transform.localPosition;
							localPosition.y = 3.5f;
							this.kami.transform.localPosition = localPosition;
							component4.enabled = true;
							component4.mode = 0;
							component4.intensity = -2.5f;
							component4.chromaticAberration = -0.3f;
							component4.axialAberration = 0.5f;
							component4.blurSpread = 4.5f;
							component4.luminanceDependency = 0.2f;
							component4.blurDistance = 0.8f;
							component4.enabled = true;
						}
						if (this.effectIndex == 8)
						{
							this.kami.SetActive(false);
							UnityEngine.Object original5 = Resources.Load("Prefab/p_powder_snow_photo_ver");
							this.kami = (UnityEngine.Object.Instantiate(original5) as GameObject);
							Vector3 localPosition = this.kami.transform.localPosition;
							localPosition.y = 3.5f;
							this.kami.transform.localPosition = localPosition;
							component4.mode = 0;
							component4.intensity = 8f;
							component4.chromaticAberration = 0f;
							component4.axialAberration = 0f;
							component4.blurSpread = 5f;
							component4.luminanceDependency = 0f;
							component4.blurDistance = 0f;
							component4.enabled = true;
						}
					}
					for (int num63 = 1; num63 < this.lightList.Count; num63++)
					{
						UnityEngine.Object.Destroy(this.lightList[num63]);
					}
					this.lightIndex = new List<int>();
					this.lightIndex.Add(0);
					this.lightColorR = new List<float>();
					this.lightColorR.Add(1f);
					this.lightColorG = new List<float>();
					this.lightColorG.Add(1f);
					this.lightColorB = new List<float>();
					this.lightColorB.Add(1f);
					this.lightX = new List<float>();
					this.lightX.Add(40f);
					this.lightY = new List<float>();
					this.lightY.Add(180f);
					this.lightAkarusa = new List<float>();
					this.lightAkarusa.Add(0.95f);
					this.lightKage = new List<float>();
					this.lightKage.Add(0.098f);
					this.lightRange = new List<float>();
					this.lightRange.Add(50f);
					this.lightCombo.selectedItemIndex = 0;
					this.lightList = new List<GameObject>();
					this.lightList.Add(GameMain.Instance.MainLight.gameObject);
					this.lightComboList = new GUIContent[this.lightList.Count];
					for (int num64 = 0; num64 < this.lightList.Count; num64++)
					{
						if (num64 == 0)
						{
							this.lightComboList[num64] = new GUIContent("メイン");
						}
						else
						{
							this.lightComboList[num64] = new GUIContent("追加" + num64);
						}
					}
					this.selectLightIndex = 0;
					GameMain.Instance.MainLight.Reset();
					GameMain.Instance.MainLight.SetIntensity(0.95f);
					GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 50f;
					GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
					GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
					GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
					this.bgObject.SetActive(true);
					this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
					this.isIdx1 = false;
					this.isIdx2 = false;
					this.isIdx3 = false;
					this.isIdx4 = false;
					this.lightIndex[0] = int.Parse(array71[17]);
					this.lightColorR[0] = float.Parse(array71[18]);
					this.lightColorG[0] = float.Parse(array71[19]);
					this.lightColorB[0] = float.Parse(array71[20]);
					GameMain.Instance.MainLight.Reset();
					GameMain.Instance.MainLight.SetIntensity(0.95f);
					GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 50f;
					GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
					GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
					if (this.lightIndex[0] == 0)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
					}
					else if (this.lightIndex[0] == 1)
					{
						GameMain.Instance.MainLight.transform.eulerAngles += Vector3.right * 40f;
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Spot;
					}
					else if (this.lightIndex[0] == 2)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Point;
					}
					else if (this.lightIndex[0] == 3)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
						this.bgObject.SetActive(false);
					}
					if (this.lightIndex[0] != 3)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						this.bgObject.SetActive(true);
						this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
					}
					else
					{
						this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
					}
					GameMain.Instance.MainLight.transform.eulerAngles = new Vector3(float.Parse(array71[21]), float.Parse(array71[22]), float.Parse(array71[23]));
					GameMain.Instance.MainLight.GetComponent<Light>().intensity = float.Parse(array71[24]);
					GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = float.Parse(array71[25]);
					GameMain.Instance.MainLight.GetComponent<Light>().range = float.Parse(array71[26]);
					this.lightX = new List<float>();
					this.lightX.Add(float.Parse(array71[21]));
					this.lightY = new List<float>();
					this.lightY.Add(float.Parse(array71[22]));
					this.lightAkarusa = new List<float>();
					this.lightAkarusa.Add(float.Parse(array71[24]));
					this.lightKage = new List<float>();
					this.lightKage.Add(0.098f);
					this.lightRange = new List<float>();
					this.lightRange.Add(float.Parse(array71[25]));
					this.selectLightIndex = 0;
					this.isIdx1 = false;
					this.isIdx2 = false;
					this.isIdx3 = false;
					this.isIdx4 = false;
					if (!this.kankyoLoadFlg && !this.isVR)
					{
						this.mainCamera.SetTargetPos(new Vector3(float.Parse(array71[27]), float.Parse(array71[28]), float.Parse(array71[29])), true);
						this.mainCamera.SetDistance(float.Parse(array71[30]), true);
						this.mainCamera.transform.eulerAngles = new Vector3(float.Parse(array71[31]), float.Parse(array71[32]), float.Parse(array71[33]));
						if (int.Parse(array71[34]) == 1)
						{
							this.inName = array71[35];
							this.inText = array71[36];
							this.inText = this.inText.Replace("&kaigyo", "\n");
							this.isMessage = true;
							this.bGuiMessage = false;
							GameObject gameObject = GameObject.Find("__GameMain__/SystemUI Root").transform.Find("MessageWindowPanel").gameObject;
							MessageWindowMgr messageWindowMgr = GameMain.Instance.ScriptMgr.adv_kag.MessageWindowMgr;
							messageWindowMgr.OpenMessageWindowPanel();
							MessageClass messageClass = new MessageClass(gameObject, messageWindowMgr);
							messageClass.SetText(this.inName, this.inText, "", 0);
							messageClass.FinishChAnime();
						}
						else if (this.isMessage)
						{
							this.isMessage = false;
							GameObject gameObject2 = GameObject.Find("__GameMain__/SystemUI Root").transform.Find("MessageWindowPanel").gameObject;
							GameMain.Instance.ScriptMgr.adv_kag.MessageWindowMgr.CloseMessageWindowPanel();
						}
					}
				}
				if (array71.Length > 37 && array71[37] != "")
				{
					if (this.doguSelectIndex == this.doguObject.Count)
					{
						this.doguIndex.Add(0);
					}
					else if (this.doguObject.Count > 0 && this.doguObject[this.doguSelectIndex] != null)
					{
						UnityEngine.Object.Destroy(this.doguObject[this.doguSelectIndex]);
						this.doguObject.RemoveAt(this.doguSelectIndex);
					}
					else
					{
						this.doguIndex.Add(0);
						this.doguSelectIndex = this.doguIndex.Count - 1;
					}
					string a3 = array71[37].Replace(" ", "_");
					for (int num65 = 0; num65 < Class1.doguArray.Length; num65++)
					{
						if (a3 == Class1.doguArray[num65])
						{
							this.doguIndex[this.doguSelectIndex] = num65;
							break;
						}
					}
					if (!Class1.doguArray[this.doguIndex[this.doguSelectIndex]].StartsWith("mirror"))
					{
						UnityEngine.Object @object = null;
						for (int num66 = 0; num66 < 5; num66++)
						{
							@object = Resources.Load("Prefab/" + Class1.doguArray[this.doguIndex[this.doguSelectIndex]]);
							if (@object != null)
							{
								break;
							}
							List<int> list6;
							int index;
							(list6 = this.doguIndex)[index = this.doguSelectIndex] = list6[index] + 1;
						}
						this.doguObject.Add(UnityEngine.Object.Instantiate(@object) as GameObject);
					}
					else
					{
						Material material = new Material(Shader.Find("Mirror"));
						GameObject gameObject3 = GameObject.CreatePrimitive(PrimitiveType.Plane);
						gameObject3.transform.localScale = new Vector3(0.3f, 1f, 0.3f);
						gameObject3.GetComponent<Renderer>().material = material;
						gameObject3.AddComponent<MirrorReflection2>();
						MirrorReflection2 component5 = gameObject3.GetComponent<MirrorReflection2>();
						component5.m_TextureSize = 2048;
						component5.m_ClipPlaneOffset = 0f;
						gameObject3.GetComponent<Renderer>().enabled = true;
						this.doguObject.Add(gameObject3);
					}
					Vector3 vector4 = Vector3.zero;
					Vector3 zero = Vector3.zero;
					zero.x = -90f;
					int j = this.doguIndex[this.doguSelectIndex];
					switch (j)
					{
					case 1:
						vector4.z = -0.5f;
						goto IL_94A8;
					case 2:
						vector4.z = -0.5f;
						goto IL_94A8;
					case 3:
						vector4.z = 0.5f;
						zero.z = 90f;
						goto IL_94A8;
					case 4:
						vector4.z = 0.9f;
						goto IL_94A8;
					case 5:
						vector4.z = 0.9f;
						goto IL_94A8;
					case 6:
						vector4.z = 0.6f;
						zero.x = 0f;
						this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(4.5f, 4.5f, 4.5f);
						goto IL_94A8;
					case 7:
						vector4.z = 0.6f;
						this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(3.5f, 3.5f, 3.5f);
						goto IL_94A8;
					case 8:
						vector4.z = 0.5f;
						zero.x = 0f;
						goto IL_94A8;
					case 9:
						vector4.z = 0.32f;
						zero.z = 180f;
						goto IL_94A8;
					case 10:
						vector4.z = 0.6f;
						goto IL_94A8;
					case 11:
						vector4.z = 0.6f;
						goto IL_94A8;
					case 12:
						vector4.z = 0.5f;
						zero.z = 180f;
						goto IL_94A8;
					case 13:
						vector4.z = 0.7f;
						zero.z = 180f;
						goto IL_94A8;
					case 14:
						vector4.z = -0.4f;
						goto IL_94A8;
					case 15:
						vector4.z = -0.4f;
						goto IL_94A8;
					case 16:
						vector4.z = -0.4f;
						zero.z = 180f;
						goto IL_94A8;
					case 17:
						vector4.z = -0.4f;
						goto IL_94A8;
					case 18:
						vector4.z = -0.2f;
						goto IL_94A8;
					case 19:
						vector4.z = 0f;
						goto IL_94A8;
					case 20:
						vector4.z = 3.4f;
						vector4.x = -1f;
						goto IL_94A8;
					case 21:
						vector4.z = 3.4f;
						vector4.x = -1f;
						goto IL_94A8;
					case 22:
						vector4.z = 3.4f;
						vector4.y = 0.3f;
						vector4.x = -1f;
						goto IL_94A8;
					case 23:
						vector4.z = 2.7f;
						vector4.x = 0.77f;
						zero.z = 90f;
						goto IL_94A8;
					case 25:
						vector4.z = 0.5f;
						vector4.y = 0.9f;
						zero.z = 180f;
						goto IL_94A8;
					case 26:
						vector4.z = 0.5f;
						vector4.y = 0.9f;
						zero.z = 180f;
						goto IL_94A8;
					case 29:
						vector4.z = 0.5f;
						vector4.x = -1.05f;
						goto IL_94A8;
					case 30:
						vector4.z = 0f;
						zero.z = 0f;
						this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.75f, 0.75f, 0.75f);
						goto IL_94A8;
					case 31:
						vector4.z = -0.6f;
						vector4.y = 0.96f;
						zero.z = 180f;
						this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.2f, 0.4f, 0.2f);
						goto IL_94A8;
					case 32:
						vector4.z = -0.6f;
						vector4.y = 0.96f;
						zero.z = 180f;
						this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.1f, 0.4f, 0.2f);
						goto IL_94A8;
					case 33:
						vector4.z = -0.6f;
						vector4.y = 0.85f;
						zero.z = 180f;
						this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(0.03f, 0.18f, 0.124f);
						goto IL_94A8;
					}
					vector4.z = 0.5f;
					IL_94A8:
					this.doguObject[this.doguSelectIndex].transform.localPosition = vector4;
					this.doguObject[this.doguSelectIndex].transform.localRotation = Quaternion.Euler(zero);
					this.doguObject[this.doguSelectIndex].transform.localEulerAngles = new Vector3(float.Parse(array71[38]), float.Parse(array71[39]), float.Parse(array71[40]));
					this.doguObject[this.doguSelectIndex].transform.position = new Vector3(float.Parse(array71[41]), float.Parse(array71[42]), float.Parse(array71[43]));
					this.doguObject[this.doguSelectIndex].transform.localScale = new Vector3(float.Parse(array71[44]), float.Parse(array71[45]), float.Parse(array71[46]));
				}
				if (!this.kankyoLoadFlg)
				{
					int num67 = 0;
					while (num67 < array70.Length && this.maidCnt > num67)
					{
						Maid maid9 = this.maidArray[num67];
						if (maid9 && maid9.Visible)
						{
							this.SetIK(maid9, num67);
							Transform transform32 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01", true);
							Transform transform33 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 L Toe0", true);
							Transform transform34 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 R Toe0", true);
							Transform transform35 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 L Toe01", true);
							Transform transform36 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 R Toe01", true);
							Transform transform37 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 L Toe0Nub", true);
							Transform transform38 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 R Toe0Nub", true);
							Transform transform39 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 L Toe1", true);
							Transform transform40 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 R Toe1", true);
							Transform transform41 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 L Toe11", true);
							Transform transform42 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 R Toe11", true);
							Transform transform43 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 L Toe1Nub", true);
							Transform transform44 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 R Toe1Nub", true);
							Transform transform45 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 L Toe2", true);
							Transform transform46 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 R Toe2", true);
							Transform transform47 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 L Toe21", true);
							Transform transform48 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 R Toe21", true);
							Transform transform49 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 L Toe2Nub", true);
							Transform transform50 = CMT.SearchObjName(maid9.body0.m_Bones.transform, "Bip01 R Toe2Nub", true);
							string[] array76 = array70[num67].Split(new char[]
							{
								':'
							});
							for (int num68 = 0; num68 < 40; num68++)
							{
								string[] array77 = array76[num68].Split(new char[]
								{
									','
								});
								this.Finger[num67, num68].localEulerAngles = new Vector3(float.Parse(array77[0]), float.Parse(array77[1]), float.Parse(array77[2]));
							}
							bool flag8 = false;
							if (array76.Length == 64)
							{
								flag8 = true;
							}
							if (!this.isVR)
							{
								maid9.body0.quaDefEyeL.eulerAngles = this.eyeL[(int)this.selectList[num67]];
								maid9.body0.quaDefEyeR.eulerAngles = this.eyeR[(int)this.selectList[num67]];
							}
							for (int num69 = 0; num69 < 3; num69++)
							{
								for (int num70 = 40; num70 < array76.Length; num70++)
								{
									string[] array78 = array76[num70].Split(new char[]
									{
										','
									});
									switch (num70)
									{
									case 40:
										if (flag8)
										{
											this.Spine.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.Spine.eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 41:
										if (flag8)
										{
											this.Spine0a.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.Spine0a.eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 42:
										if (flag8)
										{
											this.Spine1.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.Spine1.eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 43:
										if (flag8)
										{
											this.Spine1a.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.Spine1a.eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 44:
										if (flag8)
										{
											this.Pelvis.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.Pelvis.eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 45:
										this.HandL1[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 46:
										if (flag8)
										{
											this.UpperArmL1[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.UpperArmL1[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 47:
										if (flag8)
										{
											this.ForearmL1[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.ForearmL1[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 48:
										this.HandR1[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 49:
										if (flag8)
										{
											this.UpperArmR1[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.UpperArmR1[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 50:
										if (flag8)
										{
											this.ForearmR1[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.ForearmR1[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 51:
										this.HandL2[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 52:
										if (flag8)
										{
											this.UpperArmL2[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.UpperArmL2[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 53:
										if (flag8)
										{
											this.ForearmL2[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.ForearmL2[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 54:
										this.HandR2[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 55:
										if (flag8)
										{
											this.UpperArmR2[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.UpperArmR2[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 56:
										if (flag8)
										{
											this.ForearmR2[num67].localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.ForearmR2[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 57:
										if (flag8)
										{
											this.Head.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										if (!flag8)
										{
											this.Head.eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 58:
										maid9.transform.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 59:
										maid9.transform.position = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 60:
										maid9.transform.localScale = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 63:
										if (num69 <= 0)
										{
											this.hanten[num67] = false;
											this.hantenn[num67] = false;
											TMorph morph4 = maid9.body0.Face.morph;
											float[] fieldValue8 = ManyMaids.GetFieldValue<TMorph, float[]>(morph4, "BlendValues");
											float[] fieldValue9 = ManyMaids.GetFieldValue<TMorph, float[]>(morph4, "BlendValuesBackup");
											if (!this.isVR)
											{
												maid9.boMabataki = false;
											}
											fieldValue9[(int)morph4.hash["eyeclose"]] = float.Parse(array78[0]);
											fieldValue9[(int)morph4.hash["eyeclose2"]] = float.Parse(array78[1]);
											fieldValue9[(int)morph4.hash["eyeclose3"]] = float.Parse(array78[2]);
											fieldValue9[(int)morph4.hash["eyeclose6"]] = float.Parse(array78[3]);
											fieldValue8[(int)morph4.hash["hitomih"]] = float.Parse(array78[4]);
											fieldValue8[(int)morph4.hash["hitomis"]] = float.Parse(array78[5]);
											fieldValue8[(int)morph4.hash["mayuha"]] = float.Parse(array78[6]);
											fieldValue8[(int)morph4.hash["mayuup"]] = float.Parse(array78[7]);
											fieldValue8[(int)morph4.hash["mayuv"]] = float.Parse(array78[8]);
											fieldValue8[(int)morph4.hash["mayuvhalf"]] = float.Parse(array78[9]);
											fieldValue8[(int)morph4.hash["moutha"]] = float.Parse(array78[10]);
											fieldValue8[(int)morph4.hash["mouths"]] = float.Parse(array78[11]);
											fieldValue8[(int)morph4.hash["mouthdw"]] = float.Parse(array78[12]);
											fieldValue8[(int)morph4.hash["mouthup"]] = float.Parse(array78[13]);
											fieldValue8[(int)morph4.hash["tangout"]] = float.Parse(array78[14]);
											fieldValue8[(int)morph4.hash["tangup"]] = float.Parse(array78[15]);
											fieldValue8[(int)morph4.hash["eyebig"]] = float.Parse(array78[16]);
											fieldValue9[(int)morph4.hash["eyeclose5"]] = float.Parse(array78[17]);
											fieldValue8[(int)morph4.hash["mayuw"]] = float.Parse(array78[18]);
											fieldValue8[(int)morph4.hash["mouthhe"]] = float.Parse(array78[19]);
											fieldValue8[(int)morph4.hash["mouthc"]] = float.Parse(array78[20]);
											fieldValue8[(int)morph4.hash["mouthi"]] = float.Parse(array78[21]);
											fieldValue8[(int)morph4.hash["mouthuphalf"]] = float.Parse(array78[22]) + 0.01f;
											this.isLoadFace[num67] = true;
											try
											{
												fieldValue8[(int)morph4.hash["tangopen"]] = float.Parse(array78[23]);
											}
											catch
											{
											}
											if (float.Parse(array78[24]) == 1f)
											{
												fieldValue8[(int)morph4.hash["namida"]] = 1f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["namida"]] = 0f;
											}
											if (float.Parse(array78[25]) == 1f)
											{
												fieldValue8[(int)morph4.hash["tear1"]] = 1f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["tear1"]] = 0f;
											}
											if (float.Parse(array78[26]) == 1f)
											{
												fieldValue8[(int)morph4.hash["tear2"]] = 1f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["tear2"]] = 0f;
											}
											if (float.Parse(array78[27]) == 1f)
											{
												fieldValue8[(int)morph4.hash["tear3"]] = 1f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["tear3"]] = 0f;
											}
											if (float.Parse(array78[28]) == 1f)
											{
												fieldValue8[(int)morph4.hash["shock"]] = 1f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["shock"]] = 0f;
											}
											if (float.Parse(array78[29]) == 1f)
											{
												fieldValue8[(int)morph4.hash["yodare"]] = 1f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["yodare"]] = 0f;
											}
											if (float.Parse(array78[30]) == 1f)
											{
												fieldValue8[(int)morph4.hash["hoho"]] = 0.5f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["hoho"]] = 0f;
											}
											if (float.Parse(array78[31]) == 1f)
											{
												fieldValue8[(int)morph4.hash["hoho2"]] = 0.5f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["hoho2"]] = 0f;
											}
											if (float.Parse(array78[32]) == 1f)
											{
												fieldValue8[(int)morph4.hash["hohos"]] = 1f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["hohos"]] = 0f;
											}
											if (float.Parse(array78[33]) == 1f)
											{
												fieldValue8[(int)morph4.hash["hohol"]] = 1f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["hohol"]] = 0f;
											}
											if (float.Parse(array78[34]) == 1f)
											{
												fieldValue8[(int)morph4.hash["toothoff"]] = 1f;
											}
											else
											{
												fieldValue8[(int)morph4.hash["toothoff"]] = 0f;
											}
											if (array78.Length > 35)
											{
												if (float.Parse(array78[35]) == 1f)
												{
													morph4.boNoseFook = true;
												}
												else
												{
													morph4.boNoseFook = false;
												}
											}
											this.isFace[num67] = true;
											this.isFaceInit = true;
										}
										break;
									case 64:
										if (num69 <= 0 && !this.isVR)
										{
											if (int.Parse(array78[0]) == 1)
											{
												this.isLook[num67] = true;
												this.lookX[num67] = float.Parse(array78[1]);
												this.lookY[num67] = float.Parse(array78[2]);
												if (maid9.body0.offsetLookTarget.x != this.lookY[num67])
												{
													if (this.isLock[num67] && this.lookY[num67] < 0f)
													{
														maid9.body0.offsetLookTarget = new Vector3(this.lookY[num67] * 0.6f, 1f, this.lookX[num67]);
													}
													else
													{
														maid9.body0.offsetLookTarget = new Vector3(this.lookY[num67], 1f, this.lookX[num67]);
													}
												}
												if (this.lookX[num67] != this.lookXn[num67])
												{
													this.lookXn[num67] = this.lookX[num67];
													maid9.body0.offsetLookTarget = new Vector3(this.lookY[num67], 1f, this.lookX[num67]);
												}
												if (this.lookY[num67] != this.lookYn[num67])
												{
													this.lookYn[num67] = this.lookY[num67];
													if (this.isLock[num67] && this.lookY[num67] < 0f)
													{
														maid9.body0.offsetLookTarget = new Vector3(this.lookY[num67] * 0.6f, 1f, this.lookX[num67]);
													}
													else
													{
														maid9.body0.offsetLookTarget = new Vector3(this.lookY[num67], 1f, this.lookX[num67]);
													}
												}
											}
											else
											{
												this.isLook[num67] = false;
											}
											if (this.isLook[num67])
											{
												maid9.body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
												maid9.body0.boHeadToCam = true;
												maid9.body0.boEyeToCam = true;
												maid9.body0.trsLookTarget = null;
											}
											else
											{
												maid9.body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
												maid9.body0.boHeadToCam = true;
												maid9.body0.boEyeToCam = true;
											}
										}
										break;
									case 65:
										if (num69 <= 0)
										{
											if (this.itemIndex[num67] != int.Parse(array78[0]))
											{
												this.itemIndex[num67] = int.Parse(array78[0]);
												if (this.itemIndex[num67] == Class1.itemArray.Length - 1)
												{
													this.itemIndex[num67] = 0;
												}
												string[] array79 = new string[2];
												array79 = Class1.itemArray[this.itemIndex[num67]].Split(new char[]
												{
													','
												});
												if (this.itemIndex[num67] > 13)
												{
													array79 = Class1.itemArray[this.itemIndex[num67] + 1].Split(new char[]
													{
														','
													});
												}
												maid9.DelProp(MPN.acckami, true);
												maid9.DelProp(MPN.accha, true);
												maid9.DelProp(MPN.acchead, true);
												bool flag9 = false;
												if (this.itemIndex[num67] == 12 || this.itemIndex[num67] == 13)
												{
													flag9 = true;
												}
												if (!flag9)
												{
													maid9.DelProp(MPN.accvag, true);
													maid9.DelProp(MPN.megane, true);
												}
												if (array79[0] != "")
												{
													maid9.SetProp(array79[0], array79[1], 0, true, false);
												}
												if (this.itemIndex[num67] == 12)
												{
													array79 = Class1.itemArray[this.itemIndex[num67] - 1].Split(new char[]
													{
														','
													});
													maid9.SetProp(array79[0], array79[1], 0, true, false);
												}
												if (this.itemIndex[num67] == 13)
												{
													array79 = Class1.itemArray[this.itemIndex[num67] + 1].Split(new char[]
													{
														','
													});
													maid9.SetProp(array79[0], array79[1], 0, true, false);
												}
												if (this.itemIndex[num67] == 23)
												{
													array79 = Class1.itemArray[this.itemIndex[num67]].Split(new char[]
													{
														','
													});
													maid9.SetProp(array79[0], array79[1], 0, true, false);
													this.cafeFlg[num67] = true;
												}
												maid9.AllProcPropSeqStart();
											}
											this.IK_hand = CMT.SearchObjName(maid9.body0.m_Bones.transform, "_IK_handL", true);
										}
										break;
									case 66:
										CMT.SearchObjName(maid9.body0.m_Bones.transform, "_IK_handL", true).localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 67:
										CMT.SearchObjName(maid9.body0.m_Bones.transform, "_IK_handR", true).localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 68:
										if (array78.Length >= 2)
										{
											this.ClavicleL1[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 69:
										this.ClavicleR1[num67].eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 70:
										if (int.Parse(array78[0]) == 1)
										{
											this.hanten[num67] = true;
											this.hantenn[num67] = true;
										}
										break;
									case 71:
										transform32.eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 72:
										transform33.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 73:
										transform34.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 74:
										transform35.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 75:
										transform36.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 76:
										transform37.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 77:
										transform38.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 78:
										transform39.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 79:
										transform40.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 80:
										transform41.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 81:
										transform42.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 82:
										transform43.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 83:
										transform44.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 84:
										transform45.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 85:
										transform46.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 86:
										transform47.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 87:
										transform48.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 88:
										transform49.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 89:
										transform50.localEulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 90:
										if (!this.isVR)
										{
											maid9.body0.quaDefEyeL.eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 91:
										if (!this.isVR)
										{
											maid9.body0.quaDefEyeR.eulerAngles = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										}
										break;
									case 92:
										this.vIKMuneL[num67] = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										this.muneIKL[num67] = true;
										break;
									case 93:
										this.vIKMuneLSub[num67] = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 94:
										this.vIKMuneR[num67] = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										this.muneIKR[num67] = true;
										break;
									case 95:
										this.vIKMuneRSub[num67] = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									case 96:
										this.haraCount[num67] = 2;
										this.haraPosition[num67] = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										transform32.position = new Vector3(float.Parse(array78[0]), float.Parse(array78[1]), float.Parse(array78[2]));
										break;
									}
								}
							}
							this.isStop[num67] = true;
							this.isLock[num67] = true;
						}
						num67++;
					}
				}
				this.isBloom = false;
				this.bloom1 = 2.85f;
				this.bloom2 = 3f;
				this.bloom3 = 0f;
				this.bloom4 = 0f;
				this.bloom5 = 0f;
				this.isBloomA = false;
				this.isBlur = false;
				this.blur1 = -3.98f;
				this.blur4 = -0.75f;
				this.blur2 = 0.9f;
				this.blur3 = 4.19f;
				this.bokashi = 0f;
				this.kamiyure = 0f;
				this.isDepth = false;
				this.isDepthA = false;
				this.depth1 = 3f;
				this.depth2 = 0.1f;
				this.depth3 = 15f;
				this.depth4 = 3f;
				this.isFog = false;
				this.fog1 = 4f;
				this.fog2 = 1f;
				this.fog3 = 1f;
				this.fog4 = 0f;
				this.fog5 = 1f;
				this.fog6 = 1f;
				this.fog7 = 1f;
				this.isSepia = false;
				if (array72 != null)
				{
					this.lightKage[0] = float.Parse(array72[0]);
					if (int.Parse(array72[1]) == 1)
					{
						this.isBloom = true;
						this.bloom1 = float.Parse(array72[2]);
						this.bloom2 = float.Parse(array72[3]);
						this.bloom3 = float.Parse(array72[4]);
						this.bloom4 = float.Parse(array72[5]);
						this.bloom5 = float.Parse(array72[6]);
						if (int.Parse(array72[7]) == 1)
						{
							this.isBloomA = true;
						}
					}
					if (int.Parse(array72[8]) == 1)
					{
						this.isBlur = true;
						this.blur1 = float.Parse(array72[9]);
						this.blur2 = float.Parse(array72[10]);
						this.blur3 = float.Parse(array72[11]);
						this.blur4 = float.Parse(array72[12]);
					}
					this.bokashi = float.Parse(array72[13]);
					this.kamiyure = float.Parse(array72[14]);
					if (array72.Length > 15)
					{
						if (int.Parse(array72[15]) == 1)
						{
							this.isDepth = true;
							this.depth1 = float.Parse(array72[16]);
							this.depth2 = float.Parse(array72[17]);
							this.depth3 = float.Parse(array72[18]);
							this.depth4 = float.Parse(array72[19]);
							if (int.Parse(array72[20]) == 1)
							{
								this.isDepthA = true;
							}
						}
						if (int.Parse(array72[21]) == 1)
						{
							this.isFog = true;
							this.fog1 = float.Parse(array72[22]);
							this.fog2 = float.Parse(array72[23]);
							this.fog3 = float.Parse(array72[24]);
							this.fog4 = float.Parse(array72[25]);
							this.fog5 = float.Parse(array72[26]);
							this.fog6 = float.Parse(array72[27]);
							this.fog7 = float.Parse(array72[28]);
						}
						if (int.Parse(array72[29]) == 1)
						{
							this.isSepia = true;
						}
					}
				}
				if (array73 != null)
				{
					for (int num71 = 0; num71 < array73.Length - 1; num71++)
					{
						string[] array80 = array73[num71].Split(new char[]
						{
							','
						});
						GameObject gameObject4 = new GameObject("Light");
						gameObject4.AddComponent<Light>();
						this.lightList.Add(gameObject4);
						this.lightIndex.Add(int.Parse(array80[0]));
						this.lightColorR.Add(float.Parse(array80[1]));
						this.lightColorG.Add(float.Parse(array80[2]));
						this.lightColorB.Add(float.Parse(array80[3]));
						this.lightX.Add(float.Parse(array80[4]));
						this.lightY.Add(float.Parse(array80[5]));
						this.lightAkarusa.Add(float.Parse(array80[6]));
						this.lightRange.Add(float.Parse(array80[7]));
						this.lightKage.Add(0.098f);
						gameObject4.transform.position = GameMain.Instance.MainLight.transform.position;
						this.selectLightIndex = this.lightList.Count - 1;
						this.lightComboList = new GUIContent[this.lightList.Count];
						for (int num72 = 0; num72 < this.lightList.Count; num72++)
						{
							if (num72 == 0)
							{
								this.lightComboList[num72] = new GUIContent("メイン");
							}
							else
							{
								this.lightComboList[num72] = new GUIContent("追加" + num72);
							}
						}
						this.lightCombo.selectedItemIndex = this.selectLightIndex;
						gameObject4.GetComponent<Light>().intensity = this.lightAkarusa[num71];
						gameObject4.GetComponent<Light>().spotAngle = this.lightRange[num71];
						gameObject4.GetComponent<Light>().range = this.lightRange[num71] / 5f;
						if (this.lightIndex[this.selectLightIndex] == 0)
						{
							this.lightList[this.selectLightIndex].GetComponent<Light>().type = LightType.Directional;
						}
						else if (this.lightIndex[this.selectLightIndex] == 1)
						{
							this.lightList[this.selectLightIndex].GetComponent<Light>().type = LightType.Spot;
						}
						else if (this.lightIndex[this.selectLightIndex] == 2)
						{
							this.lightList[this.selectLightIndex].GetComponent<Light>().type = LightType.Point;
						}
						else if (this.lightIndex[this.selectLightIndex] == 3)
						{
							this.lightList[this.selectLightIndex].GetComponent<Light>().type = LightType.Directional;
							this.lightList[this.selectLightIndex].SetActive(false);
						}
					}
				}
				if (array75 != null)
				{
					for (int num73 = 0; num73 < this.lightList.Count; num73++)
					{
						string[] array81 = array75[num73].Split(new char[]
						{
							','
						});
						this.lightList[num73].transform.position = new Vector3(float.Parse(array81[0]), float.Parse(array81[1]), float.Parse(array81[2]));
						if (this.gLight[num73] == null)
						{
							this.gLight[num73] = GameObject.CreatePrimitive(PrimitiveType.Cube);
							Material material2 = new Material(Shader.Find("Transparent/Diffuse"));
							material2.color = new Color(0.5f, 0.5f, 1f, 0.8f);
							this.gLight[num73].GetComponent<Renderer>().material = material2;
							this.gLight[num73].layer = 8;
							this.gLight[num73].GetComponent<Renderer>().enabled = false;
							this.gLight[num73].SetActive(false);
							this.gLight[num73].transform.position = this.lightList[num73].transform.position;
							this.mLight[num73] = this.gLight[num73].AddComponent<MouseDrag6>();
							this.mLight[num73].obj = this.gLight[num73];
							this.mLight[num73].maid = this.lightList[num73].gameObject;
							this.mLight[num73].angles = this.lightList[num73].transform.eulerAngles;
							this.gLight[num73].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
							this.mLight[num73].ido = 1;
							this.mLight[num73].isScale = false;
						}
					}
				}
				if (array74 != null)
				{
					for (int num74 = 0; num74 < this.doguBObject.Count; num74++)
					{
						UnityEngine.Object.Destroy(this.doguBObject[num74]);
					}
					this.doguBObject = new List<GameObject>();
					int num75 = 0;
					while (num75 < array74.Length - 1)
					{
						string[] array82 = array74[num75].Split(new char[]
						{
							','
						});
						string text22 = array82[0].Replace(" ", "_");
						GameObject gameObject5 = null;
						bool flag10 = false;
						if (text22.Contains(".menu"))
						{
							string text23 = text22;
							byte[] array83 = null;
							try
							{
								AFileBase afileBase9 = GameUty.FileOpen(text23, null);
								try
								{
									NDebug.Assert(afileBase9.IsValid(), "メニューファイルが存在しません。 :" + text23);
									if (array83 == null)
									{
										array83 = new byte[afileBase9.GetSize()];
									}
									else if (array83.Length < afileBase9.GetSize())
									{
										array83 = new byte[afileBase9.GetSize()];
									}
									afileBase9.Read(ref array83, afileBase9.GetSize());
								}
								finally
								{
									AFileBase afileBase10 = afileBase9;
									if (afileBase10 != null)
									{
										afileBase10.Dispose();
									}
								}
								string[] array84 = ManyMaids.ProcScriptBin(this.maidArray[0], array83, text23, false);
								gameObject5 = ImportCM2.LoadSkinMesh_R(array84[0], array84, "", this.maidArray[0].body0.goSlot[8], 1);
								this.doguBObject.Add(gameObject5);
								gameObject5.name = text23;
								Vector3 vector4 = Vector3.zero;
								Vector3 zero = Vector3.zero;
								vector4.z = 0.4f;
								if (text22.Contains("HandItem"))
								{
									if (!(text22 == "HandItemR_WineGlass_I_.menu"))
									{
										if (!(text22 == "HandItemR_WineBottle_I_.menu"))
										{
											if (!(text22 == "HandItemR_Mop_I_.menu"))
											{
												if (!(text22 == "HandItemL_Dance_Hataki_I_.menu") && !(text22 == "HandItemL_Dance_Mop_I_.menu"))
												{
													zero.x = -90f;
												}
											}
											else
											{
												zero.x = 90f;
											}
										}
										else
										{
											zero.z = 90f;
										}
									}
									else
									{
										zero.z = 90f;
										vector4.y = 0.04f;
									}
								}
								gameObject5.transform.localPosition = vector4;
								gameObject5.transform.localRotation = Quaternion.Euler(zero);
								goto IL_CFB4;
							}
							catch
							{
								flag10 = true;
								goto IL_CFB4;
							}
							goto IL_BFC6;
						}
						goto IL_BFC6;
						IL_CFB4:
						if (!flag10)
						{
							this.doguCnt = this.doguBObject.Count - 1;
							this.gDogu[this.doguCnt] = GameObject.CreatePrimitive(PrimitiveType.Cube);
							Vector3 localEulerAngles2 = gameObject5.transform.localEulerAngles;
							gameObject5.transform.localEulerAngles = new Vector3(float.Parse(array82[1]), float.Parse(array82[2]), float.Parse(array82[3]));
							gameObject5.transform.position = new Vector3(float.Parse(array82[4]), float.Parse(array82[5]), float.Parse(array82[6]));
							this.gDogu[this.doguCnt].transform.localEulerAngles = new Vector3(float.Parse(array82[1]), float.Parse(array82[2]), float.Parse(array82[3]));
							this.gDogu[this.doguCnt].transform.position = new Vector3(float.Parse(array82[4]), float.Parse(array82[5]), float.Parse(array82[6]));
							this.gDogu[this.doguCnt].GetComponent<Renderer>().material = this.m_material;
							this.gDogu[this.doguCnt].layer = 8;
							this.gDogu[this.doguCnt].GetComponent<Renderer>().enabled = false;
							this.gDogu[this.doguCnt].SetActive(false);
							this.gDogu[this.doguCnt].transform.position = gameObject5.transform.position;
							this.mDogu[this.doguCnt] = this.gDogu[this.doguCnt].AddComponent<MouseDrag6>();
							this.mDogu[this.doguCnt].obj = this.gDogu[this.doguCnt];
							this.mDogu[this.doguCnt].maid = gameObject5;
							this.mDogu[this.doguCnt].angles = localEulerAngles2;
							this.gDogu[this.doguCnt].transform.localScale = new Vector3(this.cubeSize, this.cubeSize, this.cubeSize);
							this.mDogu[this.doguCnt].ido = 1;
							this.mDogu[this.doguCnt].isScale = false;
							if (text22 == "Particle/pLineY")
							{
								this.mDogu[this.doguCnt].count = 180;
							}
							if (text22 == "Particle/pLineP02")
							{
								this.mDogu[this.doguCnt].count = 115;
							}
							if (gameObject5.name == "Particle/pLine_act2")
							{
								this.mDogu[this.doguCnt].count = 80;
								gameObject5.transform.localScale = new Vector3(3f, 3f, 3f);
							}
							if (gameObject5.name == "Particle/pHeart01")
							{
								this.mDogu[this.doguCnt].count = 80;
							}
							if (text22 == "mirror1" || text22 == "mirror2" || text22 == "mirror3")
							{
								this.mDogu[this.doguCnt].isScale = true;
								this.mDogu[this.doguCnt].isScale2 = true;
								this.mDogu[this.doguCnt].scale2 = gameObject5.transform.localScale;
								if (text22 == "mirror1")
								{
									this.mDogu[this.doguCnt].scale = new Vector3(gameObject5.transform.localScale.x * 5f, gameObject5.transform.localScale.y * 5f, gameObject5.transform.localScale.z * 5f);
								}
								if (text22 == "mirror2")
								{
									this.mDogu[this.doguCnt].scale = new Vector3(gameObject5.transform.localScale.x * 10f, gameObject5.transform.localScale.y * 10f, gameObject5.transform.localScale.z * 10f);
								}
								if (text22 == "mirror3")
								{
									this.mDogu[this.doguCnt].scale = new Vector3(gameObject5.transform.localScale.x * 33f, gameObject5.transform.localScale.y * 33f, gameObject5.transform.localScale.z * 33f);
								}
							}
							if (text22 == "Odogu_XmasTreeMini_photo_ver" || text22 == "Odogu_KadomatsuMini_photo_ver")
							{
								this.mDogu[this.doguCnt].isScale2 = true;
								this.mDogu[this.doguCnt].scale2 = gameObject5.transform.localScale;
							}
							gameObject5.transform.localScale = new Vector3(float.Parse(array82[7]), float.Parse(array82[8]), float.Parse(array82[9]));
						}
						num75++;
						continue;
						IL_BFC6:
						try
						{
							bool flag11 = false;
							bool flag12 = false;
							if (text22.StartsWith("BG_"))
							{
								UnityEngine.Object object2 = GameMain.Instance.BgMgr.CreateAssetBundle(text22.Replace("BG_", ""));
								if (object2 == null)
								{
									object2 = Resources.Load(text22.Replace("BG_", "BG/"));
								}
								gameObject5 = (UnityEngine.Object.Instantiate(object2) as GameObject);
								this.doguBObject.Add(gameObject5);
							}
							else if (text22.Contains("#"))
							{
								string[] array85 = text22.Split(new char[]
								{
									'#'
								});
								gameObject5 = GameMain.Instance.BgMgr.CreateAssetBundle(array85[1]);
								if (gameObject5 != null)
								{
									gameObject5 = UnityEngine.Object.Instantiate<GameObject>(gameObject5);
									MeshRenderer[] componentsInChildren = gameObject5.GetComponentsInChildren<MeshRenderer>();
									for (int num76 = 0; num76 < componentsInChildren.Length; num76++)
									{
										if (componentsInChildren[num76] != null)
										{
											componentsInChildren[num76].shadowCastingMode = ShadowCastingMode.Off;
										}
									}
								}
								flag11 = true;
								if (!this.parArray[this.parIndex].Contains("Odogu_"))
								{
									flag12 = true;
								}
								this.doguBObject.Add(gameObject5);
							}
							else if (!text22.StartsWith("mirror") && text22.IndexOf(":") < 0)
							{
								UnityEngine.Object object3;
								if (text22.StartsWith("BG"))
								{
									string text24 = text22.Replace("BG", "");
									object3 = GameMain.Instance.BgMgr.CreateAssetBundle(text24);
									if (object3 == null)
									{
										object3 = Resources.Load("BG/" + text24);
									}
								}
								else
								{
									object3 = Resources.Load("Prefab/" + text22);
								}
								gameObject5 = (UnityEngine.Object.Instantiate(object3) as GameObject);
								this.doguBObject.Add(gameObject5);
							}
							else if (text22.StartsWith("mirror"))
							{
								Material material3 = new Material(Shader.Find("Mirror"));
								GameObject gameObject6 = GameObject.CreatePrimitive(PrimitiveType.Plane);
								gameObject6.transform.localScale = new Vector3(0.3f, 1f, 0.3f);
								gameObject6.GetComponent<Renderer>().material = material3;
								gameObject6.AddComponent<MirrorReflection2>();
								MirrorReflection2 component6 = gameObject6.GetComponent<MirrorReflection2>();
								component6.m_TextureSize = 2048;
								component6.m_ClipPlaneOffset = 0f;
								gameObject6.GetComponent<Renderer>().enabled = true;
								gameObject5 = gameObject6;
								this.doguBObject.Add(gameObject5);
							}
							else
							{
								string[] array86 = text22.Split(new char[]
								{
									':'
								});
								UnityEngine.Object object4 = GameMain.Instance.BgMgr.CreateAssetBundle(array86[0]);
								if (object4 == null)
								{
									object4 = Resources.Load("BG/" + array86[0]);
								}
								GameObject gameObject7 = UnityEngine.Object.Instantiate(object4) as GameObject;
								int num77 = 0;
								int num78 = 0;
								int.TryParse(array86[1], out num78);
								foreach (object obj in gameObject7.transform)
								{
									Transform transform51 = (Transform)obj;
									if (num78 == num77)
									{
										gameObject5 = transform51.gameObject;
										break;
									}
									num77++;
								}
								this.doguBObject.Add(gameObject5);
								gameObject5.transform.parent = null;
								UnityEngine.Object.Destroy(gameObject7);
								gameObject7.SetActive(false);
							}
							gameObject5.name = text22;
							Vector3 vector4 = Vector3.zero;
							Vector3 zero = Vector3.zero;
							if (text22.StartsWith("BG_"))
							{
								gameObject5.transform.localScale = new Vector3(0.1f, 0.1f, 0.1f);
							}
							uint num79 = <PrivateImplementationDetails>.ComputeStringHash(text22);
							if (num79 <= 882907016u)
							{
								if (num79 <= 444674986u)
								{
									if (num79 <= 281238771u)
									{
										if (num79 <= 166144547u)
										{
											if (num79 != 149366928u)
											{
												if (num79 != 166144547u)
												{
													goto IL_CE8D;
												}
												if (!(text22 == "Mob_Girl_Stand002"))
												{
													goto IL_CE8D;
												}
												goto IL_CE17;
											}
											else
											{
												if (!(text22 == "Mob_Girl_Stand003"))
												{
													goto IL_CE8D;
												}
												goto IL_CE17;
											}
										}
										else if (num79 != 182922166u)
										{
											if (num79 != 281238771u)
											{
												goto IL_CE8D;
											}
											if (!(text22 == "Salon:63"))
											{
												goto IL_CE8D;
											}
											goto IL_CE17;
										}
										else
										{
											if (!(text22 == "Mob_Girl_Stand001"))
											{
												goto IL_CE8D;
											}
											goto IL_CE17;
										}
									}
									else if (num79 <= 411119748u)
									{
										if (num79 != 381904485u)
										{
											if (num79 != 411119748u)
											{
												goto IL_CE8D;
											}
											if (!(text22 == "Mob_Girl_Sit003"))
											{
												goto IL_CE8D;
											}
											goto IL_CE17;
										}
										else
										{
											if (!(text22 == "Salon:65"))
											{
												goto IL_CE8D;
											}
											goto IL_CE17;
										}
									}
									else if (num79 != 427897367u)
									{
										if (num79 != 444674986u)
										{
											goto IL_CE8D;
										}
										if (!(text22 == "Mob_Girl_Sit001"))
										{
											goto IL_CE8D;
										}
										goto IL_CE17;
									}
									else
									{
										if (!(text22 == "Mob_Girl_Sit002"))
										{
											goto IL_CE8D;
										}
										goto IL_CE17;
									}
								}
								else if (num79 <= 750965800u)
								{
									if (num79 <= 701680848u)
									{
										if (num79 != 449014961u)
										{
											if (num79 != 701680848u)
											{
												goto IL_CE8D;
											}
											if (!(text22 == "mirror2"))
											{
												goto IL_CE8D;
											}
											vector4.z = -0.6f;
											vector4.y = 0.96f;
											zero.z = 180f;
											zero.x = -90f;
											gameObject5.transform.localScale = new Vector3(0.1f, 0.4f, 0.2f);
											goto IL_CF58;
										}
										else
										{
											if (!(text22 == "Salon:69"))
											{
												goto IL_CE8D;
											}
											goto IL_CE17;
										}
									}
									else if (num79 != 718458467u)
									{
										if (num79 != 750965800u)
										{
											goto IL_CE8D;
										}
										if (!(text22 == "Mob_Man_Sit001"))
										{
											goto IL_CE8D;
										}
										goto IL_CE17;
									}
									else
									{
										if (!(text22 == "mirror3"))
										{
											goto IL_CE8D;
										}
										vector4.z = -0.6f;
										vector4.y = 0.85f;
										zero.z = 180f;
										zero.x = -90f;
										gameObject5.transform.localScale = new Vector3(0.03f, 0.18f, 0.124f);
										goto IL_CF58;
									}
								}
								else if (num79 <= 784521038u)
								{
									if (num79 != 752013705u)
									{
										if (num79 != 784521038u)
										{
											goto IL_CE8D;
										}
										if (!(text22 == "Mob_Man_Sit003"))
										{
											goto IL_CE8D;
										}
										goto IL_CE17;
									}
									else
									{
										if (!(text22 == "mirror1"))
										{
											goto IL_CE8D;
										}
										vector4.z = -0.6f;
										vector4.y = 0.96f;
										zero.z = 180f;
										zero.x = -90f;
										gameObject5.transform.localScale = new Vector3(0.2f, 0.4f, 0.2f);
										goto IL_CF58;
									}
								}
								else if (num79 != 801298657u)
								{
									if (num79 != 882907016u)
									{
										goto IL_CE8D;
									}
									if (!(text22 == "Particle/pLineP02"))
									{
										goto IL_CE8D;
									}
								}
								else
								{
									if (!(text22 == "Mob_Man_Sit002"))
									{
										goto IL_CE8D;
									}
									goto IL_CE17;
								}
							}
							else if (num79 <= 1741395333u)
							{
								if (num79 <= 1697626006u)
								{
									if (num79 <= 1640729619u)
									{
										if (num79 != 1335351367u)
										{
											if (num79 != 1640729619u)
											{
												goto IL_CE8D;
											}
											if (!(text22 == "Salon_Entrance:4"))
											{
												goto IL_CE8D;
											}
											goto IL_CE17;
										}
										else
										{
											if (!(text22 == "Pool:26"))
											{
												goto IL_CE8D;
											}
											goto IL_CE17;
										}
									}
									else if (num79 != 1691062476u)
									{
										if (num79 != 1697626006u)
										{
											goto IL_CE8D;
										}
										if (!(text22 == "Shitsumu:23"))
										{
											goto IL_CE8D;
										}
										goto IL_CE17;
									}
									else
									{
										if (!(text22 == "Salon_Entrance:1"))
										{
											goto IL_CE8D;
										}
										goto IL_CE17;
									}
								}
								else if (num79 <= 1707840095u)
								{
									if (num79 != 1703720341u)
									{
										if (num79 != 1707840095u)
										{
											goto IL_CE8D;
										}
										if (!(text22 == "Salon_Entrance:0"))
										{
											goto IL_CE8D;
										}
										goto IL_CE17;
									}
									else
									{
										if (!(text22 == "Odogu_Dresser_photo_ver"))
										{
											goto IL_CE8D;
										}
										GameObject.Find("Prim.00000000").GetComponent<Collider>().enabled = false;
										GameObject.Find("Prim.00000001").GetComponent<Collider>().enabled = false;
										GameObject.Find("Prim.00000002").GetComponent<Collider>().enabled = false;
										GameObject.Find("Prim.00000004").GetComponent<Collider>().enabled = false;
										goto IL_CF58;
									}
								}
								else if (num79 != 1724617714u)
								{
									if (num79 != 1741395333u)
									{
										goto IL_CE8D;
									}
									if (!(text22 == "Salon_Entrance:2"))
									{
										goto IL_CE8D;
									}
									goto IL_CE17;
								}
								else
								{
									if (!(text22 == "Salon_Entrance:3"))
									{
										goto IL_CE8D;
									}
									goto IL_CE17;
								}
							}
							else
							{
								if (num79 > 1933617521u)
								{
									if (num79 <= 2289414659u)
									{
										if (num79 != 2016933682u)
										{
											if (num79 != 2289414659u)
											{
												goto IL_CE8D;
											}
											if (!(text22 == "Odogu_KadomatsuMini_photo_ver"))
											{
												goto IL_CE8D;
											}
										}
										else
										{
											if (!(text22 == "Odogu_ClassRoomDesk"))
											{
												goto IL_CE8D;
											}
											goto IL_CCC6;
										}
									}
									else if (num79 != 2441275553u)
									{
										if (num79 != 3215188505u)
										{
											if (num79 != 3391272421u)
											{
												goto IL_CE8D;
											}
											if (!(text22 == "Odogu_XmasTreeMini_photo_ver"))
											{
												goto IL_CE8D;
											}
											vector4.z = 0.6f;
											gameObject5.transform.localScale = new Vector3(4.5f, 4.5f, 4.5f);
											using (IEnumerator enumerator3 = gameObject5.transform.GetEnumerator())
											{
												while (enumerator3.MoveNext())
												{
													object obj2 = enumerator3.Current;
													Transform transform52 = (Transform)obj2;
													if (transform52.GetComponent<Collider>() != null)
													{
														transform52.GetComponent<Collider>().enabled = false;
													}
												}
												goto IL_CF58;
											}
										}
										else
										{
											if (!(text22 == "Particle/pLineY"))
											{
												goto IL_CE8D;
											}
											goto IL_CDEE;
										}
									}
									else
									{
										if (!(text22 == "Shitsumu_Night:23"))
										{
											goto IL_CE8D;
										}
										goto IL_CE17;
									}
									vector4.z = 0.6f;
									gameObject5.transform.localScale = new Vector3(3.5f, 3.5f, 3.5f);
									using (IEnumerator enumerator3 = gameObject5.transform.GetEnumerator())
									{
										while (enumerator3.MoveNext())
										{
											object obj3 = enumerator3.Current;
											Transform transform53 = (Transform)obj3;
											if (transform53.GetComponent<Collider>() != null)
											{
												transform53.GetComponent<Collider>().enabled = false;
											}
										}
										goto IL_CF58;
									}
									IL_CCC6:
									vector4.z = 0.5f;
									zero.x = -90f;
									goto IL_CF58;
								}
								if (num79 <= 1906645853u)
								{
									if (num79 != 1883284664u)
									{
										if (num79 != 1906645853u)
										{
											goto IL_CE8D;
										}
										if (!(text22 == "Particle/pLine_act2"))
										{
											goto IL_CE8D;
										}
									}
									else
									{
										if (!(text22 == "Mob_Man_Stand001"))
										{
											goto IL_CE8D;
										}
										goto IL_CE17;
									}
								}
								else if (num79 != 1916839902u)
								{
									if (num79 != 1933617521u)
									{
										goto IL_CE8D;
									}
									if (!(text22 == "Mob_Man_Stand002"))
									{
										goto IL_CE8D;
									}
									goto IL_CE17;
								}
								else
								{
									if (!(text22 == "Mob_Man_Stand003"))
									{
										goto IL_CE8D;
									}
									goto IL_CE17;
								}
							}
							IL_CDEE:
							gameObject5.transform.localScale = new Vector3(3f, 3f, 3f);
							goto IL_CF58;
							IL_CE17:
							vector4.z = 0.5f;
							zero.x = -90f;
							goto IL_CF58;
							IL_CE8D:
							vector4.z = 0.5f;
							if (text22.StartsWith("Odogu_"))
							{
								using (IEnumerator enumerator3 = gameObject5.transform.GetEnumerator())
								{
									while (enumerator3.MoveNext())
									{
										object obj4 = enumerator3.Current;
										Transform transform54 = (Transform)obj4;
										if (transform54.GetComponent<Collider>() != null)
										{
											transform54.GetComponent<Collider>().enabled = false;
										}
									}
									goto IL_CF58;
								}
							}
							if (gameObject5.GetComponent<Collider>() != null)
							{
								gameObject5.GetComponent<Collider>().enabled = false;
							}
							IL_CF58:
							if (flag11)
							{
								vector4.z = 0.4f;
								if (flag12)
								{
									zero.x = -90f;
								}
							}
							gameObject5.transform.localPosition = vector4;
							gameObject5.transform.localRotation = Quaternion.Euler(zero);
						}
						catch
						{
							flag10 = true;
						}
						goto IL_CFB4;
					}
				}
				this.loadScene = 0;
				this.kankyoLoadFlg = false;
			}
			for (int num80 = 0; num80 < this.maidCnt; num80++)
			{
				if (this.loadPose[num80] != "" && this.isLoadPose[num80])
				{
					IniKey iniKey5 = base.Preferences["pose"][this.loadPose[num80]];
					if (iniKey5.Value == null || !(iniKey5.Value.ToString() != "") || !(iniKey5.Value.ToString() != "del"))
					{
						this.loadPose[num80] = "";
						this.isLoadPose[num80] = false;
					}
					else
					{
						if (this.loadCount[num80] > 4)
						{
							this.isLoadPose[num80] = false;
							this.loadPose[num80] = "";
							this.loadCount[num80] = 0;
						}
						for (int num81 = 0; num81 < 10; num81++)
						{
						}
						this.loadCount[num80]++;
						Maid maid10 = this.maidArray[num80];
						this.isStop[num80] = true;
						if (maid10 && maid10.Visible)
						{
							this.SetIK(maid10, num80);
							Transform transform55 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01", true);
							Transform transform56 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 L Toe0", true);
							Transform transform57 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 R Toe0", true);
							Transform transform58 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 L Toe01", true);
							Transform transform59 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 R Toe01", true);
							Transform transform60 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 L Toe0Nub", true);
							Transform transform61 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 R Toe0Nub", true);
							Transform transform62 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 L Toe1", true);
							Transform transform63 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 R Toe1", true);
							Transform transform64 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 L Toe11", true);
							Transform transform65 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 R Toe11", true);
							Transform transform66 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 L Toe1Nub", true);
							Transform transform67 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 R Toe1Nub", true);
							Transform transform68 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 L Toe2", true);
							Transform transform69 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 R Toe2", true);
							Transform transform70 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 L Toe21", true);
							Transform transform71 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 R Toe21", true);
							Transform transform72 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 L Toe2Nub", true);
							Transform transform73 = CMT.SearchObjName(maid10.body0.m_Bones.transform, "Bip01 R Toe2Nub", true);
							string[] array87 = iniKey5.Value.Split(new char[]
							{
								'_'
							})[1].Split(new char[]
							{
								':'
							});
							for (int num82 = 0; num82 < 40; num82++)
							{
								string[] array88 = array87[num82].Split(new char[]
								{
									','
								});
								this.Finger[num80, num82].localEulerAngles = new Vector3(float.Parse(array88[0]), float.Parse(array88[1]), float.Parse(array88[2]));
							}
							bool flag13 = false;
							if (array87.Length == 64)
							{
								flag13 = true;
							}
							Vector3 localEulerAngles3 = maid10.transform.localEulerAngles;
							maid10.transform.localEulerAngles = new Vector3(0f, 0f, 0f);
							Vector3 position4 = maid10.transform.position;
							maid10.transform.position = new Vector3(0f, 0f, 0f);
							for (int num83 = 0; num83 < 3; num83++)
							{
								for (int num84 = 40; num84 < array87.Length; num84++)
								{
									string[] array89 = array87[num84].Split(new char[]
									{
										','
									});
									switch (num84)
									{
									case 40:
										if (flag13)
										{
											this.Spine.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.Spine.eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 41:
										if (flag13)
										{
											this.Spine0a.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.Spine0a.eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 42:
										if (flag13)
										{
											this.Spine1.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.Spine1.eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 43:
										if (flag13)
										{
											this.Spine1a.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.Spine1a.eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 44:
										if (flag13)
										{
											this.Pelvis.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.Pelvis.eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 45:
										this.HandL1[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 46:
										if (flag13)
										{
											this.UpperArmL1[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.UpperArmL1[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 47:
										if (flag13)
										{
											this.ForearmL1[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.ForearmL1[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 48:
										this.HandR1[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 49:
										if (flag13)
										{
											this.UpperArmR1[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.UpperArmR1[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 50:
										if (flag13)
										{
											this.ForearmR1[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.ForearmR1[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 51:
										this.HandL2[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 52:
										if (flag13)
										{
											this.UpperArmL2[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.UpperArmL2[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 53:
										if (flag13)
										{
											this.ForearmL2[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.ForearmL2[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 54:
										this.HandR2[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 55:
										if (flag13)
										{
											this.UpperArmR2[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.UpperArmR2[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 56:
										if (flag13)
										{
											this.ForearmR2[num80].localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.ForearmR2[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 57:
										if (flag13)
										{
											this.Head.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										if (!flag13)
										{
											this.Head.eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 66:
										CMT.SearchObjName(maid10.body0.m_Bones.transform, "_IK_handL", true).localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 67:
										CMT.SearchObjName(maid10.body0.m_Bones.transform, "_IK_handR", true).localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 68:
										if (array89.Length >= 2)
										{
											this.ClavicleL1[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										}
										break;
									case 69:
										this.ClavicleR1[num80].eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 71:
										transform55.eulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 72:
										transform56.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 73:
										transform57.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 74:
										transform58.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 75:
										transform59.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 76:
										transform60.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 77:
										transform61.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 78:
										transform62.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 79:
										transform63.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 80:
										transform64.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 81:
										transform65.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 82:
										transform66.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 83:
										transform67.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 84:
										transform68.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 85:
										transform69.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 86:
										transform70.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 87:
										transform71.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 88:
										transform72.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 89:
										transform73.localEulerAngles = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 92:
										this.vIKMuneL[num80] = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										this.muneIKL[num80] = true;
										break;
									case 93:
										this.vIKMuneLSub[num80] = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 94:
										this.vIKMuneR[num80] = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										this.muneIKR[num80] = true;
										break;
									case 95:
										this.vIKMuneRSub[num80] = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									case 96:
										transform55.position = new Vector3(float.Parse(array89[0]), float.Parse(array89[1]), float.Parse(array89[2]));
										break;
									}
								}
							}
							maid10.transform.localEulerAngles = localEulerAngles3;
							maid10.transform.position = position4;
						}
					}
				}
				if (this.loadPose[num80] != "" && !this.isLoadPose[num80])
				{
					IniKey iniKey6 = base.Preferences["pose"][this.loadPose[num80]];
					if (iniKey6.Value != null && iniKey6.Value.ToString() != "" && iniKey6.Value.ToString() != "del")
					{
						this.isStop[num80] = true;
					}
					this.isLoadPose[num80] = true;
				}
			}
			if (this.loadScene > 0)
			{
				IniKey iniKey7 = base.Preferences["scene"]["s" + this.loadScene];
				if (iniKey7.Value == null || !(iniKey7.Value.ToString() != ""))
				{
					this.loadScene = 0;
				}
				else
				{
					this.isScene = true;
					if (!this.kankyoLoadFlg)
					{
						string[] array90 = iniKey7.Value.Split(new char[]
						{
							'_'
						})[1].Split(new char[]
						{
							';'
						});
						int j;
						int i;
						for (i = 0; i < array90.Length; i = j + 1)
						{
							if (this.maidCnt <= i)
							{
								break;
							}
							Maid maid11 = this.maidArray[i];
							for (int num85 = 0; num85 < 10; num85++)
							{
								Transform transform74 = maid11.transform;
								Vector3 position5 = maid11.transform.position;
								Vector3 right2 = Vector3.right;
								transform74.RotateAround(position5, right2, 0f - maid11.transform.rotation.eulerAngles.x);
								Transform transform75 = maid11.transform;
								Vector3 position6 = maid11.transform.position;
								Vector3 forward2 = Vector3.forward;
								transform75.RotateAround(position6, forward2, 0f - maid11.transform.rotation.eulerAngles.z);
							}
							string[] array2 = array90[i].Split(new char[]
							{
								':'
							});
							if (!int.TryParse(array2[61], out this.poseIndex[i]))
							{
								string a4 = array2[61].Replace(" ", "_").Replace("|", ",");
								for (int num86 = 0; num86 < this.poseArray.Length; num86++)
								{
									if (a4 == this.poseArray[num86])
									{
										this.poseIndex[i] = num86;
										break;
									}
								}
							}
							string[] array91 = this.poseArray[this.poseIndex[i]].Split(new char[]
							{
								','
							});
							this.isStop[i] = true;
							this.poseCount[i] = 20;
							int num89;
							if (array2[61].Contains("ManyMaidsPose"))
							{
								string url = "";
								Action<string, List<string>> action2 = delegate(string path, List<string> result_list)
								{
									string[] files = Directory.GetFiles(path);
									for (int num110 = 0; num110 < files.Length; num110++)
									{
										if (Path.GetExtension(files[num110]) == ".anm")
										{
											string text25 = files[num110].Split(new char[]
											{
												'\\'
											})[files[num110].Split(new char[]
											{
												'\\'
											}).Length - 1];
											text25 = text25.Split(new char[]
											{
												'.'
											})[0];
											if (text25 == array2[61].Replace("ManyMaidsPose", ""))
											{
												url = files[num110];
												for (int num111 = 0; num111 < this.poseArray.Length; num111++)
												{
													string b2 = this.poseArray[num111].Replace("\u3000", "").Split(new char[]
													{
														'/'
													})[0];
													if (text25 == b2)
													{
														this.poseIndex[i] = num111;
													}
												}
												return;
											}
										}
									}
								};
								List<string> arg2 = new List<string>();
								action2(Path.GetFullPath(".\\") + "Mod\\ManyMaidsPose", arg2);
								if (url != "")
								{
									string url2 = url;
									byte[] array92 = new byte[0];
									try
									{
										using (FileStream fileStream2 = new FileStream(url2, FileMode.Open, FileAccess.Read))
										{
											array92 = new byte[fileStream2.Length];
											fileStream2.Read(array92, 0, array92.Length);
										}
									}
									catch
									{
									}
									if (array92.Length != 0)
									{
										long num87 = (long)Path.GetFileName(url2).GetHashCode();
										maid11.body0.CrossFade(num87.ToString(), array92, false, false, false, 0f, 1f);
										Maid.AutoTwist[] array93 = new Maid.AutoTwist[]
										{
											Maid.AutoTwist.ShoulderL,
											Maid.AutoTwist.ShoulderR,
											Maid.AutoTwist.WristL,
											Maid.AutoTwist.WristR,
											Maid.AutoTwist.ThighL,
											Maid.AutoTwist.ThighR
										};
										for (int num88 = 0; num88 < array93.Length; num88++)
										{
											maid11.SetAutoTwist(array93[num88], true);
										}
									}
								}
							}
							else if (array91[0].StartsWith("p") && int.TryParse(array91[0].Substring(1), out num89))
							{
								this.loadPose[i] = array91[0];
							}
							else if (!array91[0].StartsWith("dance_"))
							{
								this.maidArray[i].CrossFade(array91[0] + ".anm", false, true, false, 0f, 1f);
							}
							else
							{
								if (!this.maidArray[i].body0.m_Bones.GetComponent<Animation>().GetClip(array91[0] + ".anm"))
								{
									this.maidArray[i].body0.LoadAnime(array91[0] + ".anm", GameUty.FileSystem, array91[0] + ".anm", false, false);
								}
								this.maidArray[i].body0.m_Bones.GetComponent<Animation>().Play(array91[0] + ".anm");
							}
							if (array91.Length > 1)
							{
								this.maidArray[i].body0.m_Bones.GetComponent<Animation>()[array91[0] + ".anm"].time = float.Parse(array91[1]);
								this.isStop[i] = true;
								if (array91.Length > 2)
								{
									CMT.SearchObjName(this.maidArray[i].body0.m_Bones.transform, "Bip01", true);
									this.isPoseIti[i] = true;
									this.poseIti[i] = this.maidArray[i].transform.position;
									this.maidArray[i].transform.position = new Vector3(100f, 100f, 100f);
								}
							}
							this.faceIndex[i] = int.Parse(array2[62]);
							if (this.faceIndex[i] < Class1.faceArray.Length)
							{
								maid11.FaceAnime(Class1.faceArray[this.faceIndex[i]], 0.01f, 0);
							}
							else
							{
								this.faceIndex[i] = 0;
							}
							TMorph morph5 = maid11.body0.Face.morph;
							if (!this.isVR)
							{
								maid11.boMabataki = false;
								morph5.EyeMabataki = 0f;
								maid11.body0.Face.morph.FixBlendValues_Face();
							}
							j = i;
						}
					}
				}
			}
			if (!this.allowUpdate && this.sceneLevel != 14 && this.sceneLevel != 24)
			{
				return;
			}
			if (this.isF6 && !this.cameraObj && !this.isVR)
			{
				this.cameraObj = new GameObject("subCamera");
				this.subcamera = this.cameraObj.AddComponent<Camera>();
				this.subcamera.CopyFrom(Camera.main);
				this.cameraObj.SetActive(true);
				this.subcamera.clearFlags = CameraClearFlags.Depth;
				this.subcamera.cullingMask = 256;
				this.subcamera.depth = 1f;
				this.subcamera.transform.parent = this.mainCamera.transform;
				float item = 2f;
				if (Application.unityVersion.StartsWith("4"))
				{
					item = 1f;
				}
				GameObject gameObject8 = new GameObject("Light");
				gameObject8.AddComponent<Light>();
				this.lightList.Add(gameObject8);
				this.lightColorR.Add(1f);
				this.lightColorG.Add(1f);
				this.lightColorB.Add(1f);
				this.lightIndex.Add(0);
				this.lightX.Add(40f);
				this.lightY.Add(180f);
				this.lightAkarusa.Add(item);
				this.lightKage.Add(0.098f);
				this.lightRange.Add(50f);
				gameObject8.transform.position = GameMain.Instance.MainLight.transform.position;
				gameObject8.GetComponent<Light>().intensity = 2f;
				gameObject8.GetComponent<Light>().spotAngle = 50f;
				gameObject8.GetComponent<Light>().range = 10f;
				gameObject8.GetComponent<Light>().type = LightType.Directional;
				gameObject8.GetComponent<Light>().color = new Color(0.5f, 1f, 0f);
				gameObject8.GetComponent<Light>().cullingMask = 256;
			}
			if ((!this.isF6S || !this.getModKeyPressing(ManyMaids.modKey.Shift) || !Input.GetKeyDown(KeyCode.F6)) && (this.isF6S || !this.getModKeyPressing(ManyMaids.modKey.Shift) || !Input.GetKeyDown(KeyCode.F6)))
			{
				if (!this.isF6 && Input.GetKeyDown(KeyCode.F6) && this.sceneLevel != 5 && this.sceneLevel != 3 && !this.isVR && this.maidArray[0] && this.maidArray[0].Visible)
				{
					this.isF6 = true;
					this.bGui = true;
					this.isFaceInit = true;
					this.isGuiInit = true;
					this.maidArray[0].boMabataki = false;
					this.selectMaidIndex = 0;
					this.maidCnt = 1;
					this.isFace[0] = true;
					this.faceFlg = true;
					this.kankyoFlg = false;
					string bgname11 = GameMain.Instance.BgMgr.GetBGName();
					int num90 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname11)
						{
							this.bgIndex = num90;
							this.bgIndex6 = num90;
							break;
						}
						num90++;
					}
					this.bgCombo.selectedItemIndex = this.bgIndex6;
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
				}
				else if (!this.isF6 && Input.GetKeyDown(KeyCode.F7) && this.sceneLevel != 5 && this.sceneLevel != 3 && !this.isVR && this.maidArray[0] && this.maidArray[0].Visible)
				{
					this.isF6 = true;
					this.bGui = true;
					this.isGuiInit = true;
					this.selectMaidIndex = 0;
					this.maidCnt = 1;
					this.isFace[0] = false;
					this.faceFlg = false;
					this.kankyoFlg = true;
					string bgname12 = GameMain.Instance.BgMgr.GetBGName();
					int num91 = 0;
					string[] array94 = this.bgArray;
					for (int j = 0; j < array94.Length; j++)
					{
						if (array94[j] == bgname12)
						{
							this.bgIndex = num91;
							this.bgIndex6 = num91;
							break;
						}
						num91++;
					}
					this.bgmCombo.selectedItemIndex = this.bgmIndex;
					this.bgCombo.selectedItemIndex = this.bgIndex6;
					this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					this.lightX6 = this.lightX[0];
					this.lightY6 = this.lightY[0];
				}
				else if ((this.isVR && Input.GetKey(KeyCode.F7) && Input.GetKeyDown(KeyCode.BackQuote)) || (this.isF6 && (Input.GetKeyDown(KeyCode.F6) || Input.GetKeyDown(KeyCode.F7))))
				{
					this.isF6 = false;
					this.bGui = false;
					this.maidArray[0].boMabataki = true;
					this.bgIndex = this.bgIndex6;
					this.bg.localScale = new Vector3(1f, 1f, 1f);
					if (!this.isVR)
					{
						Bloom fieldValue10 = ManyMaids.GetFieldValue<CameraMain, Bloom>(this.mainCamera, "m_gcBloom");
						fieldValue10.enabled = true;
						fieldValue10.bloomIntensity = 2.85f;
						fieldValue10.hdr = 0;
						fieldValue10.bloomThreshholdColor = new Color(1f, 1f, 1f);
						fieldValue10.bloomBlurIterations = 3;
					}
					else if (this.bgArray[this.bgIndex].Length == 36)
					{
						GameMain.Instance.BgMgr.ChangeBgMyRoom(this.bgArray[this.bgIndex]);
					}
					else
					{
						GameMain.Instance.BgMgr.ChangeBg(this.bgArray[this.bgIndex]);
					}
					this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
					this.maidCnt = 0;
					this.wearIndex = 0;
					this.faceFlg = false;
					this.faceFlg2 = false;
					this.sceneFlg = false;
					this.poseFlg = false;
					this.kankyoFlg = false;
					this.kankyo2Flg = false;
					this.unLockFlg = false;
					this.ikMaid = 0;
					this.ikBui = 0;
					this.isNamida = false;
					this.isTear1 = false;
					this.isTear2 = false;
					this.isTear3 = false;
					this.isShock = false;
					this.isYodare = false;
					this.isHoho = false;
					this.isHoho2 = false;
					this.isHohos = false;
					this.isHohol = false;
					this.isToothoff = false;
					this.isNosefook = false;
					this.isFaceInit = false;
					this.isPoseInit = false;
					this.isWear = true;
					this.isSkirt = true;
					this.isBra = true;
					this.isPanz = true;
					this.isHeadset = true;
					this.isAccUde = true;
					this.isStkg = true;
					this.isShoes = true;
					this.isGlove = true;
					this.isMegane = true;
					this.isAccSenaka = true;
					this.isPanel = true;
					this.isBloom = false;
					this.isBloomA = false;
					this.isBlur = false;
					this.isBlur2 = false;
					this.bloom1 = 2.85f;
					this.bloom2 = 3f;
					this.bloom3 = 0f;
					this.bloom4 = 0f;
					this.bloom5 = 0f;
					this.blur1 = -3.98f;
					this.blur4 = -0.75f;
					this.blur2 = 0.9f;
					this.blur3 = 4.19f;
					this.bokashi = 0f;
					this.kamiyure = 0f;
					this.isDepth = false;
					this.isDepthA = false;
					this.depth1 = 3f;
					this.depth2 = 0.1f;
					this.depth3 = 15f;
					this.depth4 = 2.5f;
					this.isFog = false;
					this.fog1 = 4f;
					this.fog2 = 1f;
					this.fog3 = 1f;
					this.fog4 = 0f;
					this.fog5 = 1f;
					this.fog6 = 1f;
					this.fog7 = 1f;
					this.isSepia = false;
					this.isBloomS = true;
					this.isDepthS = false;
					this.isBlurS = false;
					this.isFogS = false;
					if (this.depth_field_ != null)
					{
						this.depth_field_.enabled = false;
					}
					if (this.fog_ != null)
					{
						this.fog_.enabled = false;
					}
					if (this.sepia_tone_ != null)
					{
						this.sepia_tone_.enabled = false;
					}
					this.isCube = false;
					this.isCube2 = true;
					this.isCube3 = false;
					this.isCube4 = true;
					this.effectIndex = 0;
					this.selectMaidIndex = 0;
					this.copyIndex = 0;
					this.selectLightIndex = 0;
					this.doguBIndex = 0;
					this.parIndex = 0;
					this.isEditNo = 0;
					this.editSelectMaid = null;
					for (int num92 = 0; num92 < 10; num92++)
					{
						this.date[num92] = "";
						this.ninzu[num92] = "";
					}
					if (this.kami)
					{
						this.kami.SetActive(false);
					}
					this.lightIndex = new List<int>();
					this.lightIndex.Add(0);
					this.lightColorR = new List<float>();
					this.lightColorR.Add(1f);
					this.lightColorG = new List<float>();
					this.lightColorG.Add(1f);
					this.lightColorB = new List<float>();
					this.lightColorB.Add(1f);
					this.lightX = new List<float>();
					this.lightX.Add(this.lightX6);
					this.lightY = new List<float>();
					this.lightY.Add(this.lightY6);
					this.lightAkarusa = new List<float>();
					this.lightAkarusa.Add(0.95f);
					this.lightKage = new List<float>();
					this.lightKage.Add(0.098f);
					this.lightRange = new List<float>();
					this.lightRange.Add(50f);
					this.isIdx1 = false;
					this.isIdx2 = false;
					this.isIdx3 = false;
					this.isIdx4 = false;
					this.bgObject.SetActive(true);
					GameMain.Instance.MainLight.Reset();
					GameMain.Instance.MainLight.SetIntensity(0.95f);
					GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 30f;
					GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
					GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
					GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
					GameMain.Instance.MainLight.transform.eulerAngles = new Vector3(this.lightX6, this.lightY6, GameMain.Instance.MainLight.transform.eulerAngles.z);
					for (int num93 = 0; num93 < this.doguBObject.Count; num93++)
					{
						UnityEngine.Object.Destroy(this.doguBObject[num93]);
					}
					this.doguBObject.Clear();
					this.doguBIndex = 0;
					this.parIndex = 0;
					this.doguCombo.selectedItemIndex = 0;
					this.parCombo.selectedItemIndex = 0;
					for (int num94 = 1; num94 < this.lightList.Count; num94++)
					{
						UnityEngine.Object.Destroy(this.lightList[num94]);
					}
					this.lightList = new List<GameObject>();
					this.lightList.Add(GameMain.Instance.MainLight.gameObject);
					this.lightComboList = new GUIContent[this.lightList.Count];
					this.lightComboList[0] = new GUIContent("メイン");
					this.lightCombo.selectedItemIndex = 0;
					this.selectLightIndex = 0;
					GameMain.Instance.BgMgr.ChangeBg(this.bgArray[this.bgIndex6]);
					this.bgCombo.selectedItemIndex = this.bgIndex6;
					this.bgCombo2.selectedItemIndex = 0;
					this.itemCombo2.selectedItemIndex = 0;
					this.slotCombo.selectedItemIndex = 0;
					this.sortList.Clear();
					this.scrollPos = new Vector2(0f, 0f);
					if (!this.isVR)
					{
						Vignetting component7 = GameMain.Instance.MainCamera.gameObject.GetComponent<Vignetting>();
						component7.mode = 0;
						component7.intensity = -3.98f;
						component7.chromaticAberration = -0.75f;
						component7.axialAberration = 1.18f;
						component7.blurSpread = 4.19f;
						component7.luminanceDependency = 0.494f;
						component7.blurDistance = 1.71f;
						component7.enabled = false;
					}
					this.doguIndex.Clear();
					this.doguSelectIndex = 0;
					for (int num95 = 0; num95 < this.doguObject.Count; num95++)
					{
						if (this.doguObject[num95] != null)
						{
							UnityEngine.Object.Destroy(this.doguObject[num95]);
							this.doguObject[num95] = null;
						}
					}
					this.doguObject.Clear();
				}
			}
			for (int num96 = 0; num96 < this.maidCnt; num96++)
			{
				if (this.maidArray[num96] && this.maidArray[num96].Visible)
				{
					Maid maid12 = this.maidArray[num96];
					if (this.isLook[num96] != this.isLookn[num96])
					{
						this.isLookn[num96] = this.isLook[num96];
						if (this.isLook[num96])
						{
							maid12.body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
							maid12.body0.boHeadToCam = true;
							maid12.body0.boEyeToCam = true;
							maid12.body0.trsLookTarget = null;
						}
						else
						{
							maid12.body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
							maid12.body0.boHeadToCam = true;
							maid12.body0.boEyeToCam = true;
						}
					}
				}
			}
			if (this.maidArray[this.selectMaidIndex] && this.maidArray[this.selectMaidIndex].Visible && ((!this.faceFlg && !this.poseFlg && !this.sceneFlg && !this.kankyoFlg && !this.kankyo2Flg) || this.sceneFlg || this.kankyoFlg || this.kankyo2Flg))
			{
				for (int num97 = 0; num97 < this.maidCnt; num97++)
				{
					if (this.maidArray[num97] && !this.maidArray[num97].boMabataki)
					{
						this.maidArray[num97].body0.Face.morph.FixBlendValues_Face();
					}
				}
			}
			if (this.maidArray[this.selectMaidIndex] && this.maidArray[this.selectMaidIndex].Visible && this.poseFlg)
			{
				if (this.isPoseInit)
				{
					if (!this.isDanceChu)
					{
						Maid maid13 = this.maidArray[this.selectMaidIndex];
						this.isPoseInit = false;
						if (maid13.body0.GetMask(TBody.SlotID.wear) || maid13.body0.GetMask(TBody.SlotID.mizugi) || maid13.body0.GetMask(TBody.SlotID.onepiece))
						{
							this.isWear = true;
						}
						else
						{
							this.isWear = false;
						}
						this.isSkirt = maid13.body0.GetMask(TBody.SlotID.skirt);
						this.isBra = maid13.body0.GetMask(TBody.SlotID.bra);
						this.isPanz = maid13.body0.GetMask(TBody.SlotID.panz);
						this.isMaid = maid13.body0.GetMask(TBody.SlotID.body);
						if (maid13.body0.GetMask(TBody.SlotID.headset) || maid13.body0.GetMask(TBody.SlotID.accHat) || maid13.body0.GetMask(TBody.SlotID.accHead) || maid13.body0.GetMask(TBody.SlotID.accKamiSubL) || maid13.body0.GetMask(TBody.SlotID.accKamiSubR) || maid13.body0.GetMask(TBody.SlotID.accKami_1_) || maid13.body0.GetMask(TBody.SlotID.accKami_2_) || maid13.body0.GetMask(TBody.SlotID.accKami_3_))
						{
							this.isHeadset = true;
						}
						else
						{
							this.isHeadset = false;
						}
						this.isAccUde = maid13.body0.GetMask(TBody.SlotID.accUde);
						this.isStkg = maid13.body0.GetMask(TBody.SlotID.stkg);
						this.isShoes = maid13.body0.GetMask(TBody.SlotID.shoes);
						this.isGlove = maid13.body0.GetMask(TBody.SlotID.glove);
						this.isMegane = maid13.body0.GetMask(TBody.SlotID.megane);
						this.isAccSenaka = maid13.body0.GetMask(TBody.SlotID.accSenaka);
						TMorph morph6 = this.maidArray[this.selectMaidIndex].body0.Face.morph;
						float[] fieldValue11 = ManyMaids.GetFieldValue<TMorph, float[]>(morph6, "BlendValues");
						float[] fieldValue12 = ManyMaids.GetFieldValue<TMorph, float[]>(morph6, "BlendValuesBackup");
						this.eyeclose = fieldValue12[(int)morph6.hash["eyeclose"]];
						this.eyeclose2 = fieldValue12[(int)morph6.hash["eyeclose2"]];
						this.eyeclose3 = fieldValue12[(int)morph6.hash["eyeclose3"]];
						this.eyeclose6 = fieldValue12[(int)morph6.hash["eyeclose6"]];
						this.hitomih = fieldValue11[(int)morph6.hash["hitomih"]];
						this.hitomis = fieldValue11[(int)morph6.hash["hitomis"]];
						this.mayuha = fieldValue11[(int)morph6.hash["mayuha"]];
						this.mayuup = fieldValue11[(int)morph6.hash["mayuup"]];
						this.mayuv = fieldValue11[(int)morph6.hash["mayuv"]];
						this.mayuvhalf = fieldValue11[(int)morph6.hash["mayuvhalf"]];
						this.moutha = fieldValue11[(int)morph6.hash["moutha"]];
						this.mouths = fieldValue11[(int)morph6.hash["mouths"]];
						this.mouthdw = fieldValue11[(int)morph6.hash["mouthdw"]];
						this.mouthup = fieldValue11[(int)morph6.hash["mouthup"]];
						this.tangout = fieldValue11[(int)morph6.hash["tangout"]];
						this.tangup = fieldValue11[(int)morph6.hash["tangup"]];
						this.eyebig = fieldValue11[(int)morph6.hash["eyebig"]];
						this.eyeclose5 = fieldValue12[(int)morph6.hash["eyeclose5"]];
						this.mayuw = fieldValue11[(int)morph6.hash["mayuw"]];
						this.mouthhe = fieldValue11[(int)morph6.hash["mouthhe"]];
						this.mouthc = fieldValue11[(int)morph6.hash["mouthc"]];
						this.mouthi = fieldValue11[(int)morph6.hash["mouthi"]];
						this.mouthuphalf = fieldValue11[(int)morph6.hash["mouthuphalf"]];
						try
						{
							this.tangopen = fieldValue11[(int)morph6.hash["tangopen"]];
						}
						catch
						{
						}
						if (fieldValue11[(int)morph6.hash["namida"]] > 0f)
						{
							this.isNamida = true;
						}
						else
						{
							this.isNamida = false;
						}
						if (fieldValue11[(int)morph6.hash["tear1"]] > 0f)
						{
							this.isTear1 = true;
						}
						else
						{
							this.isTear1 = false;
						}
						if (fieldValue11[(int)morph6.hash["tear2"]] > 0f)
						{
							this.isTear2 = true;
						}
						else
						{
							this.isTear2 = false;
						}
						if (fieldValue11[(int)morph6.hash["tear3"]] > 0f)
						{
							this.isTear3 = true;
						}
						else
						{
							this.isTear3 = false;
						}
						if (fieldValue11[(int)morph6.hash["shock"]] > 0f)
						{
							this.isShock = true;
						}
						else
						{
							this.isShock = false;
						}
						if (fieldValue11[(int)morph6.hash["yodare"]] > 0f)
						{
							this.isYodare = true;
						}
						else
						{
							this.isYodare = false;
						}
						if (fieldValue11[(int)morph6.hash["hoho"]] > 0f)
						{
							this.isHoho = true;
						}
						else
						{
							this.isHoho = false;
						}
						if (fieldValue11[(int)morph6.hash["hoho2"]] > 0f)
						{
							this.isHoho2 = true;
						}
						else
						{
							this.isHoho2 = false;
						}
						if (fieldValue11[(int)morph6.hash["hohos"]] > 0f)
						{
							this.isHohos = true;
						}
						else
						{
							this.isHohos = false;
						}
						if (fieldValue11[(int)morph6.hash["hohol"]] > 0f)
						{
							this.isHohol = true;
						}
						else
						{
							this.isHohol = false;
						}
						if (fieldValue11[(int)morph6.hash["toothoff"]] > 0f)
						{
							this.isToothoff = true;
						}
						else
						{
							this.isToothoff = false;
						}
						if (fieldValue11[(int)morph6.hash["nosefook"]] > 0f)
						{
							this.isNosefook = true;
						}
						else
						{
							this.isNosefook = false;
						}
					}
				}
				else
				{
					Maid maid14 = this.maidArray[this.selectMaidIndex];
					if (this.goSlot[(int)this.selectList[this.selectMaidIndex]] != null)
					{
						this.maidArray[this.selectMaidIndex].body0.goSlot = new List<TBodySkin>(this.goSlot[(int)this.selectList[this.selectMaidIndex]]);
						for (int num98 = 0; num98 < this.bodyHit[(int)this.selectList[this.selectMaidIndex]].Count; num98++)
						{
							this.maidArray[this.selectMaidIndex].body0.goSlot[num98].bonehair.bodyhit = this.bodyHit[(int)this.selectList[this.selectMaidIndex]][num98];
						}
					}
					if (maid14.body0.GetMask(TBody.SlotID.wear) != this.isWear)
					{
						maid14.body0.SetMask(TBody.SlotID.wear, this.isWear);
					}
					if (maid14.body0.GetMask(TBody.SlotID.mizugi) != this.isWear)
					{
						maid14.body0.SetMask(TBody.SlotID.mizugi, this.isWear);
					}
					if (maid14.body0.GetMask(TBody.SlotID.onepiece) != this.isWear)
					{
						maid14.body0.SetMask(TBody.SlotID.onepiece, this.isWear);
					}
					if (maid14.body0.GetMask(TBody.SlotID.skirt) != this.isSkirt)
					{
						maid14.body0.SetMask(TBody.SlotID.skirt, this.isSkirt);
					}
					if (maid14.body0.GetMask(TBody.SlotID.bra) != this.isBra)
					{
						maid14.body0.SetMask(TBody.SlotID.bra, this.isBra);
					}
					if (maid14.body0.GetMask(TBody.SlotID.panz) != this.isPanz)
					{
						maid14.body0.SetMask(TBody.SlotID.panz, this.isPanz);
					}
					if (maid14.body0.GetMask(TBody.SlotID.headset) != this.isHeadset)
					{
						maid14.body0.SetMask(TBody.SlotID.headset, this.isHeadset);
					}
					if (maid14.body0.GetMask(TBody.SlotID.accHat) != this.isHeadset)
					{
						maid14.body0.SetMask(TBody.SlotID.accHat, this.isHeadset);
					}
					if (maid14.body0.GetMask(TBody.SlotID.accHead) != this.isHeadset)
					{
						maid14.body0.SetMask(TBody.SlotID.accHead, this.isHeadset);
					}
					if (maid14.body0.GetMask(TBody.SlotID.accKamiSubL) != this.isHeadset)
					{
						maid14.body0.SetMask(TBody.SlotID.accKamiSubL, this.isHeadset);
					}
					if (maid14.body0.GetMask(TBody.SlotID.accKamiSubR) != this.isHeadset)
					{
						maid14.body0.SetMask(TBody.SlotID.accKamiSubR, this.isHeadset);
					}
					if (maid14.body0.GetMask(TBody.SlotID.accKami_1_) != this.isHeadset)
					{
						maid14.body0.SetMask(TBody.SlotID.accKami_1_, this.isHeadset);
					}
					if (maid14.body0.GetMask(TBody.SlotID.accKami_2_) != this.isHeadset)
					{
						maid14.body0.SetMask(TBody.SlotID.accKami_2_, this.isHeadset);
					}
					if (maid14.body0.GetMask(TBody.SlotID.accKami_3_) != this.isHeadset)
					{
						maid14.body0.SetMask(TBody.SlotID.accKami_3_, this.isHeadset);
					}
					if (maid14.body0.GetMask(TBody.SlotID.accUde) != this.isAccUde)
					{
						maid14.body0.SetMask(TBody.SlotID.accUde, this.isAccUde);
					}
					if (maid14.body0.GetMask(TBody.SlotID.stkg) != this.isStkg)
					{
						maid14.body0.SetMask(TBody.SlotID.stkg, this.isStkg);
					}
					if (maid14.body0.GetMask(TBody.SlotID.shoes) != this.isShoes)
					{
						maid14.body0.SetMask(TBody.SlotID.shoes, this.isShoes);
					}
					if (maid14.body0.GetMask(TBody.SlotID.glove) != this.isGlove)
					{
						maid14.body0.SetMask(TBody.SlotID.glove, this.isGlove);
					}
					if (maid14.body0.GetMask(TBody.SlotID.megane) != this.isMegane)
					{
						maid14.body0.SetMask(TBody.SlotID.megane, this.isMegane);
					}
					if (maid14.body0.GetMask(TBody.SlotID.accSenaka) != this.isAccSenaka)
					{
						maid14.body0.SetMask(TBody.SlotID.accSenaka, this.isAccSenaka);
					}
					if (this.mekure1[this.selectMaidIndex] != this.mekure1n[this.selectMaidIndex])
					{
						this.mekure1n[this.selectMaidIndex] = this.mekure1[this.selectMaidIndex];
						if (this.mekure1[this.selectMaidIndex])
						{
							maid14.ItemChangeTemp("skirt", "めくれスカート");
							maid14.ItemChangeTemp("onepiece", "めくれスカート");
							this.mekure2[this.selectMaidIndex] = false;
							this.mekure2n[this.selectMaidIndex] = false;
						}
						else
						{
							this.ResetProp(maid14, MPN.accnail);
							this.ResetProp(maid14, MPN.accnip);
						}
						maid14.AllProcPropSeqStart();
					}
					if (this.mekure2[this.selectMaidIndex] != this.mekure2n[this.selectMaidIndex])
					{
						this.mekure2n[this.selectMaidIndex] = this.mekure2[this.selectMaidIndex];
						if (this.mekure2[this.selectMaidIndex])
						{
							maid14.ItemChangeTemp("skirt", "めくれスカート後ろ");
							maid14.ItemChangeTemp("onepiece", "めくれスカート後ろ");
							this.mekure1[this.selectMaidIndex] = false;
							this.mekure1n[this.selectMaidIndex] = false;
						}
						else
						{
							this.ResetProp(maid14, MPN.accnail);
							this.ResetProp(maid14, MPN.accnip);
						}
						maid14.AllProcPropSeqStart();
					}
					if (this.zurasi[this.selectMaidIndex] != this.zurasin[this.selectMaidIndex])
					{
						this.zurasin[this.selectMaidIndex] = this.zurasi[this.selectMaidIndex];
						if (this.zurasi[this.selectMaidIndex])
						{
							maid14.ItemChangeTemp("panz", "パンツずらし");
							maid14.ItemChangeTemp("mizugi", "パンツずらし");
						}
						else
						{
							this.ResetProp(maid14, MPN.mayu);
							this.ResetProp(maid14, MPN.underhair);
						}
						maid14.AllProcPropSeqStart();
					}
					if (!this.isDanceChu)
					{
						if (maid14.body0.GetMask(TBody.SlotID.body) != this.isMaid)
						{
							Hashtable fieldValue13 = ManyMaids.GetFieldValue<TBody, Hashtable>(maid14.body0, "m_hFoceHide");
							fieldValue13[0] = this.isMaid;
							fieldValue13[1] = this.isMaid;
							fieldValue13[2] = this.isMaid;
							fieldValue13[3] = this.isMaid;
							fieldValue13[4] = this.isMaid;
							fieldValue13[5] = this.isMaid;
							fieldValue13[6] = this.isMaid;
							fieldValue13[18] = this.isMaid;
							fieldValue13[39] = this.isMaid;
							fieldValue13[56] = this.isMaid;
							fieldValue13[57] = this.isMaid;
							if (maid14.body0.goSlot[19].m_strModelFileName.Contains("melala_body"))
							{
								fieldValue13[19] = this.isMaid;
							}
							maid14.body0.FixMaskFlag();
							maid14.body0.FixVisibleFlag(false);
						}
						if (this.isLook[this.selectMaidIndex] != this.isLookn[this.selectMaidIndex])
						{
							this.isLookn[this.selectMaidIndex] = this.isLook[this.selectMaidIndex];
							if (this.isLook[this.selectMaidIndex])
							{
								maid14.body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
								maid14.body0.boHeadToCam = true;
								maid14.body0.boEyeToCam = true;
								maid14.body0.trsLookTarget = null;
							}
							else
							{
								maid14.body0.trsLookTarget = GameMain.Instance.MainCamera.transform;
								maid14.body0.boHeadToCam = true;
								maid14.body0.boEyeToCam = true;
							}
						}
						if (this.isLook[this.selectMaidIndex])
						{
							if (maid14.body0.offsetLookTarget.x != this.lookY[this.selectMaidIndex])
							{
								if (this.isLock[this.selectMaidIndex] && this.lookY[this.selectMaidIndex] < 0f)
								{
									maid14.body0.offsetLookTarget = new Vector3(this.lookY[this.selectMaidIndex] * 0.6f, 1f, this.lookX[this.selectMaidIndex]);
								}
								else
								{
									maid14.body0.offsetLookTarget = new Vector3(this.lookY[this.selectMaidIndex], 1f, this.lookX[this.selectMaidIndex]);
								}
							}
							if (this.lookX[this.selectMaidIndex] != this.lookXn[this.selectMaidIndex])
							{
								this.lookXn[this.selectMaidIndex] = this.lookX[this.selectMaidIndex];
								maid14.body0.offsetLookTarget = new Vector3(this.lookY[this.selectMaidIndex], 1f, this.lookX[this.selectMaidIndex]);
							}
							if (this.lookY[this.selectMaidIndex] != this.lookYn[this.selectMaidIndex])
							{
								this.lookYn[this.selectMaidIndex] = this.lookY[this.selectMaidIndex];
								if (this.isLock[this.selectMaidIndex] && this.lookY[this.selectMaidIndex] < 0f)
								{
									maid14.body0.offsetLookTarget = new Vector3(this.lookY[this.selectMaidIndex] * 0.6f, 1f, this.lookX[this.selectMaidIndex]);
								}
								else
								{
									maid14.body0.offsetLookTarget = new Vector3(this.lookY[this.selectMaidIndex], 1f, this.lookX[this.selectMaidIndex]);
								}
							}
						}
						if (this.isHanten)
						{
							this.isHanten = false;
							this.SetHanten(maid14, this.selectMaidIndex);
						}
						if (this.hanten[this.selectMaidIndex] != this.hantenn[this.selectMaidIndex])
						{
							this.hantenn[this.selectMaidIndex] = this.hanten[this.selectMaidIndex];
							this.isStop[this.selectMaidIndex] = true;
							this.isLock[this.selectMaidIndex] = true;
							this.isHanten = true;
						}
						if (this.voice1[this.selectMaidIndex] != this.voice1n[this.selectMaidIndex])
						{
							this.voice1n[this.selectMaidIndex] = this.voice1[this.selectMaidIndex];
							if (this.voice1[this.selectMaidIndex])
							{
								this.zFlg[this.selectMaidIndex] = true;
								this.xFlg[this.selectMaidIndex] = false;
								this.voice2[this.selectMaidIndex] = false;
								this.voice2n[this.selectMaidIndex] = false;
							}
							else
							{
								this.zFlg[this.selectMaidIndex] = false;
							}
						}
						if (this.voice2[this.selectMaidIndex] != this.voice2n[this.selectMaidIndex])
						{
							this.voice2n[this.selectMaidIndex] = this.voice2[this.selectMaidIndex];
							if (this.voice2[this.selectMaidIndex])
							{
								this.xFlg[this.selectMaidIndex] = true;
								this.zFlg[this.selectMaidIndex] = false;
								this.voice1[this.selectMaidIndex] = false;
								this.voice1n[this.selectMaidIndex] = false;
							}
							else
							{
								this.xFlg[this.selectMaidIndex] = false;
							}
						}
						for (int num99 = 0; num99 < this.maidCnt; num99++)
						{
							if (!this.maidArray[num99].boMabataki)
							{
								this.maidArray[num99].body0.Face.morph.FixBlendValues_Face();
							}
						}
					}
				}
			}
			if (this.maidArray[this.selectMaidIndex] && this.maidArray[this.selectMaidIndex].Visible && (this.isF6 || (this.okFlg && this.faceFlg)))
			{
				if (this.isFaceInit)
				{
					if (!this.isDanceChu)
					{
						TMorph morph7 = this.maidArray[this.selectMaidIndex].body0.Face.morph;
						float[] fieldValue14 = ManyMaids.GetFieldValue<TMorph, float[]>(morph7, "BlendValues");
						float[] fieldValue15 = ManyMaids.GetFieldValue<TMorph, float[]>(morph7, "BlendValuesBackup");
						Maid maid15 = this.maidArray[this.selectMaidIndex];
						this.maidArray[this.selectMaidIndex].boMabataki = false;
						morph7.EyeMabataki = 0f;
						this.isFaceInit = false;
						this.maidArray[this.selectMaidIndex].body0.Face.morph.FixBlendValues_Face();
						this.eyeclose = fieldValue15[(int)morph7.hash["eyeclose"]];
						this.eyeclose2 = fieldValue15[(int)morph7.hash["eyeclose2"]];
						this.eyeclose3 = fieldValue15[(int)morph7.hash["eyeclose3"]];
						this.eyeclose6 = fieldValue15[(int)morph7.hash["eyeclose6"]];
						this.hitomih = fieldValue14[(int)morph7.hash["hitomih"]];
						this.hitomis = fieldValue14[(int)morph7.hash["hitomis"]];
						this.mayuha = fieldValue14[(int)morph7.hash["mayuha"]];
						this.mayuup = fieldValue14[(int)morph7.hash["mayuup"]];
						this.mayuv = fieldValue14[(int)morph7.hash["mayuv"]];
						this.mayuvhalf = fieldValue14[(int)morph7.hash["mayuvhalf"]];
						this.moutha = fieldValue14[(int)morph7.hash["moutha"]];
						this.mouths = fieldValue14[(int)morph7.hash["mouths"]];
						this.mouthdw = fieldValue14[(int)morph7.hash["mouthdw"]];
						this.mouthup = fieldValue14[(int)morph7.hash["mouthup"]];
						this.tangout = fieldValue14[(int)morph7.hash["tangout"]];
						this.tangup = fieldValue14[(int)morph7.hash["tangup"]];
						this.eyebig = fieldValue14[(int)morph7.hash["eyebig"]];
						this.eyeclose5 = fieldValue15[(int)morph7.hash["eyeclose5"]];
						this.mayuw = fieldValue14[(int)morph7.hash["mayuw"]];
						this.mouthhe = fieldValue14[(int)morph7.hash["mouthhe"]];
						this.mouthc = fieldValue14[(int)morph7.hash["mouthc"]];
						this.mouthi = fieldValue14[(int)morph7.hash["mouthi"]];
						this.mouthuphalf = fieldValue14[(int)morph7.hash["mouthuphalf"]];
						try
						{
							this.tangopen = fieldValue14[(int)morph7.hash["tangopen"]];
						}
						catch
						{
						}
						if (maid15.body0.GetMask(TBody.SlotID.wear) || maid15.body0.GetMask(TBody.SlotID.mizugi) || maid15.body0.GetMask(TBody.SlotID.onepiece))
						{
							this.isWear = true;
						}
						else
						{
							this.isWear = false;
						}
						this.isSkirt = maid15.body0.GetMask(TBody.SlotID.skirt);
						this.isBra = maid15.body0.GetMask(TBody.SlotID.bra);
						this.isPanz = maid15.body0.GetMask(TBody.SlotID.panz);
						if (maid15.body0.GetMask(TBody.SlotID.headset) || maid15.body0.GetMask(TBody.SlotID.accHat) || maid15.body0.GetMask(TBody.SlotID.accHead) || maid15.body0.GetMask(TBody.SlotID.accKamiSubL) || maid15.body0.GetMask(TBody.SlotID.accKamiSubR) || maid15.body0.GetMask(TBody.SlotID.accKami_1_) || maid15.body0.GetMask(TBody.SlotID.accKami_2_) || maid15.body0.GetMask(TBody.SlotID.accKami_3_))
						{
							this.isHeadset = true;
						}
						else
						{
							this.isHeadset = false;
						}
						this.isAccUde = maid15.body0.GetMask(TBody.SlotID.accUde);
						this.isStkg = maid15.body0.GetMask(TBody.SlotID.stkg);
						this.isShoes = maid15.body0.GetMask(TBody.SlotID.shoes);
						this.isGlove = maid15.body0.GetMask(TBody.SlotID.glove);
						this.isMegane = maid15.body0.GetMask(TBody.SlotID.megane);
						this.isAccSenaka = maid15.body0.GetMask(TBody.SlotID.accSenaka);
						if (fieldValue14[(int)morph7.hash["namida"]] > 0f)
						{
							this.isNamida = true;
						}
						else
						{
							this.isNamida = false;
						}
						if (fieldValue14[(int)morph7.hash["tear1"]] > 0f)
						{
							this.isTear1 = true;
						}
						else
						{
							this.isTear1 = false;
						}
						if (fieldValue14[(int)morph7.hash["tear2"]] > 0f)
						{
							this.isTear2 = true;
						}
						else
						{
							this.isTear2 = false;
						}
						if (fieldValue14[(int)morph7.hash["tear3"]] > 0f)
						{
							this.isTear3 = true;
						}
						else
						{
							this.isTear3 = false;
						}
						if (fieldValue14[(int)morph7.hash["shock"]] > 0f)
						{
							this.isShock = true;
						}
						else
						{
							this.isShock = false;
						}
						if (fieldValue14[(int)morph7.hash["yodare"]] > 0f)
						{
							this.isYodare = true;
						}
						else
						{
							this.isYodare = false;
						}
						if (fieldValue14[(int)morph7.hash["hoho"]] > 0f)
						{
							this.isHoho = true;
						}
						else
						{
							this.isHoho = false;
						}
						if (fieldValue14[(int)morph7.hash["hoho2"]] > 0f)
						{
							this.isHoho2 = true;
						}
						else
						{
							this.isHoho2 = false;
						}
						if (fieldValue14[(int)morph7.hash["hohos"]] > 0f)
						{
							this.isHohos = true;
						}
						else
						{
							this.isHohos = false;
						}
						if (fieldValue14[(int)morph7.hash["hohol"]] > 0f)
						{
							this.isHohol = true;
						}
						else
						{
							this.isHohol = false;
						}
						if (fieldValue14[(int)morph7.hash["toothoff"]] > 0f)
						{
							this.isToothoff = true;
						}
						else
						{
							this.isToothoff = false;
						}
						if (fieldValue14[(int)morph7.hash["nosefook"]] > 0f)
						{
							this.isNosefook = true;
						}
						else
						{
							this.isNosefook = false;
						}
					}
				}
				else
				{
					Maid maid16 = this.maidArray[this.selectMaidIndex];
					if (!this.yotogiFlg && this.sceneLevel != 5 && this.sceneLevel != 3)
					{
						if (maid16.body0.GetMask(TBody.SlotID.wear) != this.isWear)
						{
							maid16.body0.SetMask(TBody.SlotID.wear, this.isWear);
						}
						if (maid16.body0.GetMask(TBody.SlotID.mizugi) != this.isWear)
						{
							maid16.body0.SetMask(TBody.SlotID.mizugi, this.isWear);
						}
						if (maid16.body0.GetMask(TBody.SlotID.onepiece) != this.isWear)
						{
							maid16.body0.SetMask(TBody.SlotID.onepiece, this.isWear);
						}
						if (maid16.body0.GetMask(TBody.SlotID.skirt) != this.isSkirt)
						{
							maid16.body0.SetMask(TBody.SlotID.skirt, this.isSkirt);
						}
						if (maid16.body0.GetMask(TBody.SlotID.bra) != this.isBra)
						{
							maid16.body0.SetMask(TBody.SlotID.bra, this.isBra);
						}
						if (maid16.body0.GetMask(TBody.SlotID.panz) != this.isPanz)
						{
							maid16.body0.SetMask(TBody.SlotID.panz, this.isPanz);
						}
						if (maid16.body0.GetMask(TBody.SlotID.headset) != this.isHeadset)
						{
							maid16.body0.SetMask(TBody.SlotID.headset, this.isHeadset);
						}
						if (maid16.body0.GetMask(TBody.SlotID.accHat) != this.isHeadset)
						{
							maid16.body0.SetMask(TBody.SlotID.accHat, this.isHeadset);
						}
						if (maid16.body0.GetMask(TBody.SlotID.accHead) != this.isHeadset)
						{
							maid16.body0.SetMask(TBody.SlotID.accHead, this.isHeadset);
						}
						if (maid16.body0.GetMask(TBody.SlotID.accKamiSubL) != this.isHeadset)
						{
							maid16.body0.SetMask(TBody.SlotID.accKamiSubL, this.isHeadset);
						}
						if (maid16.body0.GetMask(TBody.SlotID.accKamiSubR) != this.isHeadset)
						{
							maid16.body0.SetMask(TBody.SlotID.accKamiSubR, this.isHeadset);
						}
						if (maid16.body0.GetMask(TBody.SlotID.accKami_1_) != this.isHeadset)
						{
							maid16.body0.SetMask(TBody.SlotID.accKami_1_, this.isHeadset);
						}
						if (maid16.body0.GetMask(TBody.SlotID.accKami_2_) != this.isHeadset)
						{
							maid16.body0.SetMask(TBody.SlotID.accKami_2_, this.isHeadset);
						}
						if (maid16.body0.GetMask(TBody.SlotID.accKami_3_) != this.isHeadset)
						{
							maid16.body0.SetMask(TBody.SlotID.accKami_3_, this.isHeadset);
						}
						if (maid16.body0.GetMask(TBody.SlotID.accUde) != this.isAccUde)
						{
							maid16.body0.SetMask(TBody.SlotID.accUde, this.isAccUde);
						}
						if (maid16.body0.GetMask(TBody.SlotID.stkg) != this.isStkg)
						{
							maid16.body0.SetMask(TBody.SlotID.stkg, this.isStkg);
						}
						if (maid16.body0.GetMask(TBody.SlotID.shoes) != this.isShoes)
						{
							maid16.body0.SetMask(TBody.SlotID.shoes, this.isShoes);
						}
						if (maid16.body0.GetMask(TBody.SlotID.glove) != this.isGlove)
						{
							maid16.body0.SetMask(TBody.SlotID.glove, this.isGlove);
						}
						if (maid16.body0.GetMask(TBody.SlotID.megane) != this.isMegane)
						{
							maid16.body0.SetMask(TBody.SlotID.megane, this.isMegane);
						}
						if (maid16.body0.GetMask(TBody.SlotID.accSenaka) != this.isAccSenaka)
						{
							maid16.body0.SetMask(TBody.SlotID.accSenaka, this.isAccSenaka);
						}
						if (this.mekure1[this.selectMaidIndex] != this.mekure1n[this.selectMaidIndex])
						{
							this.mekure1n[this.selectMaidIndex] = this.mekure1[this.selectMaidIndex];
							if (this.mekure1[this.selectMaidIndex])
							{
								maid16.ItemChangeTemp("skirt", "めくれスカート");
								maid16.ItemChangeTemp("onepiece", "めくれスカート");
								this.mekure2[this.selectMaidIndex] = false;
								this.mekure2n[this.selectMaidIndex] = false;
							}
							else
							{
								this.ResetProp(maid16, MPN.accnail);
								this.ResetProp(maid16, MPN.accnip);
							}
							maid16.AllProcPropSeqStart();
						}
						if (this.mekure2[this.selectMaidIndex] != this.mekure2n[this.selectMaidIndex])
						{
							this.mekure2n[this.selectMaidIndex] = this.mekure2[this.selectMaidIndex];
							if (this.mekure2[this.selectMaidIndex])
							{
								maid16.ItemChangeTemp("skirt", "めくれスカート後ろ");
								maid16.ItemChangeTemp("onepiece", "めくれスカート後ろ");
								this.mekure1[this.selectMaidIndex] = false;
								this.mekure1n[this.selectMaidIndex] = false;
							}
							else
							{
								this.ResetProp(maid16, MPN.accnail);
								this.ResetProp(maid16, MPN.accnip);
							}
							maid16.AllProcPropSeqStart();
						}
						if (this.zurasi[this.selectMaidIndex] != this.zurasin[this.selectMaidIndex])
						{
							this.zurasin[this.selectMaidIndex] = this.zurasi[this.selectMaidIndex];
							if (this.zurasi[this.selectMaidIndex])
							{
								maid16.ItemChangeTemp("panz", "パンツずらし");
								maid16.ItemChangeTemp("mizugi", "パンツずらし");
							}
							else
							{
								this.ResetProp(maid16, MPN.mayu);
								this.ResetProp(maid16, MPN.underhair);
							}
							maid16.AllProcPropSeqStart();
						}
					}
					if (!this.isDanceChu)
					{
						TMorph morph8 = this.maidArray[this.selectMaidIndex].body0.Face.morph;
						float[] fieldValue16 = ManyMaids.GetFieldValue<TMorph, float[]>(morph8, "BlendValues");
						float[] fieldValue17 = ManyMaids.GetFieldValue<TMorph, float[]>(morph8, "BlendValuesBackup");
						fieldValue17[(int)morph8.hash["eyeclose"]] = this.eyeclose;
						fieldValue17[(int)morph8.hash["eyeclose2"]] = this.eyeclose2;
						fieldValue17[(int)morph8.hash["eyeclose3"]] = this.eyeclose3;
						fieldValue17[(int)morph8.hash["eyeclose6"]] = this.eyeclose6;
						fieldValue16[(int)morph8.hash["hitomih"]] = this.hitomih;
						fieldValue16[(int)morph8.hash["hitomis"]] = this.hitomis;
						fieldValue16[(int)morph8.hash["mayuha"]] = this.mayuha;
						fieldValue16[(int)morph8.hash["mayuup"]] = this.mayuup;
						fieldValue16[(int)morph8.hash["mayuv"]] = this.mayuv;
						fieldValue16[(int)morph8.hash["mayuvhalf"]] = this.mayuvhalf;
						fieldValue16[(int)morph8.hash["tangout"]] = this.tangout;
						fieldValue16[(int)morph8.hash["tangup"]] = this.tangup;
						fieldValue16[(int)morph8.hash["eyebig"]] = this.eyebig;
						fieldValue17[(int)morph8.hash["eyeclose5"]] = this.eyeclose5;
						fieldValue16[(int)morph8.hash["mayuw"]] = this.mayuw;
						try
						{
							fieldValue16[(int)morph8.hash["tangopen"]] = this.tangopen;
						}
						catch
						{
						}
						if (!this.isDanceChu)
						{
							fieldValue16[(int)morph8.hash["moutha"]] = this.moutha;
							fieldValue16[(int)morph8.hash["mouths"]] = this.mouths;
							fieldValue16[(int)morph8.hash["mouthdw"]] = this.mouthdw;
							fieldValue16[(int)morph8.hash["mouthup"]] = this.mouthup;
							fieldValue16[(int)morph8.hash["mouthhe"]] = this.mouthhe;
							fieldValue16[(int)morph8.hash["mouthc"]] = this.mouthc;
							fieldValue16[(int)morph8.hash["mouthi"]] = this.mouthi;
							fieldValue16[(int)morph8.hash["mouthuphalf"]] = this.mouthuphalf;
						}
						if (this.isNamida)
						{
							fieldValue16[(int)morph8.hash["namida"]] = 1f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["namida"]] = 0f;
						}
						if (this.isTear1)
						{
							fieldValue16[(int)morph8.hash["tear1"]] = 1f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["tear1"]] = 0f;
						}
						if (this.isTear2)
						{
							fieldValue16[(int)morph8.hash["tear2"]] = 1f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["tear2"]] = 0f;
						}
						if (this.isTear3)
						{
							fieldValue16[(int)morph8.hash["tear3"]] = 1f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["tear3"]] = 0f;
						}
						if (this.isShock)
						{
							fieldValue16[(int)morph8.hash["shock"]] = 1f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["shock"]] = 0f;
						}
						if (this.isYodare)
						{
							fieldValue16[(int)morph8.hash["yodare"]] = 1f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["yodare"]] = 0f;
						}
						if (this.isHoho)
						{
							fieldValue16[(int)morph8.hash["hoho"]] = 0.5f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["hoho"]] = 0f;
						}
						if (this.isHoho2)
						{
							fieldValue16[(int)morph8.hash["hoho2"]] = 0.5f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["hoho2"]] = 0f;
						}
						if (this.isHohos)
						{
							fieldValue16[(int)morph8.hash["hohos"]] = 1f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["hohos"]] = 0f;
						}
						if (this.isHohol)
						{
							fieldValue16[(int)morph8.hash["hohol"]] = 1f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["hohol"]] = 0f;
						}
						if (this.isToothoff)
						{
							fieldValue16[(int)morph8.hash["toothoff"]] = 1f;
						}
						else
						{
							fieldValue16[(int)morph8.hash["toothoff"]] = 0f;
						}
						if (this.isNosefook)
						{
							morph8.boNoseFook = true;
						}
						else
						{
							morph8.boNoseFook = false;
						}
						for (int num100 = 0; num100 < this.maidCnt; num100++)
						{
							this.maidArray[num100].body0.Face.morph.FixBlendValues_Face();
						}
					}
				}
			}
			if (this.isF6 && !this.okFlg && ((!this.escFlg && Input.GetKeyDown(KeyCode.Escape)) || Input.GetKeyDown(KeyCode.Tab)))
			{
				this.bGui = !this.bGui;
			}
			if (this.isF6 && this.maidArray[0] != null && this.maidArray[0].Visible)
			{
				for (int num101 = 0; num101 < 999; num101++)
				{
					if (this.gDogu[num101] != null)
					{
						this.gDogu[num101].GetComponent<Renderer>().enabled = false;
						this.gDogu[num101].SetActive(false);
						if (this.mDogu[num101].del)
						{
							this.mDogu[num101].del = false;
							UnityEngine.Object.Destroy(this.doguBObject[num101]);
							this.doguBObject.RemoveAt(num101);
						}
						else if (this.mDogu[num101].count > 0)
						{
							this.mDogu[num101].count--;
							if (this.doguBObject.Count > num101 && this.doguBObject[num101] != null && this.doguBObject[num101].name.StartsWith("Particle/p"))
							{
								if (this.mDogu[num101].count == 1)
								{
									this.doguBObject[num101].SetActive(false);
								}
								if (this.mDogu[num101].count == 0)
								{
									this.doguBObject[num101].SetActive(true);
									string name = this.doguBObject[num101].name;
									if (!(name == "Particle/pLineY"))
									{
										if (!(name == "Particle/pLineP02"))
										{
											if (!(name == "Particle/pLine_act2"))
											{
												if (name == "Particle/pHeart01")
												{
													this.mDogu[num101].count = 77;
												}
											}
											else
											{
												this.mDogu[num101].count = 90;
											}
										}
										else
										{
											this.mDogu[num101].count = 115;
										}
									}
									else
									{
										this.mDogu[num101].count = 180;
									}
								}
							}
						}
					}
				}
				if (Input.GetKey(KeyCode.Z) && this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.ikMode2 = 11;
				}
				else if (Input.GetKey(KeyCode.Z) && this.getModKeyPressing(ManyMaids.modKey.Ctrl))
				{
					this.ikMode2 = 12;
				}
				else if (Input.GetKey(KeyCode.X) && this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.ikMode2 = 14;
				}
				else if (Input.GetKey(KeyCode.X))
				{
					this.ikMode2 = 9;
				}
				else if (Input.GetKey(KeyCode.Z))
				{
					this.ikMode2 = 10;
				}
				else if (Input.GetKey(KeyCode.C))
				{
					this.ikMode2 = 13;
				}
				else if (Input.GetKey(KeyCode.D))
				{
					this.ikMode2 = 15;
				}
				else
				{
					this.ikMode2 = 0;
				}
				if (this.gBg != null)
				{
					if (!this.isCube3)
					{
						this.gBg.GetComponent<Renderer>().enabled = false;
						this.gBg.SetActive(false);
					}
					else
					{
						if (this.ikMode2 > 0 && this.ikMode2 != 15)
						{
							this.gBg.GetComponent<Renderer>().enabled = true;
							this.gBg.SetActive(true);
						}
						else
						{
							this.gBg.GetComponent<Renderer>().enabled = false;
							this.gBg.SetActive(false);
						}
						if (this.ikMode2 == 10 || this.ikMode2 == 11 || this.ikMode2 == 12)
						{
							this.gBg.GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
						}
						if (this.ikMode2 == 9 || this.ikMode2 == 14)
						{
							this.gBg.GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f, 0.5f);
							this.mBg.Update();
						}
						if (this.ikMode2 == 13)
						{
							this.gBg.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.3f, 0.5f);
							this.mBg.Update();
						}
						if (this.ikMode2 == 13)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 13 && this.gBg)
							{
								this.mBg.ido = 5;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 5;
							}
						}
						else if (this.ikMode2 == 11)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 11 && this.gBg)
							{
								this.mBg.ido = 3;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 3;
							}
						}
						else if (this.ikMode2 == 12)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 12 && this.gBg)
							{
								this.mBg.ido = 2;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 2;
							}
						}
						else if (this.ikMode2 == 10)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 10 && this.gBg)
							{
								this.mBg.ido = 1;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 1;
							}
						}
						else if (this.ikMode2 == 9)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 9 && this.gBg)
							{
								this.mBg.ido = 4;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 4;
							}
						}
						else if (this.ikMode2 == 14)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 14 && this.gBg)
							{
								this.mBg.ido = 6;
								this.mBg.reset = true;
							}
							else
							{
								this.gBg.transform.position = this.bg.position;
								this.gBg.transform.eulerAngles = this.bg.eulerAngles;
								this.mBg.maid = this.bgObject;
								this.mBg.ido = 6;
							}
						}
					}
				}
				for (int num102 = 0; num102 < this.lightIndex.Count; num102++)
				{
					if (this.gLight[0] == null)
					{
						this.gLight[0] = GameObject.CreatePrimitive(PrimitiveType.Cube);
						Material material4 = new Material(Shader.Find("Transparent/Diffuse"));
						material4.color = new Color(0.5f, 0.5f, 1f, 0.8f);
						this.gLight[0].GetComponent<Renderer>().material = material4;
						this.gLight[0].layer = 8;
						this.gLight[0].GetComponent<Renderer>().enabled = false;
						this.gLight[0].SetActive(false);
						this.gLight[0].transform.position = GameMain.Instance.MainLight.transform.position;
						this.mLight[0] = this.gLight[0].AddComponent<MouseDrag6>();
						this.mLight[0].obj = this.gLight[0];
						this.mLight[0].maid = GameMain.Instance.MainLight.gameObject;
						this.mLight[0].angles = GameMain.Instance.MainLight.gameObject.transform.eulerAngles;
						this.gLight[0].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
						this.mLight[0].ido = 1;
						this.mLight[0].isScale = false;
					}
					if (this.gLight[num102] != null)
					{
						if (!this.isCube4)
						{
							this.gLight[num102].GetComponent<Renderer>().enabled = false;
							this.gLight[num102].SetActive(false);
						}
						else if (this.lightList[num102].GetComponent<Light>().type == LightType.Spot || this.lightList[num102].GetComponent<Light>().type == LightType.Point)
						{
							if (this.ikMode2 > 0 && this.ikMode2 != 15)
							{
								this.gLight[num102].GetComponent<Renderer>().enabled = true;
								this.gLight[num102].SetActive(true);
							}
							else
							{
								this.gLight[num102].GetComponent<Renderer>().enabled = false;
								this.gLight[num102].SetActive(false);
								this.mLight[num102].isAlt = false;
							}
							if (this.ikMode2 == 10 || this.ikMode2 == 11 || this.ikMode2 == 12)
							{
								this.gLight[num102].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
								if (this.mLight[num102].isAlt)
								{
									this.gLight[num102].GetComponent<Renderer>().material.color = new Color(0.6f, 0.6f, 1f, 0.5f);
								}
							}
							if (this.ikMode2 == 9 || this.ikMode2 == 14)
							{
								this.gLight[num102].GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f, 0.5f);
								this.mLight[num102].Update();
							}
							if (this.ikMode2 == 13)
							{
								this.gLight[num102].GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.3f, 0.5f);
								this.mLight[num102].Update();
							}
							if (this.ikMode2 == 13)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 13 && this.gLight[num102])
								{
									this.mLight[num102].ido = 15;
									this.mLight[num102].reset = true;
								}
								else
								{
									if (this.lightList[num102].transform.localScale.x == 1f)
									{
										this.lightList[num102].transform.localScale = new Vector3(this.lightRange[num102], this.lightRange[num102], this.lightRange[num102]);
									}
									this.lightRange[num102] = this.lightList[num102].transform.localScale.x;
									this.gLight[num102].transform.position = this.lightList[num102].transform.position;
									this.gLight[num102].transform.eulerAngles = this.lightList[num102].transform.eulerAngles;
									this.mLight[num102].maid = this.lightList[num102];
									this.mLight[num102].ido = 15;
								}
							}
							else if (this.ikMode2 == 11)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 11 && this.gLight[num102])
								{
									this.mLight[num102].ido = 3;
									this.mLight[num102].reset = true;
								}
								else
								{
									this.gLight[num102].transform.position = this.lightList[num102].transform.position;
									this.gLight[num102].transform.eulerAngles = this.lightList[num102].transform.eulerAngles;
									this.lightX[num102] = this.gLight[num102].transform.eulerAngles.x;
									this.lightY[num102] = this.gLight[num102].transform.eulerAngles.y;
									this.mLight[num102].maid = this.lightList[num102];
									this.mLight[num102].ido = 3;
								}
							}
							else if (this.ikMode2 == 12)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 12 && this.gLight[num102])
								{
									this.mLight[num102].ido = 2;
									this.mLight[num102].reset = true;
								}
								else
								{
									this.gLight[num102].transform.position = this.lightList[num102].transform.position;
									this.gLight[num102].transform.eulerAngles = this.lightList[num102].transform.eulerAngles;
									this.mLight[num102].maid = this.lightList[num102];
									this.mLight[num102].ido = 2;
								}
							}
							else if (this.ikMode2 == 10)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 10 && this.gLight[num102])
								{
									this.mLight[num102].ido = 1;
									this.mLight[num102].reset = true;
								}
								else
								{
									this.gLight[num102].transform.position = this.lightList[num102].transform.position;
									this.gLight[num102].transform.eulerAngles = this.lightList[num102].transform.eulerAngles;
									this.mLight[num102].maid = this.lightList[num102];
									this.mLight[num102].ido = 1;
								}
							}
							else if (this.ikMode2 == 9)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 9 && this.gLight[num102])
								{
									this.mLight[num102].ido = 4;
									this.mLight[num102].reset = true;
								}
								else
								{
									this.gLight[num102].transform.position = this.lightList[num102].transform.position;
									this.gLight[num102].transform.eulerAngles = this.lightList[num102].transform.eulerAngles;
									this.lightX[num102] = this.gLight[num102].transform.eulerAngles.x;
									this.lightY[num102] = this.gLight[num102].transform.eulerAngles.y;
									this.mLight[num102].maid = this.lightList[num102];
									this.mLight[num102].ido = 4;
								}
							}
							else if (this.ikMode2 == 14)
							{
								if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 14 && this.gLight[num102])
								{
									this.mLight[num102].ido = 6;
									this.mLight[num102].reset = true;
								}
								else
								{
									this.gLight[num102].transform.position = this.lightList[num102].transform.position;
									this.gLight[num102].transform.eulerAngles = this.lightList[num102].transform.eulerAngles;
									this.lightX[num102] = this.gLight[num102].transform.eulerAngles.x;
									this.lightY[num102] = this.gLight[num102].transform.eulerAngles.y;
									this.mLight[num102].maid = this.lightList[num102];
									this.mLight[num102].ido = 6;
								}
							}
						}
					}
				}
				for (int num103 = 0; num103 < this.doguBObject.Count; num103++)
				{
					if (!this.isCube2)
					{
						this.gDogu[num103].GetComponent<Renderer>().enabled = false;
						this.gDogu[num103].SetActive(false);
					}
					else
					{
						if (this.ikMode2 > 0)
						{
							this.gDogu[num103].GetComponent<Renderer>().enabled = true;
							this.gDogu[num103].SetActive(true);
						}
						else
						{
							this.gDogu[num103].GetComponent<Renderer>().enabled = false;
							this.gDogu[num103].SetActive(false);
							this.mDogu[num103].isAlt = false;
						}
						if (this.ikMode2 == 10 || this.ikMode2 == 11 || this.ikMode2 == 12)
						{
							this.gDogu[num103].GetComponent<Renderer>().material.color = new Color(0.4f, 0.4f, 1f, 0.5f);
							if (this.mDogu[num103].isAlt)
							{
								this.gDogu[num103].GetComponent<Renderer>().material.color = new Color(0.6f, 0.6f, 1f, 0.5f);
							}
						}
						if (this.ikMode2 == 9 || this.ikMode2 == 14)
						{
							this.gDogu[num103].GetComponent<Renderer>().material.color = new Color(0.3f, 0.7f, 0.3f, 0.5f);
							this.mDogu[num103].Update();
						}
						if (this.ikMode2 == 15)
						{
							this.gDogu[num103].GetComponent<Renderer>().material.color = new Color(1f, 0.3f, 0.3f, 0.5f);
						}
						if (this.ikMode2 == 13)
						{
							this.gDogu[num103].GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.3f, 0.5f);
							this.mDogu[num103].Update();
						}
						if (this.ikMode2 == 13)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 13 && this.gDogu[num103])
							{
								this.mDogu[num103].ido = 5;
								this.mDogu[num103].reset = true;
							}
							else
							{
								this.gDogu[num103].transform.position = this.doguBObject[num103].transform.position;
								this.gDogu[num103].transform.eulerAngles = this.doguBObject[num103].transform.eulerAngles;
								this.mDogu[num103].maid = this.doguBObject[num103];
								this.mDogu[num103].ido = 5;
							}
						}
						else if (this.ikMode2 == 11)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 11 && this.gDogu[num103])
							{
								this.mDogu[num103].ido = 3;
								this.mDogu[num103].reset = true;
							}
							else
							{
								this.gDogu[num103].transform.position = this.doguBObject[num103].transform.position;
								this.gDogu[num103].transform.eulerAngles = this.doguBObject[num103].transform.eulerAngles;
								this.mDogu[num103].maid = this.doguBObject[num103];
								this.mDogu[num103].ido = 3;
							}
						}
						else if (this.ikMode2 == 12)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 12 && this.gDogu[num103])
							{
								this.mDogu[num103].ido = 2;
								this.mDogu[num103].reset = true;
							}
							else
							{
								this.gDogu[num103].transform.position = this.doguBObject[num103].transform.position;
								this.gDogu[num103].transform.eulerAngles = this.doguBObject[num103].transform.eulerAngles;
								this.mDogu[num103].maid = this.doguBObject[num103];
								this.mDogu[num103].ido = 2;
							}
						}
						else if (this.ikMode2 == 10)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 10 && this.gDogu[num103])
							{
								this.mDogu[num103].ido = 1;
								this.mDogu[num103].reset = true;
							}
							else
							{
								this.gDogu[num103].transform.position = this.doguBObject[num103].transform.position;
								this.gDogu[num103].transform.eulerAngles = this.doguBObject[num103].transform.eulerAngles;
								this.mDogu[num103].maid = this.doguBObject[num103];
								this.mDogu[num103].maidArray = this.doguBObject.ToArray();
								this.mDogu[num103].mArray = this.mDogu.ToArray<MouseDrag6>();
								this.mDogu[num103].ido = 1;
							}
						}
						else if (this.ikMode2 == 9)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 9 && this.gDogu[num103])
							{
								this.mDogu[num103].ido = 4;
								this.mDogu[num103].reset = true;
							}
							else
							{
								this.gDogu[num103].transform.position = this.doguBObject[num103].transform.position;
								this.gDogu[num103].transform.eulerAngles = this.doguBObject[num103].transform.eulerAngles;
								this.mDogu[num103].maid = this.doguBObject[num103];
								this.mDogu[num103].ido = 4;
							}
						}
						else if (this.ikMode2 == 14)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 14 && this.gDogu[num103])
							{
								this.mDogu[num103].ido = 6;
								this.mDogu[num103].reset = true;
							}
							else
							{
								this.gDogu[num103].transform.position = this.doguBObject[num103].transform.position;
								this.gDogu[num103].transform.eulerAngles = this.doguBObject[num103].transform.eulerAngles;
								this.mDogu[num103].maid = this.doguBObject[num103];
								this.mDogu[num103].ido = 6;
							}
						}
						else if (this.ikMode2 == 15)
						{
							if ((this.ikModeOld2 == 0 || this.ikModeOld2 >= 9) && this.ikModeOld2 != 15 && this.gDogu[num103])
							{
								this.mDogu[num103].ido = 7;
								this.mDogu[num103].reset = true;
							}
							else
							{
								this.gDogu[num103].transform.position = this.doguBObject[num103].transform.position;
								this.gDogu[num103].transform.eulerAngles = this.doguBObject[num103].transform.eulerAngles;
								this.mDogu[num103].maid = this.doguBObject[num103];
								this.mDogu[num103].ido = 7;
							}
						}
					}
				}
				this.ikModeOld2 = this.ikMode2;
				Vector3 vector5 = this.mainCameraTransform.TransformDirection(Vector3.forward);
				Vector3 vector6 = this.mainCameraTransform.TransformDirection(Vector3.right);
				this.mainCameraTransform.TransformDirection(Vector3.up);
				if (Input.GetKeyDown(KeyCode.Y) && this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.keyFlg = true;
					this.bgIndex--;
					if (this.bgIndex <= -1)
					{
						this.bgIndex = this.bgArray.Length - 1;
					}
					if (!this.moveBg)
					{
						this.bg.localScale = new Vector3(1f, 1f, 1f);
						if (this.bgArray[this.bgIndex].Length == 36)
						{
							GameMain.Instance.BgMgr.ChangeBgMyRoom(this.bgArray[this.bgIndex]);
						}
						else
						{
							GameMain.Instance.BgMgr.ChangeBg(this.bgArray[this.bgIndex]);
						}
						this.bgCombo.selectedItemIndex = this.bgIndex;
					}
				}
				else if (Input.GetKey(KeyCode.Y) && Input.GetKey(KeyCode.E))
				{
					this.keyFlg = true;
					this.bg.localScale = new Vector3(this.bg.localScale.x * 1.005f, this.bg.localScale.y * 1.005f, this.bg.localScale.z * 1.005f);
				}
				else if (Input.GetKey(KeyCode.Y) && Input.GetKey(KeyCode.D))
				{
					this.keyFlg = true;
					this.bg.localScale = new Vector3(this.bg.localScale.x * 0.995f, this.bg.localScale.y * 0.995f, this.bg.localScale.z * 0.995f);
				}
				else if (Input.GetKey(KeyCode.Y) && Input.GetKeyDown(KeyCode.C))
				{
					this.keyFlg = true;
					this.bg.localScale = new Vector3(1f, 1f, 1f);
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.J))
				{
					Vector3 vector4 = this.bg.position;
					vector4 += new Vector3(vector5.x, 0f, vector5.z) * -0.025f * this.speed;
					vector4 += new Vector3(vector6.x, 0f, vector6.z) * 0.025f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.I) && Input.GetKey(KeyCode.L))
				{
					Vector3 vector4 = this.bg.position;
					vector4 += new Vector3(vector5.x, 0f, vector5.z) * -0.025f * this.speed;
					vector4 += new Vector3(vector6.x, 0f, vector6.z) * -0.025f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.J))
				{
					Vector3 vector4 = this.bg.position;
					vector4 += new Vector3(vector5.x, 0f, vector5.z) * 0.025f * this.speed;
					vector4 += new Vector3(vector6.x, 0f, vector6.z) * 0.025f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.K) && Input.GetKey(KeyCode.L))
				{
					Vector3 vector4 = this.bg.position;
					vector4 += new Vector3(vector5.x, 0f, vector5.z) * 0.025f * this.speed;
					vector4 += new Vector3(vector6.x, 0f, vector6.z) * -0.025f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.I))
				{
					Vector3 vector4 = this.bg.position;
					vector4 += new Vector3(vector5.x, 0f, vector5.z) * -0.025f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.K))
				{
					Vector3 vector4 = this.bg.position;
					vector4 += new Vector3(vector5.x, 0f, vector5.z) * 0.025f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.J))
				{
					Vector3 vector4 = this.bg.position;
					vector4 += new Vector3(vector6.x, 0f, vector6.z) * 0.025f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.L))
				{
					Vector3 vector4 = this.bg.position;
					vector4 += new Vector3(vector6.x, 0f, vector6.z) * -0.025f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.Alpha0))
				{
					Vector3 vector4 = this.bg.position;
					vector4.y -= 0.015f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.P))
				{
					Vector3 vector4 = this.bg.position;
					vector4.y += 0.015f * this.speed;
					this.bg.localPosition = vector4;
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.U))
				{
					this.bg.RotateAround(this.maidArray[0].transform.position, Vector3.up, 0.7f);
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if ((Input.GetKey(KeyCode.Y) || Input.GetKey(KeyCode.V)) && Input.GetKey(KeyCode.O))
				{
					this.bg.RotateAround(this.maidArray[0].transform.position, Vector3.up, -0.7f);
					if (Input.GetKey(KeyCode.Y))
					{
						this.keyFlg = true;
					}
				}
				else if (Input.GetKeyUp(KeyCode.Y))
				{
					if (this.keyFlg)
					{
						this.keyFlg = false;
					}
					else
					{
						this.bgIndex++;
						if (this.bgIndex == this.bgArray.Length)
						{
							this.bgIndex = 0;
						}
						if (!this.moveBg)
						{
							this.bg.localScale = new Vector3(1f, 1f, 1f);
							if (this.bgArray[this.bgIndex].Length == 36)
							{
								GameMain.Instance.BgMgr.ChangeBgMyRoom(this.bgArray[this.bgIndex]);
							}
							else
							{
								GameMain.Instance.BgMgr.ChangeBg(this.bgArray[this.bgIndex]);
							}
							this.bgCombo.selectedItemIndex = this.bgIndex;
						}
					}
				}
				if (this.getModKeyPressing(ManyMaids.modKey.Shift))
				{
					this.speed = 5f * Time.deltaTime * 60f;
				}
				else
				{
					this.speed = 1f * Time.deltaTime * 60f;
				}
				if (!this.isVR || this.isVR2)
				{
					if (!this.isVR)
					{
						if (this.isBloom)
						{
							Bloom fieldValue18 = ManyMaids.GetFieldValue<CameraMain, Bloom>(this.mainCamera, "m_gcBloom");
							fieldValue18.enabled = true;
							fieldValue18.bloomIntensity = this.bloom1;
							fieldValue18.bloomBlurIterations = (int)this.bloom2;
							fieldValue18.bloomThreshholdColor = new Color(1f - this.bloom3, 1f - this.bloom4, 1f - this.bloom5);
							if (this.isBloomA)
							{
								fieldValue18.hdr = 1;
							}
							else
							{
								fieldValue18.hdr = 0;
							}
							this.isBloom2 = true;
						}
						else if (this.isBloom2)
						{
							this.isBloom2 = false;
							Bloom fieldValue19 = ManyMaids.GetFieldValue<CameraMain, Bloom>(this.mainCamera, "m_gcBloom");
							fieldValue19.enabled = true;
							fieldValue19.bloomIntensity = 2.85f;
							fieldValue19.hdr = 0;
							fieldValue19.bloomThreshholdColor = new Color(1f, 1f, 1f);
							fieldValue19.bloomBlurIterations = 3;
						}
						if (this.isDepth)
						{
							this.depth_field_.enabled = true;
							this.depth_field_.focalLength = this.depth1;
							this.depth_field_.focalSize = this.depth2;
							this.depth_field_.aperture = this.depth3;
							this.depth_field_.maxBlurSize = this.depth4;
							if (this.isDepthA)
							{
								this.depth_field_.visualizeFocus = true;
							}
							else
							{
								this.depth_field_.visualizeFocus = false;
							}
						}
						else
						{
							if (this.depth_field_ == null)
							{
								this.depth_field_ = GameMain.Instance.MainCamera.gameObject.AddComponent<DepthOfFieldScatter>();
								if (this.depth_field_.dofHdrShader == null)
								{
									this.depth_field_.dofHdrShader = Shader.Find("Hidden/Dof/DepthOfFieldHdr");
								}
								if (this.depth_field_.dx11BokehShader == null)
								{
									this.depth_field_.dx11BokehShader = Shader.Find("Hidden/Dof/DX11Dof");
								}
								if (this.depth_field_.dx11BokehTexture == null)
								{
									this.depth_field_.dx11BokehTexture = (Resources.Load("Textures/hexShape") as Texture2D);
								}
							}
							this.depth_field_.enabled = false;
						}
						if (this.isFog)
						{
							if (this.fog_.fogShader == null)
							{
								this.fog_.fogShader = Shader.Find("Hidden/GlobalFog");
							}
							this.fog_.enabled = true;
							this.fog_.startDistance = this.fog1;
							this.fog_.globalDensity = this.fog2;
							this.fog_.heightScale = this.fog3;
							this.fog_.height = this.fog4;
							this.fog_.globalFogColor.r = this.fog5;
							this.fog_.globalFogColor.g = this.fog6;
							this.fog_.globalFogColor.b = this.fog7;
						}
						else
						{
							if (this.fog_ == null)
							{
								this.fog_ = GameMain.Instance.MainCamera.gameObject.AddComponent<GlobalFog>();
							}
							this.fog_.enabled = false;
						}
						if (this.isSepia)
						{
							if (this.sepia_tone_.shader == null)
							{
								this.sepia_tone_.shader = Shader.Find("Hidden/Sepiatone Effect");
							}
							this.sepia_tone_.enabled = true;
						}
						else
						{
							if (this.sepia_tone_ == null)
							{
								this.sepia_tone_ = GameMain.Instance.MainCamera.gameObject.AddComponent<SepiaToneEffect>();
							}
							this.sepia_tone_.enabled = false;
						}
						if (this.bokashi > 0f)
						{
							Blur component8 = GameMain.Instance.MainCamera.gameObject.GetComponent<Blur>();
							component8.enabled = true;
							component8.blurSize = this.bokashi / 10f;
							component8.blurIterations = 0;
							component8.downsample = 0;
							if (this.bokashi > 3f)
							{
								component8.blurSize -= 0.3f;
								component8.blurIterations = 1;
								component8.downsample = 1;
							}
						}
						else
						{
							GameMain.Instance.MainCamera.gameObject.GetComponent<Blur>().enabled = false;
						}
						if (this.kamiyure > 0f)
						{
							for (int num104 = 0; num104 < this.maidCnt; num104++)
							{
								Maid maid17 = this.maidArray[num104];
								for (int num105 = 0; num105 < maid17.body0.goSlot.Count; num105++)
								{
									if (maid17.body0.goSlot[num105].obj != null)
									{
										DynamicBone component9 = maid17.body0.goSlot[num105].obj.GetComponent<DynamicBone>();
										if (component9 != null && component9.enabled)
										{
											component9.m_Gravity = new Vector3(this.softG.x * 5f, this.softG.y * 5f + this.kamiyure, this.softG.z * 5f);
										}
									}
									List<THair1> fieldValue20 = ManyMaids.GetFieldValue<TBoneHair_, List<THair1>>(maid17.body0.goSlot[num105].bonehair, "hair1list");
									for (int num106 = 0; num106 < fieldValue20.Count; num106++)
									{
										fieldValue20[num106].SoftG = new Vector3(this.softG.x, this.softG.y + this.kamiyure, this.softG.z);
									}
								}
							}
						}
						if (this.isBlur)
						{
							Vignetting component10 = GameMain.Instance.MainCamera.gameObject.GetComponent<Vignetting>();
							component10.mode = 0;
							component10.intensity = this.blur1;
							component10.chromaticAberration = this.blur4;
							component10.blur = this.blur2;
							component10.blurSpread = this.blur3;
							component10.enabled = true;
							this.isBlur2 = true;
						}
						else if (this.isBlur2)
						{
							this.isBlur2 = false;
							Vignetting component11 = GameMain.Instance.MainCamera.gameObject.GetComponent<Vignetting>();
							component11.mode = 0;
							component11.intensity = -3.98f;
							component11.chromaticAberration = -0.75f;
							component11.axialAberration = 1.18f;
							component11.blurSpread = 4.19f;
							component11.luminanceDependency = 0.494f;
							component11.blurDistance = 1.71f;
							component11.enabled = false;
						}
					}
					if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.I))
					{
						GameMain.Instance.MainLight.transform.eulerAngles -= Vector3.right / 2f;
						this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.K))
					{
						if (GameMain.Instance.MainLight.transform.eulerAngles.x < 85f)
						{
							GameMain.Instance.MainLight.transform.eulerAngles += Vector3.right / 2f;
							this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.J))
					{
						GameMain.Instance.MainLight.transform.eulerAngles -= Vector3.up / 1.5f;
						this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.L))
					{
						GameMain.Instance.MainLight.transform.eulerAngles += Vector3.up / 1.5f;
						this.lightY[0] = GameMain.Instance.MainLight.transform.eulerAngles.y;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.BackQuote))
					{
						GameMain.Instance.MainLight.Reset();
						GameMain.Instance.MainLight.SetIntensity(0.95f);
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
						this.lightIndex[0] = 0;
						this.lightColorR[0] = 1f;
						this.lightColorG[0] = 1f;
						this.lightColorB[0] = 1f;
						this.lightX[0] = 40f;
						this.lightY[0] = 180f;
						this.lightAkarusa[0] = 0.95f;
						this.lightKage[0] = 0.098f;
						this.lightRange[0] = 50f;
						this.bgObject.SetActive(true);
						this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
						this.isIdx1 = false;
						this.isIdx2 = false;
						this.isIdx3 = false;
						this.isIdx4 = false;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Minus) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						List<float> list7;
						(list7 = this.lightColorR)[0] = list7[0] + 0.01f;
						if (this.lightColorR[0] > 1f)
						{
							this.lightColorR[0] = 1f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Quote) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						List<float> list8;
						(list8 = this.lightColorG)[0] = list8[0] + 0.01f;
						if (this.lightColorG[0] > 1f)
						{
							this.lightColorG[0] = 1f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.LeftBracket) && this.getModKeyPressing(ManyMaids.modKey.Shift))
					{
						List<float> list9;
						(list9 = this.lightColorB)[0] = list9[0] + 0.01f;
						if (this.lightColorB[0] > 1f)
						{
							this.lightColorB[0] = 1f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Minus))
					{
						List<float> list10;
						(list10 = this.lightColorR)[0] = list10[0] - 0.01f;
						if (this.lightColorR[0] < 0f)
						{
							this.lightColorR[0] = 0f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Quote))
					{
						List<float> list11;
						(list11 = this.lightColorG)[0] = list11[0] - 0.01f;
						if (this.lightColorG[0] < 0f)
						{
							this.lightColorG[0] = 0f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.LeftBracket))
					{
						List<float> list12;
						(list12 = this.lightColorB)[0] = list12[0] - 0.01f;
						if (this.lightColorB[0] < 0f)
						{
							this.lightColorB[0] = 0f;
						}
						if (this.lightIndex[0] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Alpha0))
					{
						GameMain.Instance.MainLight.GetComponent<Light>().intensity += 0.12f * Time.deltaTime;
						this.lightAkarusa[0] = GameMain.Instance.MainLight.GetComponent<Light>().intensity;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.P))
					{
						GameMain.Instance.MainLight.GetComponent<Light>().intensity -= 0.12f * Time.deltaTime;
						this.lightAkarusa[0] = GameMain.Instance.MainLight.GetComponent<Light>().intensity;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Alpha9))
					{
						GameMain.Instance.MainLight.GetComponent<Light>().spotAngle += 0.2f;
						GameMain.Instance.MainLight.GetComponent<Light>().range += 0.2f;
						this.lightRange[0] = GameMain.Instance.MainLight.GetComponent<Light>().spotAngle;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.O))
					{
						GameMain.Instance.MainLight.GetComponent<Light>().spotAngle -= 0.2f;
						GameMain.Instance.MainLight.GetComponent<Light>().range -= 0.2f;
						this.lightRange[0] = GameMain.Instance.MainLight.GetComponent<Light>().spotAngle;
					}
					else if (Input.GetKey(KeyCode.R) && Input.GetKeyDown(KeyCode.U))
					{
						List<int> list13;
						(list13 = this.lightIndex)[0] = list13[0] + 1;
						if (this.lightIndex[0] == 4)
						{
							this.lightIndex[0] = 0;
						}
						this.lightColorR[0] = 1f;
						this.lightColorG[0] = 1f;
						this.lightColorB[0] = 1f;
						this.lightX[0] = 40f;
						this.lightY[0] = 180f;
						this.lightAkarusa[0] = 0.95f;
						this.lightKage[0] = 0.098f;
						this.lightRange[0] = 50f;
						GameMain.Instance.MainLight.Reset();
						GameMain.Instance.MainLight.SetIntensity(0.95f);
						GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 50f;
						GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
						GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
						if (this.lightIndex[0] == 0)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
							this.bgObject.SetActive(true);
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(0f, 0f, 0f);
						}
						else if (this.lightIndex[0] == 1)
						{
							GameMain.Instance.MainLight.transform.eulerAngles += Vector3.right * 40f;
							this.lightX[0] = GameMain.Instance.MainLight.transform.eulerAngles.x;
							GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Spot;
							if (this.gLight[0] == null)
							{
								this.gLight[0] = GameObject.CreatePrimitive(PrimitiveType.Cube);
								Material material5 = new Material(Shader.Find("Transparent/Diffuse"));
								material5.color = new Color(0.5f, 0.5f, 1f, 0.8f);
								this.gLight[0].GetComponent<Renderer>().material = material5;
								this.gLight[0].layer = 8;
								this.gLight[0].GetComponent<Renderer>().enabled = false;
								this.gLight[0].SetActive(false);
								this.gLight[0].transform.position = GameMain.Instance.MainLight.transform.position;
								this.mLight[0] = this.gLight[0].AddComponent<MouseDrag6>();
								this.mLight[0].obj = this.gLight[0];
								this.mLight[0].maid = GameMain.Instance.MainLight.gameObject;
								this.mLight[0].angles = GameMain.Instance.MainLight.gameObject.transform.eulerAngles;
								this.gLight[0].transform.localScale = new Vector3(0.12f, 0.12f, 0.12f);
								this.mLight[0].ido = 1;
								this.mLight[0].isScale = false;
							}
						}
						else if (this.lightIndex[0] == 2)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Point;
						}
						else if (this.lightIndex[0] == 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
							this.bgObject.SetActive(false);
						}
						this.isIdx1 = false;
						this.isIdx2 = false;
						this.isIdx3 = false;
						this.isIdx4 = false;
					}
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Insert))
				{
					GameMain.Instance.MainLight.transform.eulerAngles -= Vector3.right / 2f;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Delete))
				{
					if (GameMain.Instance.MainLight.transform.eulerAngles.x < 85f)
					{
						GameMain.Instance.MainLight.transform.eulerAngles += Vector3.right / 2f;
					}
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Home))
				{
					GameMain.Instance.MainLight.transform.eulerAngles -= Vector3.up / 1.5f;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.End))
				{
					GameMain.Instance.MainLight.transform.eulerAngles += Vector3.up / 1.5f;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.BackQuote))
				{
					GameMain.Instance.MainLight.Reset();
					GameMain.Instance.MainLight.SetIntensity(0.95f);
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.PageUp))
				{
					GameMain.Instance.MainLight.GetComponent<Light>().intensity += 0.1f * Time.deltaTime;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.PageDown))
				{
					GameMain.Instance.MainLight.GetComponent<Light>().intensity -= 0.1f * Time.deltaTime;
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.Quote))
				{
					if (this.lightIndex[0] == 1)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().spotAngle += 0.2f;
					}
					else
					{
						GameMain.Instance.MainLight.GetComponent<Light>().range += 0.2f;
					}
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKey(KeyCode.LeftBracket))
				{
					if (this.lightIndex[0] == 1)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().spotAngle -= 0.2f;
					}
					else
					{
						GameMain.Instance.MainLight.GetComponent<Light>().range -= 0.2f;
					}
				}
				else if (Input.GetKey(KeyCode.R) && Input.GetKeyDown(KeyCode.Minus))
				{
					List<int> list14;
					(list14 = this.lightIndex)[0] = list14[0] + 1;
					if (this.lightIndex[0] == 3)
					{
						this.lightIndex[0] = 0;
					}
					GameMain.Instance.MainLight.Reset();
					GameMain.Instance.MainLight.SetIntensity(0.95f);
					GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = 50f;
					GameMain.Instance.MainLight.GetComponent<Light>().range = 10f;
					GameMain.Instance.MainLight.gameObject.transform.position = new Vector3(0f, 2f, 0f);
					if (this.lightIndex[0] == 0)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Directional;
					}
					else if (this.lightIndex[0] == 1)
					{
						GameMain.Instance.MainLight.transform.eulerAngles += Vector3.right * 40f;
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Spot;
					}
					else if (this.lightIndex[0] == 2)
					{
						GameMain.Instance.MainLight.GetComponent<Light>().type = LightType.Point;
					}
				}
				for (int num107 = 0; num107 < this.lightList.Count; num107++)
				{
					if (num107 > 0)
					{
						this.lightList[num107].GetComponent<Light>().color = new Color(this.lightColorR[num107], this.lightColorG[num107], this.lightColorB[num107]);
						this.lightList[num107].GetComponent<Light>().intensity = this.lightAkarusa[num107];
						this.lightList[num107].GetComponent<Light>().spotAngle = this.lightRange[num107];
						this.lightList[num107].GetComponent<Light>().range = this.lightRange[num107] / 5f;
						if (!Input.GetKey(KeyCode.X) && (!Input.GetKey(KeyCode.Z) || !this.getModKeyPressing(ManyMaids.modKey.Shift)))
						{
							this.lightList[num107].transform.eulerAngles = new Vector3(this.lightX[num107], this.lightY[num107], 18f);
						}
					}
					else
					{
						GameMain.Instance.MainLight.SetIntensity(this.lightAkarusa[0]);
						GameMain.Instance.MainLight.GetComponent<Light>().shadowStrength = this.lightKage[0];
						if (!Input.GetKey(KeyCode.X) && (!Input.GetKey(KeyCode.Z) || !this.getModKeyPressing(ManyMaids.modKey.Shift)))
						{
							GameMain.Instance.MainLight.SetRotation(new Vector3(this.lightX[0], this.lightY[0], 18f));
						}
						GameMain.Instance.MainLight.GetComponent<Light>().spotAngle = this.lightRange[num107];
						GameMain.Instance.MainLight.GetComponent<Light>().range = this.lightRange[num107] / 5f;
						if (this.lightIndex[num107] != 3)
						{
							GameMain.Instance.MainLight.GetComponent<Light>().color = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
						else
						{
							this.mainCamera.GetComponent<Camera>().backgroundColor = new Color(this.lightColorR[0], this.lightColorG[0], this.lightColorB[0]);
						}
					}
				}
			}
			if (!this.isF6S)
			{
				return;
			}
			if (this.maidCnt < 1)
			{
				this.F6cnt++;
			}
			if (this.F6cnt > 10)
			{
				this.maidCnt = 1;
				this.F6cnt = 0;
			}
			for (int num108 = 0; num108 < this.maidCnt; num108++)
			{
				if (this.maidArray[num108] && this.maidArray[num108].Visible && this.maidArray[num108].body0.isLoadedBody)
				{
					Maid maid18 = this.maidArray[num108];
					for (int num109 = 0; num109 < maid18.body0.goSlot.Count; num109++)
					{
						if (maid18.body0.goSlot[num109].bonehair.bodyhit != null && maid18.body0.goSlot[num109].bonehair.bodyhit.spherelist.Count == 17 && (num109 == 3 || num109 == 4))
						{
							Transform t = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 Spine", true);
							Transform t2 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 Spine0a", true);
							Transform t3 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 Spine1", true);
							Transform t4 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 Spine1a", true);
							Transform t5 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 Pelvis", true);
							Transform t6 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 L Hand", true);
							CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 L UpperArm", true);
							Transform t7 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 L Forearm", true);
							Transform t8 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 R Hand", true);
							CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 R UpperArm", true);
							Transform t9 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 R Forearm", true);
							CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 L Foot", true);
							Transform t10 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 L Thigh", true);
							CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 L Calf", true);
							CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 R Foot", true);
							Transform t11 = CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 R Thigh", true);
							CMT.SearchObjName(maid18.body0.m_Bones.transform, "Bip01 R Calf", true);
							List<THitSphere> spherelist = maid18.body0.goSlot[num109].bonehair.bodyhit.spherelist;
							THitSphere thitSphere = new THitSphere();
							THitSphere thitSphere2 = spherelist[0];
							thitSphere = new THitSphere();
							thitSphere.wv = thitSphere2.wv;
							thitSphere.len = thitSphere2.len * 0.8f;
							thitSphere.t = thitSphere2.t;
							thitSphere.vs = thitSphere2.vs;
							THitSphere thitSphere3 = thitSphere;
							thitSphere3.vs.y = thitSphere3.vs.y - 0.04f;
							THitSphere thitSphere4 = thitSphere;
							thitSphere4.vs.x = thitSphere4.vs.x + 0.05f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.09f;
							thitSphere.t = t4;
							THitSphere thitSphere5 = thitSphere;
							thitSphere5.vs.z = thitSphere5.vs.z + 0.04f;
							THitSphere thitSphere6 = thitSphere;
							thitSphere6.vs.x = thitSphere6.vs.x - 0.04f;
							THitSphere thitSphere7 = thitSphere;
							thitSphere7.vs.y = thitSphere7.vs.y - 0.01f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.09f;
							thitSphere.t = t4;
							THitSphere thitSphere8 = thitSphere;
							thitSphere8.vs.z = thitSphere8.vs.z - 0.04f;
							THitSphere thitSphere9 = thitSphere;
							thitSphere9.vs.x = thitSphere9.vs.x - 0.04f;
							THitSphere thitSphere10 = thitSphere;
							thitSphere10.vs.y = thitSphere10.vs.y - 0.01f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.09f;
							thitSphere.t = t3;
							THitSphere thitSphere11 = thitSphere;
							thitSphere11.vs.z = thitSphere11.vs.z + 0.035f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.09f;
							thitSphere.t = t3;
							THitSphere thitSphere12 = thitSphere;
							thitSphere12.vs.z = thitSphere12.vs.z - 0.035f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.08f;
							thitSphere.t = t2;
							THitSphere thitSphere13 = thitSphere;
							thitSphere13.vs.z = thitSphere13.vs.z + 0.035f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.08f;
							thitSphere.t = t2;
							THitSphere thitSphere14 = thitSphere;
							thitSphere14.vs.z = thitSphere14.vs.z - 0.035f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.09f;
							thitSphere.t = t;
							THitSphere thitSphere15 = thitSphere;
							thitSphere15.vs.z = thitSphere15.vs.z + 0.04f;
							THitSphere thitSphere16 = thitSphere;
							thitSphere16.vs.y = thitSphere16.vs.y - 0.02f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.09f;
							thitSphere.t = t;
							THitSphere thitSphere17 = thitSphere;
							thitSphere17.vs.z = thitSphere17.vs.z - 0.04f;
							THitSphere thitSphere18 = thitSphere;
							thitSphere18.vs.y = thitSphere18.vs.y - 0.02f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.11f;
							thitSphere.t = t5;
							THitSphere thitSphere19 = thitSphere;
							thitSphere19.vs.z = thitSphere19.vs.z + 0.05f;
							THitSphere thitSphere20 = thitSphere;
							thitSphere20.vs.y = thitSphere20.vs.y - 0.03f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.11f;
							thitSphere.t = t5;
							THitSphere thitSphere21 = thitSphere;
							thitSphere21.vs.z = thitSphere21.vs.z - 0.05f;
							THitSphere thitSphere22 = thitSphere;
							thitSphere22.vs.y = thitSphere22.vs.y - 0.03f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.11f;
							thitSphere.t = t10;
							THitSphere thitSphere23 = thitSphere;
							thitSphere23.vs.x = thitSphere23.vs.x - 0.03f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.11f;
							thitSphere.t = t11;
							THitSphere thitSphere24 = thitSphere;
							thitSphere24.vs.x = thitSphere24.vs.x - 0.03f;
							spherelist.Add(thitSphere);
							spherelist.Add(new THitSphere
							{
								len = 0.05f,
								t = t6
							});
							spherelist.Add(new THitSphere
							{
								len = 0.05f,
								t = t8
							});
							thitSphere = new THitSphere();
							thitSphere.len = 0.05f;
							thitSphere.t = t7;
							THitSphere thitSphere25 = thitSphere;
							thitSphere25.vs.x = thitSphere25.vs.x - 0.04f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.05f;
							thitSphere.t = t9;
							THitSphere thitSphere26 = thitSphere;
							thitSphere26.vs.x = thitSphere26.vs.x - 0.04f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.05f;
							thitSphere.t = t7;
							THitSphere thitSphere27 = thitSphere;
							thitSphere27.vs.x = thitSphere27.vs.x - 0.08f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.05f;
							thitSphere.t = t9;
							THitSphere thitSphere28 = thitSphere;
							thitSphere28.vs.x = thitSphere28.vs.x - 0.08f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.05f;
							thitSphere.t = t7;
							THitSphere thitSphere29 = thitSphere;
							thitSphere29.vs.x = thitSphere29.vs.x - 0.12f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.05f;
							thitSphere.t = t9;
							THitSphere thitSphere30 = thitSphere;
							thitSphere30.vs.x = thitSphere30.vs.x - 0.12f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.05f;
							thitSphere.t = t7;
							THitSphere thitSphere31 = thitSphere;
							thitSphere31.vs.x = thitSphere31.vs.x - 0.16f;
							spherelist.Add(thitSphere);
							thitSphere = new THitSphere();
							thitSphere.len = 0.05f;
							thitSphere.t = t9;
							THitSphere thitSphere32 = thitSphere;
							thitSphere32.vs.x = thitSphere32.vs.x - 0.16f;
							spherelist.Add(thitSphere);
						}
					}
				}
			}
		}

		// Token: 0x040000F6 RID: 246
		private const int maidmax = 400;

		// Token: 0x040000F7 RID: 247
		private const int vervalNow = 1330;

		// Token: 0x040000F8 RID: 248
		private bool chkMu = true;

		// Token: 0x040000F9 RID: 249
		private bool verval;

		// Token: 0x040000FA RID: 250
		private bool overver;

		// Token: 0x040000FB RID: 251
		private bool isCM3D2;

		// Token: 0x040000FC RID: 252
		private byte[][] m_baKuchipakuPattern = new byte[100][];

		// Token: 0x040000FD RID: 253
		private string[] bgArray;

		// Token: 0x040000FE RID: 254
		private string[] poseGroupArray;

		// Token: 0x040000FF RID: 255
		private List<string> strList2 = new List<string>();

		// Token: 0x04000100 RID: 256
		private List<string> strListE = new List<string>();

		// Token: 0x04000101 RID: 257
		private List<string> strListE2 = new List<string>();

		// Token: 0x04000102 RID: 258
		private List<string> strListS = new List<string>();

		// Token: 0x04000103 RID: 259
		private List<string> strListD = new List<string>();

		// Token: 0x04000104 RID: 260
		private string strS = "";

		// Token: 0x04000105 RID: 261
		private int countS;

		// Token: 0x04000106 RID: 262
		private ArrayList groupList;

		// Token: 0x04000107 RID: 263
		private string[] poseArray;

		// Token: 0x04000108 RID: 264
		private string[] bgmArray;

		// Token: 0x04000109 RID: 265
		private string[] parArray;

		// Token: 0x0400010A RID: 266
		private bool isF2;

		// Token: 0x0400010B RID: 267
		private bool isF3;

		// Token: 0x0400010C RID: 268
		private bool isSF1;

		// Token: 0x0400010D RID: 269
		private bool isSF2;

		// Token: 0x0400010E RID: 270
		private bool isSF3;

		// Token: 0x0400010F RID: 271
		private bool isHS1;

		// Token: 0x04000110 RID: 272
		private bool isHS2;

		// Token: 0x04000111 RID: 273
		private bool isHS3;

		// Token: 0x04000112 RID: 274
		private bool isHS4;

		// Token: 0x04000113 RID: 275
		private bool isHS5;

		// Token: 0x04000114 RID: 276
		private bool isHS6;

		// Token: 0x04000115 RID: 277
		private bool isHS7;

		// Token: 0x04000116 RID: 278
		private bool isHS8;

		// Token: 0x04000117 RID: 279
		private bool isHS9;

		// Token: 0x04000118 RID: 280
		private bool isSS;

		// Token: 0x04000119 RID: 281
		private bool isSS1;

		// Token: 0x0400011A RID: 282
		private bool isSS2;

		// Token: 0x0400011B RID: 283
		private bool isSS3;

		// Token: 0x0400011C RID: 284
		private bool isSS4;

		// Token: 0x0400011D RID: 285
		private bool isSS5;

		// Token: 0x0400011E RID: 286
		private bool isSS6;

		// Token: 0x0400011F RID: 287
		private string nameK = "";

		// Token: 0x04000120 RID: 288
		private string nameA = "";

		// Token: 0x04000121 RID: 289
		private string nameS = "";

		// Token: 0x04000122 RID: 290
		private int danceNo1 = 1;

		// Token: 0x04000123 RID: 291
		private int danceNo2 = 2;

		// Token: 0x04000124 RID: 292
		private int danceNo3 = 3;

		// Token: 0x04000125 RID: 293
		private bool isSN1;

		// Token: 0x04000126 RID: 294
		private bool isSN2;

		// Token: 0x04000127 RID: 295
		private bool isSN3;

		// Token: 0x04000128 RID: 296
		private bool isSN4;

		// Token: 0x04000129 RID: 297
		private bool isSN5;

		// Token: 0x0400012A RID: 298
		private bool isSN6;

		// Token: 0x0400012B RID: 299
		private bool isShift;

		// Token: 0x0400012C RID: 300
		private bool isCF1;

		// Token: 0x0400012D RID: 301
		private bool isKHG1;

		// Token: 0x0400012E RID: 302
		private bool isKHG2;

		// Token: 0x0400012F RID: 303
		private bool isKT1;

		// Token: 0x04000130 RID: 304
		private bool isSD1;

		// Token: 0x04000131 RID: 305
		private bool isScene;

		// Token: 0x04000132 RID: 306
		private bool isPanel = true;

		// Token: 0x04000133 RID: 307
		private int sPoseCount;

		// Token: 0x04000134 RID: 308
		private bool existPose;

		// Token: 0x04000135 RID: 309
		private string poseIniStr = "";

		// Token: 0x04000136 RID: 310
		private int[] poseCount = new int[100];

		// Token: 0x04000137 RID: 311
		private int[] delCount = new int[100];

		// Token: 0x04000138 RID: 312
		private int[] delCount2 = new int[100];

		// Token: 0x04000139 RID: 313
		private int maxMaidCnt = 100;

		// Token: 0x0400013A RID: 314
		private int maidCnt;

		// Token: 0x0400013B RID: 315
		private Material m_material;

		// Token: 0x0400013C RID: 316
		private Vector3 cameraIti = new Vector3(0f, 0.9f, 0f);

		// Token: 0x0400013D RID: 317
		private Vector3 cameraIti2;

		// Token: 0x0400013E RID: 318
		private Vector2 cameraItiAngle;

		// Token: 0x0400013F RID: 319
		private float cameraItiDistance = 3f;

		// Token: 0x04000140 RID: 320
		private Vector3[] armL = new Vector3[100];

		// Token: 0x04000141 RID: 321
		private bool isInit;

		// Token: 0x04000142 RID: 322
		private int itemIndexB;

		// Token: 0x04000143 RID: 323
		private int kankyoIndex;

		// Token: 0x04000144 RID: 324
		private int[] poseIndex = new int[100];

		// Token: 0x04000145 RID: 325
		private int[] itemIndex = new int[100];

		// Token: 0x04000146 RID: 326
		private int[] itemIndex2 = new int[100];

		// Token: 0x04000147 RID: 327
		private int[] faceIndex = new int[100];

		// Token: 0x04000148 RID: 328
		private int[] faceBlendIndex = new int[100];

		// Token: 0x04000149 RID: 329
		private int[] headEyeIndex = new int[100];

		// Token: 0x0400014A RID: 330
		private int copyIndex;

		// Token: 0x0400014B RID: 331
		private bool isCopy;

		// Token: 0x0400014C RID: 332
		private bool okFlg;

		// Token: 0x0400014D RID: 333
		private bool isDanceStart1;

		// Token: 0x0400014E RID: 334
		private bool isDanceStart1F;

		// Token: 0x0400014F RID: 335
		private bool isDanceStart1K;

		// Token: 0x04000150 RID: 336
		private bool isDanceStart2;

		// Token: 0x04000151 RID: 337
		private bool isDanceStart2F;

		// Token: 0x04000152 RID: 338
		private bool isDanceStart3;

		// Token: 0x04000153 RID: 339
		private bool isDanceStart3F;

		// Token: 0x04000154 RID: 340
		private bool isDanceStart3K;

		// Token: 0x04000155 RID: 341
		private bool isDanceStart4;

		// Token: 0x04000156 RID: 342
		private bool isDanceStart4F;

		// Token: 0x04000157 RID: 343
		private bool isDanceStart4K;

		// Token: 0x04000158 RID: 344
		private bool isDanceStart5;

		// Token: 0x04000159 RID: 345
		private bool isDanceStart5F;

		// Token: 0x0400015A RID: 346
		private bool isDanceStart5K;

		// Token: 0x0400015B RID: 347
		private bool isDanceStart6;

		// Token: 0x0400015C RID: 348
		private bool isDanceStart6F;

		// Token: 0x0400015D RID: 349
		private bool isDanceStart6K;

		// Token: 0x0400015E RID: 350
		private bool isDanceStart7;

		// Token: 0x0400015F RID: 351
		private bool isDanceStart7F;

		// Token: 0x04000160 RID: 352
		private bool isDanceStart7V;

		// Token: 0x04000161 RID: 353
		private bool isDanceStart8;

		// Token: 0x04000162 RID: 354
		private bool isDanceStart8F;

		// Token: 0x04000163 RID: 355
		private bool isDanceStart8V;

		// Token: 0x04000164 RID: 356
		private bool isDanceStart8P;

		// Token: 0x04000165 RID: 357
		private bool isDanceStart9;

		// Token: 0x04000166 RID: 358
		private bool isDanceStart9F;

		// Token: 0x04000167 RID: 359
		private bool isDanceStart9K;

		// Token: 0x04000168 RID: 360
		private int isDanceStart9Count;

		// Token: 0x04000169 RID: 361
		private bool isDanceStart10;

		// Token: 0x0400016A RID: 362
		private bool isDanceStart10F;

		// Token: 0x0400016B RID: 363
		private bool isDanceStart11;

		// Token: 0x0400016C RID: 364
		private bool isDanceStart11F;

		// Token: 0x0400016D RID: 365
		private bool isDanceStart11V;

		// Token: 0x0400016E RID: 366
		private bool isDanceStart12;

		// Token: 0x0400016F RID: 367
		private bool isDanceStart12F;

		// Token: 0x04000170 RID: 368
		private bool isDanceStart13;

		// Token: 0x04000171 RID: 369
		private bool isDanceStart13F;

		// Token: 0x04000172 RID: 370
		private bool isDanceStart13K;

		// Token: 0x04000173 RID: 371
		private int isDanceStart13Count;

		// Token: 0x04000174 RID: 372
		private bool isDanceStart14;

		// Token: 0x04000175 RID: 373
		private bool isDanceStart14F;

		// Token: 0x04000176 RID: 374
		private bool isDanceStart14V;

		// Token: 0x04000177 RID: 375
		private bool isDanceStart15;

		// Token: 0x04000178 RID: 376
		private bool isDanceStart15F;

		// Token: 0x04000179 RID: 377
		private bool isDanceStart15V;

		// Token: 0x0400017A RID: 378
		private int isDanceStart15Count;

		// Token: 0x0400017B RID: 379
		private float[] danceFace = new float[100];

		// Token: 0x0400017C RID: 380
		private bool isF6;

		// Token: 0x0400017D RID: 381
		private bool isF6S;

		// Token: 0x0400017E RID: 382
		private Vector3[] dancePos = new Vector3[100];

		// Token: 0x0400017F RID: 383
		private Quaternion[] danceRot = new Quaternion[100];

		// Token: 0x04000180 RID: 384
		private int maxPage = 20;

		// Token: 0x04000181 RID: 385
		private float[] danceCheck = new float[10];

		// Token: 0x04000182 RID: 386
		private int danceCheckIndex;

		// Token: 0x04000183 RID: 387
		private int danceWait;

		// Token: 0x04000184 RID: 388
		private int danceCount;

		// Token: 0x04000185 RID: 389
		private int bgmIndex;

		// Token: 0x04000186 RID: 390
		private int effectIndex;

		// Token: 0x04000187 RID: 391
		private float cubeSize = 0.12f;

		// Token: 0x04000188 RID: 392
		private List<int> doguIndex = new List<int>();

		// Token: 0x04000189 RID: 393
		private int doguSelectIndex;

		// Token: 0x0400018A RID: 394
		private List<GameObject> doguObject = new List<GameObject>();

		// Token: 0x0400018B RID: 395
		private List<GameObject> doguBObject = new List<GameObject>();

		// Token: 0x0400018C RID: 396
		private GameObject kami;

		// Token: 0x0400018D RID: 397
		private bool allowUpdate;

		// Token: 0x0400018E RID: 398
		private bool moveBg;

		// Token: 0x0400018F RID: 399
		private int bgIndex;

		// Token: 0x04000190 RID: 400
		private int bgIndexB;

		// Token: 0x04000191 RID: 401
		private int slotIndex;

		// Token: 0x04000192 RID: 402
		private int wearIndex;

		// Token: 0x04000193 RID: 403
		private int bgIndex6;

		// Token: 0x04000194 RID: 404
		private string[] FaceName = new string[100];

		// Token: 0x04000195 RID: 405
		private string[] FaceName2 = new string[100];

		// Token: 0x04000196 RID: 406
		private string[] FaceName3 = new string[100];

		// Token: 0x04000197 RID: 407
		private float[] FaceTime = new float[100];

		// Token: 0x04000198 RID: 408
		private bool keyFlg;

		// Token: 0x04000199 RID: 409
		private bool keyFlg2;

		// Token: 0x0400019A RID: 410
		private bool[] xFlg = new bool[100];

		// Token: 0x0400019B RID: 411
		private bool[] zFlg = new bool[100];

		// Token: 0x0400019C RID: 412
		private bool[] cafeFlg = new bool[100];

		// Token: 0x0400019D RID: 413
		private int[] cafeCount = new int[100];

		// Token: 0x0400019E RID: 414
		private bool[] isBone = new bool[100];

		// Token: 0x0400019F RID: 415
		private bool[] isBoneN = new bool[100];

		// Token: 0x040001A0 RID: 416
		private bool[] isChange = new bool[100];

		// Token: 0x040001A1 RID: 417
		private List<UICamera> ui_cam_hide_list_ = new List<UICamera>();

		// Token: 0x040001A2 RID: 418
		private bool isScreen;

		// Token: 0x040001A3 RID: 419
		private bool isScreen2;

		// Token: 0x040001A4 RID: 420
		private bool isGui;

		// Token: 0x040001A5 RID: 421
		private List<TBodySkin>[] goSlot = new List<TBodySkin>[400];

		// Token: 0x040001A6 RID: 422
		private List<TBodyHit>[] bodyHit = new List<TBodyHit>[400];

		// Token: 0x040001A7 RID: 423
		private Vector3[] eyeL = new Vector3[400];

		// Token: 0x040001A8 RID: 424
		private Vector3[] eyeR = new Vector3[400];

		// Token: 0x040001A9 RID: 425
		private bool[] shodaiFlg = new bool[400];

		// Token: 0x040001AA RID: 426
		private Vector3 softG;

		// Token: 0x040001AB RID: 427
		private Vector3 softG2;

		// Token: 0x040001AC RID: 428
		private UltimateOrbitCamera m_UOCamera;

		// Token: 0x040001AD RID: 429
		private GUIContent[] comboBoxList;

		// Token: 0x040001AE RID: 430
		private ComboBox2 comboBoxControl = new ComboBox2();

		// Token: 0x040001AF RID: 431
		private GUIStyle listStyle = new GUIStyle();

		// Token: 0x040001B0 RID: 432
		private GUIStyle listStyle2 = new GUIStyle();

		// Token: 0x040001B1 RID: 433
		private GUIStyle listStyle3 = new GUIStyle();

		// Token: 0x040001B2 RID: 434
		private GUIStyle listStyle4 = new GUIStyle();

		// Token: 0x040001B3 RID: 435
		private ComboBox2 faceCombo = new ComboBox2();

		// Token: 0x040001B4 RID: 436
		private GUIContent[] faceComboList;

		// Token: 0x040001B5 RID: 437
		private bool faceInitFlg;

		// Token: 0x040001B6 RID: 438
		private bool[] isPose = new bool[100];

		// Token: 0x040001B7 RID: 439
		private ComboBox2 poseCombo = new ComboBox2();

		// Token: 0x040001B8 RID: 440
		private GUIContent[] poseComboList;

		// Token: 0x040001B9 RID: 441
		private bool poseInitFlg;

		// Token: 0x040001BA RID: 442
		private bool kankyoInitFlg;

		// Token: 0x040001BB RID: 443
		private bool kankyo2InitFlg;

		// Token: 0x040001BC RID: 444
		private bool isPoseInit;

		// Token: 0x040001BD RID: 445
		private int poseGroupIndex;

		// Token: 0x040001BE RID: 446
		private bool[] isPoseIti = new bool[100];

		// Token: 0x040001BF RID: 447
		private Vector3[] poseIti = new Vector3[100];

		// Token: 0x040001C0 RID: 448
		private ComboBox2 poseGroupCombo = new ComboBox2();

		// Token: 0x040001C1 RID: 449
		private GUIContent[] poseGroupComboList;

		// Token: 0x040001C2 RID: 450
		private ComboBox2 itemCombo = new ComboBox2();

		// Token: 0x040001C3 RID: 451
		private GUIContent[] itemComboList;

		// Token: 0x040001C4 RID: 452
		private ComboBox2 bgmCombo = new ComboBox2();

		// Token: 0x040001C5 RID: 453
		private GUIContent[] bgmComboList;

		// Token: 0x040001C6 RID: 454
		private ComboBox2 itemCombo2 = new ComboBox2();

		// Token: 0x040001C7 RID: 455
		private GUIContent[] itemCombo2List;

		// Token: 0x040001C8 RID: 456
		private ComboBox2 bgCombo2 = new ComboBox2();

		// Token: 0x040001C9 RID: 457
		private GUIContent[] bgCombo2List;

		// Token: 0x040001CA RID: 458
		private ComboBox2 bgCombo = new ComboBox2();

		// Token: 0x040001CB RID: 459
		private GUIContent[] bgComboList;

		// Token: 0x040001CC RID: 460
		private ComboBox2 slotCombo = new ComboBox2();

		// Token: 0x040001CD RID: 461
		private GUIContent[] slotComboList;

		// Token: 0x040001CE RID: 462
		private ComboBox2 doguCombo = new ComboBox2();

		// Token: 0x040001CF RID: 463
		private GUIContent[] doguComboList;

		// Token: 0x040001D0 RID: 464
		private ComboBox2 parCombo = new ComboBox2();

		// Token: 0x040001D1 RID: 465
		private GUIContent[] parComboList;

		// Token: 0x040001D2 RID: 466
		private ComboBox2 lightCombo = new ComboBox2();

		// Token: 0x040001D3 RID: 467
		private GUIContent[] lightComboList;

		// Token: 0x040001D4 RID: 468
		private ComboBox2 kankyoCombo = new ComboBox2();

		// Token: 0x040001D5 RID: 469
		private GUIContent[] kankyoComboList;

		// Token: 0x040001D6 RID: 470
		private ArrayList selectList;

		// Token: 0x040001D7 RID: 471
		private Maid editSelectMaid;

		// Token: 0x040001D8 RID: 472
		private int F6cnt;

		// Token: 0x040001D9 RID: 473
		private bool[] isStop = new bool[100];

		// Token: 0x040001DA RID: 474
		private Maid[] maidArray = new Maid[100];

		// Token: 0x040001DB RID: 475
		private string[] danceName = new string[100];

		// Token: 0x040001DC RID: 476
		private KeyCode[] keyArray = new KeyCode[]
		{
			KeyCode.Alpha1,
			KeyCode.Alpha2,
			KeyCode.Alpha3,
			KeyCode.Alpha4,
			KeyCode.Alpha5,
			KeyCode.Alpha6,
			KeyCode.Alpha7
		};

		// Token: 0x040001DD RID: 477
		private bool[] idoFlg = new bool[100];

		// Token: 0x040001DE RID: 478
		private bool idoFlg2;

		// Token: 0x040001DF RID: 479
		private bool[] isIK = new bool[100];

		// Token: 0x040001E0 RID: 480
		private bool[] isLock = new bool[100];

		// Token: 0x040001E1 RID: 481
		private bool isIKAll;

		// Token: 0x040001E2 RID: 482
		private bool faceFlg;

		// Token: 0x040001E3 RID: 483
		private bool faceFlg2;

		// Token: 0x040001E4 RID: 484
		private bool poseFlg;

		// Token: 0x040001E5 RID: 485
		private bool unLockFlg;

		// Token: 0x040001E6 RID: 486
		private bool sceneFlg;

		// Token: 0x040001E7 RID: 487
		private bool kankyoFlg;

		// Token: 0x040001E8 RID: 488
		private bool kankyo2Flg;

		// Token: 0x040001E9 RID: 489
		private bool isDanceStop;

		// Token: 0x040001EA RID: 490
		private bool[] isFace = new bool[100];

		// Token: 0x040001EB RID: 491
		private bool[] isMabataki = new bool[100];

		// Token: 0x040001EC RID: 492
		private bool[] mekure1 = new bool[100];

		// Token: 0x040001ED RID: 493
		private bool[] mekure2 = new bool[100];

		// Token: 0x040001EE RID: 494
		private bool[] zurasi = new bool[100];

		// Token: 0x040001EF RID: 495
		private bool[] mekure1n = new bool[100];

		// Token: 0x040001F0 RID: 496
		private bool[] mekure2n = new bool[100];

		// Token: 0x040001F1 RID: 497
		private bool[] zurasin = new bool[100];

		// Token: 0x040001F2 RID: 498
		private bool[] hanten = new bool[100];

		// Token: 0x040001F3 RID: 499
		private bool[] hantenn = new bool[100];

		// Token: 0x040001F4 RID: 500
		private bool isHanten;

		// Token: 0x040001F5 RID: 501
		private bool[] kotei = new bool[100];

		// Token: 0x040001F6 RID: 502
		private bool[] voice1 = new bool[100];

		// Token: 0x040001F7 RID: 503
		private bool[] voice1n = new bool[100];

		// Token: 0x040001F8 RID: 504
		private bool[] voice2 = new bool[100];

		// Token: 0x040001F9 RID: 505
		private bool[] voice2n = new bool[100];

		// Token: 0x040001FA RID: 506
		private int[] pHandL = new int[100];

		// Token: 0x040001FB RID: 507
		private int[] pHandR = new int[100];

		// Token: 0x040001FC RID: 508
		private bool[] isLook = new bool[100];

		// Token: 0x040001FD RID: 509
		private float[] lookX = new float[100];

		// Token: 0x040001FE RID: 510
		private float[] lookY = new float[100];

		// Token: 0x040001FF RID: 511
		private bool[] isLookn = new bool[100];

		// Token: 0x04000200 RID: 512
		private float[] lookXn = new float[100];

		// Token: 0x04000201 RID: 513
		private float[] lookYn = new float[100];

		// Token: 0x04000202 RID: 514
		private bool isPoseEdit;

		// Token: 0x04000203 RID: 515
		private bool isFaceEdit;

		// Token: 0x04000204 RID: 516
		private bool isNamida;

		// Token: 0x04000205 RID: 517
		private bool isTear1;

		// Token: 0x04000206 RID: 518
		private bool isTear2;

		// Token: 0x04000207 RID: 519
		private bool isTear3;

		// Token: 0x04000208 RID: 520
		private bool isShock;

		// Token: 0x04000209 RID: 521
		private bool isYodare;

		// Token: 0x0400020A RID: 522
		private bool isHoho;

		// Token: 0x0400020B RID: 523
		private bool isHoho2;

		// Token: 0x0400020C RID: 524
		private bool isHohos;

		// Token: 0x0400020D RID: 525
		private bool isHohol;

		// Token: 0x0400020E RID: 526
		private bool isFaceInit;

		// Token: 0x0400020F RID: 527
		private bool isNamidaH;

		// Token: 0x04000210 RID: 528
		private bool isSekimenH;

		// Token: 0x04000211 RID: 529
		private bool isHohoH;

		// Token: 0x04000212 RID: 530
		private bool isHenkou;

		// Token: 0x04000213 RID: 531
		private bool isWear;

		// Token: 0x04000214 RID: 532
		private bool isSkirt;

		// Token: 0x04000215 RID: 533
		private bool isBra;

		// Token: 0x04000216 RID: 534
		private bool isPanz;

		// Token: 0x04000217 RID: 535
		private bool isMaid;

		// Token: 0x04000218 RID: 536
		private bool isMekure1;

		// Token: 0x04000219 RID: 537
		private bool isMekure2;

		// Token: 0x0400021A RID: 538
		private bool isZurasi;

		// Token: 0x0400021B RID: 539
		private bool isMekure1a;

		// Token: 0x0400021C RID: 540
		private bool isMekure2a;

		// Token: 0x0400021D RID: 541
		private bool isZurasia;

		// Token: 0x0400021E RID: 542
		private int mekureCount;

		// Token: 0x0400021F RID: 543
		private bool isHeadset;

		// Token: 0x04000220 RID: 544
		private bool isAccUde;

		// Token: 0x04000221 RID: 545
		private bool isStkg;

		// Token: 0x04000222 RID: 546
		private bool isShoes;

		// Token: 0x04000223 RID: 547
		private bool isGlove;

		// Token: 0x04000224 RID: 548
		private bool isMegane;

		// Token: 0x04000225 RID: 549
		private bool isAccSenaka;

		// Token: 0x04000226 RID: 550
		private bool isBloom;

		// Token: 0x04000227 RID: 551
		private bool isBloom2;

		// Token: 0x04000228 RID: 552
		private bool isBloomA;

		// Token: 0x04000229 RID: 553
		private bool isDepth;

		// Token: 0x0400022A RID: 554
		private bool isDepthA;

		// Token: 0x0400022B RID: 555
		private bool isFog;

		// Token: 0x0400022C RID: 556
		private bool isSepia;

		// Token: 0x0400022D RID: 557
		private bool isSepian;

		// Token: 0x0400022E RID: 558
		private bool isBlur;

		// Token: 0x0400022F RID: 559
		private bool isBlur2;

		// Token: 0x04000230 RID: 560
		private bool isCube;

		// Token: 0x04000231 RID: 561
		private bool isCube2;

		// Token: 0x04000232 RID: 562
		private bool isCube3;

		// Token: 0x04000233 RID: 563
		private bool isCube4;

		// Token: 0x04000234 RID: 564
		private bool isKamiyure;

		// Token: 0x04000235 RID: 565
		private bool isSkirtyure;

		// Token: 0x04000236 RID: 566
		private bool isHairSetting;

		// Token: 0x04000237 RID: 567
		private bool isSkirtSetting;

		// Token: 0x04000238 RID: 568
		private bool isVRScroll = true;

		// Token: 0x04000239 RID: 569
		private bool isCubeS;

		// Token: 0x0400023A RID: 570
		private bool isBloomS;

		// Token: 0x0400023B RID: 571
		private bool isDepthS;

		// Token: 0x0400023C RID: 572
		private bool isBlurS;

		// Token: 0x0400023D RID: 573
		private bool isFogS;

		// Token: 0x0400023E RID: 574
		private float bloom1;

		// Token: 0x0400023F RID: 575
		private float bloom2;

		// Token: 0x04000240 RID: 576
		private float bloom3;

		// Token: 0x04000241 RID: 577
		private float bloom4;

		// Token: 0x04000242 RID: 578
		private float bloom5;

		// Token: 0x04000243 RID: 579
		private float blur1;

		// Token: 0x04000244 RID: 580
		private float blur2;

		// Token: 0x04000245 RID: 581
		private float blur3;

		// Token: 0x04000246 RID: 582
		private float blur4;

		// Token: 0x04000247 RID: 583
		private float depth1;

		// Token: 0x04000248 RID: 584
		private float depth2;

		// Token: 0x04000249 RID: 585
		private float depth3;

		// Token: 0x0400024A RID: 586
		private float depth4;

		// Token: 0x0400024B RID: 587
		private float fog1;

		// Token: 0x0400024C RID: 588
		private float fog2;

		// Token: 0x0400024D RID: 589
		private float fog3;

		// Token: 0x0400024E RID: 590
		private float fog4;

		// Token: 0x0400024F RID: 591
		private float fog5;

		// Token: 0x04000250 RID: 592
		private float fog6;

		// Token: 0x04000251 RID: 593
		private float fog7;

		// Token: 0x04000252 RID: 594
		private float bokashi;

		// Token: 0x04000253 RID: 595
		private float kamiyure;

		// Token: 0x04000254 RID: 596
		private float kamiyure2;

		// Token: 0x04000255 RID: 597
		private float kamiyure3;

		// Token: 0x04000256 RID: 598
		private float kamiyure4;

		// Token: 0x04000257 RID: 599
		private float skirtyure2;

		// Token: 0x04000258 RID: 600
		private float skirtyure3;

		// Token: 0x04000259 RID: 601
		private float skirtyure4;

		// Token: 0x0400025A RID: 602
		private float eyeclose;

		// Token: 0x0400025B RID: 603
		private float eyeclose2;

		// Token: 0x0400025C RID: 604
		private float eyeclose3;

		// Token: 0x0400025D RID: 605
		private float eyeclose6;

		// Token: 0x0400025E RID: 606
		private float hitomih;

		// Token: 0x0400025F RID: 607
		private float hitomis;

		// Token: 0x04000260 RID: 608
		private float mayuha;

		// Token: 0x04000261 RID: 609
		private float mayuup;

		// Token: 0x04000262 RID: 610
		private float mayuv;

		// Token: 0x04000263 RID: 611
		private float mayuvhalf;

		// Token: 0x04000264 RID: 612
		private float moutha;

		// Token: 0x04000265 RID: 613
		private float mouths;

		// Token: 0x04000266 RID: 614
		private float mouthdw;

		// Token: 0x04000267 RID: 615
		private float mouthup;

		// Token: 0x04000268 RID: 616
		private float tangout;

		// Token: 0x04000269 RID: 617
		private float tangup;

		// Token: 0x0400026A RID: 618
		private float eyebig;

		// Token: 0x0400026B RID: 619
		private float eyeclose5;

		// Token: 0x0400026C RID: 620
		private float mayuw;

		// Token: 0x0400026D RID: 621
		private float mouthhe;

		// Token: 0x0400026E RID: 622
		private float mouthc;

		// Token: 0x0400026F RID: 623
		private float mouthi;

		// Token: 0x04000270 RID: 624
		private float mouthuphalf;

		// Token: 0x04000271 RID: 625
		private float tangopen;

		// Token: 0x04000272 RID: 626
		private bool isToothoff;

		// Token: 0x04000273 RID: 627
		private bool isNosefook;

		// Token: 0x04000274 RID: 628
		private int selectMaidIndex;

		// Token: 0x04000275 RID: 629
		private bool isCombo;

		// Token: 0x04000276 RID: 630
		private bool isCombo2;

		// Token: 0x04000277 RID: 631
		private bool isCombo3;

		// Token: 0x04000278 RID: 632
		private bool hFlg;

		// Token: 0x04000279 RID: 633
		private bool h2Flg;

		// Token: 0x0400027A RID: 634
		private bool mFlg;

		// Token: 0x0400027B RID: 635
		private bool fFlg;

		// Token: 0x0400027C RID: 636
		private bool qFlg;

		// Token: 0x0400027D RID: 637
		private bool sFlg;

		// Token: 0x0400027E RID: 638
		private bool wFlg;

		// Token: 0x0400027F RID: 639
		private bool atFlg;

		// Token: 0x04000280 RID: 640
		private bool escFlg;

		// Token: 0x04000281 RID: 641
		private bool yFlg;

		// Token: 0x04000282 RID: 642
		private bool isVP;

		// Token: 0x04000283 RID: 643
		private bool isPP;

		// Token: 0x04000284 RID: 644
		private bool isPP2;

		// Token: 0x04000285 RID: 645
		private bool isPP3;

		// Token: 0x04000286 RID: 646
		private bool isVA;

		// Token: 0x04000287 RID: 647
		private bool isKA;

		// Token: 0x04000288 RID: 648
		private bool isKA2;

		// Token: 0x04000289 RID: 649
		private bool isBG1;

		// Token: 0x0400028A RID: 650
		private bool isBG2;

		// Token: 0x0400028B RID: 651
		private bool isBG3;

		// Token: 0x0400028C RID: 652
		private bool isBG4;

		// Token: 0x0400028D RID: 653
		private CameraMain mainCamera;

		// Token: 0x0400028E RID: 654
		private Transform mainCameraTransform;

		// Token: 0x0400028F RID: 655
		private Transform bg;

		// Token: 0x04000290 RID: 656
		private GameObject bgObject;

		// Token: 0x04000291 RID: 657
		private bool isDance;

		// Token: 0x04000292 RID: 658
		private List<int> lightIndex = new List<int>();

		// Token: 0x04000293 RID: 659
		private List<float> lightColorR = new List<float>();

		// Token: 0x04000294 RID: 660
		private List<float> lightColorG = new List<float>();

		// Token: 0x04000295 RID: 661
		private List<float> lightColorB = new List<float>();

		// Token: 0x04000296 RID: 662
		private List<float> lightX = new List<float>();

		// Token: 0x04000297 RID: 663
		private List<float> lightY = new List<float>();

		// Token: 0x04000298 RID: 664
		private List<float> lightAkarusa = new List<float>();

		// Token: 0x04000299 RID: 665
		private List<float> lightKage = new List<float>();

		// Token: 0x0400029A RID: 666
		private List<float> lightRange = new List<float>();

		// Token: 0x0400029B RID: 667
		private List<GameObject> lightList = new List<GameObject>();

		// Token: 0x0400029C RID: 668
		private List<int> doguList = new List<int>();

		// Token: 0x0400029D RID: 669
		private List<int> parList = new List<int>();

		// Token: 0x0400029E RID: 670
		private int doguCnt;

		// Token: 0x0400029F RID: 671
		private float lightX6;

		// Token: 0x040002A0 RID: 672
		private float lightY6;

		// Token: 0x040002A1 RID: 673
		private int selectLightIndex;

		// Token: 0x040002A2 RID: 674
		private int doguBIndex;

		// Token: 0x040002A3 RID: 675
		private int parIndex;

		// Token: 0x040002A4 RID: 676
		private int sceneLevel;

		// Token: 0x040002A5 RID: 677
		private bool isVR;

		// Token: 0x040002A6 RID: 678
		private bool isVR2 = true;

		// Token: 0x040002A7 RID: 679
		private bool isYobidashi;

		// Token: 0x040002A8 RID: 680
		private bool isFadeOut;

		// Token: 0x040002A9 RID: 681
		private bool isBusyInit;

		// Token: 0x040002AA RID: 682
		private bool isHaiti;

		// Token: 0x040002AB RID: 683
		private bool isF7;

		// Token: 0x040002AC RID: 684
		private bool isF7S;

		// Token: 0x040002AD RID: 685
		private bool isF7SInit;

		// Token: 0x040002AE RID: 686
		private bool isGuiInit;

		// Token: 0x040002AF RID: 687
		private float speed = 1f;

		// Token: 0x040002B0 RID: 688
		private int saveScene;

		// Token: 0x040002B1 RID: 689
		private int saveScene2;

		// Token: 0x040002B2 RID: 690
		private int loadScene;

		// Token: 0x040002B3 RID: 691
		private string[] loadPose = new string[100];

		// Token: 0x040002B4 RID: 692
		private bool[] isLoadPose = new bool[100];

		// Token: 0x040002B5 RID: 693
		private int[] loadCount = new int[100];

		// Token: 0x040002B6 RID: 694
		private bool kankyoLoadFlg;

		// Token: 0x040002B7 RID: 695
		private bool nameFlg;

		// Token: 0x040002B8 RID: 696
		private int kankyoMax;

		// Token: 0x040002B9 RID: 697
		private string[] date = new string[10];

		// Token: 0x040002BA RID: 698
		private string[] ninzu = new string[10];

		// Token: 0x040002BB RID: 699
		private int ikMaid;

		// Token: 0x040002BC RID: 700
		private int ikBui;

		// Token: 0x040002BD RID: 701
		private int[] ikMode = new int[100];

		// Token: 0x040002BE RID: 702
		private int[] ikModeOld = new int[100];

		// Token: 0x040002BF RID: 703
		private int ikMode2;

		// Token: 0x040002C0 RID: 704
		private int ikModeOld2;

		// Token: 0x040002C1 RID: 705
		private int editMaid;

		// Token: 0x040002C2 RID: 706
		private bool isScript;

		// Token: 0x040002C3 RID: 707
		private Stopwatch sw;

		// Token: 0x040002C4 RID: 708
		private AudioSource audioSourceBgm;

		// Token: 0x040002C5 RID: 709
		private MouseDrag6[] mDogu = new MouseDrag6[999];

		// Token: 0x040002C6 RID: 710
		private GameObject[] gDogu = new GameObject[999];

		// Token: 0x040002C7 RID: 711
		private MouseDrag6 mBg = new MouseDrag6();

		// Token: 0x040002C8 RID: 712
		private GameObject gBg = new GameObject();

		// Token: 0x040002C9 RID: 713
		private MouseDrag6[] mLight = new MouseDrag6[999];

		// Token: 0x040002CA RID: 714
		private GameObject[] gLight = new GameObject[999];

		// Token: 0x040002CB RID: 715
		private IK ikLeftArm = new IK();

		// Token: 0x040002CC RID: 716
		private MouseDrag5[] mHead2 = new MouseDrag5[100];

		// Token: 0x040002CD RID: 717
		private MouseDrag5[] mMaid2 = new MouseDrag5[100];

		// Token: 0x040002CE RID: 718
		private MouseDrag2[] mMaid = new MouseDrag2[100];

		// Token: 0x040002CF RID: 719
		private GameObject[] gMaid = new GameObject[100];

		// Token: 0x040002D0 RID: 720
		private MouseDrag2[] mMaidC = new MouseDrag2[100];

		// Token: 0x040002D1 RID: 721
		private GameObject[] gMaidC = new GameObject[100];

		// Token: 0x040002D2 RID: 722
		private MouseDrag3[] mHead = new MouseDrag3[100];

		// Token: 0x040002D3 RID: 723
		private GameObject[] gHead = new GameObject[100];

		// Token: 0x040002D4 RID: 724
		private GameObject[] gMaid2 = new GameObject[100];

		// Token: 0x040002D5 RID: 725
		private GameObject[] gHead2 = new GameObject[100];

		// Token: 0x040002D6 RID: 726
		private MouseDrag3[] mJotai = new MouseDrag3[100];

		// Token: 0x040002D7 RID: 727
		private GameObject[] gJotai = new GameObject[100];

		// Token: 0x040002D8 RID: 728
		private MouseDrag3[] mKahuku = new MouseDrag3[100];

		// Token: 0x040002D9 RID: 729
		private GameObject[] gKahuku = new GameObject[100];

		// Token: 0x040002DA RID: 730
		private GameObject[] gIKMuneL = new GameObject[100];

		// Token: 0x040002DB RID: 731
		private MouseDrag[] mIKMuneL = new MouseDrag[100];

		// Token: 0x040002DC RID: 732
		private GameObject[] gIKMuneR = new GameObject[100];

		// Token: 0x040002DD RID: 733
		private MouseDrag[] mIKMuneR = new MouseDrag[100];

		// Token: 0x040002DE RID: 734
		private Vector3[] vIKMuneL = new Vector3[100];

		// Token: 0x040002DF RID: 735
		private Vector3[] vIKMuneR = new Vector3[100];

		// Token: 0x040002E0 RID: 736
		private Vector3[] vIKMuneLSub = new Vector3[100];

		// Token: 0x040002E1 RID: 737
		private Vector3[] vIKMuneRSub = new Vector3[100];

		// Token: 0x040002E2 RID: 738
		private int[] haraCount = new int[100];

		// Token: 0x040002E3 RID: 739
		private Vector3[] haraPosition = new Vector3[100];

		// Token: 0x040002E4 RID: 740
		private bool[] muneIKL = new bool[100];

		// Token: 0x040002E5 RID: 741
		private bool[] muneIKR = new bool[100];

		// Token: 0x040002E6 RID: 742
		private GameObject[] gIKHandL = new GameObject[100];

		// Token: 0x040002E7 RID: 743
		private MouseDrag4[] mIKHandL = new MouseDrag4[100];

		// Token: 0x040002E8 RID: 744
		private GameObject[] gIKHandR = new GameObject[100];

		// Token: 0x040002E9 RID: 745
		private MouseDrag4[] mIKHandR = new MouseDrag4[100];

		// Token: 0x040002EA RID: 746
		private GameObject[] gHandL = new GameObject[100];

		// Token: 0x040002EB RID: 747
		private MouseDrag[] mHandL = new MouseDrag[100];

		// Token: 0x040002EC RID: 748
		private GameObject[] gArmL = new GameObject[100];

		// Token: 0x040002ED RID: 749
		private MouseDrag[] mArmL = new MouseDrag[100];

		// Token: 0x040002EE RID: 750
		private GameObject[] gFootL = new GameObject[100];

		// Token: 0x040002EF RID: 751
		private MouseDrag[] mFootL = new MouseDrag[100];

		// Token: 0x040002F0 RID: 752
		private GameObject[] gHizaL = new GameObject[100];

		// Token: 0x040002F1 RID: 753
		private MouseDrag[] mHizaL = new MouseDrag[100];

		// Token: 0x040002F2 RID: 754
		private GameObject[] gHandR = new GameObject[100];

		// Token: 0x040002F3 RID: 755
		private MouseDrag[] mHandR = new MouseDrag[100];

		// Token: 0x040002F4 RID: 756
		private GameObject[] gArmR = new GameObject[100];

		// Token: 0x040002F5 RID: 757
		private MouseDrag[] mArmR = new MouseDrag[100];

		// Token: 0x040002F6 RID: 758
		private GameObject[] gFootR = new GameObject[100];

		// Token: 0x040002F7 RID: 759
		private MouseDrag[] mFootR = new MouseDrag[100];

		// Token: 0x040002F8 RID: 760
		private GameObject[] gHizaR = new GameObject[100];

		// Token: 0x040002F9 RID: 761
		private MouseDrag[] mHizaR = new MouseDrag[100];

		// Token: 0x040002FA RID: 762
		private GameObject[] gClavicleL = new GameObject[100];

		// Token: 0x040002FB RID: 763
		private MouseDrag[] mClavicleL = new MouseDrag[100];

		// Token: 0x040002FC RID: 764
		private GameObject[] gClavicleR = new GameObject[100];

		// Token: 0x040002FD RID: 765
		private MouseDrag[] mClavicleR = new MouseDrag[100];

		// Token: 0x040002FE RID: 766
		private GameObject[,] gFinger = new GameObject[100, 30];

		// Token: 0x040002FF RID: 767
		private MouseDrag[,] mFinger = new MouseDrag[100, 30];

		// Token: 0x04000300 RID: 768
		private GameObject[,] gFinger2 = new GameObject[100, 12];

		// Token: 0x04000301 RID: 769
		private MouseDrag[,] mFinger2 = new MouseDrag[100, 12];

		// Token: 0x04000302 RID: 770
		private GameObject[] gNeck = new GameObject[100];

		// Token: 0x04000303 RID: 771
		private MouseDrag3[] mNeck = new MouseDrag3[100];

		// Token: 0x04000304 RID: 772
		private GameObject[] gSpine = new GameObject[100];

		// Token: 0x04000305 RID: 773
		private MouseDrag3[] mSpine = new MouseDrag3[100];

		// Token: 0x04000306 RID: 774
		private GameObject[] gSpine0a = new GameObject[100];

		// Token: 0x04000307 RID: 775
		private MouseDrag3[] mSpine0a = new MouseDrag3[100];

		// Token: 0x04000308 RID: 776
		private GameObject[] gSpine1 = new GameObject[100];

		// Token: 0x04000309 RID: 777
		private MouseDrag3[] mSpine1 = new MouseDrag3[100];

		// Token: 0x0400030A RID: 778
		private GameObject[] gSpine1a = new GameObject[100];

		// Token: 0x0400030B RID: 779
		private MouseDrag3[] mSpine1a = new MouseDrag3[100];

		// Token: 0x0400030C RID: 780
		private GameObject[] gPelvis = new GameObject[100];

		// Token: 0x0400030D RID: 781
		private MouseDrag3[] mPelvis = new MouseDrag3[100];

		// Token: 0x0400030E RID: 782
		private Transform HandL;

		// Token: 0x0400030F RID: 783
		private Transform UpperArmL;

		// Token: 0x04000310 RID: 784
		private Transform ForearmL;

		// Token: 0x04000311 RID: 785
		private Transform Head;

		// Token: 0x04000312 RID: 786
		private Transform Spine;

		// Token: 0x04000313 RID: 787
		private Transform Spine0a;

		// Token: 0x04000314 RID: 788
		private Transform Spine1;

		// Token: 0x04000315 RID: 789
		private Transform Spine1a;

		// Token: 0x04000316 RID: 790
		private Transform Pelvis;

		// Token: 0x04000317 RID: 791
		private Transform Clavicle;

		// Token: 0x04000318 RID: 792
		private Transform IK_hand;

		// Token: 0x04000319 RID: 793
		private Transform[] IKHandL = new Transform[100];

		// Token: 0x0400031A RID: 794
		private Transform[] IKHandR = new Transform[100];

		// Token: 0x0400031B RID: 795
		private Transform[] IKMuneL = new Transform[100];

		// Token: 0x0400031C RID: 796
		private Transform[] IKMuneR = new Transform[100];

		// Token: 0x0400031D RID: 797
		private Transform[] IKMuneLSub = new Transform[100];

		// Token: 0x0400031E RID: 798
		private Transform[] IKMuneRSub = new Transform[100];

		// Token: 0x0400031F RID: 799
		private Transform[] Neck = new Transform[100];

		// Token: 0x04000320 RID: 800
		private Transform[] Pelvis2 = new Transform[100];

		// Token: 0x04000321 RID: 801
		private Transform[] Spine12 = new Transform[100];

		// Token: 0x04000322 RID: 802
		private Transform[] Spine0a2 = new Transform[100];

		// Token: 0x04000323 RID: 803
		private Transform[] Spine2 = new Transform[100];

		// Token: 0x04000324 RID: 804
		private Transform[] Spine1a2 = new Transform[100];

		// Token: 0x04000325 RID: 805
		private Transform[] Head1 = new Transform[100];

		// Token: 0x04000326 RID: 806
		private Transform[] Head2 = new Transform[100];

		// Token: 0x04000327 RID: 807
		private Transform[] Head3 = new Transform[100];

		// Token: 0x04000328 RID: 808
		private Transform[] HandL1 = new Transform[100];

		// Token: 0x04000329 RID: 809
		private Transform[] UpperArmL1 = new Transform[100];

		// Token: 0x0400032A RID: 810
		private Transform[] ForearmL1 = new Transform[100];

		// Token: 0x0400032B RID: 811
		private Transform[] HandR1 = new Transform[100];

		// Token: 0x0400032C RID: 812
		private Transform[] UpperArmR1 = new Transform[100];

		// Token: 0x0400032D RID: 813
		private Transform[] ForearmR1 = new Transform[100];

		// Token: 0x0400032E RID: 814
		private Transform[] HandL2 = new Transform[100];

		// Token: 0x0400032F RID: 815
		private Transform[] UpperArmL2 = new Transform[100];

		// Token: 0x04000330 RID: 816
		private Transform[] ForearmL2 = new Transform[100];

		// Token: 0x04000331 RID: 817
		private Transform[] HandR2 = new Transform[100];

		// Token: 0x04000332 RID: 818
		private Transform[] UpperArmR2 = new Transform[100];

		// Token: 0x04000333 RID: 819
		private Transform[] ForearmR2 = new Transform[100];

		// Token: 0x04000334 RID: 820
		private Transform[] ClavicleL1 = new Transform[100];

		// Token: 0x04000335 RID: 821
		private Transform[] ClavicleR1 = new Transform[100];

		// Token: 0x04000336 RID: 822
		private Transform[,] Finger = new Transform[100, 40];

		// Token: 0x04000337 RID: 823
		private Transform[,] Finger2 = new Transform[100, 18];

		// Token: 0x04000338 RID: 824
		private bool isSavePose;

		// Token: 0x04000339 RID: 825
		private bool isSavePose2;

		// Token: 0x0400033A RID: 826
		private bool isSavePose3;

		// Token: 0x0400033B RID: 827
		private bool isSavePose4;

		// Token: 0x0400033C RID: 828
		private Vector3 bipPosition;

		// Token: 0x0400033D RID: 829
		private Vector3 bipRotation;

		// Token: 0x0400033E RID: 830
		private bool yotogiFlg;

		// Token: 0x0400033F RID: 831
		private bool isShosai;

		// Token: 0x04000340 RID: 832
		private bool[] isEdit = new bool[100];

		// Token: 0x04000341 RID: 833
		private int isEditNo;

		// Token: 0x04000342 RID: 834
		private bool[] isLoadFace = new bool[100];

		// Token: 0x04000343 RID: 835
		private bool isDanceChu;

		// Token: 0x04000344 RID: 836
		private bool isMessage;

		// Token: 0x04000345 RID: 837
		private GameObject editUI;

		// Token: 0x04000346 RID: 838
		private bool isPref;

		// Token: 0x04000347 RID: 839
		private string thum_file_path_;

		// Token: 0x04000348 RID: 840
		private string thum_byte_to_base64_ = string.Empty;

		// Token: 0x04000349 RID: 841
		private GameObject cameraObj;

		// Token: 0x0400034A RID: 842
		private Camera subcamera;

		// Token: 0x0400034B RID: 843
		private DepthOfFieldScatter depth_field_ = GameMain.Instance.MainCamera.GetComponent<DepthOfFieldScatter>();

		// Token: 0x0400034C RID: 844
		private GlobalFog fog_;

		// Token: 0x0400034D RID: 845
		private SepiaToneEffect sepia_tone_ = GameMain.Instance.MainCamera.GetComponent<SepiaToneEffect>();

		// Token: 0x0400034E RID: 846
		private DynamicSkirtBone[][] SkirtListArray = new DynamicSkirtBone[400][];

		// Token: 0x0400034F RID: 847
		private Transform[] JumpChkTArray = new Transform[100];

		// Token: 0x04000350 RID: 848
		private Vector3[] JumpChkPosArray = new Vector3[100];

		// Token: 0x04000351 RID: 849
		private GameObject[] gt = new GameObject[70];

		// Token: 0x04000352 RID: 850
		private Vector3[] wv = new Vector3[70];

		// Token: 0x04000353 RID: 851
		private bool bGui;

		// Token: 0x04000354 RID: 852
		private bool bGuiMessage;

		// Token: 0x04000355 RID: 853
		private bool helpView = true;

		// Token: 0x04000356 RID: 854
		private Rect rectWin;

		// Token: 0x04000357 RID: 855
		private Rect rectWin2;

		// Token: 0x04000358 RID: 856
		private Rect rectWin3;

		// Token: 0x04000359 RID: 857
		private Vector2 screenSize = new Vector2(0f, 0f);

		// Token: 0x0400035A RID: 858
		private Vector2 scrollPos = new Vector2(0f, 0f);

		// Token: 0x0400035B RID: 859
		private string inText = "";

		// Token: 0x0400035C RID: 860
		private string inName = "";

		// Token: 0x0400035D RID: 861
		private string inName2 = "";

		// Token: 0x0400035E RID: 862
		private string inName3 = "";

		// Token: 0x0400035F RID: 863
		private string inName4 = "";

		// Token: 0x04000360 RID: 864
		private int fontSize = 25;

		// Token: 0x04000361 RID: 865
		private int mFontSize = 25;

		// Token: 0x04000362 RID: 866
		private Texture2D line1;

		// Token: 0x04000363 RID: 867
		private Texture2D line2;

		// Token: 0x04000364 RID: 868
		private int page;

		// Token: 0x04000365 RID: 869
		private int dispNo;

		// Token: 0x04000366 RID: 870
		private int dispNoOld;

		// Token: 0x04000367 RID: 871
		private Texture2D texture2D = new Texture2D(1, 1, TextureFormat.ARGB32, false);

		// Token: 0x04000368 RID: 872
		private Texture2D waku;

		// Token: 0x04000369 RID: 873
		private Texture2D waku2;

		// Token: 0x0400036A RID: 874
		private List<ManyMaids.SortItem> sortList = new List<ManyMaids.SortItem>();

		// Token: 0x0400036B RID: 875
		private List<ManyMaids.ItemData> itemDataList = new List<ManyMaids.ItemData>();

		// Token: 0x0400036C RID: 876
		private bool isIdx1;

		// Token: 0x0400036D RID: 877
		private bool isIdx2;

		// Token: 0x0400036E RID: 878
		private bool isIdx3;

		// Token: 0x0400036F RID: 879
		private bool isIdx4;

		// Token: 0x04000370 RID: 880
		private Material m_material2;

		// Token: 0x04000371 RID: 881
		private Material m_material3;

		// Token: 0x04000372 RID: 882
		private GizmoRender[] gizmoHandL = new GizmoRender[100];

		// Token: 0x04000373 RID: 883
		private GizmoRender[] gizmoHandR = new GizmoRender[100];

		// Token: 0x04000374 RID: 884
		private GizmoRender[] gizmoFootL = new GizmoRender[100];

		// Token: 0x04000375 RID: 885
		private GizmoRender[] gizmoFootR = new GizmoRender[100];

		// Token: 0x04000376 RID: 886
		private bool maidListOrig = true;

		// Token: 0x04000377 RID: 887
		private bool maidListUniEx = true;

		// Token: 0x0200000E RID: 14
		private enum modKey
		{
			// Token: 0x0400038C RID: 908
			Shift,
			// Token: 0x0400038D RID: 909
			Alt,
			// Token: 0x0400038E RID: 910
			Ctrl
		}

		// Token: 0x0200000F RID: 15
		private class LastParam
		{
			// Token: 0x0600005B RID: 91 RVA: 0x00099D68 File Offset: 0x00097F68
			public LastParam(int f_nOrder, string f_strComm, params string[] f_argArgs)
			{
				this.nOrder = f_nOrder;
				this.strComm = f_strComm;
				this.aryArgs = new string[f_argArgs.Length];
				f_argArgs.CopyTo(this.aryArgs, 0);
			}

			// Token: 0x0400038F RID: 911
			public int nOrder;

			// Token: 0x04000390 RID: 912
			public string strComm = string.Empty;

			// Token: 0x04000391 RID: 913
			public string[] aryArgs;
		}

		// Token: 0x02000010 RID: 16
		private class SortItem
		{
			// Token: 0x04000392 RID: 914
			public int order;

			// Token: 0x04000393 RID: 915
			public string name = string.Empty;

			// Token: 0x04000394 RID: 916
			public string menu = string.Empty;

			// Token: 0x04000395 RID: 917
			public Texture2D tex;
		}

		// Token: 0x02000011 RID: 17
		private class ItemData
		{
			// Token: 0x0600005D RID: 93 RVA: 0x00099DC4 File Offset: 0x00097FC4
			public override bool Equals(object obj)
			{
				ManyMaids.ItemData itemData = obj as ManyMaids.ItemData;
				return itemData != null && this.name == itemData.name && this.menu == itemData.menu;
			}

			// Token: 0x0600005E RID: 94 RVA: 0x00099E03 File Offset: 0x00098003
			public override int GetHashCode()
			{
				return this.menu.GetHashCode();
			}

			// Token: 0x04000396 RID: 918
			public int order;

			// Token: 0x04000397 RID: 919
			public string name = string.Empty;

			// Token: 0x04000398 RID: 920
			public string menu = string.Empty;

			// Token: 0x04000399 RID: 921
			public byte[] cd;

			// Token: 0x0400039A RID: 922
			public string info = string.Empty;

			// Token: 0x0400039B RID: 923
			public Texture2D tex;
		}

		// Token: 0x02000012 RID: 18
		public class ItemData2
		{
			// Token: 0x06000060 RID: 96 RVA: 0x00099E3C File Offset: 0x0009803C
			public ItemData2(CsvParser csv, int csv_y)
			{
				int num = 0;
				this.id = csv.GetCellAsInteger(num++, csv_y);
				this.name = csv.GetCellAsString(num++, csv_y);
				this.category_id = csv.GetCellAsInteger(num++, csv_y);
				this.prefab_name = csv.GetCellAsString(num++, csv_y);
				this.asset_name = csv.GetCellAsString(num++, csv_y);
				this.possession_flag = csv.GetCellAsString(num++, csv_y);
				string cellAsString = csv.GetCellAsString(num++, csv_y);
				this.seasonal = !string.IsNullOrEmpty(cellAsString);
				if (this.seasonal)
				{
					string[] array = cellAsString.Split(new char[]
					{
						','
					});
					this.seasonal_month = new int[array.Length];
					for (int i = 0; i < array.Length; i++)
					{
						this.seasonal_month[i] = int.Parse(array[i]);
					}
				}
				else
				{
					this.seasonal_month = new int[0];
				}
				this.init_visible = (csv.GetCellAsString(num++, csv_y) == "○");
				this.init_position = csv.GetCellAsVector3(num++, csv_y, ',');
				this.init_rotation = csv.GetCellAsVector3(num++, csv_y, ',');
				this.init_scale = csv.GetCellAsVector3(num++, csv_y, ',');
				this.init_ui_position_scale = csv.GetCellAsReal(num++, csv_y);
				this.init_ui_rotation_scale = csv.GetCellAsReal(num++, csv_y);
			}

			// Token: 0x0400039C RID: 924
			public readonly int id;

			// Token: 0x0400039D RID: 925
			public readonly string name;

			// Token: 0x0400039E RID: 926
			public readonly int category_id;

			// Token: 0x0400039F RID: 927
			public readonly string prefab_name;

			// Token: 0x040003A0 RID: 928
			public readonly string asset_name;

			// Token: 0x040003A1 RID: 929
			public readonly bool seasonal;

			// Token: 0x040003A2 RID: 930
			public readonly string possession_flag;

			// Token: 0x040003A3 RID: 931
			public readonly int[] seasonal_month;

			// Token: 0x040003A4 RID: 932
			public readonly bool init_visible;

			// Token: 0x040003A5 RID: 933
			public readonly Vector3 init_position;

			// Token: 0x040003A6 RID: 934
			public readonly Vector3 init_rotation;

			// Token: 0x040003A7 RID: 935
			public readonly Vector3 init_scale;

			// Token: 0x040003A8 RID: 936
			public readonly float init_ui_position_scale;

			// Token: 0x040003A9 RID: 937
			public readonly float init_ui_rotation_scale;
		}
	}
}
